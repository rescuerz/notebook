{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to rescuerz's notebook","text":"<p> \u7ea6 31 \u4e2a\u5b57 </p> <p>\u8fd9\u91cc\u662frescuerz\u7684notebook </p> <p>\u6b22\u8fce\u5b66\u4e60\u4ea4\u6d41 </p>"},{"location":"#about","title":"About","text":"<p> My GitHub</p> <p> My Gmail and  My ZJU Email</p>"},{"location":"changelog/","title":"\u66f4\u65b0\u8bb0\u5f55","text":"<p> \u7ea6 42 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u7279\u522b\u9e23\u8c22\uff1a@TonyCrane \u672c\u9875\u9762\u6837\u5f0f\u6765\u81ea TonyCrane \u8001\u5e08\u7684\u63d2\u4ef6\uff0c\u53ef\u89c1  TonyCrane/mkdocs-changelog-plugin</p>"},{"location":"changelog/#2024","title":"2024","text":"2024-8-25\u00b6 <p> Artificial Intelligence &gt; Computer Vision</p> 2024-8-26\u00b6 <p> Systems &gt; Database</p>"},{"location":"changelog/#2023","title":"2023","text":"<p>{{ 2023 }}</p>"},{"location":"link/","title":"\u53cb\u94fe","text":"<p> \u7ea6 0 \u4e2a\u5b57 </p>"},{"location":"ADS/","title":"Index","text":"<p> \u7ea6 36 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>\u6559\u6750: Introduction to Algorithms, 3rd Edition</li> <li>\u8001\u5e08: \u738b\u707f</li> </ul>"},{"location":"ADS/1.%20AVL_tree/","title":"1. AVL Tree &amp; Splay Tree","text":"<p> \u7ea6 5082 \u4e2a\u5b57  565 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 32 \u5206\u949f</p> <p>Lecture 1 | AVL Trees &amp; Splay Trees - Isshiki \u4fee's Notebook (isshikih.top)</p>"},{"location":"ADS/1.%20AVL_tree/#11-avl-tree","title":"1.1 AVL Tree","text":"<p>\u5bf9\u4e8e\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5176\u5bf9\u70b9\u7684\u64cd\u4f5c\u4ee3\u4ef7\u4e3a \\(O(log \\ N)\\)\u3002\u7136\u800c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u9000\u5316\u6210 \\(O(N)\\)\uff0c\u4f8b\u5982\u8fd9\u662f\u4e00\u68f5\u53ea\u6709\u5de6\u5b69\u5b50\u6811\u7684\u94fe\u578b\u4e8c\u53c9\u6811\uff0c\u90a3\u4e48\u64cd\u4f5c\u8fd9\u91cc\u552f\u4e00\u7684\u53f6\u5b69\u5b50\u7ed3\u70b9\u5c31\u662f \\(O(N)\\)\u3002</p> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u7ef4\u62a4\u6210\u672c\u57fa\u672c\u4e0a\u4e0e\u5176\u9ad8\u5ea6\u6b63\u76f8\u5173\u3002\u56e0\u800c\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4e00\u68f5\u4e8c\u53c9\u6811\u597d\u7ef4\u62a4\uff0c\u90a3\u4e48\u5c31 \u5e0c\u671b\u5b83\u7684\u9ad8\u5ea6\u5c3d\u53ef\u80fd\u4f4e\uff0c\u800c\u5728\u70b9\u6570\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u79cd\u6734\u7d20\u7684\u601d\u60f3\u662f\u8ba9 <code>\u7ed3\u70b9\u5c3d\u53ef\u80fd\u201c\u5747\u5300\u201d\u5730\u5206\u5e03\u5728\u6811\u4e0a</code>\u3002</p> <p>\u6811\u7684\u9ad8\u5ea6(Height of Tree) \u7b49\u4e8e\u5176\u6839\u7ed3\u70b9\u5230\u53f6\u5b69\u5b50\u7ed3\u70b9\u7684\u82e5\u5e72\u8def\u5f84\u4e2d\uff0c\u6700\u5927\u7684\u8ddd\u79bb\uff08\u5373\u8fb9\u7684\u6570\u91cf\uff09\uff0c\u4e5f\u5c31\u662f\u6df1\u5ea6\u6700\u6df1\u7684\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u5230\u8ddd\u79bb\u3002</p> <p>\u7279\u522b\u7684\uff0c\u4e00\u68f5\u7a7a\u6811\u7684\u9ad8\u5ea6\u4e3a -1\u3002</p> <ol> <li> <p>\u5b9a\u4e49\uff1a</p> </li> <li> <p>\u4e00\u4e2a\u7a7a\u7684\u4e8c\u53c9\u6811\u662f\u4e00\u4e2a \\(AVL \\ Tree\\)</p> </li> <li> <p>\u5982\u679c\u4e8c\u53c9\u6811 \\(T\\) \u662f\u4e00\u4e2a \\(AVL \\ Tree\\), \u5f53\u4e14\u4ec5\u5f53\u5219\u5176\u5de6\u53f3\u5b69\u5b50\u6811 \\(T_L , T_R\\) \u4e5f\u90fd\u5e94\u8be5\u662f \\(AVL\\) \u6811\uff0c\u4e14\u6709 \\(\u2223\u210e(T_L)\u2212\u210e(T_R)\u2223\u22641\\)\uff1b</p> </li> <li> <p>\u4e00\u4e2a\u7ed3\u70b9\u7684 \u5e73\u8861\u56e0\u5b50(Balance Factor, BF) \u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u7ed3\u70b9\u7684\u5e73\u8861\u72b6\u6001\uff0c\u5bf9\u4e8e\u7ed3\u70b9 \\(T_P\\)\uff0c\u5b83\u7684\u5de6\u5b69\u5b50\u6811\u4e3a \\(T_L\\)\uff0c\u53f3\u5b69\u5b50\u6811\u4e3a \\(T_R\\)\uff0c\u5219\uff1a\\(BF(T_P) = h(T_L) - h(T_R)\\)</p> </li> </ol> <p>\u5982\u679c\u4e8c\u53c9\u6811 \\(T\\) \u662f\u4e00\u4e2a \\(AVL\\) \u6811\uff0c\u5219\u5176\u5de6\u53f3\u5b69\u5b50\u6811 \\(T_L\\) \u548c \\(T_R\\) \u4e5f\u90fd\u5e94\u8be5\u662f \\(AVL\\) \u6811\uff0c\u4e14\u6709 \\(BF(T_P)\\) \u2208{0, \u00b11}\uff1b</p> <p>\u4e8e\u662f\uff0cAVL \u6811\u5e73\u8861\u4e0e\u5426\u53d6\u51b3\u4e8e\u7ed3\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u5c42\u6570\u4e4b\u5dee\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e 1</p> <p><code>\u8bc1\u660e\u5f15\u74061\uff1a\u8bbeAVL\u6811\u7684\u7ed3\u70b9\u6570\u91cf\u4e3an\uff0c\u5219\u6811\u9ad8\u4e3aO(log n)</code></p> <p>\\(n_h\\) \u8868\u793a\u9ad8\u5ea6\u4e3a h \u7684 AVL \u6811\uff0c\u6700\u5c11\u5177\u6709\u7684\u7ed3\u70b9\u6570</p> \\[ n_h = \\begin{cases} 0 &amp;\\text{h = -1, NULL} \\\\ 1 &amp;\\text{h = 0}\\\\ 2 &amp;\\text{h = 1}\\\\ n_{h-1} + n_{h-2} + 1 &amp;\\text{h &gt; 1} \\end{cases} \\] \\[ \\begin{aligned} define : F_h &amp;= n_h + 1 \\rightarrow F_h = F_{h-1} + F_{h-2}, F_0 = 2, F_1 = 3\\\\ F_n &amp;= \\dfrac{1}{\\sqrt{5}}\\times [(\\dfrac{1 + \\sqrt{5}}{2})^{n+2} - (\\dfrac{1 - \\sqrt{5}}{2})^{n+2}]\\\\ &amp;when \\ n \\ is \\ large \\ enough, F_n = \\dfrac{1}{\\sqrt{5}}\\times (\\dfrac{1 + \\sqrt{5}}{2})^{n+2}\\\\ h &amp;\\approx log(F_h) = log(n) \\end{aligned} \\] <ol> <li>\u65cb\u8f6c\u64cd\u4f5c</li> </ol> <p>\u5bf9\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6539\u53d8\u641c\u7d22\u6811\u5de6\u5c0f\u53f3\u5927\u7684\u6027\u8d28</p> <p></p> <p>\u65cb\u8f6c\u524d\u540e\u5927\u5c0f\u5173\u7cfb\u5747\u4e3a \\(\\alpha , x, \\beta, y, \\gamma\\)</p> <p></p> <ol> <li>Trouble maker \u548c Trouble finder \u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\u51b3\u5b9a\u65cb\u8f6c\u7684\u65b9\u5f0f\uff0c\u4e00\u5171\u5206\u4e3a \\(RR\uff0cRL\uff0cLR\uff0cLL\\)</li> <li>Trouble Finder\uff1a \u7531\u4e8e\u67d0\u4e2a\u70b9\u7684\u63d2\u5165\uff0c\u5bfc\u81f4 BF \u4e0d\u7b26\u5408\u8981\u6c42\u7684\u70b9</li> <li>Related Trouble Finder\u2019s Child</li> <li>Trouble Maker\uff1a \u5bfc\u81f4 Trouble Finder \u51fa\u73b0\u7684\u70b9</li> </ol> <p> </p> <p>\u5982\u4e0b\u6240\u793a\uff0c\u5728\u63d2\u5165\u7ed3\u70b9 5 \u540e\uff0c\u6b64\u65f6\u6839\u7ed3\u70b9 8 \u7684\u5e73\u8861\u56e0\u5b50 BF \u503c\u53d8\u4e3a 2\uff0c\u4e0d\u518d\u6ee1\u8db3 AVL Tree \u7684\u8981\u6c42\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u662f <code>5</code> \u7684\u63d2\u5165\u5bfc\u81f4\u7684\u2014\u2014\u4e8e\u662f\u6211\u4eec\u79f0\u50cf\u8fd9\u91cc\u7684 <code>8</code> \u4e00\u6837\uff0c\u7531\u4e8e\u67d0\u4e2a\u70b9\u7684\u63d2\u5165\uff0c\u5176\u300c\u5e73\u8861\u56e0\u5b50\u300d\u4e0d\u518d\u7b26\u5408\u8981\u6c42\u7684\u70b9\uff0c\u4e3a Trouble Finder\uff1b\u800c\u50cf\u8fd9\u91cc\u7684 <code>5</code> \u4e00\u6837\uff0c\u5bfc\u81f4 Trouble Finder \u51fa\u73b0\u7684\u70b9\uff0c\u88ab\u79f0\u4e4b\u4e3a Trouble Maker\u3002</p> <p></p> <p><code>A\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u662f\u6839\u7ed3\u70b9</code>\uff0c\u5f53\u53d1\u73b0 RR \u5173\u7cfb\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 \u5c40\u90e8\u7684\u65cb\u8f6c \u4f7f\u6811\u53d8\u5f97\u5e73\u8861</p> <p>LL Single Rotation \u7684\u6362\u6839\u89c6\u89d2</p> <p></p> <p> </p> <p>\u539f\u5148\u7684\u6839\u7ed3\u70b9\u8eab\u5904\u5de6\u5b50\u6811\u7684\u9ad8\u53f0\u4e0a\uff0c\\(BF(root) = h_L - h_R = 2\\), \u6240\u4ee5\u8981\u5c06\u6839\u7ed3\u70b9\u4ece\u53f0\u5b50\u4e0a\u62c9\u4e0b\u6765\uff0c\u6b64\u65f6\u987a\u7406\u6210\u7ae0\uff0c\u5de6\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u6210\u4e3a\u6574\u68f5\u6811\u7684\u6839\u7ed3\u70b9\u3002</p> <p>\u4e3a\u4e86\u5f97\u5230\u4e8c\u5206\u641c\u7d22\u6811\uff0c\u9700\u8981\u5c06 Trouble Finder \u4e0e \u5de6\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u76f8\u8fde\u63a5\uff0c\u6b64\u65f6\u591a\u51fa\u7684 L Right Subtree \u9700\u8981\u8fde\u63a5\u5230 Trouble Finder\u3002</p> <p></p> <p>\u4ee5 B \u4e3a\u652f\u70b9\uff0c\u5148\u8fdb\u884c C \u7684\u5de6\u65cb\uff0c\\(C_L\\) \u7531\u4e8e\u6bd4 B \u5927\uff0c\u6240\u4ee5\u6210\u4e3a B \u7684\u53f3\u5b50\u6811\uff1b\u518d\u8fdb\u884c A \u7684\u53f3\u65cb\uff0cA \u6bd4 C \u5927\uff0c\u6210\u4e3a C \u7684\u53f3\u5b50\u6811</p> <p><code>\u4e3a\u4ec0\u4e48\u662f\u6700\u4e0b\u9762\u7684\u70b9\u6210\u4e3a\u6839\u7ed3\u70b9\u5462\uff1f\u56e0\u4e3aABC\u4e09\u4e2a\u70b9\uff0c\u80fd\u6ee1\u8db3\u6839\u7ed3\u70b9\u7684\u53ea\u6709C\uff0cB &lt; C &lt; A</code></p> <p>\u7528\u8bed\u8a00\u6982\u62ec\u5c31\u662f\uff0c\u627e\u5230\u5173\u952e\u7684\u90a3\u4e09\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u6700\u4e0b\u9762\u7684\u9876\u5230\u4e0a\u9762\u53bb\uff0c\u5269\u4e0b\u4e24\u4e2a\u4f5c\u4e3a\u5de6\u53f3\u5b69\u5b50\u6811\uff0c\u539f\u5148\u7684\u90a3\u4e2a\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\u6811\u5219\u5bf9\u5e94\u5730\uff0c\u5de6\u5b69\u5b50\u6811\u63a5\u5230\u5de6\u8fb9\u7a7a\u7f3a\u7684\u53f3\u5b69\u5b50\u6811\u4e0a\uff0c\u53f3\u5b69\u5b50\u6811\u63a5\u5230\u53f3\u8fb9\u7a7a\u7f3a\u7684\u5de6\u5b69\u5b50\u6811\u4e0a\u3002</p> <p></p> <p><code>\u5982\u679c\u4e00\u4e2aTrouble maker\u63d2\u5165\u540e\uff0c\u4ea7\u751f\u4e86\u591a\u4e2aTrouble Finder\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f</code></p> <p>\u9009\u62e9\u8ddd\u79bb Trouble maker \u6700\u8fd1\u7684 Trouble Finder \u8fdb\u884c\u5904\u7406\uff0c\u6700\u5e95\u5c42\u53d1\u751f\u6539\u53d8\uff0c\u8fde\u5e26\u6548\u5e94\u5f15\u53d1\u4e0a\u65b9\u7684 Trouble Finder \u7684 BF \u7684\u7edd\u5bf9\u503c\u90fd\u4f1a\u51cf\u5c0f\u3002</p> <pre><code>int Height(AVLTree T)\n{\n    if(T) return T-&gt;height;\n    // \u7a7a\u6811 T == NULL\n    else return -1;\n}\nvoid ChangeHeight(AVLTree T)\n{\n    if (T)\n    {\n        ChangeHeight(T-&gt;left);\n        ChangeHeight(T-&gt;right);\n        T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    }\n}\nint max(int a, int b)\n{\n    return a &gt; b ? a : b;\n}\nAVLTree SingleRotateWithLeft(AVLTree T)\n{\n    AVLTree Newroot = (AVLTree)malloc(sizeof(TreeNode));\n    Newroot = T-&gt;left;\n    T-&gt;left = Newroot-&gt;right;\n    Newroot-&gt;right = T;\n    T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    Newroot-&gt;height = max(Height(Newroot-&gt;left), T-&gt;height) + 1;\n    return Newroot;\n}\n\nAVLTree SingleRotateWithLeft(AVLTree T)\n{\n    AVLTree Newroot = (AVLTree)malloc(sizeof(TreeNode));\n    // \u65cb\u8f6c\u540e\u7684\u65b0\u6839\u7ed3\u70b9\n    Newroot = T-&gt;left;\n    // \u65cb\u8f6c\u540e\u7ed3\u70b9\u5173\u7cfb\u7684\u53d8\u5316\n    T-&gt;left = Newroot-&gt;right;\n    Newroot-&gt;right = T;\n    ChangeHeight(T);\n    // T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    // Newroot-&gt;height = max(Height(Newroot-&gt;left), T-&gt;height) + 1;\n    return Newroot;\n}\n\nAVLTree SingleRotateWithRight(AVLTree T)\n{\n    AVLTree Newroot = (AVLTree)malloc(sizeof(TreeNode));\n    // \u65cb\u8f6c\u540e\u7684\u65b0\u6839\u7ed3\u70b9\n    Newroot = T-&gt;right;\n    // \u65cb\u8f6c\u540e\u7ed3\u70b9\u5173\u7cfb\u7684\u53d8\u5316\n    T-&gt;right = Newroot-&gt;left;\n    Newroot-&gt;left = T;\n    // \u65cb\u8f6c\u540e\u66f4\u65b0\u6811\u7684\u9ad8\u5ea6\n    ChangeHeight(T);\n    // T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    // Newroot-&gt;height = max(Height(Newroot-&gt;right), T-&gt;height) + 1;\n    return Newroot;\n}\nAVLTree DoubleRotateWithRight(AVLTree T)\n{\n    // RL\n    // k3\n    //      k2\n    //  k1\n    AVLTree newroot = (AVLTree)malloc(sizeof(TreeNode));\n    T-&gt;right = SingleRotateWithLeft(T-&gt;right);\n    // \u6b64\u65f6 k3-k1-k2\n    newroot = SingleRotateWithRight(T);\n    return newroot;\n}\n// \u5b9a\u4e49AVL Tree\u7684\u63d2\u5165\u51fd\u6570\nAVLTree Insert(AVLTree T, int value)\n{\n    if(T == NULL)\n    {\n        T = (AVLTree)malloc(sizeof(TreeNode));\n        T-&gt;data = value;\n        T-&gt;height = 0;\n        T-&gt;left = NULL;\n        T-&gt;right = NULL;\n    }\n    else\n    {\n        if(value &lt; T-&gt;data)\n        {\n            T-&gt;left = Insert(T-&gt;left, value);\n            // \u4ee5\u4e0a\u4e3a\u4e8c\u5206\u641c\u7d22\u6811\u7684\u63d2\u5165\u64cd\u4f5c\n            // \u540e\u7eed\u8fdb\u884cAVL Tree\u7684\u5e73\u8861\u64cd\u4f5c\n            if(Height(T-&gt;left) - Height(T-&gt;right) == 2)\n            {\n                if(value &lt; T-&gt;left-&gt;data)\n                {\n                    // LL\n                    T = SingleRotateWithLeft(T);\n                }\n                else\n                {\n                    // LR\n                    T = DoubleRotateWithLeft(T);\n                }\n            }\n        }\n        else if(value &gt; T-&gt;data)\n        {\n            T-&gt;right = Insert(T-&gt;right, value);\n            if(Height(T-&gt;right) - Height(T-&gt;left) == 2)\n            {\n                if(value &gt; T-&gt;right-&gt;data)\n                {\n                    // RR\n                    T = SingleRotateWithRight(T);\n                }\n                else\n                {\n                    // RL\n                    T = DoubleRotateWithRight(T);\n                }\n            }\n        }\n        // \u66f4\u65b0\u6811\u7684\u9ad8\u5ea6\n        // T\u7684\u9ad8\u5ea6\u7b49\u4e8e\u5de6\u53f3\u5b50\u6811\u4e2d\u8f83\u9ad8\u7684\u9ad8\u5ea6\u52a01\n        T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    }\n    return T;\n}\n</code></pre> <p><code>\u63d0\u95ee1\uff1a \u5728\u63d2\u5165\u7684\u65f6\u5019\u662f\u5426\u6709\u53ef\u80fd\u4f7f\u591a\u4e2a\u7ed3\u70b9\u7684\u5e73\u8861\u6027\u8d28\u88ab\u6253\u7834\uff1f</code></p> <p>\u5728 complete binary tree \u7684\u57fa\u7840\u4e0a\uff0c\u8fde\u7eed\u5728\u5de6\u5b50\u6811\u63d2\u5165\u4e24\u4e2a\u70b9\uff0c\u4e00\u6761\u7ebf\u4e0a \\(O(log \\ n)\\) \u4e2a\u7ed3\u70b9\u5e73\u8861\u6027\u8d28\u88ab\u7834\u574f</p> <p><code>\u63d0\u95ee2\uff1a \u5982\u679c\u662f\u7684\u8bdd\uff0c\u4e00\u6b21\u65cb\u8f6c\u64cd\u4f5c\u662f\u5426\u80fd\u4f7f\u6240\u6709\u5e73\u8861\u6536\u5230\u7834\u73af\u7684\u7ed3\u70b9\u6062\u590d\u6b63\u5e38\uff1f</code></p> <p>\\(LL,LR,RL,RR\\) \u65cb\u8f6c\u90fd\u4f1a\u662f\u63d2\u5165\u7684\u7ed3\u70b9\u6df1\u5ea6\u51cf\u5c11 1\uff0c\u6240\u4ee5\u8def\u5f84\u4e0a\u6240\u6709\u5e73\u8861\u88ab\u6253\u7834\u7684\u7ed3\u70b9\u90fd\u80fd\u6062\u590d</p> <p><code>\u5b9a\u74062\uff1a AVL \u6811\u7684\u641c\u7d22\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3aO(log N)</code></p> <p>\u5bf9\u4e8e\u641c\u7d22\uff0c\u5178\u578b\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6ca1\u6709\u7591\u95ee\u3002\u5bf9\u4e8e\u63d2\u5165\uff0c\u6700\u591a\u4e24\u6b21\u65cb\u8f6c\u52a0\u4e0a\u4e00\u6b21\u641c\u7d22\u3002</p> <p>\u5bf9\u4e8e\u5220\u9664\u64cd\u4f5c\uff0c\u6700\u591a\u8fdb\u884c \\(O(log N)\\) \u6b21\u7684\u65cb\u8f6c\uff0c\u800c \u6bcf\u6b21\u65cb\u8f6c\u90fd\u662f\u5e38\u6570\u7ea7\u522b \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a \\(O(log N)\\)</p> <pre><code>AVLTree Delete(AVLTree T, int value)\n{\n    // \u6811\u4e3a\u7a7a,\u76f4\u63a5\u8fd4\u56deNULL\n    if (T == NULL)\n    {\n        return NULL;\n    }\n    // \u5f85\u5220\u9664\u7684\u7ed3\u70b9\u5728T\u7684\u5de6\u5b50\u6811\u4e0a\n    if (value &lt; T-&gt;data)\n    {\n        T-&gt;left = Delete(T-&gt;left, value);\n        //\u5220\u9664\u7ed3\u70b9\u540e,\u5982\u679cAVL Tree\u5931\u53bb\u5e73\u8861,\u5219\u8fdb\u884c\u76f8\u5e94\u7684\u8c03\u8282\n        if(Height(T-&gt;right) - Height(T-&gt;left) == 2)\n        {\n            AVLTree temp = T-&gt;right;\n            if(Height(temp-&gt;left) &gt; Height(temp-&gt;right))\n            {\n                T = DoubleRotateWithRight(T);\n            }\n            else\n            {\n                T = SingleRotateWithRight(T);\n            }\n        }\n    }\n    // \u5f85\u5220\u9664\u7684\u7ed3\u70b9\u5728T\u7684\u53f3\u5b50\u6811\u4e0a\n    else if (value &gt; T-&gt;data)\n    {\n        T-&gt;right = Delete(T-&gt;right, value);\n        if(Height(T-&gt;left) - Height(T-&gt;right) == 2)\n        {\n            AVLTree temp = T-&gt;left;\n            if(Height(temp-&gt;right) &gt; Height(temp-&gt;left))\n            {\n                T = DoubleRotateWithLeft(T);\n            }\n            else\n            {\n                T = SingleRotateWithLeft(T);\n            }\n        }\n    }\n    else\n    {\n        // \u5f85\u5220\u9664\u7684\u70b9\u5728\u6839\u7ed3\u70b9\n        if(T-&gt;left == NULL &amp;&amp; T-&gt;right == NULL)\n        {\n            free(T);\n            return NULL;\n        }\n        else if(T-&gt;right == NULL &amp;&amp; T-&gt;left)\n        {\n            AVLTree temp = T;\n            T = T-&gt;left;\n            free(temp);\n        }\n        else if(T-&gt;left == NULL &amp;&amp; T-&gt;right)\n        {\n            AVLTree temp = T;\n            T = T-&gt;right;\n            free(temp);\n        }\n        // \u5de6\u53f3\u5b50\u6811\u5747\u975e\u7a7a\uff0c\u6839\u636e\u4e24\u68f5\u6811\u7684height\u9009\u62e9\u66ff\u6362\u7684\u7ed3\u70b9\n        else\n        {\n            if(Height(T-&gt;left) &gt;= Height(T-&gt;right))\n            {\n                // \u9009\u62e9\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\u66ff\u6362\u6839\u7ed3\u70b9\n                AVLTree temp = T-&gt;left;\n                while(temp-&gt;right)\n                {\n                    temp = temp-&gt;right;\n                }\n                int max = temp-&gt;data;\n                T-&gt;data = max;\n                T-&gt;left = Delete(T-&gt;left, max);\n            }\n            else\n            {\n                // \u9009\u62e9\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u503c\u66ff\u6362\u6839\u7ed3\u70b9\n                AVLTree temp = T-&gt;right;\n                while(temp-&gt;left)\n                {\n                    temp = temp-&gt;left;\n                }\n                int min = temp-&gt;data;\n                T-&gt;data = min;\n                T-&gt;right = Delete(T-&gt;right, min);\n            }\n        }\n    }\n    ChangeHeight(T);\n    T-&gt;height = max(Height(T-&gt;left), Height(T-&gt;right)) + 1;\n    return T;\n}\n</code></pre>"},{"location":"ADS/1.%20AVL_tree/#12-splay-tree","title":"1.2 Splay Tree","text":"<p>Splay Tree \u7684\u76ee\u6807\uff1a \u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5bf9\u4e8e \\(M\\) \u6b21\u4efb\u610f\u64cd\u4f5c\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3a \\(O(MlogN)\\)\uff0c\u5747\u644a\u4e0b\u6765\u8fd9 \\(M\\) \u4e2a\u64cd\u4f5c\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981 \\(O(logN)\\)\u3002</p> <p>Splay \u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\uff0c\u6bcf\u5f53\u6211\u4eec \u8bbf\u95ee\u4e00\u4e2a\u7ed3\u70b9\uff08\u6bd4\u5982 \u67e5\u8be2 \u67d0\u4e2a\u70b9\u3001\u63d2\u5165 \u67d0\u4e2a\u70b9\uff0c\u751a\u81f3\u662f \u5220\u9664 \u67d0\u4e2a\u70b9\uff09\uff0c\u6211\u4eec\u5c31 \u901a\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u5c06\u76ee\u6807\u70b9\u8f6c\u79fb\u5230\u6839\u90e8\uff0c\u5f62\u8c61\u4e0a\u7406\u89e3\u5c31\u662f\u4e0d\u65ad\u65cb\u8f6c\u6574\u4e2a\u6811\u7684\u6784\u9020\uff0c\u77e5\u9053\u628a\u70b9\u8f6c\u5230\u6839\u90e8\u3002</p> <ul> <li> <p>\u641c\u7d22\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u641c\u7d22\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff1b</p> </li> <li> <p>\u63d2\u5165\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\uff0c\u7136\u540e\u628a\u521a\u521a\u63d2\u5165\u7684\u7ed3\u70b9\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff1b</p> </li> <li> <p>\u5220\u9664\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u8981\u5220\u9664\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u6839\u7ed3\u70b9\uff08\u73b0\u5728\u6839\u7ed3\u70b9\u5c31\u662f\u8981\u5220\u9664\u7684\u70b9\uff09\uff0c\u7136\u540e\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u4e00\u6837\u8fdb\u884c\u5408\u7406\u7684 merge \u5373\u53ef\u3002</p> </li> </ul> <p><code>\u5148\u79fb\u5230\u6839\u7ed3\u70b9\uff0c\u5728\u8fdb\u884c\u5220\u9664</code></p> <p>\u5047\u5982\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(N), \u90a3\u4e48\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u5c31\u662f O(1)\uff0c\u56e0\u4e3a\u6b64\u65f6\u8be5\u70b9\u5df2\u7ecf\u4f4d\u4e8e\u6839\u7ed3\u70b9\u3002</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0c\u6b64\u65f6 \\(k1, k2, k3\\) \u5bf9\u5e94 LR \u7684\u65cb\u8f6c\u5173\u7cfb\uff0c\u5e76\u4e14 \\(k3\\) \u662f\u6700\u8fd1\u7684 Trouble Finder\u3002</p> <p>\u5229\u7528\u6362\u6839\u601d\u60f3\uff0c\u4ee5 \\(k1\\) \u4e3a\u6839\u7ed3\u70b9</p> <p></p> <p>\u8981\u4f7f\u6839\u7ed3\u70b9\u4e3a \\(k1\\) , \u5219\u5c06\u5bf9 \\(k4,k5\\) \u8fdb\u884c \u4e24\u6b21 LL rotation\u3002</p> <p>\u7b2c\u4e00\u6b21\u4ee5 \\(k4\\) \u4e3a\u652f\u70b9\uff0c\u5bf9 \\(k1,k4,k5\\) \u8fdb\u884c\u64cd\u4f5c\uff0c\u6b64\u65f6\u5f97\u5230 \\(k4\\) \u4e3a\u6839\u7ed3\u70b9\uff0c\\(k5\\) \u6210\u4e3a \\(k4\\) \u7684\u53f3\u5b50\u6811\uff0c</p> <p>\u7b2c\u4e8c\u6b21\u4ee5 \\(k1\\) \u4e3a\u652f\u70b9\uff0c\u5bf9 \\(k2,k1,k4\u8fdb\u884c\u64cd\u4f5c\\)\uff0c\\(k4\\) \u6210\u4e3a \\(k1\\) \u7684\u53f3\u7ed3\u70b9</p> <p></p> <p>\u5982\u4f55\u5c06\u4e0a\u56fe\u6240\u793a\uff0c\u5047\u5982\u6309\u7167\u4f18\u5148\u64cd\u4f5c\u6700\u8fd1\u7684 Trouble Finder \u8f6c\u5316\u4e3a AVL Tree</p> <p></p> <p>LR rotation\uff0c\\(k1\\) \u6210\u4e3a \\(k2,k3\\) \u7684\u6839\u7ed3\u70b9</p> <p></p> <p>\u6b64\u65f6 \\(k4\\) \u662f\u6700\u8fd1\u7684 Trouble Finder\uff0c \u6309\u7167 LL rotatio \u5f97\u5230\u4e0b\u56fe</p> <p></p> <p>\u5269\u4f59 \\(k5\\) \u662f Trouble Finder\uff0c \u518d\u8fdb\u884c\u4e00\u6b21 LL rotation</p> <p></p> <p>\u641c\u7d22 k1 \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\uff0c\u4f46\u662f\u641c\u7d22 k3 \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u589e\u5927\uff0c\u727a\u7272\u4e86\u67d0\u4e9b\u70b9</p> <p><code>\u6b64\u65f6\u4f60\u4f1a\u53d1\u73b0\uff0c\u4e24\u6b21LL rotation \u4f5c\u7528\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u53ef\u80fd\u662fAVL Tree\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u662f\u3002\u4e14\u4e0e\u6240\u5f97\u7ed3\u8bba\u77db\u76fe</code></p> <p><code>\u4ee5\u4e0b\u5f15\u5165\uff0c\u5904\u7406Splay Tree \u7684 \u5904\u7406\u65b9\u6cd5</code></p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9 X\uff0c\u6211\u4eec\u8bb0\u5176\u7236\u7ed3\u70b9\u4e3a P(Parent)\uff0c\u5176\u7236\u7ed3\u70b9\u7684\u7236\u7ed3\u70b9\u4e3a G(Grandparent)\u3002</p> <p>\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u67d0\u4e2a\u70b9 X \u65f6\uff1a</p> <ul> <li> <p>\u5982\u679c P \u662f\u6839\u7ed3\u70b9\uff0c\u5219\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21 <code>[Single Rotation]</code>\uff0c\u5c06 X \u8f6c\u5230\u6839\u7ed3\u70b9\uff1b</p> </li> <li> <p>\u5982\u679c P \u4e0d\u662f\u6839\u7ed3\u70b9</p> </li> <li> <p>\u5f53\u60c5\u51b5\u4e3a LR / RL \u65f6\uff0c\u8fdb\u884c\u4e00\u6b21 <code>[LR Rotation / RL Rotation]</code>\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a zig-zag\uff1b\u4e0d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a</p> </li> <li> <p>\u5f53\u60c5\u51b5\u4e3a LL / RR \u65f6\uff0c\u8fdb\u884c\u4e24\u6b21 <code>[Single Rotation]</code>\uff0c\u4f7f\u5f97 X\u3001P\u3001G \u7684\u987a\u5e8f\u9006\u8f6c\uff0c\u50cf\u8df7\u8df7\u677f\u4e00\u6837\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a zig-zig\uff1b\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a</p> <p>\u6b64\u65f6 LL/RR \u6267\u884c\u7684\u987a\u5e8f\u6709\u4e25\u683c\u8981\u6c42\uff0c\u8fdc\u7aef\u4f18\u5148</p> </li> </ul> <p>zig-zig \u662f\u4e0e naive \u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff01</p> <p>\u7279\u522b\u6ce8\u610f naive \u7684\u65b9\u6cd5 <code>\u5148\u4ea4\u6362X \u548cP \u7684\u4f4d\u7f6e\u5173\u7cfb</code>\uff0c\u7136\u540e\u4ea4\u6362 X \u548c G \u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c</p> <p>\u4f46\u662f zig-zig \u7684\u6807\u51c6\u64cd\u4f5c\u65b9\u5f0f\u662f\uff0c<code>\u5148\u4ea4\u6362P \u548cG \u7684\u4f4d\u7f6e\u5173\u7cfb</code>\uff0c\u518d\u4ea4\u6362 X \u548c P \u7684\u4f4d\u7f6e\u5173\u7cfb\uff01</p> <p>\u8fd9\u4e2a\u533a\u522b\u5c31\u662f\u5b83\u4e0e naive \u65b9\u6cd5\u7684\u552f\u4e00\u533a\u522b\uff0c\u5374\u80fd\u5b9e\u73b0\u6211\u4eec\u6700\u7ec8\u5747\u644a\u7684\u76ee\u6807\uff1b</p> <p></p>"},{"location":"ADS/1.%20AVL_tree/#132-\u5bf9\u70b9\u64cd\u4f5c","title":"1.3.2 \u5bf9\u70b9\u64cd\u4f5c","text":"<p>Splay Tree \u9664\u4e86\u5728\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u4ee5\u540e\u90fd\u9700\u8981\u8fdb\u884c\u4e00\u6b21 Splay \u64cd\u4f5c\uff0c\u5176\u4ed6\u90e8\u5206\u90fd\u548c BST \u4e00\u6837\u3002</p> <ul> <li>Find X</li> </ul> <p>\u6839\u636e BST \u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5728 \\(O(log N)\\) \u7684\u65f6\u95f4\u5185\u627e\u5230 X\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5c06 X \u4e0d\u65ad\u65cb\u8f6c\u81f3\u6839\u7ed3\u70b9</p> <p></p> <ul> <li>Remove X</li> </ul> <p>\u6839\u636e\u4e8c\u5206\u641c\u7d22\u6811\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5728 \\(O(log N)\\) \u7684\u65f6\u95f4\u5185\u627e\u5230 X\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5c06 X \u4e0d\u65ad\u65cb\u8f6c\u81f3\u6839\u7ed3\u70b9\u3002<code>\u540e\u7eed\u5220\u9664Root\u7ed3\u70b9\uff0c\u627e\u5230\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u6216\u8005\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\uff0c\u518d\u8fdb\u4e00\u6b65\u8c03\u6574</code></p> <ul> <li>FindMax</li> </ul> <p>\u6839\u636e BST \u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5728 \\(O(log N)\\) \u7684\u65f6\u95f4\u91cc\u627e\u5230\u6700\u5927\u503c\uff0c\u5c06\u5b83\u65cb\u8f6c\u5230\u6839\u90e8\u4ee5\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0 <code>\u5b83\u6ca1\u6709\u53f3\u5b69\u5b50\u6811</code>\uff0c\u76f4\u63a5\u5220\u6389\u5c31\u884c\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u5b9a\u4e49\u4e8c\u5206\u641c\u7d22\u6811\u7ed3\u6784\u4f53\ntypedef struct SplayNode *SplayTree;\nstruct SplayNode\n{\n    int data;\n    SplayTree left;\n    SplayTree right;\n    SplayTree parent;\n} SplayNode;\n\nSplayTree Insert(SplayTree T, int value);\nSplayTree Find(SplayTree T, int value);\nvoid Parent(SplayTree T);\n\nSplayTree Insert(SplayTree T, int value)\n{\n    if (T == NULL)\n    {\n        T = (SplayTree)malloc(sizeof(SplayNode));\n        T-&gt;data = value;\n        T-&gt;left = T-&gt;right = NULL;\n    }\n    else\n    {\n        if (value &lt; T-&gt;data)\n        {\n            T-&gt;left = Insert(T-&gt;left, value);\n        }\n        else if (value &gt; T-&gt;data)\n        {\n            T-&gt;right = Insert(T-&gt;right, value);\n        }\n    }\n    return T;\n}\n// \u9012\u5f52\u904d\u5386\u6811\uff0c\u5efa\u7acb\u7236\u5b50\u5173\u7cfb\nvoid Parent(SplayTree T)\n{\n    if (T-&gt;left)\n    {\n        T-&gt;left-&gt;parent = T;\n        Parent(T-&gt;left);\n    }\n    if (T-&gt;right)\n    {\n        T-&gt;right-&gt;parent = T;\n        Parent(T-&gt;right);\n    }\n}\n\nSplayTree Find(SplayTree T, int value)\n{\n    if (T == NULL)\n    {\n        return NULL;\n    }\n    else\n    {\n        if (value &lt; T-&gt;data)\n        {\n            return Find(T-&gt;left, value);\n        }\n        else if (value &gt; T-&gt;data)\n        {\n            return Find(T-&gt;right, value);\n        }\n        else\n        {\n            return T;\n        }\n    }\n}\nSplayTree SingleRotateWithLeft(SplayTree T)\n{\n    SplayTree newroot = T-&gt;left;\n    if (T-&gt;parent)\n    {\n        SplayTree G = T-&gt;parent;\n        T-&gt;left = newroot-&gt;right;\n        newroot-&gt;right = T;\n        T-&gt;parent = newroot;\n        newroot-&gt;parent = G;\n        if(G-&gt;left == T)\n            G-&gt;left = newroot;\n        else\n            G-&gt;right = newroot;\n    }\n    else\n    {\n        T-&gt;left = newroot-&gt;right;\n        newroot-&gt;right = T;\n        T-&gt;parent = newroot;\n        newroot-&gt;parent = NULL;\n    }\n\n    return newroot;\n}\nSplayTree SingleRotateWithRight(SplayTree T)\n{\n    SplayTree newroot = T-&gt;right;\n    if (T-&gt;parent)\n    {\n        SplayTree G = T-&gt;parent;\n        T-&gt;right = newroot-&gt;left;\n        newroot-&gt;left = T;\n        T-&gt;parent = newroot;\n        newroot-&gt;parent = G;\n        if(G-&gt;left == T)\n            G-&gt;left = newroot;\n        else\n            G-&gt;right = newroot;\n    }\n    else\n    {\n        T-&gt;right = newroot-&gt;left;\n        newroot-&gt;left = T;\n        T-&gt;parent = newroot;\n        newroot-&gt;parent = NULL;\n    }\n    return newroot;\n}\n\nSplayTree DoubleRotateWithLeft(SplayTree T)\n{\n    SplayTree P = T-&gt;left;\n    SplayTree newroot = P-&gt;right;\n    if(T-&gt;parent)\n    {\n        SplayTree G = T-&gt;parent;\n        T-&gt;left = SingleRotateWithRight(T-&gt;left);\n        newroot = SingleRotateWithLeft(T);\n        newroot-&gt;parent = G;\n    }\n    else\n    {\n        T-&gt;left = SingleRotateWithRight(T-&gt;left);\n        newroot = SingleRotateWithLeft(T);\n        newroot-&gt;parent = NULL;\n    }\n    return newroot;\n\n}\nSplayTree DoubleRotateWithRight(SplayTree T)\n{\n    SplayTree newroot = T-&gt;right-&gt;left;\n    if(T-&gt;parent)\n    {\n        SplayTree G = T-&gt;parent;\n        T-&gt;right = SingleRotateWithLeft(T-&gt;right);\n        newroot = SingleRotateWithRight(T);\n        newroot-&gt;parent = G;\n    }\n    else\n    {\n        T-&gt;right = SingleRotateWithLeft(T-&gt;right);\n        newroot = SingleRotateWithRight(T);\n        newroot-&gt;parent = NULL;\n    }\n    return newroot;\n}\nSplayTree RotatetoRoot(SplayTree T, int value)\n{\n    SplayTree temp = (SplayTree)malloc(sizeof(SplayNode));\n    temp = Find(T, value);\n    while (temp-&gt;parent != NULL)\n    {\n        SplayTree G = temp-&gt;parent-&gt;parent;\n        SplayTree P = temp-&gt;parent;\n        // \u5982\u679ctemp\u7684\u7236\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n        if (temp-&gt;parent == T)\n        {\n            // \u76f4\u63a5\u8fdb\u884c\u4e00\u6b21SingleRotate\uff0c\u5c06temp\u65cb\u8f6c\u5230\u6839\u7ed3\u70b9\n            if (temp-&gt;parent-&gt;left == temp)\n            {\n                temp = SingleRotateWithLeft(temp-&gt;parent);\n            }\n            else\n            {\n                temp = SingleRotateWithRight(temp-&gt;parent);\n            }\n        }\n        // \u5982\u679ctemp\u7684\u7236\u7ed3\u70b9\u4e0d\u662f\u6839\u7ed3\u70b9\n        else\n        {\n            // \u6309\u7167Zig-zig \u6216\u8005 Zig-zag\u5206\u7c7b\u8ba8\u8bba\n            // LL\u578b zig-zig\n            if (G-&gt;left == P &amp;&amp; P-&gt;left == temp)\n            {\n                P = SingleRotateWithLeft(G);\n                temp = SingleRotateWithLeft(P);\n            }\n            // RR\u578b zig-zig\n            else if (G-&gt;right == P &amp;&amp; P-&gt;right == temp)\n            {\n                P = SingleRotateWithRight(G);\n                temp = SingleRotateWithRight(P);\n            }\n            // LR\u578b zig-zag\n            else if (G-&gt;left == P &amp;&amp; P-&gt;right == temp)\n            {\n                temp = DoubleRotateWithLeft(G);\n            }\n            // RL\u578b zig-zag\n            else if (G-&gt;right == P &amp;&amp; P-&gt;left == temp)\n            {\n                temp = DoubleRotateWithRight(G);\n            }\n        }\n    }\n    return temp;\n}\n\nvoid Levelorder(SplayTree T)\n{\n    SplayTree queue[100];\n    int front = 0, rear = 0;\n    int currentLevelCount = 1, nextLevelCount = 0;\n    if (T == NULL)\n    {\n        return;\n    }\n    queue[rear++] = T;\n    while (front &lt; rear)\n    {\n        SplayTree temp = queue[front++];\n        printf(\"%d \", temp-&gt;data);\n        currentLevelCount--;\n        if (temp-&gt;left)\n        {\n            queue[rear++] = temp-&gt;left;\n            nextLevelCount++;\n        }\n        if (temp-&gt;right)\n        {\n            queue[rear++] = temp-&gt;right;\n            nextLevelCount++;\n        }\n        if (currentLevelCount == 0)\n        {\n            printf(\"\\n\");\n            currentLevelCount = nextLevelCount;\n            nextLevelCount = 0;\n        }\n    }\n}\nint main()\n{\n    SplayTree T = NULL;\n    T = Insert(T, 10);\n    T = Insert(T, 4);\n    T = Insert(T, 11);\n    T = Insert(T, 2);\n    T = Insert(T, 6);\n    T = Insert(T, 12);\n    T = Insert(T, 1);\n    T = Insert(T, 3);\n    T = Insert(T, 5);\n    T = Insert(T, 8);\n    T = Insert(T, 7);\n    T = Insert(T, 9);\n    T = Insert(T, 13);\n    Parent(T);\n    T-&gt;parent = NULL;\n    T = RotatetoRoot(T, 3);\n    Levelorder(T);\n    Parent(T);\n    T-&gt;parent = NULL;\n    T = RotatetoRoot(T, 9);\n    Levelorder(T);\n    Parent(T);\n    T-&gt;parent = NULL;\n    T = RotatetoRoot(T, 1);\n    Levelorder(T);\n    Parent(T);\n    T-&gt;parent = NULL;\n    T = RotatetoRoot(T, 5);\n\n    Levelorder(T);\n}\n</code></pre> <p>\u5bf9\u4e8e Insert \u64cd\u4f5c</p> <pre><code>SplayTree RotatetoRoot(SplayTree T, int value)\n{\n    SplayTree temp = (SplayTree)malloc(sizeof(SplayNode));\n    T = Insert(T, value);\n    Parent(T);\n    temp = Find(T, value);\n    while (temp-&gt;parent != NULL)\n    {\n        SplayTree G = temp-&gt;parent-&gt;parent;\n        SplayTree P = temp-&gt;parent;\n        // \u5982\u679ctemp\u7684\u7236\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n        if (temp-&gt;parent == T)\n        {\n            // \u76f4\u63a5\u8fdb\u884c\u4e00\u6b21SingleRotate\uff0c\u5c06temp\u65cb\u8f6c\u5230\u6839\u7ed3\u70b9\n            if (temp-&gt;parent-&gt;left == temp)\n            {\n                temp = SingleRotateWithLeft(temp-&gt;parent);\n            }\n            else\n            {\n                temp = SingleRotateWithRight(temp-&gt;parent);\n            }\n        }\n        // \u5982\u679ctemp\u7684\u7236\u7ed3\u70b9\u4e0d\u662f\u6839\u7ed3\u70b9\n        else\n        {\n            // \u6309\u7167Zig-zig \u6216\u8005 Zig-zag\u5206\u7c7b\u8ba8\u8bba\n            // LL\u578b zig-zig\n            if (G-&gt;left == P &amp;&amp; P-&gt;left == temp)\n            {\n                P = SingleRotateWithLeft(G);\n                temp = SingleRotateWithLeft(P);\n            }\n            // RR\u578b zig-zig\n            else if (G-&gt;right == P &amp;&amp; P-&gt;right == temp)\n            {\n                P = SingleRotateWithRight(G);\n                temp = SingleRotateWithRight(P);\n            }\n            // LR\u578b zig-zag\n            else if (G-&gt;left == P &amp;&amp; P-&gt;right == temp)\n            {\n                temp = DoubleRotateWithLeft(G);\n            }\n            // RL\u578b zig-zag\n            else if (G-&gt;right == P &amp;&amp; P-&gt;left == temp)\n            {\n                temp = DoubleRotateWithRight(G);\n            }\n        }\n    }\n    return temp;\n}\n</code></pre> <p>\u53ea\u9700\u5728 RotateToRoot \u51fd\u6570\u4e2d\uff0c\u5148\u63d2\u5165\u6307\u5b9a\u503c value\uff0c\u5efa\u7acb parent \u5173\u7cfb\uff0c\u518d\u627e\u5230\u8be5 value\uff0c\u8fdb\u884c\u65cb\u8f6c\u5230 root</p> <p><code>\u5220\u9664\uff1a</code></p> <p><code>\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u8981\u5220\u9664\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c</code></p> <p><code>\u7136\u540e\u5220\u9664\u6839\u7ed3\u70b9\uff08\u73b0\u5728\u6839\u7ed3\u70b9\u5c31\u662f\u8981\u5220\u9664\u7684\u70b9\uff09\uff0c\u7136\u540e\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u4e00\u6837\u8fdb\u884c\u5408\u7406\u7684merge \u5373\u53ef\u3002</code></p> <p>\uff08<code>AVL\u6811\u548cSplay\u6811\u7684\u65cb\u8f6c\u4ee3\u7801\u533a\u522b\u5728\u4e8e\uff1aAVL\u6811\u7684\u65cb\u8f6c\u9009\u53d6\u7684\u662fheight\u66f4\u5927\u7684\u7ed3\u70b9\u4f5c\u4e3a\u57fa\u51c6\u70b9\uff0c\u4e5f\u5c31\u662f\u9ad8\u4f4d\u7684\u7ed3\u70b9\uff0c\u56e0\u4e3a\u63d2\u5165\u4e00\u4e2a\u70b9\u540e\uff0c\u8981\u786e\u4fdd\u9ad8\u4f4d\u4ee5\u4e0b\u7684\u7ed3\u70b9\u7684height\u90fd\u5f97\u5230\u66f4\u65b0\uff0c\u8fd9\u6837\u624d\u80fd\u8ba1\u7b97\u9ad8\u4f4d\u7684\u5e73\u8861\u56e0\u5b50&gt;=2.</code></p> <p><code>\u4f46\u662f\u5728splay\u6811\u4e2d\uff0c\u6211\u4eec\u90fd\u662f\u5148\u627e\u5230\u76ee\u6807\u7ed3\u70b9\uff0c\u663e\u7136\u5b83\u662f\u5728\u4e0b\u65b9\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u5b83\u7684parent\u548cgrandparent\u7684\u4f4d\u7f6e\uff0c\u786e\u5b9a\u5f53\u524d\u7684\u65cb\u8f6c\u65b9\u5f0f\u3002\u6240\u4ee5\u65cb\u8f6c\u7684\u4ee3\u7801\u662f\u4ee5\u4e0b\u4f4d\u7684\u70b9\u4f5c\u4e3a\u57fa\u51c6\u70b9</code>\u3002\u6b64\u65f6\u7565\u6709\u95ee\u9898\uff0c\u53ef\u5ffd\u7565\u4e0d\u770b\uff09</p>"},{"location":"ADS/1.%20AVL_tree/#13-amortized-analysis","title":"1.3 Amortized Analysis","text":"<p>Any M consecutive operations take at most O(M log N) time. -- Amortized time bound</p> <p>\u5b83\u8ba1\u7b97\u7684\u662f\u4ece\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u8fde\u7eed\u7684 M \u6b21\u4efb\u610f\u64cd\u4f5c \u6700\u591a\u6709 \u7684\u4ee3\u4ef7\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4e0d\u540c\u4e8e\u5e73\u5747\u65f6\u95f4\u5206\u6790\uff08\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c\u51fa\u73b0\u6982\u7387\u5e73\u5747\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6c42\u5e73\u5747\uff09\u548c\u6982\u7387\u7b97\u6cd5\u7684\u6982\u7387\u5206\u6790\uff08\u5e73\u5747\u8bdd\u6240\u6709\u53ef\u80fd\u7684\u968f\u673a\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u52a0\u6743\u6c42\u5e73\u5747\uff09\u4e0d\u540c\uff0c\u644a\u8fd8\u5206\u6790\u548c\u6982\u7387\u5b8c\u5168\u65e0\u5173\u3002</p> <p>worse-case bound &gt;= amortized bound &gt;= average-case bound</p> <p>\u9488\u5bf9\u4e0a\u65b9\u7684\u4e0d\u7b49\u5f0f\uff0c\u7531\u4e8e amortized bound \u9650\u5236\u4e86\u6240\u6709\u7684 M \u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u5176\u4e0a\u754c\u5c31\u7b49\u4e8e\u6700\u5dee\u7684\u60c5\u51b5\u53d1\u751f M \u6b21\u3002\uff08\u7531\u4e8e amortized bound \u662f\u8fde\u7eed\u7684 M \u6b21\u4efb\u610f\u64cd\u4f5c \u6700\u591a\u6709 \u7684\u4ee3\u4ef7\u3002\uff09average bound \u5b58\u5728\u7a00\u91ca\uff0c\u6240\u4ee5\u5927\u4e8e\u7b49\u4e8e\u5e73\u5747\u60c5\u51b5</p> <p>\u5bf9\u4e8e\u4e0a\u754c\u7b49\u4e8e\u6700\u5dee\u7684\u60c5\u51b5\u53d1\u751f M \u6b21\uff0c\u5ffd\u7565\u4e86\u6709\u7684\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u3002\u4f8b\u5982\u5728\u7a7a\u6811\u4e0a\u7528 \\(O(N)\\) \u7684\u65f6\u95f4\u8fdb\u884c\u5220\u9664\u3002<code>\u644a\u8fd8\u5206\u6790\u5219\u662f\u5e0c\u671b\u6392\u9664\u6700\u5dee\u60c5\u51b5\u5206\u6790\u4e2d\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u3002</code></p> <p>\u6ce8\u610f\u70b9\uff1a<code>\u644a\u8fd8\u5206\u6790\u8981\u6c42\u4ece\u7a7a\u7ed3\u6784\u5f00\u59cb</code>\uff0c\u3002\u5426\u5219\u53ef\u4ee5\u601d\u8003\u4ece\u4e00\u4e2a\u5df2\u7ecf\u6709\u5f88\u591a\u5143\u7d20\u7684\u6808\u91cc\u9762\u4e00\u6b21\u6027 Multipop \u51fa\u6240\u6709\u5143\u7d20\uff0c\u8fd9\u4e00\u6b65\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u518d\u662f O(1 \u00b7 1) \u7684</p>"},{"location":"ADS/1.%20AVL_tree/#131-aggregate-analysis-\u805a\u5408\u6cd5","title":"1.3.1 aggregate analysis \u805a\u5408\u6cd5","text":"<p>Show that for all n, a sequence of n operations takes worst-case time (\\(T(n)\\)\\) in total. In the worst case, the average cost, or amortized cost, per operation is \\(T(n)/n\\)</p> <pre><code>// stack with multipop\nvoid MultiPop(int k, Stack S)\n{\n    while(!IsEmpty(S) &amp;&amp; k &gt; 0)\n    {\n        Pop(S);\n        k--;\n    }\n}\n// T = min(sizeof(S), k)\n</code></pre> <p>Consider a sequence of n Push, Pop, and <code>MultiPop</code> operations on an initially empty stack.</p> <p>\u5747\u644a\u4ed8\u51fa\u7684\u6700\u5927\u4ee3\u4ef7\u662f\uff1a\\(n-1\\) \u6b21 \\(push\\)\uff0c1 \u6b21 \\(multipop\\)</p> <p>\\(T(n) = (n-1)O(1) + O(n-1) = O(n)\\)</p> <p>\\(T_{amortized} = O(n) / n = O(1)\\)</p>"},{"location":"ADS/1.%20AVL_tree/#132-accounting-method-\u6838\u7b97\u6cd5","title":"1.3.2 accounting method \u6838\u7b97\u6cd5","text":"<p>\u622a\u957f\u8865\u77ed</p> <p>\u8bb0 \\(credit = amortized \\ cost \\ \\widehat c_i - actual \\ cost \\ c_i\\)</p> <p>\u5bf9\u6240\u6709\u7684 n \u6b21\u64cd\u4f5c\u800c\u8a00\uff0c\u90fd\u6709</p> <p></p> <p><code>\u76ee\u7684\u662f\u6ee1\u8db3\u4e4b\u524d\u7684\u4e0d\u7b49\u5f0f\uff0c\u4fdd\u8bc1\u644a\u8fd8\u6210\u672c\u5e73\u5747\u6210\u672c\u5927</code> \\(\\sum_{i = 1}^n credit_i &gt;=0\\)</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e0a\u8ff0\u4e0d\u7b49\u5f0f</p> <p></p> <p>\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u4e00\u6b21\u64cd\u4f5c\u644a\u8fd8\u6210\u672c\u4e3a O(1)\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u8fd9\u4e09\u79cd\u64cd\u4f5c\u7684\u6210\u672c\u90fd\u662f \u5e38\u6570\u7ea7\u522b \u7684\uff0c\u8fd9\u6837\u53ea\u8981\u4f7f\u5f97 \\(\\sum_{i = 1}^n credit_i &gt;=0\\)\uff0c\u90a3\u5c31\u76f4\u63a5\u8bc1\u660e\u4e86\u7ed3\u8bba\u3002\u4f46\u662f\u6211\u4eec\u77e5\u9053\uff0cMultiPop \u7684\u4ee3\u4ef7\u6bd4\u8f83\u5927\uff0c\u628a\u5b83\u8c03\u6574\u4e3a\u5e38\u6570\uff0c\u5bf9\u5e94\u7684 \\(\\Delta &lt; 0\\)\uff0c\u5fc5\u7136\u9700\u8981\u4ee3\u4ef7\u5c0f\u7684\u64cd\u4f5c \\(\\Delta &gt; 0\\)\uff0c\u6240\u4ee5\u624d\u6709\u4e86\u4f8b\u5b50\u4e2d\u628a Push \u64cd\u4f5c\u4ee3\u4ef7\u8c03\u6574\u4e3a 2\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5 \u5229\u7528 size(S) \u2a7e 0 \u8fd9\u4e00\u7ea6\u675f\u8bc1\u660e \\(\\sum_{i = 1}^n credit_i &gt;=0\\)</p> \\[ \\begin{aligned} sizeof(S) &gt;= 0 &amp;\\rightarrow credit &gt;= 0 \\\\ &amp;\\rightarrow O(n) = \\sum \\widehat c_i &gt;= \\sum c_i\\\\ &amp;\\rightarrow T_{amortized} = O(n)/n = O(1) \\end{aligned} \\] <p>\u6808\u5185\u6709\u5269\u4f59\uff0c\u8bf4\u660e multipop \u6ca1\u6709\u53d1\u6325\u5168\u529b\uff0c\u5bfc\u81f4\u5b9e\u9645\u6210\u672c\u5c0f\u4e8e\u5747\u644a\u6210\u672c\u3002</p> <p>\u5747\u644a\u6210\u672c\u7684\u8003\u91cf\u5728\u4e8e\uff0c\u4f7f\u6808\u5185\u6ca1\u6709\u5269\u4f59\uff0c\u610f\u5473\u7740 push \u4e00\u5b9a pop\uff0c\u8fd9\u6837 push \u7684\u6210\u672c\u53d8\u4e3a 2\uff0c\u5305\u542b\u4e86 pop \u548c multipop</p>"},{"location":"ADS/1.%20AVL_tree/#133-potential-method-\u52bf\u80fd\u6cd5","title":"1.3.3 potential method \u52bf\u80fd\u6cd5","text":"<p>\u4e0a\u9762\u7684\u6838\u7b97\u6cd5\u76f8\u5bf9\u5f62\u8c61\uff0c\u4f46\u8981\u4e3a\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u8bbe\u8ba1\u4e00\u4e2a\u644a\u8fd8\u4ee3\u4ef7 \\(\\widehat c_i = c_i + \\Delta_i\\) \u5e76\u4e0d\u50cf\u4e0a\u8ff0\u4f8b\u5b50\u90a3\u4e48\u7b80\u5355\uff0c\u51b5\u4e14\u9700\u8981\u4fdd\u8bc1 \\(\\sum_{i=1}^n \\Delta_i &gt;= 0\\).\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u7ed3\u6784\uff0c\u5982 splaytree\uff0c\u5c31\u5f88\u96be\u529e.</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u52bf\u80fd\u51fd\u6570\uff0c\u7b2c i \u6b21\u64cd\u4f5c \u7684\u644a\u8fd8\u4ee3\u4ef7\u662f \\(\\widehat c_i = c_i + (\\phi(D_i)-\\phi(D_{i-1}))\\)</p> <p>\\(D_i\\) \u662f\u7b2c i \u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u6570\u636e\u7ed3\u6784\uff0c\\(\\phi(D_i)\\) \u8868\u793a\u7b2c i \u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u52bf\u80fd</p> <p>\u6bcf\u4e00\u6b65\u7684\u644a\u8fd8\u4ee3\u4ef7\u7b49\u4e8e\u771f\u5b9e\u64cd\u4f5c\u7684\u4ee3\u4ef7\u52a0\u4e0a\u52bf\u51fd\u6570\u7684\u53d8\u5316</p> <p></p> <p>\u4e3a\u4e86\u4f7f\u5f97\u644a\u8fd8\u6210\u672c\u662f\u5e73\u5747\u6210\u672c\u7684\u4e0a\u754c\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u6ee1\u8db3 \\(\\sum_{i=1}^n \\widehat c_i &gt;= \\sum_{i=1}^n c_i\\), \u56e0\u6b64\u53ea\u9700\u8981\u6ee1\u8db3 \\(\\phi(D_n) &gt;= \\phi(D_0)\\)</p> <p><code>\u53ea\u9700\u8981\u8c03\u6574\u8bbe\u8ba1\uff0c\u521d\u59cb\u72b6\u6001\u65f6$\\phi(D_0)$\u6700\u5c0f\uff0c\u7b49\u4e8e0\uff0c\u540e\u7eed\u7684\u6bcf\u4e00\u6b65\u64cd\u4f5c\u52bf\u80fd\u90fd\u4e0d\u4f1a\u5c0f\u4e8e0</code></p> <p>\u5982\u679c \\(\\sum_{i=1}^n c_i = O(log N)\\)\uff0c\u5408\u7406\u7684\u52bf\u80fd\u51fd\u6570\u9009\u62e9\u5e94\u8be5\u6ee1\u8db3 \\(\u03a6(Dn) \u2212 \u03a6(D0)\\) \u4e5f\u662f \\(O(log n)\\)\uff0c\u5426\u5219\u4f1a\u5f71\u54cd\u4f30\u7b97\u7684\u7cbe\u786e\u5ea6\u3002</p> <p></p> <p>\u9488\u5bf9\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\u4e3a\u6808\u4e2d\u5b58\u5728\u7684\u5143\u7d20\u4e2a\u6570</p> \\[ \\begin{aligned} &amp;push: \\phi(D_i) - \\phi(D_{i-1}) = sizeof(S) + 1 - sizeof(S) = 1 \\\\ &amp;\\rightarrow \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 1 + 1 = 2 \\\\ &amp;pop: \\phi(D_i) - \\phi(D_{i-1}) = sizeof(S) - 1 - sizeof(S) = -1 \\\\ &amp;\\rightarrow \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 1 - 1 = 0 \\\\ &amp;Multipop: \\phi(D_i) - \\phi(D_{i-1}) = sizeof(S) - k - sizeof(S) = -k \\\\ &amp;\\rightarrow \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = k - k = 0 \\\\ \\end{aligned} \\]"},{"location":"ADS/1.%20AVL_tree/#134-splay-tree-\u7684-\u644a\u8fd8\u5206\u6790","title":"1.3.4 Splay Tree \u7684 \u644a\u8fd8\u5206\u6790","text":"<p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u8ddf\u7ed3\u70b9\u9ad8\u5ea6\u76f8\u5173\u7684\uff08\u6216\u7c7b\u4f3c\u7684\uff09\u52bf\u80fd\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u6ce8\u610f\u5230\u5728 Splay \u64cd\u4f5c\u4e2d\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u7ed3\u70b9\u7684\u9ad8\u5ea6\u90fd\u4f1a\u6539\u53d8\uff0c\u54ea\u6015\u8be5\u7ed3\u70b9\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u7ed3\u70b9\u9ad8\u5ea6\u4f5c\u4e3a\u52bf\u80fd\u51fd\u6570\uff0c\u540e\u7eed\u7684\u6570\u5b66\u8ba1\u7b97\u4e0e\u63a8\u5bfc\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002</p> <p>\u4e00\u4e2a\u53ef\u7528\u7684\u52bf\u80fd\u51fd\u6570\u662f\u6811\u4e2d\u6240\u6709\u7ed3\u70b9\u7684 <code>rank</code> \u4e4b\u548c\uff1a</p> \\[ \\phi(T) = \\sum_{i = 1}^nlog S(i) =  \\sum_{i = 1}^nR(i) \\] <p>\\(S(i)\\) \u6307\u7684\u662f\u5b50\u6811 \\(i\\) \u7684\u7ed3\u70b9\u6570\uff0c\u5305\u62ec\u7ed3\u70b9 \\(i\\).</p> <p>\\(R(i)\\) \u8868\u793a\u7ed3\u70b9 \\(i\\) \u7684 rank\uff0c\\(R(i) = logS(i)\\)</p> <p>\u9009\u53d6 rank \u4e4b\u548c\u4f5c\u4e3a\u52bf\u80fd\u51fd\u6570\u7684\u597d\u5904\u662f\u9664\u4e86 X, P, G \u4e09\u4e2a\u7ed3\u70b9\u5916\uff0c\u5176\u4ed6\u7ed3\u70b9\u5728 splay \u64cd\u4f5c\u4e2d rank \u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u800c\u53ef\u4ee5\u7b80\u5316\u8ba1\u7b97\u3002</p> <p></p> <ol> <li>Zig: \u5728\u6574\u4e2a\u64cd\u4f5c\u4e2d\u53ea\u6709 X \u548c P \u7684 rank \u503c\u6709\u53d8\u5316\u3002</li> </ol> \\[     \\widehat c_i = c_i + \\phi(D_i)-\\phi(D_{i-1}) = c_i + R_2(X) -R_1(X) + R_2(P)-R_1(P) \\] <p>\u5176\u4e2d \\(R_2(X) -R_1(X) &gt; 0 , R_2(P)-R_1(P) &lt;= 0\\)</p> <p>\u6240\u4ee5 \\(\\widehat c_i &lt;= 1 + R_2(X) - R_1(X) &lt;= 1 + 3(R_2(X) - R_1(X))\\)</p> <ol> <li>Zig-Zag: \u4e24\u6b21\u65cb\u8f6c</li> </ol> \\[ \\begin{aligned}     &amp;\\widehat c_i =  2 + R_2(X) -R_1(X) + R_2(P)-R_1(P) + R_2(G) - R_1(G)\\\\     &amp;G \\ is \\ root, X \\ is \\ also \\ root \\rightarrow R_2(X) = R_1(G)\\\\     &amp;\\widehat c_i =  2  -R_1(X) + R_2(P)-R_1(P) + R_2(G)\\\\ \\end{aligned} \\] <p>\u5f15\u7406\uff1a \u82e5 \\(a + b &lt;= c\\), \u4e14 \\(a ,b\\) \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u5219 \\(log a+ log b &lt;= 2logc -2\\)</p> \\[ \\begin{aligned}   &amp;\\widehat c_i =  2  -R_1(X) + R_2(P)-R_1(P) + R_2(G)\\\\   &amp;S_2(P) + S_2(G) &lt;= S_2(X) \\rightarrow R_2(P) + R_2(G) &lt;= 2R_2(X) -2\\\\   &amp;\\widehat c_i &lt;= 2 - R_1(X)-R_1(P)+2R_2(X)-2 &lt;= 2(R_2(X)-R_1(X)) \\\\   &amp;\\widehat c_i &lt;= 3(R_2(X)-R_1(X)) \\end{aligned} \\] <ol> <li>Zig-zig\uff1a\u4e24\u6b21\u65cb\u8f6c    \u6700\u540e\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u4f38\u5c55\u6811\u4e0a\u8bbf\u95ee\u8282\u70b9 X \u7684\u4e00\u7cfb\u5217 M \u4e2a splay \u64cd\u4f5c\uff08zig\u3001zigzig\u3001zigzag\uff09\uff0c\u5176\u4e2d\u6700\u591a\u53ea\u4f1a\u6709 1 \u4e2a zig\u3002\u628a\u4ed6\u4eec\u90fd\u7ed9\u52a0\u8d77\u6765\u540e\uff0c\u53ef\u5f97\uff1a</li> </ol> \\[ \\begin{aligned}     &amp;\\widehat c_i =  2 + R_2(X) -R_1(X) + R_2(P)-R_1(P) + R_2(G) - R_1(G)\\\\     &amp;G \\ is \\ root, X \\ is \\ also \\ root \\rightarrow R_2(X) = R_1(G)\\\\     &amp;\\widehat c_i =  2  -R_1(X) + R_2(P)-R_1(P) + R_2(G) \\end{aligned} \\] \\[ \\begin{aligned} \\sum_{i = 1}^M \\widehat c_i &lt;&amp;= 1 + 3 [R_M(X)-R_{M-1}(X)] + \\sum_{i = 1}^{M-1}3(R_i(X) - R_{i-1}(X))\\\\ &amp; =  1 + 3 [R_M(X)-R_{M-1}(X)] + 3 [R_{M-1}(X) - R_0(X)] \\\\ &amp;= 1+3R_M(X)-3R_0(X) = O(log n) \\end{aligned} \\] <p>\u4e0a\u9762\u8bc1\u660e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c\u90fd\u662f \\(O(logN)\\) \u7ea7\u522b\u3002\u8003\u8651\u5230\u4e0a\u8bfe\u6709\u4e2a\u4f8b\u5b50\u5bf9\u9000\u5316\u6210\u94fe\u8868\u7684\u6811\u7684\u53f6\u7ed3\u70b9\u505a Splay \u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002\u662f\u5426\u4ea7\u751f\u77db\u76fe\uff1f</p> <p>\u8fd9\u5e76\u4e0d\u77db\u76fe\uff0c\u4e00\u4e2a\u662f \u5747\u644a\u6210\u672c\uff0c\u4e00\u4e2a\u662f \u771f\u5b9e\u6210\u672c</p> <p><code>\u6211\u4eec\u5e94\u8be5\u8bc1\u660eM\u4e2a\u8fde\u7eed\u64cd\u4f5c\u7684\u6210\u672c\u4e0d\u5927\u4e8e$O(MlogN)$</code></p> <p>\u4ee4 \\(T_0\\) \u4e3a\u64cd\u4f5c\u524d\u7684 splay Tree\uff0c\u4e3a\u7a7a\u6811\u3002\\(T_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u540e\u7684\u4f38\u5c55\u6811(\\(1 &lt;= i &lt;= M\\)), \\(c_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u7684\u5b9e\u9645\u6210\u672c</p> \\[ \\sum_{i = 1}^M \\widehat c_i = \\sum_{i = 1}^M c_i + \\phi(T_M) - \\phi(T_0)\\\\ \\sum_{i = 1}^M c_i = \\sum_{i = 1}^M \\widehat c_i + \\phi(T_0) - \\phi(T_M) &lt;= \\sum_{i = 1}^M \\widehat c_i + \\phi(T_0) = \\sum_{i = 1}^M \\widehat c_i = O(MlogN) \\] <p><code>\u5b9a\u7406</code>\uff1aSplay \u6811\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u644a\u8fd8\u590d\u6742\u5ea6\u5747\u4e3a \\(O(log n)\\)\u3002</p> <p></p> <p></p> \\[ \\begin{aligned} &amp;assume \\ \\phi = 2|S_B|\\\\ &amp;enqueue : \\widehat c_i = c_i = 1\\\\ &amp;dequeue: \\begin{cases} \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 1 + 2(-1) = -1 &amp; not \\  empty\\\\ \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 2sizeof(A) + 2sizeof(A) &amp; empty\\\\ \\end{cases}\\\\ &amp;assume \\ \\phi = 2|S_A|\\\\ &amp;enqueue : \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1})= 1 + 2 = 3\\\\ &amp;dequeue: \\begin{cases} \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 1  &amp; not \\  empty\\\\ \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 2sizeof(A) - 2sizeof(A) = 0 &amp; empty\\\\ \\end{cases}\\\\ &amp; finally \\ select \\ A \\end{aligned} \\] <p></p> <p></p> \\[ \\begin{aligned} &amp;insert: \\phi(D_i) - \\phi(D_{i-1}) = sizeof(list) + 1 - sizeof(list) = 1\\\\ &amp;\\rightarrow \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = 1 + 1 = 2\\\\ &amp;sum: \\phi(D_i) - \\phi(D_{i-1}) = 1 - sizeof(list) = 1 - k\\\\ &amp;\\rightarrow \\widehat c_i = c_i + \\phi(D_i) - \\phi(D_{i-1}) = k + 1 - k = 1\\\\ \\end{aligned} \\]"},{"location":"ADS/1.%20AVL_tree/#14-\u4e60\u9898\u96c6","title":"1.4 \u4e60\u9898\u96c6","text":"<ol> <li> <p>If the depth of an AVL tree is 6 (the depth of an empty tree is defined to be -1), then the minimum possible number of nodes in this tree is:</p> </li> <li> <p>A. 13</p> </li> <li> <p>B. 17</p> </li> <li> <p>C. 20</p> </li> <li> <p><code>D. 33</code></p> </li> </ol> <p>\u524d\u9762\u7684\u9012\u63a8\u5173\u7cfb\u5f0f \\(N_h = N_{h-1} + N_{h-2} + 1, N_0 = 1, N_1 = 2\\)</p> <p>\u90a3\u4e48 \\(N_2 = 4, N_3 = 7, N_4 = 12, N_5= 20\uff0c N_6= 33\\)</p> <ol> <li> <p>Insert 2, 1, 4, 5, 9, 3, 6, 7 into an initially empty AVL tree. Which one of the following statements is FALSE?</p> </li> <li> <p>A. 4 is the root</p> </li> <li> <p><code>B. 3 and 7 are siblings</code></p> </li> <li> <p>C. 2 and 6 are siblings</p> </li> <li> <p>D. 9 is the parent of 7</p> </li> </ol> <p></p> <ol> <li>For the result of accessing the keys 3, 9, 1, 5 in order in the splay tree in the following figure, which one of the following statements is FALSE?</li> </ol> <p></p> <ul> <li> <p>A. 5 is the root</p> </li> <li> <p>B. 1 and 9 are siblings</p> </li> <li> <p>C. 6 and 10 are siblings</p> </li> <li> <p><code>D. 3 is the parent of 4</code></p> </li> </ul> <pre><code>5\n1 9\n2 6 10\n4 8 11\n3 7 12\n13\n</code></pre> <p></p> <ol> <li> <p>When doing amortized analysis, which one of the following statements is FALSE?</p> </li> <li> <p>A. Aggregate analysis(\u805a\u5408\u6cd5) shows that for all \\(n\\), a sequence of \\(n\\) operations takes worst-case time \\(T(n)\\) in total. Then the amortized cost per operation is therefore \\(T(n)/n\\)</p> </li> <li> <p>B. <code>For potential method(\u52bf\u80fd\u6cd5), a good potential function should always assume its **maximum** at the start of the sequence</code></p> <p><code>\u52bf\u80fd\u6cd5\uff0c\u8981\u6c42\u521d\u59cb\u65f6\u523b\u7684\u52bf\u80fd\u6700\u5c0f</code></p> </li> <li> <p>C. For accounting method(\u6838\u7b97\u6cd5), when an operation's amortized cost exceeds its actual cost, we save the difference as credit to pay for later operations whose amortized cost is less than their actual cost</p> </li> <li> <p>D. The difference between aggregate analysis and accounting method is that the later one assumes that the amortized costs of the operations may differ from each other</p> <p>\u805a\u5408\u6cd5\u662f\u6c42\u5e73\u5747\uff0c\u5047\u8bbe\u7684\u662f amortized cost \u662f\u76f8\u7b49\u7684\u3002account \u6cd5\u5047\u8bbe\u7684\u662f amortized cost \u662f\u4e0d\u76f8\u7b49\u7684\u6bcf\u6b21\u64cd\u4f5c\u3002\u5f53\u64cd\u4f5c\u7684\u644a\u4f59\u6210\u672c\u8d85\u8fc7\u5176\u5b9e\u9645\u6210\u672c\u65f6\uff0c\u6211\u4eec\u4f1a\u5c06\u5dee\u989d\u5b58\u4e3a credit\uff0c\u4ee5\u652f\u4ed8\u644a\u4f59\u6210\u672c\u4f4e\u4e8e\u5176\u5b9e\u9645\u6210\u672c\u7684\u540e\u7eed\u64cd\u4f5c</p> </li> <li> <p>Consider the following buffer management problem. Initially the buffer size (the number of blocks) is one. Each block can accommodate exactly one item. As soon as a new item arrives, check if there is an available block. If yes, put the item into the block, induced a cost of one. Otherwise, the buffer size is doubled, and then the item is able to put into. Moreover, the old items have to be moved into the new buffer so it costs \\(k+1\\) to make this insertion, where \\(k\\) is the number of old items. Clearly, if there are \\(N\\) items, the worst-case cost for one insertion can be \\(\\Omega (N)\\). To show that the average cost is \\(O(1)\\), let us turn to the amortized analysis. To simplify the problem, assume that the buffer is full after all the \\(N\\) items are placed. Which of the following potential functions works?</p> <p>A. The number of items currently in the buffer</p> <p>B. The number of blocks currently in the buffer</p> <p>C. The number of available blocks currently in the buffer</p> <p>D. <code>The opposite number of available blocks in the buffer</code></p> </li> </ol>"},{"location":"ADS/10.%20NP-Completeness/","title":"10. NP-Completeness","text":"<p> \u7ea6 4422 \u4e2a\u5b57  2 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 22 \u5206\u949f</p>"},{"location":"ADS/10.%20NP-Completeness/#101-\u6982\u8ff0","title":"10.1 \u6982\u8ff0","text":"<p>\u6839\u636e\u95ee\u9898\u7684\u96be\u5ea6\uff0c\u7531\u4e0d\u540c\u7684\u5b9a\u4e49\u5212\u5206\uff0c\u95ee\u9898\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <p>P \u95ee\u9898(polynomial time)\u3001NP \u95ee\u9898(nondeterministic polynomial time)\u3001NPC \u95ee\u9898(NP complete)\u3001NPH \u95ee\u9898(NP hard)\u3002\u9664\u6b64\u4e4b\u5916 \uff0c\u6211\u4eec\u8fd8\u9700\u8981\u989d\u5916\u4e86\u89e3\u4e0d\u53ef\u8ba1\u7b97\u95ee\u9898(undecidable)\u3002</p> <p></p> <ul> <li>P \u53d6\u81ea polynomial time\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff08\u6307\u67d0\u4e00\u6307\u4ee4\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff09\ud83d\udd0d\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c<code>\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898</code>\u3002</p> <ul> <li>NP \u5373 nondeterministic polynomial time\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528[\u975e\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff08\u5728\u67d0\u4e00\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u6709\u82e5\u5e72\u4e2a\uff0c\u673a\u5668\u603b\u80fd\u9009\u51fa\u6b63\u786e\u7684\u4e00\u6761\uff09\ud83d\udd0d]\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u7b49\u4ef7\u4e8e\u53ef\u4ee5\u7528[\u786e\u5b9a\u578b\u56fe\u7075\u673a\ud83d\udd0d]\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\uff08\u5224\u65ad\u7b54\u6848\u662f\u5426\u6b63\u786e\uff09\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c<code>\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u7684\u95ee\u9898</code>\u3002</p> <ul> <li> <p>NPC \u5373 NP complete\uff0cNP \u5b8c\u5168\uff0c\u662f NP \u4e2d\u6700\u96be\u7684\u51b3\u5b9a\u6027\u95ee\u9898\uff08\u5e76\u4e0d\u662f\u65e0\u9650\u5b9a\u8bcd\u7684\u6700\u96be\u7684\u95ee\u9898\uff01\uff09\u3002\u800c\u6211\u4eec\u79f0\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u95ee\u9898\u4e3a NPC \u95ee\u9898\uff1a</p> </li> <li> <p>\u662f\u4e00\u4e2a NP \u95ee\u9898\uff1b</p> </li> <li>\u6240\u6709 NP \u95ee\u9898\u90fd\u53ef\u4ee5[\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\ud83d\udd0d]\u4e3a\u8be5\u95ee\u9898\uff1b</li> </ul> <p>\u7531 2 \u53ef\u4ee5\u6709\u7ed3\u8bba\uff0c\u6240\u6709\u7684 NPC \u95ee\u9898\u96be\u5ea6\u76f8\u540c\u2014\u2014\u4e00\u65e6\u6709\u4e00\u4e2a NPC \u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u6240\u6709 NPC \u95ee\u9898\uff0c\u4e43\u81f3\u6240\u6709 NP \u95ee\u9898\u90fd\u80fd\u88ab\u89e3\u51b3\u3002</p> <p>\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e2a\u95ee\u9898\u662f NPC \u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u624b\u6bb5\uff1a</p> <ol> <li> <p>\u5224\u5b9a\u8be5\u95ee\u9898\u662f\u4e00\u4e2a NP \u95ee\u9898\uff1b</p> </li> <li> <p>\u5224\u5b9a\u4e00\u4e2a\u5df2\u77e5\u7684 NPC \u95ee\u9898\u53ef\u4ee5[\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\ud83d\udd0d]\u4e3a\u8be5\u95ee\u9898\uff0c\u6216\u5224\u5b9a\u8be5\u95ee\u9898\u662f NPH\uff08\u5728\u4e0b\u9762\uff09\u95ee\u9898\uff1b</p> <p><code>NPC\u95ee\u9898\u96be\u5ea6\u76f8\u540c\uff0cNPC\u95ee\u9898\u80fd\u591f\u5f52\u7ea6\u5230\u53e6\u4e00\u4e2aNPC\u6545\u4e8b\u3002\u6216\u8005\u5229\u7528</code>\\(NPC = NP \\cap NPH\\),<code>\u5982\u679c\u4e00\u4e2a\u65e2\u662fNP\u95ee\u9898\uff0c\u53c8\u662fNPH\u95ee\u9898\uff0c\u90a3\u4e48\u5b83\u4e5f\u662fNPC\u95ee\u9898</code></p> </li> </ol> <p>\u7b2c\u4e00\u4e2a\u88ab\u8bc1\u660e\u662f NPC \u7684\u95ee\u9898\u662f [Circuit-SAT\ud83d\udd0d] \u95ee\u9898\u3002</p> <ul> <li>NPH \u5373 NP hard\uff0cNP \u56f0\u96be\uff0c\u5b83\u4e0d\u4e00\u5b9a\u9700\u8981\u662f NP \u95ee\u9898\u3002\u800c\u6240\u6709 NP \u95ee\u9898\u90fd\u53ef\u4ee5[\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\ud83d\udd0d]\u4e3a NPH \u95ee\u9898\u3002</li> </ul> <p>NPH\u95ee\u9898\u65e0\u6cd5\u901a\u8fc7\u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u8fdb\u884c\u9a8c\u8bc1</p> <p><code>all the language can be decided by a non-deterministic machine\u3002 F</code></p> <p>$$   NPC = NP \\cap NPH  $$</p>"},{"location":"ADS/10.%20NP-Completeness/#102-undecidable-problem","title":"10.2 Undecidable Problem","text":"<p>\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898(undecidable problem)\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u51b3\u5b9a\u6027\u95ee\u9898\uff0c\u5b83\u7684\u7279\u70b9\u662f\u6211\u4eec\u65e0\u6cd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u6c42\u89e3\u5b83\u7684\u7ed3\u679c\u3002</p> <p>\u505c\u673a\u95ee\u9898\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4e0d\u53ef\u8ba1\u7b97\u95ee\u9898\uff0c\u5b83\u6307\u7684\u662f\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u65e0\u6cd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u5b83\u662f\u5426\u4f1a\u5728\u6709\u9650\u65f6\u95f4\u5185\u505c\u673a\uff08\u5373\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u4f1a\u6b7b\u5faa\u73af\uff09\u3002</p> <p></p> <p>\u6211\u4eec\u901a\u8fc7\u53cd\u8bc1\u6cd5\u53ef\u4ee5\u8bc1\u660e\uff1a</p> <p>\u5047\u8bbe\u5b58\u5728\u51fd\u6570 <code>willHalt(func F)</code> \u53ef\u4ee5\u5224\u65ad\u51fd\u6570 F \u662f\u5426\u4f1a\u505c\u673a\uff0c\u5982\u679c\u4f1a\uff0c\u5219\u8fd4\u56de <code>true</code>\uff0c\u5426\u5219\u8fd4\u56de <code>false</code>\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u8fd9\u6837\u7684\u51fd\u6570 <code>foo()</code>\uff1a</p> <pre><code>void foo() {\n    if ( willHalt(foo) ) {\n        while (true) {} // Endless loop.\n    }\n    return;\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u6211\u4eec\u60f3\u77e5\u9053 <code>foo()</code> \u662f\u5426\u4f1a\u505c\u673a\uff0c\u5c31\u4f1a\u6267\u884c <code>willHalt(foo)</code>\u3002\u7136\u800c\u5728 <code>foo()</code> \u5185\u90e8\u4e5f\u6709\u4e00\u4e2a <code>willHalt(foo)</code>\uff0c\u5982\u679c\u5b83\u8ba4\u4e3a <code>foo()</code> \u4f1a\u505c\u673a\uff0c\u5219\u6784\u9020\u4e00\u4e2a\u6b7b\u5faa\u73af\uff1b\u800c\u5982\u679c\u5b83\u8ba4\u4e3a <code>foo()</code> \u4e0d\u4f1a\u505c\u673a\uff0c\u5219\u9009\u62e9\u8ba9\u5b83\u7acb\u523b\u505c\u673a\uff0c\u4e8e\u662f\u8fd9\u91cc\u5c31\u4ea7\u751f\u4e86\u77db\u76fe\u3002</p> <p>\u7406\u89e3\u4e0a\u9762\u8fd9\u6bb5\u5185\u5bb9\u7684\u5173\u952e\u5c31\u662f\uff0c\u8fd9\u91cc\u867d\u7136\u4e0d\u5b58\u5728\u4e8b\u5b9e\u610f\u4e49\u4e0a\u7684\u201c\u6b7b\u5faa\u73af\u201d\uff0c\u4f46\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u9012\u5f52\uff0c\u800c\u8fd9\u79cd\u201c\u903b\u8f91\u4e0a\u7684\u9012\u5f52\u201d\uff0c\u6b63\u662f\u5bfc\u81f4\u505c\u673a\u95ee\u9898\u6210\u4e3a\u4e00\u4e2a\u4e0d\u53ef\u8ba1\u7b97\u95ee\u9898\u7684\u539f\u56e0\u3002</p>"},{"location":"ADS/10.%20NP-Completeness/#103-p-\u95ee\u9898-\u548c-np-\u95ee\u9898","title":"10.3 P \u95ee\u9898 \u548c NP \u95ee\u9898","text":""},{"location":"ADS/10.%20NP-Completeness/#1031-\u56fe\u7075\u673a","title":"10.3.1 \u56fe\u7075\u673a","text":"<p>\u56fe\u7075\u673a\u7531\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u7eb8\u5e26\u548c\u4e00\u4e2a\u8bfb\u5199\u5934\u7ec4\u6210\u3002\u7eb8\u5e26\u88ab\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u683c\u5b50\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6709\u4e00\u4e2a\u7b26\u53f7\uff0c\u8bfb\u5199\u5934\u53ef\u4ee5\u5728\u7eb8\u5e26\u4e0a\u79fb\u52a8\uff0c\u8bfb\u5199\u5934\u53ef\u4ee5\u8bfb\u53d6\u5f53\u524d\u683c\u5b50\u4e0a\u7684\u7b26\u53f7\uff0c\u4e5f\u53ef\u4ee5\u6539\u53d8\u5f53\u524d\u683c\u5b50\u4e0a\u7684\u7b26\u53f7\u3002\u56fe\u7075\u673a\u7684\u72b6\u6001\u662f\u4e00\u4e2a\u6709\u9650\u96c6\u5408\uff0c\u6bcf\u4e2a\u72b6\u6001\u90fd\u6709\u4e00\u4e2a\u8f6c\u79fb\u51fd\u6570\uff0c\u8f6c\u79fb\u51fd\u6570\u7684\u8f93\u5165\u662f\u5f53\u524d\u72b6\u6001\u548c\u5f53\u524d\u683c\u5b50\u4e0a\u7684\u7b26\u53f7\uff0c\u8f93\u51fa\u662f\u4e0b\u4e00\u4e2a\u72b6\u6001\u3001\u4e0b\u4e00\u4e2a\u683c\u5b50\u4e0a\u7684\u7b26\u53f7\u548c\u8bfb\u5199\u5934\u7684\u79fb\u52a8\u65b9\u5411</p> <p>A <code>Deterministic Turing Machine</code> executes one instruction at each point in time.  Then depending on the instruction, it goes to the next unique instruction.</p> <p><code>\u786e\u5b9a\u6027\u56fe\u7075\u673a</code>\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u6267\u884c\u4e00\u6761\u6307\u4ee4\u3002 \u7136\u540e\u6839\u636e\u6307\u4ee4\uff0c\u5b83\u8fdb\u5165\u4e0b\u4e00\u4e2a\u552f\u4e00\u7684\u6307\u4ee4\u3002</p> <p>A <code>Nondeterministic Turing Machine</code> is free to choose its next step from a finite set.  And if one of these steps leads to a solution, it will always choose the correct one.</p> <p><code>\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a</code>\u53ef\u4ee5\u4ece\u6709\u9650\u96c6\u5408\u4e2d\u81ea\u7531\u9009\u62e9\u4e0b\u4e00\u6b65\u3002 \u5982\u679c\u8fd9\u4e9b\u6b65\u9aa4\u4e4b\u4e00\u5bfc\u81f4\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5c06\u59cb\u7ec8\u9009\u62e9\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p><code>\u4e24\u8005\u4e4b\u95f4\u5b58\u5728\u590d\u6742\u5ea6\u5b58\u5728\u5dee\u5f02\u3002\u5047\u8bbe\u4e24\u8005\u90fd\u9700\u8981\u4f7f\u7528n\u6b65\u89e3\u51b3\u95ee\u9898\uff0c\u5176\u4e2d\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u6bcf\u4e00\u6b65\u90fd\u6709k\u4e2d\u9009\u62e9\uff0c\u5b83\u9700\u8981\u5728k\u79cd\u9009\u62e9\u4e2d\u627e\u5230\u6b63\u786e\u7684\u52a8\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u904d\u5386k\u79cd\u9009\u62e9\u3002\u90a3\u4e48\u786e\u5b9a\u6027\u56fe\u7075\u673a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n), \u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(k^n)\u3002</code></p> <p><code>\u4e24\u4e2a\u56fe\u7075\u673a\u5728\u89e3\u51b3\u95ee\u9898\u4e0a\u6ca1\u6709\u5dee\u5f02\uff0c\u4e00\u4e2a\u56fe\u7075\u673a\u80fd\u591f\u89e3\u51b3\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u4e5f\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u65e0\u975e\u662f\u4e0d\u540c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u7684\u89e3\u51b3\u95ee\u9898</code></p>"},{"location":"ADS/10.%20NP-Completeness/#1032-p--np","title":"10.3.2 P &amp; NP","text":"<p>P \u53d6\u81ea polynomial time\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528[\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff08Deterministic Turing Machine\uff09\ud83d\udd0d]\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>NP \u5373 nondeterministic polynomial time\uff08<code>\u975e\u786e\u5b9a\u6027\u591a\u9879\u5f0f\u65f6\u95f4\uff01=\u975e\u591a\u9879\u5f0f\u65f6\u95f4</code>\uff09\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528[\u975e\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff08Nondeterministic Turing Machine\uff09\ud83d\udd0d]\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u7b49\u4ef7\u4e8e\u53ef\u4ee5\u7528[\u786e\u5b9a\u578b\u56fe\u7075\u673a\ud83d\udd0d]\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\uff08\u5224\u65ad\u7b54\u6848\u662f\u5426\u6b63\u786e\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u7684\u95ee\u9898\u3002</p> <p>The problem is NP if we can prove any solution is true in polynomial time.</p> <p>example\uff1aHamilton cycle problem\uff1a\u627e\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u9876\u70b9\u7684\u5355\u4e2a\u5faa\u73af</p> <ul> <li>\u5f53\u524d\u6ca1\u6709\u627e\u5230\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u95ee\u9898\u7684\u89e3\u6cd5</li> <li>\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u89e3\u6cd5\uff0c\u663e\u7136\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\uff08\u628a\u6bcf\u4e00\u6b65\u8d70\u4e00\u904d\uff09\uff0c\u6240\u4ee5\u8fd9\u662fNP\u95ee\u9898</li> </ul> <p><code>\u770b\u6e05\u9898\u76ee\uff0c\u54c8\u5bc6\u987f\u56de\u8def\u95ee\u9898\uff08\u51b3\u7b56\u7248\uff09\u662f\u53ef\u5224\u5b9a\u95ee\u9898\uff0c\u4f46\u4e0d\u662fNP\u95ee\u9898\uff0c\u662fNPC\u95ee\u9898</code></p> <p><code>\u54c8\u5bc6\u987f\u95ee\u9898\uff08\u975e\u51b3\u7b56\uff0c\u8def\u5f84\u7248\uff09\u662f\u4e00\u4e2aNP\u95ee\u9898\uff0c\u7ed9\u5b9a\u8def\u5f84\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fdb\u884c\u9a8c\u8bc1</code></p> <p>P\u4e0eNP\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\\(P \\subseteq NP\\),\u4e5f\u5c31\u662f\u6240\u6709\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u90fd\u5c5e\u4e8eNP\u95ee\u9898\uff0c\u4f46\u662f\u95ee\u9898\u51fa\u5728\u4e24\u8005\u662f\u5426\u662f\u771f\u5b50\u96c6\u7684\u5173\u7cfb\uff1f</p> <p>\u540c\u65f6\u5e76\u975e\u6240\u6709\u53ef\u5224\u5b9a\u7684\u95ee\u9898\u90fd\u5728 NP \u4e2d\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u786e\u5b9a\u56fe\u662f\u5426\u6ca1\u6709\u54c8\u5bc6\u987f\u5faa\u73af\u7684\u95ee\u9898\u3002\u5047\u5982\u7ed9\u4f60\u4e00\u4e2a\u89e3\u6cd5\uff0c\u4f60\u8981\u4e48\u5229\u7528\u8be5\u89e3\u6cd5\u627e\u5230\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u8981\u4e48\u5c31\u662f\u904d\u5386\u6240\u6709\u7684\u56de\u8def\uff0c\u8bf4\u660e\u6240\u6709\u7684\u56de\u8def\u90fd\u4e0d\u662f\u54c8\u5bc6\u987f\u56de\u8def</p>"},{"location":"ADS/10.%20NP-Completeness/#104-npc-\u95ee\u9898","title":"10.4 NPC \u95ee\u9898","text":"<p>An NP-complete problem has the property that any problem in NP can be polynomially reduced to it.</p> <p><code>\u6240\u6709\u7684NP\u95ee\u9898\uff0c\u90fd\u80fd\u591f\u591a\u9879\u5f0f\u5f52\u7ea6\u5230NPC\u95ee\u9898\uff0c\u4f46\u662fNPC\u4e0d\u80fd\u5f52\u7ea6\u5230NP\u95ee\u9898</code></p> <p>If we can solve any NP-complete problem in polynomial time, then we will be able to solve, in polynomial time, all the problems in NP!</p> <p><code>\u5982\u679c\u6211\u4eec\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3\u4efb\u4f55NP\u5b8c\u5168\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u80fd\u591f\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3NP\u4e2d\u7684\u6240\u6709\u95ee\u9898\uff01</code></p>"},{"location":"ADS/10.%20NP-Completeness/#1041-\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6","title":"10.4.1 \u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6","text":"<p>\u6211\u4eec\u5f15\u5165 P/NP \u7b49\u8fd9\u4e9b\u6982\u5ff5\uff0c\u662f\u4e3a\u4e86\u8861\u91cf\u95ee\u9898\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u800c\u5982\u4f55\u5728\u5177\u4f53\u7684\u201c\u95ee\u9898\u201d\u95f4\u4f20\u9012\u3001\u6bd4\u8f83\u8fd9\u79cd\u201c\u590d\u6742\u7a0b\u5ea6\u201d\uff0c\u5c31\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6(polynomial reduce)\u7684\u76ee\u7684\u3002</p> <pre><code>graph LR\n\u95ee\u9898A --\u591a\u9879\u5f0f\u65f6\u95f4\u8f6c\u5316--&gt; \u95ee\u9898B</code></pre> <p>\u5982\u679c\u6211\u4eec\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u590d\u6742\u5ea6\u5185\uff0c\u5c06\u95ee\u9898 A \u8f6c\u5316\u4e3a\u95ee\u9898 B\uff0c\u5219\u79f0\u95ee\u9898 A \u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6(polynomial reduce)\u4e3a B\uff0c\u8bb0\u4e3a\\(A \\leq_{p} B\\)\uff0c\u8868\u793a A \u4e0d\u4f1a\u6bd4 B \u96be\u3002</p> <p>\u800c\u91c7\u53d6\u6570\u5b66\u8bed\u8a00\u6765\u63cf\u8ff0\uff0c\u5219\u662f\uff1a</p> \\[ \\begin{aligned} A \\leq_{p} B  \\;\\;\\Leftrightarrow\\;\\; &amp; \\exist f() \\text{ which runs in polynomial time}, \\\\ &amp; s.t.    \\;\\; \\forall x \\in A,\\; f(x) \\in B \\\\ &amp; \\text{and}\\; \\forall f(x) \\in B,\\; y \\in A \\end{aligned} \\] <p><code>\u5c06\u95ee\u9898A\u591a\u9879\u5f0f\u89c4\u7ea6\u5230\u95ee\u9898B\uff0c\u5219\u95ee\u9898A\u4e0d\u4f1a\u6bd4\u95ee\u9898B\u96be\u3002</code></p> <p><code>\u4e5f\u5c31\u662f\u8bf4\u95ee\u9898\u7684\u96be\u5ea6\u5c0f\u4e8e\u95ee\u9898B\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u603b\u662f\u5c06\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f52\u7ea6\u8f6c\u5316\u4e3a\u4e00\u4e2a\u8f83\u96be\u7684\u95ee\u9898</code></p> <p></p> <ul> <li>\u5982\u679c\u95ee\u9898B\u662fP\u95ee\u9898\uff0c\u90a3\u4e48\u95ee\u9898A\u4e5f\u662fP\u95ee\u9898\uff0c\u4e24\u8005\u90fd\u80fd\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u8fdb\u884c\u89e3\u51b3</li> <li>\u5982\u679cA\u662f\u4e00\u4e2aNP\u95ee\u9898\uff0c\u90a3\u4e48B\u4e5f\u662f\u4e00\u4e2aNP\u95ee\u9898</li> </ul> <p>if\\(L_1 \\leq_p L_2\\),\u8bf4\u660e\u95ee\u9898L1\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u662f\u53ef\u4ee5\u5f52\u7ea6\u5230\\(L2\\)\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cL2\u5982\u679c\u662fP\uff08\u591a\u9879\u5f0f\u53ef\u89e3\u7684\uff09\uff0c\u90a3\u4e48L1\u4e5f\u662fP\u95ee\u9898\uff08\u591a\u9879\u5f0f\u53ef\u89e3\u7684\uff09\u3002</p> <p>L2\u5982\u679c\u662fNP\u95ee\u9898\uff08\u591a\u9879\u5f0f\u53ef\u9a8c\u8bc1\uff09\uff0c\u90a3\u4e48\u8981\u9a8c\u8bc1L1\u7684\u4e00\u4e2a\u89e3\u662f\u5426\u6b63\u786e\uff0c\u5c31\u8981\u5148\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u5c06L1\u7684\u8fd9\u4e2a\u89e3\u8f6c\u5316\u4e3aL2\u7684\u4e00\u4e2a\u89e3\uff0c\u7136\u540e\u518d\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1L2\u7684\u8fd9\u4e2a\u89e3\u662f\u5426\u6b63\u786e\uff0c\u56e0\u6b64L1\u4e5f\u662fNP\u95ee\u9898</p> <p><code>example\uff1a\u5047\u8bbe\u6211\u4eec\u5df2\u77e5 Hamilton Cycle Problem \u95ee\u9898\u662f\u4e00\u4e2a NPC \u95ee\u9898\uff0c\u5c1d\u8bd5\u901a\u8fc7\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\ud83d\udd0d\u7684\u65b9\u5f0f\u6765\u8bc1\u660e TSP \u4e5f\u662f\u4e00\u4e2a NPC \u95ee\u9898\u3002</code></p> <p>Suppose that we already know that the Hamiltonian cycle problem is NP-complete.  Prove that the traveling salesman problem is NP-complete as well.   </p> <ul> <li> <p>Hamiltonian cycle problem: Given a graph\\(G=(V, E)\\), <code>is there</code> a simple cycle that visits all vertices?                 </p> </li> <li> <p>Traveling salesman problem: Given a complete graph\\(G=(V, E),\\)with edge costs, and an integer K, is there a simple cycle that visits all vertices and has total cost\\(&lt;=\\)K?</p> </li> </ul> <p>\u76ee\u6807\uff1a\u5c06\u54c8\u5bc6\u987f\u56de\u8def\u95ee\u9898\u5f52\u7ea6\u5230\u65c5\u884c\u8005\u95ee\u9898\uff08NPC-&gt;???\uff09</p> <p>\u5bf9\u6bd4 HCP \u548c TSP \u7684\u5dee\u5f02\u3002</p> <p>\u4ee5 HCP \u4e3a\u57fa\u7840\u63cf\u8ff0 TSP\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u4e00\u5f20\u5b8c\u5168\u56fe\u4e0a\u5bfb\u627e\u603b\u957f\u4e0d\u8d85\u8fc7\\(k\\)\u7684\u54c8\u5bc6\u987f\u73af\u8def\uff0c\u5177\u4f53\u6765\u8bf4\uff1a</p> HCP TSP \u56fe\\(G(V,E)\\) \u5b8c\u5168\u56fe\\(G'(V',E')\\) \u65e0\u8fb9\u6743 \u6709\u8fb9\u6743 - \\(\\sum v_i \\leq k\\) <p></p> <ol> <li>\u5148\u8bc1\u660eTSP\u95ee\u9898\u662fNP\u95ee\u9898\uff1a\u663e\u7136\u53ea\u9700\u8981\u9a8c\u8bc1\u7ed9\u5b9a\u7684\u7b54\u6848\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6\u5373\u53ef\uff0c\u91cd\u65b0\u8d70\u4e00\u904d\u5c31\u597d\u4e86,\u53ea\u9700\u8981\\(\ud835\udc42(\ud835\udc41)\\)\u7684\u5f00\u9500\u5c31\u80fd\u9a8c\u8bc1</li> <li>\u7531\u4e8eTSP\u95ee\u9898\u8981\u6c42\u662f\u5b8c\u5168\u56fe\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u6761\u8fb9\uff0c\u6211\u4eec\u73b0\u5728\u54c8\u5bc6\u987f\u95ee\u9898\u7684\u57fa\u7840\u4e0a\u8865\u5168\u56fe\uff0c\u5c06\u6ca1\u6709\u8fde\u7684\u8fb9\u90fd\u8fde\u8d77\u6765\uff0c\u6743\u91cd\u6807\u4e3a2\uff0c\u539f\u5148\u5df2\u7ecf\u5728\u7684\u6743\u91cd\u5c31\u6807\u4e3a1\uff0c\u5f97\u5230\u7684\u65b0\u56fe\u6807\u8bb0\u4e3a\\(G'\\)</li> <li>\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff1a\\(G\\)\u6709\u54c8\u5bc6\u987f\u56de\u8def\u5f53\u4e14\u4ec5\u5f53\\(G'\\)\u6ee1\u8db3TSP\u95ee\u9898\uff0c\u4e14\\(K = |V|\\)</li> <li>\u6240\u4ee5\u5982\u679c\u54c8\u5bc6\u987f\u56de\u8def\u95ee\u9898\u662fNPC\u95ee\u9898\uff0c\u90a3\u4e48TSP\u4e5f\u662f\u4e00\u4e2aNPC\u95ee\u9898(\u539f\u95ee\u9898\u4e3a\u5728\\(G\\)\u4e0a\u5bfb\u627e\u54c8\u5bc6\u987f\u73af\uff0c\u7b49\u4ef7\u4e8e\u5728\\(G' = f(G)\\)\u4e0a\u505a\\(K = |V|\\)\u7684 TSP\u3002\u7531\u6b64\u8bc1\u660e\\(\\text{HCP} \\leq_{p} \\text{TSP}\\))</li> </ol> <p>\u65c5\u884c\u5546\u95ee\u9898TSP\u5b58\u5728\u4e24\u79cd\u5b9a\u4e49\uff1a</p> <ol> <li> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b8c\u5168\u56fe\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u5b83\u7ecf\u8fc7\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6070\u597d\u4e00\u6b21\uff0c\u4e14\u6700\u540e\u56de\u5230\u8d77\u70b9\uff0c\u4e14\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u3002</p> <p>\u8be5\u7248\u672c\u7684 TSP \u95ee\u9898\u662f\u4e00\u4e2a NPH \u95ee\u9898\uff0c\u5e38\u5e38\u51fa\u73b0\u5728\u7ec4\u5408\u4f18\u5316\u7684\u8bed\u5883\u4e2d</p> </li> <li> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b8c\u5168\u56fe\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u5b83\u7ecf\u8fc7\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6070\u597d\u4e00\u6b21\uff0c\u4e14\u6700\u540e\u56de\u5230\u8d77\u70b9\uff0c\u4e14\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7\\(k\\)\u3002</p> <p>\u8be5\u7248\u672c\u7684 TSP \u95ee\u9898\u662f\u4e00\u4e2a NPC \u95ee\u9898\uff0c\u5e38\u5e38\u51fa\u73b0\u5728\u590d\u6742\u5ea6\u7406\u8bba\u7684\u8bed\u5883\u4e2d\u3002</p> </li> </ol>"},{"location":"ADS/10.%20NP-Completeness/#105-\u5f62\u5f0f\u5316\u8bed\u8a00","title":"10.5 \u5f62\u5f0f\u5316\u8bed\u8a00","text":""},{"location":"ADS/10.%20NP-Completeness/#1051-abstract-problem","title":"10.5.1 Abstract Problem","text":"<p>an abstract problem Q is a binary relation on a set I of problem instances and a set S of problem solutions.</p> <p>\u62bd\u8c61\u95ee\u9898 Q \u662f\u4e00\u7ec4\u95ee\u9898\u5b9e\u4f8b\u548c\u4e00\u7ec4\u95ee\u9898\u89e3 S \u4e0a\u7684\u4e8c\u5143\u5173\u7cfb\u3002</p> <p>example:</p> <ul> <li>For SHORTEST-PATH problem</li> </ul> <p>\\(I = { &lt;G, u, v&gt;: G=(V, E) \\ is \\ an \\  undirected \\ graph; u, v \\in V };\\) \\(S = { &lt;u, w_1, w_2, \u2026, w_k, v&gt;: &lt;u, w_1&gt;, \u2026, &lt;w_k, v&gt; \\in E }.\\)</p> <p>\\(For \\ every \\ i \\in I\\),\\(SHORTEST-PATH(i) = s \\in  S.\\)</p> <ul> <li>For decision problem PATH:</li> </ul> <p>\\(I = { &lt;G, u, v, k&gt;: G=(V, E) \\ is \\ an \\ undirected \\ graph; u, v \\in V; k \u2265 0 \\ is \\ an \\ integer };\\)</p> <p>\\(S = { 0, 1 }.\\) \\(For\\  every \\ i \\in I, PATH(i) = 1 \\ or \\ 0.\\)</p> <p></p> <p>\u5982\u679c\u4e24\u4e2a\u5f62\u5f0f\u5316\u8bed\u8a00\u8868\u793a\u95ee\u9898\u90fd\u662fP\u95ee\u9898\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u4ea4\u96c6\u3001\u95ed\u5305\u90fd\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u8fd8\u662fP\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8bf4P\u95ee\u9898\u5177\u6709\u5c01\u95ed\u6027</p> <p>\u90a3\u5982\u679c\u662fNP\u95ee\u9898\u5462\uff1f</p> <p></p> <p>\u5982\u679c\\(A(x) = 1\\)\uff0c\u5219\u7b97\u6cd5 A \u63a5\u53d7\u5b57\u7b26\u4e32\\(x \u2208 {0\uff0c 1}\\)</p> <p>\u5982\u679c\\(A(x) = 0\\)\uff0c\u5219\u7b97\u6cd5 A \u62d2\u7edd\u5b57\u7b26\u4e32 x</p> <p>\u5982\u679c L \u4e2d\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u90fd\u88ab A \u63a5\u53d7\uff0c\u5e76\u4e14 L \u4e2d\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u90fd\u88ab A \u62d2\u7edd\uff0c\u5219\u7b97\u6cd5 L \u7531\u7b97\u6cd5 A \u51b3\u5b9a</p> <p>\u8981\u63a5\u53d7\u4e00\u79cd\u8bed\u8a00\uff0c\u7b97\u6cd5\u53ea\u9700\u8981\u62c5\u5fc3 L \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u8981\u51b3\u5b9a\u4e00\u79cd\u8bed\u8a00\uff0c\u5b83\u5fc5\u987b\u6b63\u786e\u63a5\u53d7\u6216\u62d2\u7edd\\({0\uff0c 1}\\)\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32</p> <p></p> <p>\u9a8c\u8bc1\u7b97\u6cd5\u662f\u53cc\u53c2\u6570\u7b97\u6cd5 A\uff0c\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u662f\u666e\u901a\u8f93\u5165\u5b57\u7b26\u4e32 x\uff0c\u53e6\u4e00\u4e2a\u53c2\u6570\u662f\u79f0\u4e3a\u8bc1\u4e66\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 y\u3002</p> <p>\u5982\u679c\u5b58\u5728\u8bc1\u4e66 y\uff0c\u5219\u53cc\u53c2\u6570\u7b97\u6cd5 A \u9a8c\u8bc1\u8f93\u5165\u5b57\u7b26\u4e32 x\uff0c\u4f7f\u5f97\\(A\uff08x\uff0c y\uff09 = 1\u3002\\)</p> <p>\u9a8c\u8bc1\u7b97\u6cd5 A \u9a8c\u8bc1\u7684\u8bed\u8a00\u662f\\(L = { x \u2208 {0\uff0c 1} \uff1a \u5b58\u5728 y \u2208 {0\uff0c 1}\uff0c\u4f7f\u5f97 A(x\uff0c y) = 1}\u3002\\)</p> <p>\u521a\u521a\u6211\u4eec\u7814\u7a76\u5f97\u5230P\u95ee\u9898\u7684\u8865\u96c6\u4e5f\u5c5e\u4e8eP\u95ee\u9898</p> <p><code>\u73b0\u5728\u6211\u4eec\u7814\u7a76NP\u7684\u95ee\u9898\u7684\u8865\u96c6\u662f\u5426\u4e5f\u662fNP\u95ee\u9898\uff1f</code></p> <p></p> <p>\u5b9a\u4e49co-NP\u7684\u6761\u4ef6\u4e3a\\(L\\)\u7684\u8865\u96c6\\(\\overline L \\in NP\\)\uff0c\u4e00\u5171\u5b58\u5728\u4ee5\u4e0b\u56db\u79cd\u53ef\u80fd</p> <p>\u6839\u636eco-NP\u548cP\u7684\u5b9a\u4e49\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\\(P \\in NP\\)\u5e76\u4e14\\(P \\in\\)\\(co-NP\\)</p> <p>\u56e0\u4e3a\u5982\u679c\\(L \\in P\\), \u90a3\u4e48\\(\\overline L \\in P \\subseteq NP\\)\u7b26\u5408co-NP\u7684\u6761\u4ef6</p> <p>-\\(NP = co-NP\\)</p> <pre><code>1. \u82e5$P = NP$,\u6839\u636e$P$\u7684**\u5c01\u95ed\u6027**\u53ef\u5f97$L \\in P \\Leftrightarrow \\overline L \\in P$,\u53c8\u56e0\u4e3aco-NP\u6761\u4ef6\u4e3a$\\overline L \\in NP$,\u6240\u4ee5$P=NP=$co-NP\n\n2.$NP = co-NP, P \\in NP, P\\in co-NP$\n</code></pre> <p>-\\(NP != co-NP\\)</p> <pre><code>1.$P \\in NP \\cap co-NP$\n\n2.$P = NP \\cap co-NP$\n</code></pre> <p>\u5f62\u5f0f\u5316\u8bed\u8a00\u7684\u5f52\u7ea6</p> <p>A language\\(L1\\)is polynomial-time reducible to a language\\(L2\\)(\\(L1 \u2264_p L2\\)) if there exists a polynomial-time computable function\\(f : \\{0, 1\\} \u2192 \\{0,1\\}\\)such that for all\\(x \\{0, 1\\},  x \\in L1  \\ iff \\  f (x) \\in L2.\\)</p> <p>We call the function\\(f\\)the reduction function(\u5f52\u7ea6\u51fd\u6570), and a polynomial-time algorithm\\(F\\)that computes \\(f\\)is called a reduction algorithm\uff08\u5f52\u7ea6\u7b97\u6cd5\uff09.</p> <p>A language L \u2286 {0, 1}* is NP-complete if</p> <ol> <li>L  \u2208 NP, and</li> <li>\\(L' \u2264_p L \\ for \\ every L\u2019 \u2208 NP.\\)</li> </ol> <p></p> <p></p> <p>\u4f8b\u5b50\uff1a\u5c06\u9876\u70b9\u8986\u76d6\u95ee\u9898\u5f52\u7ea6\u5230clique problem\uff08\u5206\u56e2\u95ee\u9898\uff09</p> <p>\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5206\u56e2\u95ee\u9898\uff08clique problem\uff09\u662fNP\u5b8c\u5907\u7684\u3002 \u8bc1\u660e\u9876\u70b9\u8986\u76d6\u95ee\u9898\u4e5f\u662f NP \u5b8c\u5907\u7684\u3002</p> <ul> <li>Clique problem: Given an undirected graph\\(G = (V, E)\\)and an integer\\(K\\), does\\(G\\)contain a complete subgraph (clique) of (at least)\\(K\\)vertices?</li> </ul> <p><code>CLIQUE = { &lt;G, K&gt; : G is a graph with a clique of size K }.</code></p> <ul> <li>Vertex cover problem: Given an undirected graph\\(G = (V, E)\\)and an integer\\(K\\), does\\(G\\)contain a subset\\(V' \\subset V\\)such that\\(|V'|\\)is (at most)\\(K\\)and every edge in\\(G\\)has a vertex in\\(V'\\)(vertex cover)?</li> </ul> <p><code>VERTEX-COVER = { &lt;G, K&gt; : G has a vertex cover of size K }.</code></p> <p>\u8bc1\u660e\uff1a</p> <ol> <li> <p>VERTEX-COVER \u2208 NP</p> <p>Given any\\(x = &lt;G, K&gt;\\), take\\(V' \\subseteq  V\\)as the certificate\\(y.\\) Verification algorithm: check if\\(|V'| = K\\); check if for each edge\\((u, v) \u2208 E\\), that\\(u \u2208 V'\\)or\\(v \u2208 V'\\). </p> <p><code>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\u6bcf\u6761\u8fb9\u68c0\u6d4b\u662f\u5426\u6709\u9876\u70b9\u4f4d\u4e8eV\u2018\u4e2d\uff0c\u4e00\u5171\u6709N\u6761\u8fb9</code>\\(O(N \\times N \\times N = N^3)\\)</p> </li> <li> <p>CLIQUE\\(\u2264_p\\)VERTEX-COVER (<code>\u8bc1\u660e\u5206\u56e2\u95ee\u9898 no harder than\u9876\u70b9\u8986\u76d6\u95ee\u9898</code>)</p> <p>G has a clique of size K iff\\(\\overline G\\)has a vertex cover of size\\(|V| - K\\).</p> <p>\\(\\Rightarrow\\)</p> <ul> <li>\\(G\\)\u4e2d\u5b58\u5728\u5206\u56e2\u5b50\u96c6\\(V' \\subseteq V\\)\u5176\u5927\u5c0f\u4e3a\\(|V'| = K\\)\uff0c\u4ee4\u8fb9\\((u,v)\\)\u8868\u793a\u4e0d\u5728\\(E\\)\u4e2d\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u6839\u636e\\(V\\)\u5c06\u539f\u56fe\u8865\u5168\u6210\u5b8c\u5168\u56fe\u7684\u8fb9</li> <li>\u90a3\u4e48\u80af\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9\\(u/v\\)\u4e0d\u5728\\(V'\\)\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u4e8e\\(V - V'\\),\u6b64\u65f6\u521a\u597d\u8bf4\u660e\\(\\overline G\\)(\u539f\u56fe\u7684\u8865\u56fe)\u4e2d\u6bcf\u4e00\u6761\u8fb9\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u9876\u70b9\u5b58\u5728\u4e8e\\(V - V'\\)\u4e2d</li> <li>\u521a\u597d\u6ee1\u8db3\u9876\u76d6\u8986\u76d6\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\\(\\overline G\\)has a vertex cover of size\\(|V| - K\\).</li> </ul> <p>\\(\\Leftarrow\\)</p> <ul> <li>\u5df2\u77e5\u8865\u56fe\u6ee1\u8db3\u9876\u70b9\u8986\u76d6\uff0c\u5bf9\u4efb\u610f\u7684\u8fb9\\((u,v) \\notin E\\),\\(u \\in V'\\)\u6216\u8005\\(v \\in V'\\)</li> <li>\u90a3\u4e48\u5bf9\u4e8e\u540c\u65f6\u4e0d\u5728\\(V\u2019\\)\u7684\u70b9\u6784\u6210\u7684\u8fb9\\((u,v) \\in E\\),\u6240\u4ee5\\(V-V'\\)is a clique and it has size\\(|V|-|V'| = K.\\)</li> </ul> </li> </ol> <p></p>"},{"location":"ADS/10.%20NP-Completeness/#106-\u4e60\u9898\u96c6","title":"10.6 \u4e60\u9898\u96c6","text":"<ol> <li> <p>If\\(\ud835\udc3f1\u2264_p\ud835\udc3f2\\)and\\(\ud835\udc3f2\u2208\ud835\udc41\ud835\udc43\\), then\\(\ud835\udc3f1\u2208\ud835\udc41\ud835\udc43\\). (T/F)</p> <p><code>T</code>,\u8fd9\u91cc\u7684\\(\u2264_p\\)\u8868\u793ano harder than\uff0c \u5176\u5b9e\u662f\\(L_1\\)\u53ef\u4ee5\u591a\u9879\u5f0f\u5f52\u7ea6\u81f3\\(L_2\\),\u7531\u4e8e\\(L_2 \\in NP\\),\u90a3\u4e48\\(L_2\\)\u53ef\u4ee5\u5728\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u4e0a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u8303\u56f4\u5185\u89e3\u51b3\u95ee\u9898\uff0c\u6240\u4ee5\\(L_1\\)\u4e5f\u80fd\u591f\u5728\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u4e0a\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3</p> </li> <li> <p><code>All NP-complete problems are NP problems.</code></p> <p><code>T,\u6240\u6709\u7684NPC\u95ee\u9898\u90fd\u662fNP\u95ee\u9898.</code>NPC = NP\\(\\cap\\)NPH</p> </li> <li> <p>All the languages can be decided by a non-deterministic machine.</p> <p><code>F,\u5ffd\u7565\u4e86\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\u3002\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u80fd\u591f\u5904\u7406NP\u95ee\u9898\uff0c\u786e\u5b9a\u6027\u56fe\u7075\u673a\u80fd\u591f\u5904\u7406P\u95ee\u9898.</code>NPH\u95ee\u9898\u65e0\u6cd5\u4f7f\u7528\u4e0d\u786e\u5b9a\u6027\u56fe\u7075\u673a\u8fdb\u884c\u9a8c\u8bc1</p> </li> <li> <p>If a problem can be solved by dynamic programming, it must be solved in polynomial time.</p> <p><code>F,\u80cc\u5305\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u80fd\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u8fdb\u884c\u89e3\u51b3\uff0c\u539f\u56e0\u662f\u8f93\u5165\u7684\u6570\u636e\u4e0d\u662f\u591a\u9879\u5f0f\u7684</code></p> </li> <li> <p>all decidable problems are NP problems.</p> <p><code>F,\u4f46\u5e76\u975e\u6240\u6709\u7684decidable problems\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u89e3\uff0c\u8fd8\u5305\u62ecNPH\u95ee\u9898</code></p> </li> <li> <p>Among the following problems, __ is NOT an NP-complete problem.</p> <p>A.Vertex cover problem</p> <p>B.Hamiltonian cycle problem</p> <p>C.Halting problem</p> <p>D.Satisfiability problem</p> <p><code>C\u662f\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\uff0c\u9876\u70b9\u8986\u76d6\u95ee\u9898\u548c\u5206\u56e2\u95ee\u9898\uff08clique problem\uff09\uff0c\u54c8\u5bc6\u987f\u56de\u8def\u95ee\u9898\u548c\u65c5\u884c\u5546\u95ee\u9898\u3002D\u9009\u9879\u662f\u6700\u65e9\u53d1\u73b0\u7684NPC\u95ee\u9898</code></p> </li> <li> <p>Suppose\\(\ud835\udc44\\)is a problem in\\(\ud835\udc41\ud835\udc43\\), but not necessarily NP-complete. Which of the following is FALSE?</p> <p>A. A polynomial-time algorithm for SAT would sufficiently imply a polynomial-time algorithm for\\(\ud835\udc44\\).</p> <p><code>B. A polynomial-time algorithm for$\ud835\udc44$would sufficiently imply a polynomial-time algorithm for SAT.</code></p> <p>C. If\\(Q \\notin P\\), then \ud835\udc43\u2260\ud835\udc41\ud835\udc43.</p> <p>D. If \ud835\udc44 is NP-hard, then \ud835\udc44 is NP-complete.</p> </li> <li> <p></p> </li> <li> <p></p> </li> </ol>"},{"location":"ADS/11.%20Approximation/","title":"11. Approximation","text":"<p> \u7ea6 6740 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 34 \u5206\u949f</p> <p>\u5728\u4e0a\u4e00\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 P/NP \u95ee\u9898\uff0c\u800c\u5927\u5bb6\u666e\u904d\u8ba4\u4e3a P \u2260 NP\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5bf9\u4e8e\u67d0\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528\u591a\u9879\u5f0f\u65f6\u95f4\u89e3\u51b3\uff0c\u800c\u5728\u95ee\u9898\u89c4\u6a21\u53d8\u5927\u65f6\uff0c\u8d8a\u53d1\u4e0d\u53ef\u63a5\u53d7\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u80fd\u5426\u9000\u800c\u6c42\u5176\u6b21\uff0c\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u4e00\u4e2a\u6bd4\u8f83\u4f18\u7684\u89e3\u3002\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u5c1d\u8bd5\u5bfb\u627e\u4e00\u79cd\u591a\u9879\u5f0f\u7b97\u6cd5\uff0c\u4f7f\u5f97\u5176\u7ed3\u679c\u59cb\u7ec8\u5728\u5173\u4e8e\u6700\u4f18\u89e3\u7684\u53ef\u63a5\u53d7\u504f\u5dee\u8303\u56f4\u5185\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u7b97\u6cd5\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8fd1\u4f3c\u7b97\u6cd5(approximation algorithm)\u3002</p>"},{"location":"ADS/11.%20Approximation/#111-\u8fd1\u4f3c\u7b97\u6cd5","title":"11.1 \u8fd1\u4f3c\u7b97\u6cd5","text":"<p>\u6211\u4eec\u8bbe\\(f(n, x)\\)\u662f\u5bf9\u8f93\u5165\u5927\u5c0f\u4e3a\\(n\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u8ba1\u7b97\u7ed3\u679c\\(x\\)\u6240\u4ed8\u51fa\u4ee3\u4ef7Cost\u7684\u76f4\u89c2\u91cf\u5316\uff08\u4f8b\u5982 dist, weight...\uff09\uff0c\u82e5\u8bbe\\(x^*\\)\u4e3a\u6700\u4f18\u89e3\uff0c\\(x\\)\u4e3a\u7ed9\u5b9a\u7b97\u6cd5\u7ed3\u679c\uff0c\u5219\u6211\u4eec\u5b9a\u4e49\u8fd1\u4f3c\u6bd4(Approximation Ratio) \\(\\rho(n)\\)\uff1a</p> \\[ \\forall  \\rho(n) = \\max\\left\\{\\frac{f(n, x)}{f(n, x^*)}, \\frac{f(n, x^*)}{f(n, x)}\\right\\} \\] <p>\u5219\u79f0\u7ed9\u5b9a\u7b97\u6cd5\u4e3a\\(\\rho(n)\\)\u8fd1\u4f3c\u7b97\u6cd5(\\(\\rho(n)\\)-approximation algorithm)\u3002</p> <p><code>\"\u8fd1\u4f3c\u7b97\u6cd5 v.s. \u968f\u673a\u7b97\u6cd5\"</code></p> <p>\u5728\u770b\u5230\u8fd1\u4f3c\u7b97\u6cd5\u65f6\uff0c\u6211\u8111\u5b50\u91cc\u4e00\u4e0b\u5b50\u6d6e\u73b0\u51fa\u4e86\u968f\u673a\u7b97\u6cd5\u7684\u6982\u5ff5\uff0c\u540c\u6837\u662f\u6c42\u6700\u4f18\u89e3\u7684\u8fd1\u4f3c\u89e3\uff0c\u4e24\u8005\u6709\u4f55\u533a\u522b\u5462\uff1f</p> <p>\u8fd1\u4f3c\u7b97\u6cd5\u548c\u968f\u673a\u7b97\u6cd5\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\uff0c\u5f53\u6211\u4eec\u8bbe\u8ba1\u3001\u5206\u6790\u3001\u8ba8\u8bba\u8fd1\u4f3c\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u90fd\u662f\u5b83\u7684\u6700\u574f\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>\u8fd1\u4f3c\u7b97\u6cd5\u662f\u5b8c\u5168\u53ef\u63a7\u7684\uff0c\u800c\u7eaf\u7cb9\u7684\u968f\u673a\u7b97\u6cd5\u5219\u662f\u901a\u8fc7\u6982\u7387\u6765\u51cf\u5c11\u574f\u60c5\u51b5\u51fa\u73b0\u7684\u53ef\u80fd\uff0c\u5e76\u6ca1\u6709\u4e25\u683c\u7684\u7ea6\u675f\u3002</code>\u8fd1\u4f3c\u7b97\u6cd5\u6700\u574f\u4e5f\u5c31\u574f\u5230\\(\\rho\\)\uff0c\u800c\u968f\u673a\u7b97\u6cd5\u6700\u574f\u53ef\u4ee5\u574f\u5230\u6d77\u62c9\u9c81\u5927\u9646\u3002</p>"},{"location":"ADS/11.%20Approximation/#1111-\u8fd1\u4f3c\u8303\u5f0f","title":"11.1.1 \u8fd1\u4f3c\u8303\u5f0f","text":"<p>\u5b9a\u4e4911.1 \u5047\u8bbe\u6709\u67d0\u7c7b\u95ee\u9898\uff08\u4f8b\u5982\u80cc\u5305\u95ee\u9898\uff09\uff0c\u5176\u4e2d\u7684\u4e00\u4e2a\u5177\u4f53\u5b9e\u4f8b\u8bb0\u4e3aI\uff08\u5f53\u80cc\u5305\u95ee\u9898\u7684\u53c2\u6570\u7ed9\u5b9a\u7684\u65f6\u5019\u5373\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\uff09\uff0c\u4e14\u6709\u4e00\u4e2a\u590d\u6742\u5ea6\u4e3a\u591a\u9879\u5f0f\u7684\u8fd1\u4f3c\u7b97\u6cd5A\u3002\u5b9a\u4e49\uff1a</p> <p>\u2022 A(I) \u4e3a\u7b97\u6cd5A \u5728\u5b9e\u4f8bI \u4e0a\u5f97\u5230\u7684\u89e3\uff1b</p> <p>\u2022 OPT(I) \u4e3a\u5b9e\u4f8bI \u7684\u6700\u4f18\u89e3\u3002</p> <p>\u8003\u8651\u5230\u8be5\u7c7b\u95ee\u9898\u662f\u6700\u5c0f\u5316\u95ee\u9898\uff0c\u6240\u4ee5\u82e5\u5b58\u5728\\(r \\geq 1\\),\u5bf9\u4efb\u610f\u7684I\u90fd\u6709\\(A(I) \\leq r \\dot OPT(I)\\),\u90a3\u4e48\u79f0A\u4e3a\u8be5\u95ee\u9898\u7684r-\u8fd1\u4f3c\u7b97\u6cd5\uff0cr\u5c31\u662f\u8fd1\u4f3c\u6bd4</p> <p></p> <p>\u8fd1\u4f3c\u8303\u5f0f(approximation scheme)\u6307\u7684\u662f\u5bf9\u4e8e\u67d0\u4e2a\u4f18\u5316\u95ee\u9898\u7684\u4e00\u65cf\u76f8\u540c\u6a21\u5f0f\u7684\u7b97\u6cd5\uff0c\u5b83\u4eec\u6ee1\u8db3\u5bf9\u4e8e\u786e\u5b9a\u7684\\(\\epsilon &gt; 0\\)\uff0c\u7b97\u6cd5\u7684\u8fd1\u4f3c\u6bd4\u4e3a\\(1+\\epsilon\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u7b97\u6cd5A\uff0c\u4f7f\u5f97\u5bf9\u4efb\u610f\u7684\u5b9e\u4f8b\u90fd\u6709\\(A(I) \\leq (1+\\epsilon)OPT(I)\\)</p> <p>\u53ef\u4ee5\u7c97\u7cd9\u5730\u7406\u89e3\u4e3a\uff1a\u201c\u8303\u5f0f\u201d\u662f\u4e00\u4e2a\u8f93\u51fa\u4e3a\u7b97\u6cd5\u7684\u7279\u6b8a\u51fd\u6570\uff0c\u800c\\(\\epsilon\\)\u662f\u201c\u8303\u5f0f\u201d\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684\\(\\epsilon\\)\uff0c\u201c\u8303\u5f0f\u201d\u8f93\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u7b97\u6cd5\uff08\u8fd9\u4e9b\u7b97\u6cd5\u6709\u7740\u76f8\u540c\u7684\u6a21\u5f0f\uff09\uff0c\u800c\u8fd9\u4e9b\u201c\u8303\u5f0f\u201d\u8f93\u51fa\u7684\u7b97\u6cd5\uff0c\u90fd\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u4e14\u5bf9\u4e8e\u4efb\u610f\u56fa\u5b9a\u7684\\(\\epsilon\\)\u5176\u8fd1\u4f3c\u6bd4\u4e3a\\(1+\\epsilon\\)\u3002</p> <p>\u800c\u5173\u4e8e\\(\\epsilon &gt; 0\\)\u8fd9\u4e2a\u7ea6\u675f\uff0c\u662f\u56e0\u4e3a\u8fd1\u4f3c\u6bd4\u5fc5\u5b9a\u5927\u4e8e 1\u3002</p> <p>\u800c\u6b64\u65f6\uff0c\u8fd9\u4e00\u65cf\u7684\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u8868\u793a\u4e3a\\(O(f(n, \\epsilon))\\)\uff0c\u5982\\(O(n^{2/\\epsilon}), O((\\frac{1}{\\epsilon})^2n^3)\\)\u3002\u5f53\\(f(n, \\epsilon)\\)\u5173\u4e8e\\(n\\)\u662f\u591a\u9879\u5f0f\u65f6(\u4e5f\u5c31\u662f\u8bf4\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u4ee5\u95ee\u9898\u89c4\u6a21|I|\u7684\u591a\u9879\u5f0f\u4e3a\u4e0a\u754c)\uff0c\u6211\u4eec\u79f0\u5176\u4e3a<code>\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u8303\u5f0f(polynomial-time approximation scheme, PTAS)</code>\u3002\u5f53\\(f(n, \\epsilon)\\)\u5173\u4e8e\\(n\\)\u548c\\(\\frac{1}{\\epsilon}\\)\u90fd\u662f\u591a\u9879\u5f0f\u65f6\uff0c\u6211\u4eec\u79f0\u5176\u4e3a<code>\u5b8c\u5168\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u8303\u5f0f(fully polynomial-time approximation scheme, FPTAS)</code>\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8981\u533a\u5206 PTAS \u548c FPTAS \u5462\uff1f\u6211\u4eec\u89c2\u5bdf\\(\\epsilon\\)\u5bf9\u7b97\u6cd5\u7684\u5f71\u54cd\uff1a\u968f\u7740\\(\\epsilon\\)\u7684\u51cf\u5c0f\uff0c\u8fd1\u4f3c\u6bd4\u9010\u6e10\u53d8\u5c0f\uff0c\u5373\u51c6\u786e\u5ea6\u63d0\u9ad8\uff1b\u800c\\(\\dfrac{1}{\\epsilon}\\)\u53d8\u5927\uff0c\u800c\u901a\u5e38\u6765\u8bf4\\(\\dfrac{1}{\\epsilon}\\)\u4e0e\u7b97\u6cd5\u590d\u6742\u5ea6\u90fd\u662f\u6b63\u76f8\u5173\u7684\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u7b97\u6cd5\u590d\u6742\u5ea6\u5347\u9ad8(\u53ef\u80fd\u6307\u6570\u7ea7\u522b\u589e\u957f)\u3002</p> <ul> <li>\u5982\u679c\u8bf4\u8fd9\u4e2a\u8fd1\u4f3c\u8303\u5f0f\u662f FPTAS\uff0c\u90a3\u4e48\u4e3a\u4e86\u63d0\u9ad8\u51c6\u786e\u5ea6\u800c\u7f29\u5c0f\\(\\epsilon\\)\uff0c\u5bfc\u81f4\u7684\u590d\u6742\u5ea6\u53d8\u5316\u662f\u76f8\u5bf9\u53ef\u63a5\u53d7\u7684\uff08\u591a\u9879\u5f0f\u7ea7\u7684\u53d8\u5316\uff0c\u5982\\((\\dfrac{1}{\\epsilon})^2n^3\\)\u5173\u4e8e\\(\\dfrac{1}{\\epsilon}\\)\u662f\u591a\u9879\u5f0f\u7ea7\u7684\uff09\uff1b</li> <li>\u7136\u800c\u5982\u679c\u5b83\u4e0d\u662f FPTAS\uff0c\u90a3\u4e48\\(\\epsilon\\)\u7684\u7f29\u5c0f\u53ef\u80fd\u5e26\u6765\u6050\u6016\u7684\u590d\u6742\u5ea6\u589e\u52a0\uff08\u5982\\(n^{2/\\epsilon}\\)\u5173\u4e8e\\(\\epsilon\\)\u662f\u6307\u6570\u7ea7\u7684\uff09\u3002</li> </ul>"},{"location":"ADS/11.%20Approximation/#112-\u6848\u4f8b-approximate-bin-packing","title":"11.2 [\u6848\u4f8b] Approximate Bin Packing","text":"<p>\u88c5\u7bb1\u95ee\u9898\u6307\u7684\u662f\uff0c\u7ed9\u5b9a\\(N\\)\u4e2a item\uff0c\u7b2c\\(i\\in [1,N]\\)\u4e2a item \u7684 size \u4e3a\\(S_i \\in (0,1]\\)\uff0c\u4e00\u4e2a bin \u7684\u5927\u5c0f\u4e3a\\(1\\)\uff0c\u5c1d\u8bd5\u5bfb\u627e\u6700\u5c11\u7684\uff0c\u80fd\u591f\u88c5\u8f7d\u6240\u6709 item \u7684 bin \u7684\u6570\u91cf\u3002</p> <p>eg \"\ud83c\udf30 \u4f8b\u5b50\"\uff1a</p> <p>\u7ed9\u5b9a 7 \u4e2a item\uff0csize \u5206\u522b\u4e3a\\(0.2, 0.5, 0.4, 0.7, 0.1, 0.3, 0.8\\)\uff0c\u5219\u6700\u5c11\u9700\u8981 3 \u4e2a bin\uff08\u6700\u4f18\u89e3\uff09\uff1a</p> <pre><code>- bin 1:$0.2 + 0.8$;\n- bin 2:$0.7 + 0.3$;\n- bin 3:$0.4 + 0.1 + 0.5$;\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a NP hard \u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e09\u79cd\u8fd1\u4f3c\u89e3\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e09\u79cd\u90fd\u662f\u5728\u7ebf(online)\u89e3\u6cd5\uff0c\u5373\u5904\u7406\\(item_i\\)\u65f6\u6211\u4eec\u4e0d\u77e5\u9053\\(item_{i+1}\\sim item_{N}\\)\u7684\u60c5\u51b5\u3002\u4e4b\u540e\u6211\u4eec\u4f1a\u518d\u8ba8\u8bba\u79bb\u7ebf(offline)\u505a\u6cd5\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u77e5\u9053\u6240\u6709 item \u7684\u60c5\u51b5\u4ee5\u540e\u518d\u7ed9\u51fa\u7b56\u7565\u3002</p>"},{"location":"ADS/11.%20Approximation/#1121-online-next-fit-nf","title":"11.2.1 (online) Next Fit (NF)","text":"<p>NF \u7b56\u7565\u603b\u662f\u9009\u62e9\u5f53\u524d\u6700\u540e\u4e00\u4e2a bin\uff0c\u82e5\u80fd\u591f\u5bb9\u7eb3\uff0c\u5219\u5c06\u5f53\u524d item \u653e\u5165\u5176\u4e2d\uff0c\u5426\u5219\u65b0\u5f00\u4e00\u4e2a bin\u3002</p> <pre><code>void NextFit ( )\n{   \n    read item1;\n    while ( read item2 ) \n    {\n        if ( item2 can be packed in the same bin as item1 )\n            place item2 in the bin;\n        else\n            create a new bin for item2;\n        item1 = item2;\n    } /* end-while */\n}\n</code></pre> <p>\u3010Theorem\u3011 Let M be the optimal number of bins required to pack a list I of items.  Then next fit never uses more than 2M \u2013 1 bins.  There exist sequences such that next fit uses 2M  \u2013 1 bins.</p> <p>\u9006\u53cd\u547d\u9898\uff1aIf Next Fit generates 2M (or 2M+1) bins, then the optimal solution must generate at least M+1 bins.</p> <p>proof \uff1a</p> <p>\u6211\u4eec\u4ece NF \u7684\u7ed3\u679c\u51fa\u53d1\uff0c\u8bc1\u660e\u5f53 NF \u7684\u7ed3\u679c\u4e3a\u9700\u8981\\(2M+1\\)\u6216\\(2M\\)\u4e2a bin \u65f6\uff0c\u6700\u4f18\u89e3\u4e3a\u81f3\u5c11\u9700\u8981\\(M+1\\)\u4e2a bin\u3002</p> <p>\u5047\u8bbe\\(S(B_i)\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a bin \u7684 size\uff0c\u5219\u6839\u636e NF \u7684\u5b9a\u4e49\uff0c\u6709\uff1a\\(S(B_{i}) + S(B_{i+1}) &gt; 1\\)\uff08<code>\u53ea\u6709\u5f53\u7b2ci\u4e2abin\u88c5\u4e0d\u4e0b\u4e1c\u897f\u4e86\uff0c\u624d\u80fd\u542f\u7528\u7b2ci+1\u4e2abin\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b2ci\u4e2abin\u7684\u5269\u4f59\u7a7a\u95f4\u4e0d\u5141\u8bb8\u7b2ci+1\u4e2abin\u6240\u88c5\u7684\u7269\u54c1\u7684\u4f53\u79ef</code>\uff09\u3002\u6216\u8005\u4f7f\u7528\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\\(S(B_{i}) + S(B_{i+1}) \\leq 1\\)\uff0c\u8fd9\u8bf4\u660e\u65e0\u8bba\\(B_{i+1}\\)\u4e2d\u6709\u591a\u5c11 item\uff0c\u90fd\u4e00\u5b9a\u80fd\u653e\u8fdb\\(B_i\\)\uff0c\u800c\u8fd9\u4e0e NF \u201c\\(B_i\\)\u653e\u4e0d\u4e0b\u4e86\u624d\u5f00\u59cb\u653e\\(B_{i+1}\\)\u201d \u7684\u6027\u8d28\u76f8\u8fdd\u80cc\u3002\u4e8e\u662f\u6211\u4eec\u5c06\u6240\u6709\u6876\u4e24\u4e24\u914d\u5bf9\uff1a</p> <p>1.\u5f53 NF \u7684\u7ed3\u679c\u662f\u9700\u8981\\(2M\\)\u4e2a bin \u65f6\uff1a</p> \\[ \\left\\{ \\begin{aligned}     &amp;S(B_1) + S(B_2) &amp;&gt; 1 \\\\     &amp;S(B_3) + S(B_4) &amp;&gt; 1 \\\\     \\vdots \\\\     &amp;S(B_{2M-3}) + S(B_{2M-2}) &amp;&gt; 1 \\\\     &amp;S(B_{2M-1})+S(B_{2M}) &amp;&gt; 1 \\end{aligned} \\right. \\\\ \\begin{aligned}     &amp;\\therefore \\sum_{i=1}^{2M+1} &gt; \\sum_{i=1}^{2M} &gt; M \\\\     &amp;\\therefore \\sum_{i=1}^{2M} \\geq M+1 \\end{aligned} \\] <p>\u5373 item \u7684\u603b size \u81f3\u5c11\u4e3a M+1\uff0c\u5373\u6700\u4f18\u89e3\u81f3\u5c11\u9700\u8981\\(M+1\\)\u4e2a bin\u3002</p> <p>2.\u800c\u5f53 NF \u7684\u7ed3\u679c\u662f\u9700\u8981\\(2M+1\\)\u4e2a bin \u65f6\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\\(2M\\)\u7684\u60c5\u51b5\uff0c<code>\u663e\u71362M+1\u4e2abin\u6240\u88c5\u7269\u54c1\u7684\u4f53\u79ef\u5927\u4e8e2M\u4e2abin\u6240\u88c5\u7269\u54c1\u7684\u4f53\u79ef</code>\u3002</p> <p>Next Fit\u7684\u8fd1\u4f3c\u6bd4\u7ea6\u4e3a2\uff0c\u4e0a\u754c\u6765\u6e90\u4e8e\u4e0a\u65b9\u7684\u8ba1\u7b97\uff0c\\(\\rho = \\dfrac{A(I)}{OPT(I)} \\leq \\dfrac{2M+1}{M+1} \\approx 2\\)</p> <p>\u4e0b\u754c\u6765\u81ea\u5b9e\u4f8b\uff1a\u6240\u6709\u7684\u7269\u54c1\u5927\u5c0f\u4e3a\\(\\dfrac{1}{2},\\epsilon,\\cdots,\\dfrac{1}{2},\\epsilon\\),\u4e00\u5171\u6709m\u7ec4\\(\\dfrac{1}{2},\\epsilon\\),\u5176\u4e2d\\(\\epsilon\\)\u5145\u5206\u5c0f\uff0cm\u5145\u5206\u5927\uff0c\u90a3\u4e48NF\u7684\u89e3\u4e3am\uff0c\u6700\u4f18\u89e3\u4e3a\\(\\dfrac{m}{2}+1\\),\\(\\rho &gt; \\dfrac{m}{\\frac{m}{2}+1} \\approx 2\\)</p>"},{"location":"ADS/11.%20Approximation/#1122-online-first-fit-ff","title":"11.2.2 (online) First Fit (FF)","text":"<p>FF \u7b56\u7565\u603b\u662f\u9009\u62e9\u7b2c\u4e00\u4e2a\u80fd\u653e\u4e0b\u5f53\u524d item \u7684 bin\uff0c\u82e5\u6240\u6709 bin \u90fd\u65e0\u6cd5\u5bb9\u7eb3\u5f53\u524d item\uff0c\u5219\u65b0\u5f00\u4e00\u4e2a bin\u3002</p> <pre><code>void FirstFit ( )\n{   \n    while ( read item ) \n    {\n        scan for the first bin that is large enough for item;\n        if ( found )\n            place item in that bin;\n        else\n            create a new bin for item;\n    } /* end-while */\n}\n</code></pre> <p>\u3010Theorem\u3011Let M be the optimal number of bins required to pack a list I of items.  Then first fit never uses more than 17M / 10 bins.  There exist sequences such that first fit uses 17(M \u2013 1) / 10 bins.</p> <p>FF \u7b56\u7565\u603b\u662f\u4f7f\u7528\u4e0d\u8d85\u8fc7\\(\\lfloor 1.7M \\rfloor\\)\u4e2a bin\uff0c\u5e76\u4e14\u5b58\u5728\u4e00\u65cf\u80fd\u5bf9\u8fb9\u754c\u53d6\u7b49\u7684\u8f93\u5165\uff0c\u5176\u4e2d\\(M\\)\u8868\u793a\u6700\u4f18\u89e3\u7684 bin \u6570\u91cf\u3002</p>"},{"location":"ADS/11.%20Approximation/#1123-online-best-fit-bf","title":"11.2.3 (online) Best Fit (BF)","text":"<p>BF \u7b56\u7565\u603b\u662f\u9009\u62e9\u80fd\u591f\u5bb9\u7eb3\u5f53\u524d item \u4e14\u5269\u4f59\u7a7a\u95f4\u6700\u5c0f\u7684 bin\uff08\u5373 tightest\uff09\uff0c\u82e5\u6240\u6709 bin \u90fd\u65e0\u6cd5\u5bb9\u7eb3\u5f53\u524d item\uff0c\u5219\u65b0\u5f00\u4e00\u4e2a bin\u3002</p> <p>NF \u7b56\u7565\u4e5f\u603b\u662f\u4f7f\u7528\u4e0d\u8d85\u8fc7\\(\\lfloor 1.7M \\rfloor\\)\u4e2a bin\uff0c\u5e76\u4e14\u5b58\u5728\u4e00\u65cf\u80fd\u5bf9\u8fb9\u754c\u53d6\u7b49\u7684\u8f93\u5165\uff0c\u5176\u4e2d\\(M\\)\u8868\u793a\u6700\u4f18\u89e3\u7684 bin \u6570\u91cf\u3002</p> <p>\u770b\u4f3cBF\u6709\u6bd4FF\u66f4\u9ad8\u7684bin\u5229\u7528\u7387\uff0c\u4f46\u662f\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002</p> <p>\u8003\u8651\u4e0b\u97625 \u4e2a\u7269\u54c1\u7684\u5b9e\u4f8b\uff1a0.5\u30010.7\u30010.1\u30010.4\u30010.3\u3002\u6b64\u5b9e\u4f8bFF \u9700\u89812 \u4e2a\u7bb1\u5b50\uff0c\u800cBF \u5219\u9700\u89813 \u4e2a\uff1b\u8003\u8651\u4e0b\u97624 \u4e2a\u7269\u54c1\u7684\u5b9e\u4f8b\uff1a0.5\u30010.7\u30010.3\u30010.5\uff0c\u6b64\u5b9e\u4f8b\u7528FF \u9700\u89813 \u4e2a\u7bb1\u5b50\uff0c\u800cBF \u53ea\u9700\u89812 \u4e2a\u3002<code>\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e0d\u4f1a\u5b58\u5728\u201cBF \u603b\u6bd4FF \u597d\u201d \u6216\u8005\u201cFF \u603b\u6bd4BF\u201d \u597d\u7684\u7ed3\u8bba\u3002</code></p> <p></p> <p>\u6b64\u5916\uff0c\u5173\u4e8e\u5728\u7ebf\u505a\u6cd5(<code>\u5728\u5904\u7406\u5f53\u524ditem\u65f6\uff0c\u4e0d\u80fd\u5f97\u77e5\u540e\u9762\u7684item\u60c5\u51b5\u3002\u5e76\u4e14\u4e00\u65e6\u505a\u51fa\u51b3\u7b56\u4fbf\u65e0\u6cd5\u4fee\u6539</code>)\uff0c\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1aYou never know when the input might end.  No on-line algorithm can always give an optimal solution.</p> <p>\u3010Theorem\u3011There are inputs that force any on-line bin-packing algorithm to use at least 5/3 the optimal number of bins. </p> <p>\u5bf9\u4e8e\u88c5\u7bb1\u95ee\u9898\uff0c\u5982\u679c\u9650\u5b9a\u4f7f\u7528\u5728\u7ebf\u505a\u6cd5\uff0c\u5219\u6700\u4f18\u7684\u8fd1\u4f3c\u89e3\u6cd5\uff0c\u5176\u6700\u574f\u60c5\u51b5\u7684\u7ed3\u679c\u4e5f\u81f3\u5c11\u9700\u8981\u6700\u4f18\u89e3\u7684\\(\\frac{5}{3}\\)\u3002</p>"},{"location":"ADS/11.%20Approximation/#1124-offline-first-fit-decreasing-ffd","title":"11.2.4 (offline) First Fit Decreasing (FFD)","text":"<p>\u79bb\u7ebf\u505a\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u80fd\u591f\u83b7\u5f97\u6240\u6709 item \u7684\u4fe1\u606f\u4ee5\u6c42\u7edf\u7b79\u89c4\u5212\u3002</p> <p><code>solution: \u5c06 item \u6309\u7167 size \u964d\u5e8f\u6392\u5e8f\uff0c\u800c\u540e\u4f7f\u7528 FF\uff08\u6216 BF\uff0c\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u4e24\u8005\u7b49\u4ef7\uff09\u3002</code></p> <p>\u7ed9\u5b9a 7 \u4e2a item\uff08\u540c\u4e4b\u524d\u7684 \ud83c\udf30\uff09\uff0c\u7ecf\u8fc7\u6392\u5e8f\u540e\uff0c\u5b83\u4eec\u7684 size \u5206\u522b\u4e3a$0.8, 0.7, 0.5, 0.4, 0.3, 0.2, 0.1\uff0c\u5219\u6700\u5c11\u9700\u8981 3 \u4e2a bin\uff08\u6700\u4f18\u89e3\uff09\uff1a</p> <pre><code>- bin 1:$0.8 + 0.2$;\n- bin 2:$0.7 + 0.3$;\n- bin 3:$0.5 + 0.4 + 0.1$;\n</code></pre> <p>\u3010Theorem\u3011Let M be the optimal number of bins required to pack a list I of items.  Then first fit decreasing never uses more than\\(11M / 9 + 6/9\\)bins.  There exist sequences such that first fit decreasing uses\\(11M / 9 + 6/9\\)bins.</p> <p>proof\uff1a</p> <p>\u5047\u8bbe\u6240\u6709\u7684\u7269\u54c1\u4e3a\\(a_1 \\geq a_2 \\geq ... \\geq a_n &gt; 0\\), \u8003\u8651\u7b2c\\(j = \\lceil \\dfrac{2}{3}FFD(T) \\rceil\\)\u4e2abin\\(B_j\\)</p> <ul> <li> <p>\u5982\u679c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\\(a_i &gt; \\dfrac{1}{2}\\)\u7684\u7269\u54c1\uff0c\u90a3\u4e48\\(B_j\\)\u524d\u9762\u7684bin\u4e2d\u7269\u4f53\u7684\u4f53\u79ef\u90fd\u8d85\u8fc71/2\uff0c\u7531\u4e8e\u6392\u5728\\(a_i\\)\u524d\u9762\u7684\u7269\u4f53\u4f53\u79ef\u90fd\u8d85\u8fc7\u4e861/2\uff0c\u56e0\u6b64\u81f3\u5c11\u6709\\(j\\)\u4e2a\u4f53\u79ef\u8d85\u8fc7\\(\\dfrac{1}{2}\\)\u7684\u7269\u54c1\uff0c\u8fd9\u4e9b\u7269\u54c1\u88ab\u653e\u5728\u4e0d\u540c\u7684\u7bb1\u5b50\u91cc\uff0c\u4e8e\u662f</p> \\[ OPT(I) \\geq j \\geq \\dfrac{2}{3}FFD(I) \\] </li> <li> <p>\u82e5\u4e0d\u7136\uff0c\u4e5f\u5c31\u662f\u8bf4\\(B_j\\)\u4e2d\u6ca1\u6709\u4f53\u79ef\u8d85\u8fc71/2\u7684\u7269\u54c1\uff0c\u90a3\u4e48\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\\(B_{FFD(I)}\\)\uff0c\\(B_j\\)\u53ca\u5176\u4e4b\u540e\u7684\u7bb1\u5b50\u5185\u90fd\u81f3\u5c11\u6709\u4e24\u4e2a\u4f53\u79ef\u4e0d\u8d85\u8fc71/2\u7684\u7269\u54c1\u3002\u4e8e\u662f\u81f3\u5c11\u6709\\(2(FFD(I)-j)+1\\)\u4e2a\u7269\u54c1\u65e0\u6cd5\u653e\u5165\u524d\\(j-1\\)\u4e2a\u7bb1\u5b50\uff0c\u6240\u4ee5</p> \\[ \\begin{aligned} OPT(I) &amp;&gt; min\\{j-1,2(FFD(I)-j)+1\\}\\\\ &amp; &gt;min\\{\\lceil \\dfrac{2}{3}FFD(I)\\rceil -1, 2(FFD - (\\dfrac{2}{3}FFD + \\dfrac{2}{3})) + 1 \\}\\\\ &amp; = \\lceil \\dfrac{2}{3}FFD(I)\\rceil -1 \\end{aligned} \\] </li> </ul>"},{"location":"ADS/11.%20Approximation/#113-\u6848\u4f8b-knapsack-problem","title":"11.3 [\u6848\u4f8b] Knapsack Problem","text":"<p>\u80cc\u5305\u95ee\u9898(fractional version)\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5bb9\u91cf\u4e3a\\(M\\)\u7684\u80cc\u5305\uff0c\u4ee5\u53ca\\(N\\)\u4e2a item\uff0c\u7b2c\\(i\\)\u4e2a item \u7684\u91cd\u91cf\u4e3a\\(w_i\\)\uff0c\u5176\u5229\u6da6\u4e3a\\(p_i\\)\u3002\u5176\u4e2d\\(x_i\\)\u8868\u793a\u88c5\u5165\u7269\u54c1\u7684\u6bd4\u4f8b\uff08\u4e5f\u5c31\u8bf4\u4e00\u4e2aitem\u53ef\u4ee5\u62c6\u5206\u53ea\u5360\u4e00\u90e8\u5206\uff0c\u8fd9\u90e8\u5206\u7684\u5229\u6da6\u662f\\(p_ix_i\\)\uff09\uff0c\u8981\u6c42\u5728\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u5229\u6da6\u6700\u5927\u5316\u3002</p> <p>\u6839\u636e\u6bcf\u4e00\u4e2a\u7269\u54c1\u80fd\u5426\u81ea\u7531\u62c6\u5206\uff0c\u80cc\u5305\u95ee\u9898\u5206\u4e3a fractional version \u548c 0-1 version \u4e24\u7c7b\u3002</p>"},{"location":"ADS/11.%20Approximation/#1131-fractional-version","title":"11.3.1 Fractional Version","text":"<p>\u5982\u679c\u6211\u4eec\u8bb0\\(x_i\\in[0,1]\\)\u4e3a\u7b2c\\(i\\)\u4e2a item \u7684\u9009\u4e2d\u91cf\uff08\u5373\u5047\u8bbe item \u90fd\u662f\u8fde\u7eed\u53ef\u5206\u7684\uff09\uff0c\u5219\u7ea6\u675f\u6761\u4ef6\u53ef\u4ee5\u8868\u8ff0\u4e3a\\(\\sum_{i}^N w_ix_i \\leq M\\)\uff0c\u73b0\u5728\u6c42\\(\\sum_{i}^{N} p_ix_i\\)\u7684\u6700\u5927\u503c\u3002</p> <p>\u5047\u8bbe\u73b0\u5728\\(M = 20.0\\)\uff0c\u5e76\u4e14\\(N = 3\\)\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>item 1:\\(w_1 = 18.0, p_1 = 25.0\\); </li> <li>item 2:\\(w_2 = 15.0, p_2 = 24.0\\);</li> <li>item 3:\\(w_3 = 10.0, p_3 = 15.0\\);</li> </ul> <p>\u5219\u6700\u4f18\u89e3\u4e3a\\(x_1 = 0, x_2 = 1, x_3 = \\frac{1}{2}\\)\uff0c\u6b64\u65f6\\(\\sum_{i}^{N} p_ix_i = 31.5\\)\u3002</p> <p>\u7531\u4e8e\\(x_i\\in[0,1]\\)\uff0c\u975e\u5e38\u6734\u7d20\u7684\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u9009\u62e9\u201c\u6027\u4ef7\u6bd4\u201d\u9ad8\u7684\u7269\u54c1\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\\(\\dfrac{p_i}{w_i}\\)\uff08PPT \u79f0\u4e4b\u4e3a profit density\uff09\u964d\u5e8f\u6392\u5e8f\uff0c\u800c\u540e\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u9009\u62e9\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u4e3a\u6b62\u3002(\u8be5\u7b97\u6cd5\u5c31\u662f\u6700\u4f18\u89e3)</p>"},{"location":"ADS/11.%20Approximation/#1132-0-1-version","title":"11.3.2 0-1 Version","text":"<p>\u76f8\u8f83\u4e8e fractional version\uff0c0-1 version \u8981\u6c42\\(x_i \\in \\{0,1\\}\\)\uff0c\u6362\u53e5\u8bdd\u8bf4\u6bcf\u4e00\u4e2a\u7269\u54c1\u8981\u4e48\u9009\u8981\u4e48\u4e0d\u9009\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684 NPC \u95ee\u9898\uff0c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u8fd1\u4f3c\u7b97\u6cd5\u6765\u6c42\u8f83\u4f18\u89e3\u3002</p>"},{"location":"ADS/11.%20Approximation/#11321-\u8d2a\u5fc3\u505a\u6cd5","title":"11.3.2.1 \u8d2a\u5fc3\u505a\u6cd5","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u8d2a\u5fc3\u7b56\u7565\u53ef\u4ee5\u662f\u603b\u662f\u9009\u53ef\u4ee5\u653e\u5f97\u4e0b\u7684\u3001\u8fd8\u6ca1\u653e\u5165\u4e2d\u7684\uff0c\u5229\u6da6\u6700\u5927\u7684\u6216\\(\\frac{p_i}{w_i}\\)\u6700\u5927\u7684\u3002\u8fd9\u4e9b\u505a\u6cd5\u7684\u8fd1\u4f3c\u6bd4(approximation ratio)\u90fd\u662f 2\u3002     \u6211\u4eec\u7528\\(p_\\text{max}\\)\u8868\u793a\u6240\u6709 item \u4e2d\u6700\u5927\u7684\u5229\u6da6\uff0c\u7528\\(P_\\text{optimal}\\)\u8868\u793a\u6700\u4f18\u89e3\uff0c\\(P_\\text{greedy}\\)\u8868\u793a\u6211\u4eec\u4f7f\u7528\u8d2a\u5fc3\u505a\u6cd5\u5f97\u5230\u7684\u7b54\u6848\u3002\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u8fd1\u4f3c\u6bd4\u7684\u8ba1\u7b97\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[ \\rho = \\max(     \\frac{P_\\text{optimal}}{P_\\text{greedy}},     \\frac{P_\\text{greedy}}{P_\\text{optimal}} ) \\] <p>\u4e0b\u9762\u662f\u8bc1\u660e\u8fc7\u7a0b\uff1a</p> \\[ \\left\\{ \\begin{aligned}     &amp; p_\\text{max} \\leq P_\\text{opt} \\leq P_\\text{frac}   &amp;(1)\\\\     &amp; p_\\text{max} \\leq P_\\text{greedy} &amp; (2)\\\\     &amp; P_\\text{opt} \\leq P_\\text{frac} \\leq P_\\text{greedy} + p_\\text{max} &amp; (3) \\\\ \\end{aligned} \\right. \\] <p>\u5c06\\((2)\\)\u5f0f\u4e24\u4fa7\u540c\u9664\u4ee5\\(P_\\text{greedy}\\)\u5f97\uff1a</p> \\[ \\frac{p_\\text{max}}{P_\\text{greedy}} \\leq 1 \\quad (4) \\] <p>\u5c06\\((3)\\)\u5f0f\u4e24\u4fa7\u540c\u9664\u4ee5\\(P_\\text{greedy}\\)\uff0c\u5e76\u4ee3\u5165\\((4)\\)\u5f97\uff1a</p> \\[ \\frac{P_\\text{optimal}}{P_\\text{greedy}} \\leq 1 + \\frac{p_\\text{max}}{P_\\text{greedy}} \\leq 2 \\] \\[ p_\\text{max} \\leq P_\\text{greedy} \\leq P_\\text{optimal} \\leq P_\\text{frac} \\] <p>\u5176\u4e2d\\(P_\\text{frac}\\)\u6307\u7684\u662f\u540c\u6837\u7684\u6570\u636e\u4e0b fractional version \u7684\u7b54\u6848\u3002</p> <p>\u8865\u5145\u7ed3\u8bba\uff1a\u80cc\u5305\u95ee\u9898\u5177\u6709 FPTAS\u3002</p>"},{"location":"ADS/11.%20Approximation/#11322-\u52a8\u6001\u89c4\u5212\u505a\u6cd5","title":"11.3.2.2 \u52a8\u6001\u89c4\u5212\u505a\u6cd5","text":"<p>\\(W_{i,p} = \\text{the minimum weight of a collection from } \\{1, \u2026, i\\} \\text{ with total profit being  exactly } p\\)</p> <ul> <li>take i:\\(W_{i,p} = w_i + W_{i-1,p-p_i}\\)</li> <li>skip i:\\(W_{i,p} = W_{i-1,p}\\)</li> <li>impossible to get p:\\(W_{i,p} = \\infin\\)</li> </ul> \\[ W_{i,p} = \\left\\{ \\begin{aligned}     &amp;\\infty &amp;&amp; i = 0 \\\\     &amp;W_{i-1, p} &amp;&amp; p_i &gt; p \\\\     &amp;\\min\\{W_{i-1, p}, w_i + W_{i-1, p-p_i}\\} &amp;&amp; otherwise         \\end{aligned} \\right.\\\\ i = 1, ..., n; p = 1, ..., n\\cdot p_\\text{max} \\Rightarrow O(n^2p_\\text{max}) \\] <p><code>\u7531\u4e8ep_i &gt; p, \u5982\u679c\u5c06item i \u653e\u5165\u80cc\u5305\uff0c\u5229\u6da6\u5c31\u5927\u4e8e\u6307\u5b9a\u7684 p \u4e86\uff0c\u6240\u4ee5\u8981\u8df3\u8fc7item i\u3002\u5bf9\u4e8eotherwise\u60c5\u51b5\uff0c\u663e\u7136\u6211\u5e0c\u671b\u6c42\u7684\u662f\u76f8\u540c\u5229\u6da6\u4e0b\u7269\u54c1\u7684\u91cd\u91cf\u6700\u5c0f\uff0c\u8fd9\u6837\u624d\u80fd\u88c5\u6700\u5927\u4ef7\u503c\u7684\u7269\u54c1</code></p> <p>\u5982\u679c\\(p_\\text{max}\\)\u5f88\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u5b83\u4eec\u8fd1\u4f3c\u53d6\u6574\uff0c\u7c7b\u4f3c\u4e8e\u5c06\u6d6e\u70b9\u6570\u5411\u4e0a\u53d6\u6574\u3002</p> <p></p> <p>warning \"\u6ce8\u610f\"</p> <p>\u8fd9\u91cc\u8ba8\u8bba\u7684\u80cc\u5305\u95ee\u9898\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u70b9\u5c31\u662f\uff0c\u5bb9\u91cf\u548c\u5229\u6da6\u90fd\u662f\u5b9e\u6570\uff0c\u66f4\u76f4\u767d\u7684\u6765\u8bf4\uff0c\u4f60\u6ca1\u529e\u6cd5\u901a\u8fc7\u5c06\u5bb9\u91cf\u6216\u5229\u6da6\u4f5c\u4e3a\u72b6\u6001\u6765 dp \u6c42\u6700\u4f18\u89e3\u3002<code>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u8ff0\u8ba1\u7b97\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(N^2 P_max),\u5176\u4e2dp_{max}\u662f\u672a\u77e5\u91cf\u53ef\u4ee5\u65e0\u7a77\u5927\uff0c\u6307\u6570\u7ea7\u522b\uff0c\u8fd9\u6837\u5c31\u4e0d\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u4e86</code></p>"},{"location":"ADS/11.%20Approximation/#114-\u6848\u4f8b-the-k-center-problem","title":"11.4 [\u6848\u4f8b] The K-center Problem","text":"<p>\uff08\u4e8c\u7ef4\uff09K \u4e2d\u5fc3\u95ee\u9898\u6307\uff1a\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684\u4e00\u7cfb\u5217 site\uff08\u5373\u70b9\uff09\uff0c\u5728\u5e73\u9762\u4e2d\u627e\u51fa\\(k\\)\u4e2a\u4e0d\u540c\u7684 center\uff0c\u8bb0\\(site_i\\)\u5230\u79bb\u5b83\u6700\u8fd1\u7684 center \u7684\u8ddd\u79bb\u4e3a\\(dis_i\\)\uff0c\u6c42\\(\\max \\{dis_i\\}\\)\u7684\u6700\u5c0f\u503c\u3002     \u8bbe\\(C = \\{c_1, c_2, ..., c_k\\}\\)\u4e3a\\(k\\)\u4e2a center\uff0c\\(S = \\{s_1, s_2, ..., s_n\\}\\)\u4e3a\\(n\\)\u4e2a site\uff0c\u6211\u4eec\u5b9a\u4e49 site \u5230\u5173\u4e8e center \u7684\u96c6\u5408\\(C\\)\u7684\u8ddd\u79bb\u4e3a\uff1a $$ dis(s_i, C) = \\min_{c_i\\in C} { dis(s_i, c_i) } $$</p> <p>\u5373\\(s_i\\)\u5230\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684 center \u7684\u8ddd\u79bb\u3002</p> <p>\u5b9a\u4e49\u6700\u5927\u7684\u6700\u5c0f\u8986\u76d6\u534a\u5f84\u4e3a\uff1a</p> \\[ r(C) = \\max_{s_i\\in S} \\{ dis(s_i, C) \\} \\\\ \\] <p>\u73b0\u5728\u8981\u5bfb\u627e\u4e00\u4e2a\\(C\\)\u4f7f\u5f97\\(r(C)\\)\u6700\u5c0f\uff08\\(|C| = k\\)\uff09\u3002</p> <p>\u5e73\u9762\u7684\u95ee\u9898\u6211\u4eec\u5c31\u7528\u5e73\u9762\u7684\u601d\u8def\u6765\u770b\uff0c\u5c31\u662f\u4e00\u4e2a\u5e73\u9762\u4e0a\u6709\u4e00\u5806\u70b9\uff0c\u73b0\u5728\u6211\u8981\u5728\u4e0a\u9762\u627e\\(k\\)\u4e2a\u4e2d\u5fc3\u53bb\u753b\u5706\uff0c\u4f7f\u5f97\u8fd9\\(k\\)\u4e2a\u5706\u80fd\u8986\u76d6\u6240\u6709\u7684\u70b9\u3002\u73b0\u5728\u8981\u6c42\u6700\u5927\u7684\u90a3\u4e2a\u5706\u7684\u534a\u5f84\u6700\u5c0f\u80fd\u591a\u5c0f\u3002</p>"},{"location":"ADS/11.%20Approximation/#1141-naive-greedy","title":"11.4.1 Naive Greedy","text":"<p>\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u9009\u62e9\u6700\u53ef\u80fd\u6210\u4e3a\u4e2d\u5fc3\u7684\u90a3\u4e2a\u70b9\uff0c\u5177\u4f53\u6765\u8bf4\uff1a</p> <ol> <li>\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u70b9\uff0c\u5c31\u9009\u53d6\u6240\u6709\u70b9\u7684\u4e2d\u5fc3\uff1b</li> <li>\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u4e2a\u70b9\uff0c\u5c31\u9009\u53d6\u80fd\u4e00\u4e2a\u6700\u80fd\u8ba9\\(r(C)\\)\u4e0b\u964d\u7684\uff1b</li> </ol> <p>\u8fd9\u4e2a\u505a\u6cd5\u7684 bug \u6bd4\u8f83\u5927\uff0c\u5047\u8bbe\u6211\u4eec\u7684\u70b9\u662f\u805a\u7c7b\u975e\u5e38\u660e\u663e\u7684\u4e24\u4e2a\u70b9\u4e91\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u70b9\u5c31\u4f1a\u843d\u5728\u4e24\u4e2a\u70b9\u4e91\u4e4b\u95f4</p> <p>\u6ce8\u610f\uff0c\u968f\u7740 center \u7684\u589e\u52a0\uff0c\u539f\u6765\u4ee5\\(c_i\\)\u4e3a center \u7684 site \u5f88\u53ef\u80fd\u4ee5\u6700\u65b0\u63d2\u5165\u7684\\(c_j\\)\u4e3a center\u3002</p>"},{"location":"ADS/11.%20Approximation/#1142-2r-greedy","title":"11.4.2 2r-Greedy","text":"<p>\u65e2\u7136\u6b63\u5411\u505a\u5f88\u56f0\u96be\uff0c\u90a3\u6211\u4eec\u80fd\u4e0d\u80fd\u53cd\u7740\u505a\u5462\uff1f\u6709\u4e00\u79cd\u5957\u8def\u53eb\u4e8c\u5206\u7b54\u6848\uff0c\u5373\u5148\u731c\u7b54\u6848\uff0c\u518d\u9a8c\u8bc1\u662f\u5426\u662f\u7b54\u6848\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\u6211\u4eec\u53ef\u4ee5\u8fc1\u79fb\u8fd9\u4e2a\u601d\u60f3\uff0c\u5373\u5148\u731c\u4e00\u4e2a\\(r\\)\uff0c\u7136\u540e\u5c1d\u8bd5\u7528\\(k\\)\u4e2a\u534a\u5f84\u4e3a\\(r\\)\u7684\u5706\u53bb\u8986\u76d6\u5269\u4e0b\u7684\u6240\u6709\u70b9\u3002</p> <p>\u66f4\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u5047\u8bbe\u6700\u4f18\u89e3\u5bf9\u5e94\u7684\u4e00\u4e2a center \u96c6\u5408\u4e3a\\(C^*\\)\uff0c\u90a3\u4e48\\(\\forall r(C_x) \\geq r(C^*)\\)\u7684\\(C_x\\)\u90fd\u5fc5\u5b9a\u5b58\u5728\u8986\u76d6\u65b9\u6848\uff1b\u53cd\u8fc7\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u9a8c\u8bc1\u5bf9\u4e8e\\(C_x\\)\u80fd\u591f\u8986\u76d6\u6240\u6709\u7684\u70b9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ea6\u675f\u6700\u4f18\u89e3\\(r(C^*) \\leq r(C_x)\\)\u3002</p> <p>success \"hint: \u8fd1\u4f3c\u7b97\u6cd5\"</p> <p>\u4e8e\u662f\u6211\u4eec\u7684\u8fd1\u4f3c\u7b97\u6cd5\u5c31\u53ef\u4ee5\u5927\u5c55\u62f3\u811a\u4e86\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u91cc\u6240\u8c13\u7684\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u6307\u7684\u662f\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6c42\u89e3\\(r(C)\\)\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u800c\u975e\u5224\u65ad\\(k\\)\u4e2a\u534a\u5f84\u4e3a\\(r\\)\u7684\u5706\u80fd\u5426\u8986\u76d6\u6240\u6709\u70b9\u7684\u7b97\u6cd5\u3002\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff01</p> <p></p> <p>\u9996\u5148\uff0c\u6211\u4eec\u518d\u6b21\u68b3\u7406\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u5b83\u5305\u542b\u5185\u5916\u4e24\u5c42\uff0c\u9996\u5148\u5916\u90e8\u901a\u8fc7\u5728\u7b54\u6848\u7684\u5019\u9009\u533a\u95f4\uff08\u5373\\((0, r_\\text{max}]\\)\uff0c\\(r_\\text{max}\\)\u4e3a\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff09\u4e8c\u5206\u5019\u9009\u503c\uff0c\u63a5\u7740\u901a\u8fc7\u5224\u5b9a\u7b97\u6cd5\u6765\u5224\u5b9a\u63a5\u4e0b\u6765\u7684\u4e8c\u5206\u65b9\u5411\u3002\u521d\u59cb\u72b6\u6001\u7684\\(r_x = (0 + r_{max})/2\\)\uff0c\u5176\u4e2d\\(r_{max}\\)\u5728\u5b9e\u65f6\u8ba1\u7b97\uff0c\\(r_x\\)\u4e5f\u5728\u5b9e\u65f6\u8ba1\u7b97</p> <p>\u8bbe\\(C_x\\)\u8868\u793a\u9009\u4e2d\u7684 center\uff0c\\(S_x\\)\u8868\u793a\u5c1a\u672a\u88ab\u4efb\u4f55\u5706\u8986\u76d6\u7684 site\uff0c\\(r_x\\)\u8868\u793a\u5f53\u524d\u4e8c\u5206\u51fa\u6765\u7684\uff0c\u8981\u6211\u4eec\u5224\u65ad\u7684\u534a\u5f84\uff0c\\(S\\)\u4f9d\u7136\u8868\u793a\u6240\u6709 site \u7684\u96c6\u5408\uff1a</p> <ol> <li>\u521d\u59cb\u5316\\(C_x = \\emptyset\\)\uff1b</li> <li>\u5f53\\(S_x \\not = \\emptyset\\)\u65f6\uff08\u5373\u8fd8\u6709\u70b9\u6ca1\u88ab\u8986\u76d6\u65f6\uff09\uff0c\u91cd\u590d\u8fd9\u4e9b\u64cd\u4f5c\uff1a<ol> <li>\u968f\u673a\u9009\u53d6\u4e00\u4e2a site\\(s_i \\in S_x\\)\uff0c\u5c06\u5176\u63d2\u5165\\(C_x\\)\uff08\u5373\u5c06\\(s_i\\)\u5f53\u4f5c\u4e00\u4e2a center\uff09\uff0c\u5e76\u4ece\\(S_x\\)\u4e2d\u5c06\\(s_i\\)\u5220\u9664\uff08\u5373\\(s_i\\)\u5fc5\u5b9a\u88ab\u8986\u76d6\uff09\uff1b</li> <li>\u5220\u9664\\(S_x\\)\u4e2d\u6240\u6709\u8ddd\u79bb\\(s_i\\)\u4e0d\u8db3\\(r_x\\)\u7684\u70b9\uff08\u5373\u5220\u9664\u6ee1\u8db3\\(dis(s_i, s_j) \\leq r_x\\)\u7684\u6240\u6709\\(s_k \\in S_x\\)\uff09\uff1b</li> </ol> </li> <li>\u5f53\u6240\u6709\u70b9\u90fd\u88ab\u8986\u76d6\u540e\uff1a<ol> <li>\u5982\u679c\\(|C_x| \\leq k\\)\uff0c\u5219\u8fd4\u56de yes\uff1b</li> <li>\u5426\u5219\u8fd4\u56de no\uff1b</li> </ol> </li> </ol> <p>\u5982\u679c\u8fd4\u56de yes\uff0c\u5219\u4e0b\u4e00\u4e2a\\(r_x\\)\u5e94\u5f53\u53d6\u66f4\u5c0f\u7684\\(r_x\\)\uff1b\u5982\u679c\u8fd4\u56de no\uff0c\u4e0b\u4e00\u6b21\u5e94\u8be5\u53d6\u66f4\u5927\u7684\\(r_x\\)\u3002</p> <p>\u73b0\u5728\u5bf9\u5176\u505a\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002\u8fd9\u662f\u4e00\u4e2a\u542f\u53d1\u5f0f\u7684\u505a\u6cd5\uff0c\u65e8\u5728\u6bcf\u6b21\u5bfb\u627e\u8fd8\u6ca1\u88ab\u8986\u76d6\u7684\u70b9\u4f5c\u4e3a\u65b0\u7684 center\uff0c\u7528\u4e00\u4e2a\u534a\u5f84\u4e3a\\(2r_x\\)\u7684\u5706\u53bb\u8986\u76d6\u5269\u4e0b\u7684\u70b9(<code>\u8981\u60f3\u8986\u76d6\u6240\u6709\u7684\u70b9\uff0c\u5fc5\u987b\u91c7\u7528\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u4f5c\u4e3a\u534a\u5f84\uff0c\u540c\u65f6</code>2\\(r_x = r_{max}\\))\u3002\u901a\u8fc7\u5224\u65ad\u8fd9\u6837\u6240\u9700\u8981\u7684 center \u6570\u91cf\u662f\u5426\u8d85\u8fc7\\(k\\)\u6765\u5224\u65ad\u662f\u5426\u80fd\u591f\u8986\u76d6\u3002\u63a5\u4e0b\u6765\u5f88\u7ed5\uff0c\u8bf7\u4e00\u6b65\u4e00\u6b65\u7684\u770b\uff1a</p> <ol> <li>\u5f53\u8fd9\u4e2a\u542f\u53d1\u5f0f\u641c\u7d22\u6210\u529f\u65f6\uff0c\u8bf4\u660e\\(2r_x \\geq r(C^*)\\)\uff0c\u5373\\(k\\)\u4e2a\\(2r_x\\)\u7684\u5706\u53ef\u4ee5\u8986\u76d6\u6240\u6709\u70b9\uff1b</li> <li>\u5f53\u8fd9\u4e2a\u542f\u53d1\u5f0f\u641c\u7d22\u5931\u8d25\u65f6\uff0c\u4e0d\u80fd\u8bf4\u660e\\(2r_x \\geq r(C^*)\\)\uff0c\u5373\\(k\\)\u4e2a\\(2r_x\\)\u7684\u5706\u4e0d\u80fd\u8986\u76d6\u6240\u6709\u70b9\uff0c\u56e0\u4e3a\u542f\u53d1\u5f0f\u65b9\u6848\u5e76\u4e0d\u662f\u6700\u4f18\u65b9\u6848\uff1b\u4f46\u662f\u80fd\u8bf4\u660e\u5fc5\u5b9a\u4e0d\u5b58\u5728\\(r_x\\)\u7684\u8986\u76d6\uff0c\u5373\\(r_x \\leq r(C^*)\\)\uff08\u8bc1\u660e\u89c1\u4e0b\u65b9 lemma\uff09\uff1b</li> </ol> <p>property \"lemma    </p> <p>\u5047\u8bbe\u534a\u5f84\u4e3a\\(r\\)\uff0c\u4ee5\\(c\\)\u4e3a\u5706\u5fc3\u7684\u5706\\(C\\)\u8986\u76d6\u4e86\\(S\\)\u4e2d\u7684\u6240\u6709\u70b9\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684\u534a\u5f84\\(r'\\)\uff0c\u8981\u60f3\u53d6\u4efb\u610f\u7684\\(s_i \\in S\\)\u4e3a\u5706\u5fc3\uff0c\u5f62\u6210\u7684\u5706\\(C_i\\)\uff0c\u603b\u662f\u80fd\u8986\u76d6\\(S\\)\u4e2d\u7684\u6240\u6709\u70b9\uff0c\u5219\\(r' \\geq 2r\\)\u3002</p> <p>\u8bc1\u660e\u7684\u5173\u952e\u662f\u8003\u8651\u4e24\u70b9\u5206\u5e03\u5728\u76f4\u5f84\u4e24\u7aef\u7684\u60c5\u51b5\u3002    </p> <p>\u8fd9\u4e2a\u5f15\u7406\u7684\u9644\u52a0\u7ed3\u8bba\u5c31\u662f\uff1a\\(\\forall i \\quad C \\subset C_i\\) </p> <p>\u5373\u4ee5\\(r\\)\u4e3a\u534a\u5f84\u7684\u6700\u4f18\u8986\u76d6\u5706\uff0c\u4e00\u5b9a\u80fd\u88ab\u4ee5\u4efb\u610f\\(s_i\\)\u4e3a\u5706\u5fc3\u3001\\(2r\\)\u4e3a\u534a\u5f84\u7684\u5706\u6240\u8986\u76d6\u3002</p> <p></p> <p>\u5f53\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5904\u4e8e\u60c5\u51b5 <code>1.</code> \u65f6\uff0c\u6211\u4eec\u5f00\u5fc3\u7684\u53d1\u73b0\u6211\u4eec\u786e\u5b9e\u5f97\u5230\u4e86\u4e00\u4e2a\u8ddd\u79bb\\(r(C^*)\\)\u66f4\u8fd1\u7684\u4e0a\u754c\\(2r_x\\)\uff0c\u7531\u4e8e\u4e8c\u5206\u7684\u6027\u8d28\uff0c\u6211\u4eec\u6bcf\u6b21\u901a\u8fc7 <code>1.</code> \u786e\u5b9a\u7684\u4e0a\u754c\uff0c\u603b\u662f\u8d8a\u6765\u8d8a\u7d27\u7684\u3002</p> <p>\u5f53\u6211\u4eec\u5904\u4e8e\u60c5\u51b5 <code>2.</code> \u65f6\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\\(2r_x\\)\u548c\\(r(C^*)\\)\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4f46\u662f\u77e5\u9053\\(r_x\\)\u548c\\(r(C^*)\\)\u7684\u5173\u7cfb\uff0c\u7531\u4e8e\u4e8c\u5206\u7684\u6027\u8d28\uff0c\u6211\u4eec\u6bcf\u6b21\u901a\u8fc7 <code>2.</code> \u786e\u5b9a\u7684\u4e0b\u754c\uff0c\u4e5f\u603b\u662f\u8d8a\u6765\u8d8a\u7d27\u7684\u3002     \u800c\u6700\u7ec8\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u6700\u7ec8\u7684\\(r_{x_0}\\)\uff0c\u6ee1\u8db3\uff1a\\(r_{x_0} \\leq r(C^*) \\leq 2r_{x_0}\\)\uff08\u5f0f\u4e2d\u54ea\u8fb9\u80fd\u53d6\u7b49\u53d6\u51b3\u4e8e\u6700\u540e\u843d\u5728 <code>1.</code> \u8fd8\u662f <code>2.</code>\uff09\u3002</p> <p>\u800c\u6211\u4eec\u6700\u7ec8\u7ed9\u51fa\u7684\u7b54\u6848\u662f\\(2r_{x_0}\\)\uff08\u56e0\u4e3a\\(r_{x_0}\\)\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e0d\u662f\u89e3\uff0c\u66f4\u4e0d\u662f\u8fd1\u4f3c\u89e3\uff09\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u8ba1\u7b97\u8fd1\u4f3c\u6bd4\uff1a</p> \\[ \\begin{aligned}     &amp; \\begin{aligned}         \\because \\;\\;\\;         &amp; r_{x_0} \\leq r(C^*) \\leq 2r_{x_0} \\\\         &amp; \\frac{1}{2} \\leq \\frac{r(C^*)}{2r_{x_0}} \\leq 1 \\\\         &amp; 1 \\leq \\frac{2r_{x_0}}{r(C^*)} \\leq 2     \\end{aligned} \\\\     &amp; \\therefore \\; \\rho = \\max\\{             \\frac{ 2 r_{x_0} }{ r(C^*) },             \\frac{ r(C^*) }{ 2 r_{x_0} }         \\} = 2 \\end{aligned} \\]"},{"location":"ADS/11.%20Approximation/#1143-smarter-greedy","title":"11.4.3 Smarter Greedy","text":"<p>\u6211\u4eec\u5173\u6ce8\u5230\uff0c\u4e0a\u9762\u90a3\u4e2a\u505a\u6cd5\u603b\u662f\u968f\u673a\u7684\u9009\u53d6\u65b0\u7684\\(c_i\\)\uff0c\u4f46\u662f\u5bf9\u4e8e center \u7684\u9009\u53d6\uff0c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u5df2\u6709\u7684 center \u6700\u8fdc\u7684\u70b9\uff0c\u6b64\u5916\uff0c\u5f53\\(|C| &gt; k\\)\u65f6\uff0c\u6211\u4eec\u4e5f\u6ca1\u5fc5\u8981\u7ee7\u7eed\u505a\u4e86\u3002</p> <p>section \"\u6d41\u7a0b\u63cf\u8ff0\"     1. \u521d\u59cb\u5316\\(C_x = \\emptyset\\)\uff0c\\(S_x = S\\)\uff1b               1. \u968f\u673a\u9009\u53d6\u4e00\u4e2a site\\(s_i \\in S_x\\)\uff0c\u5c06\u5176\u63d2\u5165\\(C_x\\)\uff0c\u5e76\u4ece\\(S_x\\)\u4e2d\u5c06\\(s_i\\)\u5220\u9664\uff1b               2. \u5f53\\(|C_x| \\leq k\\)\u4e14\\(S_x \\not = \\emptyset\\)\u65f6\uff0c\u91cd\u590d\u4ee5\u4e0b\u6b65\u9aa4\uff1a     2. \u9009\u53d6\u4e00\u4e2a site\\(s_i \\in S_x\\)\uff0c\u8fd9\u4e2a site \u6ee1\u8db3\\(\\forall s_j \\in S_x \\quad dis(s_i, C_x) \\geq dis(s_j, C_x)\\)\uff08\u5373\u8fd9\u4e2a\u70b9\u662f\u8fd8\u6ca1\u88ab\u8986\u76d6\u7684\u70b9\u4e2d\u8ddd\u79bb\\(C_x\\)\u6700\u8fdc\u7684\u70b9\uff09\uff1b               1. \u5c06\\(s_i\\)\u63d2\u5165\\(C_x\\)\uff0c\u5e76\u4ece\\(S_x\\)\u4e2d\u5c06\\(s_i\\)\u5220\u9664\uff1b     3. \u5982\u679c\\(|C_x| \\leq k\\)\u4e14\\(S_x = \\emptyset\\)\uff0c\u5219\u8fd4\u56de yes\uff1b\u5426\u5219\u8fd4\u56de no\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u505a\u6cd5\u5b9e\u9645\u4e0a\u53ea\u662f\u4f18\u5316\u4e86\u4e00\u4e0b\u542f\u53d1\u5f0f\u7684\u7b56\u7565\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u5185\u6838\uff0c\u6240\u4ee5\u5176\u8fd1\u4f3c\u6bd4\u4ecd\u7136\u662f\\(2\\)\u3002</p>"},{"location":"ADS/11.%20Approximation/#115-\u603b\u7ed3","title":"11.5 \u603b\u7ed3","text":"<p>\u5173\u4e8e\u7b97\u6cd5\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u4e09\u4e2a\u7ef4\u5ea6\uff1a</p> <ol> <li>\u6700\u4f18\u6027(optimality)\uff1a\u5373\u7b97\u6cd5\u8981\u627e\u5230\u786e\u5207\u7684\u6700\u4f18\u89e3\uff1b</li> <li>\u9ad8\u6548\u6027(efficiency)\uff1a\u5373\u7b97\u6cd5\u662f\u5426\u9ad8\u6548\uff08\u901a\u5e38\u662f\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fd0\u884c\uff09\uff1b</li> <li>\u666e\u904d\u6027(all instances)\uff1a\u5373\u7b97\u6cd5\u662f\u5426\u666e\u904d\u9002\u7528\u4e8e\u6240\u6709\u7684\u60c5\u51b5\uff0c\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff1b</li> </ol> <p>\u5018\u82e5\u4e00\u4e2a\u89e3\u6cd5\uff1a</p> <ol> <li>\u540c\u65f6\u6ee1\u8db3\u6700\u4f18\u6027\u548c\u9ad8\u6548\u6027\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u7279\u6b8a\u60c5\u51b5\u80fd\u9ad8\u6548\u6c42\u6700\u4f18\u89e3\uff0c\uff08\u820d\u5f03\u666e\u904d\u6027\uff09\u80fd\u4e3a\u4e00\u4e9b\u95ee\u9898\u7684\u7279\u4f8b\u627e\u5230\u89e3\u51b3\u65b9\u6cd5\uff1b</li> <li>\u540c\u65f6\u6ee1\u8db3\u6700\u4f18\u6027\u548c\u666e\u904d\u6027\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u6240\u6709\u60c5\u51b5\u90fd\u80fd\u6c42\u6700\u4f18\u89e3\uff0c\uff08\u820d\u5f03\u9ad8\u6548\u6027\uff09\uff0c\u4f8b\u5982\u5bf9\u4e8e\u6570\u636e\u91cf\u4e0d\u5927\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\uff1b</li> <li>\u540c\u65f6\u6ee1\u8db3\u9ad8\u6548\u6027\u548c\u666e\u904d\u6027\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u80fd\u662f\u4e2a\u8fd1\u4f3c\u7b97\u6cd5\uff0c\uff08\u820d\u5f03\u6700\u4f18\u6027\uff09\uff0c\u9ad8\u6548\u5730\u627e\u5230\u4e00\u4e2a\u548c\u6700\u4f18\u89e3\u76f8\u5dee\u4e0d\u5927\u7684\u7b54\u6848\uff1b</li> </ol> <p>\u5c31\u7b97 N=NP \u6210\u7acb\uff0c\u6211\u4eec\u4ecd\u7136\u65e0\u6cd5\u4fdd\u8bc1\u4e09\u4e2a\u613f\u671b\u4e00\u6b21\u6ee1\u8db3\u3002</p>"},{"location":"ADS/11.%20Approximation/#116-\u4e60\u9898\u96c6","title":"11.6 \u4e60\u9898\u96c6","text":"<ol> <li> <p>Suppose ALG is an \u03b1-approximation algorithm for an optimization problem \u03a0 whose approximation ratio is tight. Then for every \u03f5&gt;0 there is no (\u03b1\u2212\u03f5)-approximation algorithm for \u03a0 unless P = NP.</p> <p>\u5bf9\u4e8e\u4e00\u79cd\u7b97\u6cd5\u800c\u8a00\uff0c\u8fd1\u4f3c\u6bd4\u4e3a \ud835\udefc\u03b1 \uff0c\u90a3\u4e48 \u2200\ud835\udefd&gt;\ud835\udefc\u2200\u03b2&gt;\u03b1 \uff0c\u90fd\u53ef\u4ee5\u8bf4 \ud835\udefd\u03b2 \u662f\u5176\u8fd1\u4f3c\u6bd4\u3002\u5982\u679c \ud835\udefc\u03b1 \u662f tight \u7684\uff0c\u5219 \ud835\udefc\u03b1 \u662f\u4e00\u4e2a\u4e0b\u786e\u754c\u3002</p> <p>\u4f46\u8fd9\u90fd\u53ea\u662f\u5bf9\u8fd9\u4e00\u79cd\u7b97\u6cd5\u7684\u5206\u6790\uff0c\u4e00\u4e2a tight \u7684\u8fd1\u4f3c\u6bd4\u53ea\u80fd\u8bf4\u660e\u4f60\u5bf9\u8fd9\u79cd\u7b97\u6cd5\u7684\u5206\u6790\u5230\u4f4d\u4e86\uff0c\u800c\u4e0d\u80fd\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u66f4\u597d\u7684\u7b97\u6cd5\u3002\u8fd9\u91cc\u5b8c\u5168\u662f\u4e24\u7801\u4e8b\u3002</p> </li> <li> <p>As we know there is a 2-approximation algorithm for the Vertex Cover problem. Then we must be able to obtain a 2-approximation algorithm for the Clique problem, since the Clique problem can be polynomially reduced to the Vertex Cover problem.</p> <p>F\u3002</p> <p>\u9996\u5148\uff0c\u786e\u5b9e\u6709 Clique problem\\(\u2264_\ud835\udc5d\\)Vertex Cover problem\uff0cVertex Cover problem \u4e5f\u786e\u5b9e\u6709 2-approximation \u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a problem \u8861\u91cf Cost \u7684\u6807\u51c6\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u5728 Vertex Cover problem \u4e2d\u7684 2- \u8fd1\u4f3c\u7b97\u6cd5\u5f97\u5230\u7684\u89e3\uff0c\u5728 Clique problem \u7ea6\u5316\u6210\u7684 Vertex Cover problem \u4e2d\u5f97\u5230\u7684\u89e3\u867d\u7136\u7b26\u5408 Vertex Cover problem \u7684 Cost \u6807\u51c6\u4e0b\u7684 2- \u8fd1\u4f3c\uff0c\u5374\u5e76\u4e0d\u4e00\u5b9a\u7b26\u5408 Clique problem \u6807\u51c6\u4e0b\u7684 2- \u8fd1\u4f3c\u3002</p> <ul> <li> <p>\u56de\u987e\u56e2\u95ee\u9898 (Clique problem) \u7684\u63cf\u8ff0\uff1a\u5bfb\u627e\u6700\u5927\u5b8c\u5168\u5b50\u56fe\uff0c\u90a3\u4e48\u5bfb\u627e\u5230\u7684\u5b8c\u5168\u5b50\u56fe\u4e2d\u9876\u70b9\u6570 (\ud835\udc361) \u8d8a\u591a\u8d8a\u597d\u3002</p> </li> <li> <p>\u56de\u987e\u9876\u70b9\u8986\u76d6\u95ee\u9898 (Vertex Cover problem) \u7684\u63cf\u8ff0\uff1a\u5bfb\u627e\u6700\u5c0f\u89c4\u6a21\u7684\u9876\u70b9\u8986\u76d6\uff0c\u90a3\u4e48\u5bfb\u627e\u5230\u7684\u9876\u70b9\u8986\u76d6\u4e2d\u9876\u70b9\u6570 (\ud835\udc362) \u8d8a\u5c11\u8d8a\u597d\u3002</p> </li> </ul> <p>\u56de\u987e\u7ea6\u5316\u65b9\u6cd5\uff1a</p> \\[ |max \\ clique \\ of \\ \ud835\udc3a\u2223= \ud835\udc3e \u27fa \u2223max \\ vertex \\ cover \\ of \\ \ud835\udc3a\u203e\u2223=\u2223\ud835\udc49\u2223\u2212\ud835\udc3e \\] <p>\u8bbe Vertex Cover problem \u7684 2- \u8fd1\u4f3c\u7b97\u6cd5\u5f97\u5230\u7684\u9876\u70b9\u8986\u76d6\u89c4\u6a21\u4e3a \ud835\udc47\uff0c\u6700\u4f18\u89c4\u6a21\u4e3a \ud835\udc47\u2217\uff0c\u5219</p> \\[ \\rho_2 = \\dfrac{C_2}{C_2^*} = \\dfrac{T}{T*} = 2 \\\\ \\rho_1 = \\dfrac{C_1*}{C_1} = \\dfrac{|V| - T^*}{|V| - T} = 1 + \\dfrac{1}{\\frac{|V|}{T^*} - 2} \\] <p>\u53ef\u89c1 \ud835\udf0c1 \u662f\u4e0d\u53ef\u63a7\u7684\u3002</p> </li> <li> <p>For the bin-packing problem: let S=\u2211Si. Which of the following statements is FALSE?</p> <p>A. The number of bins used by the next-fit heuristic is never more than \u23082S\u2309</p> <p>B. The number of bins used by the first-fit heuristic is never more than \u23082S\u2309</p> <p><code>C. The next-fit heuristic leaves at most one bin less than half full</code></p> <p>D. The first-fit heuristic leaves at most one bin less than half full</p> <ul> <li> <p>\u5bf9\u4e8eA\uff0c\u8bbe next-fit \u7b97\u6cd5\u6700\u7ec8\u751f\u6210 2\ud835\udc40 \u6216 2\ud835\udc40+1 \u4e2a bin\uff0c\u5219</p> <p>\\(S = \\sum_{i =1}^{2m}S(B_i) \\geq \\sum_{i=1}^m[S(B_{2i})+S(B_{2i-1})]&gt;\\sum_{i=1}^m 1 = m\\)</p> <p>\u6240\u4ee5\u5982\u679cNF\u9700\u89812M\u6216\u80052M+1\u4e2abin\uff0c\u90a3\u4e48\u6700\u4f18\u89e3\u81f3\u5c11\u9700\u8981M+1\u4e2abin</p> </li> <li> <p>first-fit(1.7-approximation) \u4f18\u4e8e next-fit(2-approximation)\uff0c\u56e0\u6b64 B \u4e5f\u6b63\u786e\u3002</p> </li> <li> <p>\u5bf9\u4e8e D\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin\uff0c\u90a3\u4e48\u5728\u4ea7\u751f\u7b2c\u4e8c\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u65f6\uff0c\u4e0d\u53ef\u80fd\u5728\u5bf9\u524d\u9762 bins \u7684\u626b\u63cf\u4e2d\u627e\u4e0d\u5230\u653e\u4e0d\u8fdb\u53bb\u7684 bin\uff08\u7b2c\u4e00\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u80af\u5b9a\u80fd\u653e\u8fdb\u53bb\uff09\uff0c\u56e0\u6b64\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \uff0cD \u6b63\u786e\u3002</p> </li> <li> <p>\u5bf9\u4e8e C\uff0c\u4e24\u4e2a\u5c11\u4e8e\u534a\u6ee1\u7684 bin \u53ea\u8981\u4e0d\u662f\u76f8\u90bb\u51fa\u73b0\u5c31\u662f\u53ef\u80fd\u7684\uff080.2\uff0c0.9\uff0c0.2\uff09\uff0c\u56e0\u6b64 C \u9519\u8bef\u3002</p> </li> </ul> </li> <li> <p>To approximate a maximum spanning tree\\(T\\)of an undirected graph\\(G=(V,E)\\)with distinct edge weights\\(w(u,v)\\)on each edge\\((u,v)\\in E\\), let's denote the set of maximum-weight edges incident on each vertex by\\(S\\). Also let\\(w(E')=\\sum _{(u,v)\\in E}w(u,v)\\)for any edge set\\(E'\\).    Which of the following statements is TRUE?</p> <p><code>\u9898\u76ee\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u628a\u6bcf\u4e2a\u70b9\u6700\u5927\u6743\u503c\u7684\u8fb9\u52a0\u5165\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u7684\u6743\u503c\u548c\u6700\u5927\u751f\u6210\u6811\u6743\u503c\u4e4b\u6bd4\u662f\u591a\u5c11\u3002\u6ce8\u610f\uff0c\u70b9\u7684\u6700\u5927\u6743\u503c\u8fb9\u96c6\u5408\u610f\u5473\u7740\u96c6\u5408\u91cc\u76f8\u540c\u7684\u8fb9\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u3002</code></p> <p>A.\\(S=T\\)for any graph\\(G\\)</p> <p>B.\\(S\\neq T\\)for any graph\\(G\\)</p> <p><code>C.$w(T)\\geqslant w(S)/2$for any graph$G$</code></p> <p>D. None of the above</p> <p> </p> </li> <li> <p>In the bin packing problem, we are asked to pack a list of items L to the minimum number of bins of capacity 1. For the instance L, let\\(FF(L)\\)denote the number of bins used by the algorithm First Fit. The instance\\(L\u2032\\)is derived from L by deleting one item from L. Then\\(FF(L\u2032)\\)is at most of\\(FF(L)\\).</p> </li> </ol>"},{"location":"ADS/12.%20Local%20Search/","title":"12. Local Search","text":"<p> \u7ea6 4823 \u4e2a\u5b57  27 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 24 \u5206\u949f</p> <p>Local</p> <ul> <li>local optimum is a best solution in a neighborhood</li> </ul> <p>Search</p> <ul> <li>start with a feasible solution and search a better one within the neighborhood</li> <li>a local optimum is achieved if no improvement is possible</li> </ul> <p>\u2460 \u5f97\u5230\u4e00\u4e2a\u521d\u59cb\u7684\u53ef\u884c\u89e3  </p> <p>\u2461 \u6bcf\u4e00\u8f6e\u5faa\u73af\u4e2d\uff0c\u4ece\u8fd9\u4e2a\u53ef\u884c\u89e3\u7684\u90bb\u57df\u4e2d\uff0c\u9009\u62e9\u90bb\u57df\u6700\u4f18\u89e3\u4f5c\u4e3a\u65b0\u7684\u53ef\u884c\u89e3\u3002  </p> <p>\u2462 \u5047\u5982\u8fd9\u4e2a\u53ef\u884c\u89e3\u7684\u90bb\u57df\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u89e3\u4f18\u4e8e\u8fd9\u4e2a\u53ef\u884c\u89e3\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u8fd4\u56de\u7ed3\u679c\u3002</p> <p></p> <p><code>\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u5c40\u90e8\u641c\u7d22\u627e\u5230\u70b9\u4f7f\u5f97\uff0ccurrent cost &lt; mincost</code></p>"},{"location":"ADS/12.%20Local%20Search/#121-the-vertex-cover-problem","title":"12.1 The Vertex Cover Problem","text":"<p>\u6709\u9644\u5e26\u6761\u4ef6\uff0csize &lt;= K , \u8be5\u95ee\u9898\u662f\u4e00\u4e2aNP-complete\u95ee\u9898</p> <p>\u9876\u70b9\u8986\u76d6\u95ee\u9898(vertex cover problem)\u6307\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\\(G=(V,E)\\)\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u9876\u70b9\u96c6\\(S\\subseteq V\\)\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\\((u,v)\\)\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5728\\(S\\)\u4e2d\uff08\u5373\\(u\\in S \\lor v\\in S\\)\uff09\u3002</p> <p>\u8be5\u95ee\u9898\u662f\u4e00\u4e2aNP-Hard\u95ee\u9898\u3002\u6682\u65f6\u65e0\u6cd5\u627e\u5230\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</p> <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u53ef\u884c\u89e3\u4e3a\\(S = V\\)\uff0c\u5373\u5b8c\u5168\u8986\u76d6\uff0c\u5176\u76ee\u6807\u51fd\u6570\u4e3a\\(cost(S) = |S|\\)\u3002\u5373\uff0c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 local search \u6765\u964d\u4f4e\\(|S|\\)\u3002</p> <p>Search: Start from S = V; delete a node and check if S' is a vertex cover with a smaller cost.</p> <p>\u7ed9\u51fa\u51e0\u79cd\u6848\u4f8b\u4ee5\u53ca\u53ef\u89c6\u5316\uff0c\u8bf4\u660e\u5c40\u90e8\u641c\u7d22\u5bb9\u6613\u5931\u6548\u3002</p> <p></p> <ul> <li>case 0\uff1a\u6ca1\u6709\u8fb9\uff0c\u663e\u7136\u9876\u70b9\u8986\u76d6\u5b50\u96c6\u4e3a\u7a7a</li> <li>case 1\uff1a\u6700\u4f18\u9876\u70b9\u8986\u76d6\u5b50\u96c6\u4e3a\u4e2d\u5fc3\u70b9\u3002\u5047\u5982\u6211\u4eec\u4eceS=V\u5165\u624b\uff0c\u5047\u8bbe\u5148\u53bb\u6389\u4e2d\u5fc3\u70b9\uff0c\u5269\u4e0b\u76848\u4e2a\u70b9\u4ecd\u7136\u662f\u9876\u70b9\u8986\u76d6\u5b50\u96c6\uff0c\u4f46\u662f\u65e0\u6cd5\u518d\u5220\u9664\uff08\u5c40\u90e8\u6700\u4f18\u89e3\uff09\u3002\u5982\u679c\u5148\u5220\u9664\u5468\u56f4\u7684\u70b9\uff0c\u624d\u6709\u53ef\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002<code>\u8bf4\u660e\u5c40\u90e8\u641c\u7d22\u5b58\u5728\u5931\u6548\u7684\u53ef\u80fd</code></li> <li>case 2\uff1a\u5b58\u5728\u591a\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4f46\u662f\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u89e3 </li> </ul> <p>\u5f53\u6210\u672c\u51fd\u6570\u662f\u975e\u51f8\u51fd\u6570\u4e14\u5177\u6709\u591a\u4e2a\u5c40\u90e8\u6700\u5c0f\u503c\u65f6\uff0c\u68af\u5ea6\u4e0b\u964d\u53ef\u80fd\u65e0\u6cd5\u6709\u6548\u5730\u5de5\u4f5c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u68af\u5ea6\u4e0b\u964d\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u800c\u4e0d\u662f\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c\u3002\u8fd9\u662f\u56e0\u4e3a\u68af\u5ea6\u4e0b\u964d\u6839\u636e\u6210\u672c\u51fd\u6570\u7684\u5c40\u90e8\u68af\u5ea6\u66f4\u65b0\u53c2\u6570\uff0c\u5982\u679c\u5b83\u6070\u597d\u4ece\u4e00\u4e2a\u521d\u59cb\u70b9\u5f00\u59cb\uff0c\u8be5\u70b9\u63a5\u8fd1\u4e00\u4e2a\u5c40\u90e8\u6700\u5c0f\u503c\u4f46\u8fdc\u79bb\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u6536\u655b\u5230\u8be5\u5c40\u90e8\u6700\u5c0f\u503c\u3002</p> <p>\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u6216\u5176\u53d8\u4f53\uff0c\u5982Adam\u3001RMSprop\u6216AdaGrad\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5f15\u5165\u4e86\u968f\u673a\u6027\u6216\u81ea\u9002\u5e94\u5b66\u4e60\u7387\uff0c\u4ee5\u5e2e\u52a9\u8df3\u51fa\u5c40\u90e8\u6700\u5c0f\u503c\u5e76\u627e\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"ADS/12.%20Local%20Search/#122-metropolis-algorithm","title":"12.2 metropolis algorithm","text":"<p>\u6885\u7279\u7f57\u6ce2\u5229\u65af\u7b97\u6cd5(the Metropolis algorithm)\u7684\u8fc7\u7a0b\uff1a</p> <pre><code>SolutionType Metropolis()\n{\n    Define constants k and T;\n    Start from a feasible solution S \\in FS;\n    MinCost = cost(S);\n    while (1)\n    {\n        S\u2019 = Randomly chosen from N(S);\n        CurrentCost = cost(S\u2019);\n        if (CurrentCost &lt; MinCost)\n        {\n            MinCost = CurrentCost;\n            S = S\u2019;\n        }\n        else\n        {\n            With a probability e ^ { -\\Delta cost / (kT) }, let S = S\u2019;\n            else break;\n        }\n    }\n    return S;\n}\n</code></pre> <ul> <li> <p>\u5728\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5\u4e2d\u52a0\u2f0a\u2f00\u4e2a\u6982\u7387p\uff0c\u5982\u679c\u5f53\u90bb\u70b9\u7684\u503c\u4f18\u4e8e\u5f53\u524d\u70b9\u65f6\u6211\u4eec\u63a5\u53d7\u5b83\uff1b<code>\u5f53\u90bb\u70b9\u7684\u503c\u52a3\u4e8e\u5f53\u524d\u70b9\u65f6\u6211 \u4eec\u4e5f\u6709p\u7684\u6982\u7387\u4ecd\u7136\u63a5\u53d7\u5b83\u3002\u8fd9\u5c31\u5e26\u6765\u4e86\u5728\u53cd\u590d\u8fed\u4ee3\u4e2d\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u673a\u4f1a</code>\u3002</p> </li> <li> <p>\u6982\u7387p\u7684\u5927\u5c0f\u53d7\u5230\u5f53\u524d\u70b9\u7684\u503c\u7684\u5f71\u54cd\uff0c\u5f53\u524d\u70b9\u503c\u8d8a\u9760\u8fd1\u671f\u671b\u7684\u2f45\u5411\uff08\u5373\u6e29\u5ea6\u8d8a\u4f4e\uff09\uff0cp\u7684\u503c\u8d8a\u5c0f\u3002\u8fd9\u4f7f\u5f53\u524d\u70b9 \u843d\u2f0a\u8f83\u4f18\u7684\u89e3\u7a7a\u95f4\u65f6\u66f4\u4e0d\u5bb9\u6613\u8df3\u51fa\uff0c\u5373\u66f4\u7a33\u5b9a\u7684\u80fd\u83b7\u5f97\u4f18\u503c\u3002</p> </li> </ul> <p><code>\u6ce8\uff1a\u5f53\uff08\u6e29\u5ea6\uff09T\u5f88\u9ad8\u65f6\uff0c\u4e0a\u5761\u7684\u6982\u7387\u51e0\u4e4e\u4e3a1\uff0c\u5bb9\u6613\u5f15\u8d77\u5e95\u90e8\u9707\u8361\uff1b\u5f53T\u63a5\u8fd10\u65f6\uff0c\u4e0a\u5761\u6982\u7387\u51e0\u4e4e\u4e3a0\uff0c\u63a5\u8fd1\u539f\u59cb\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\u3002</code></p> <p>Metropolis\u7b97\u6cd5\u5f53\u7136\u4e5f\u5b58\u5728\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\uff08\u5bf9\u4e8e\u7b80\u5355\u95ee\u9898\uff0c\u5b58\u5728\u8f83\u5927\u6982\u7387\u9009\u62e9\u5230\u4e00\u4e2a\u6bd4\u5f53\u524d\u89e3\u5dee\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u53c8\u6709\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u89e3\uff0c\u8fd9\u6837\u5c31\u4f1a\u504f\u79bb\u6700\u4f18\u89e3\uff0c\u751a\u81f3\u9677\u5165\u5728\u51e0\u4e2a\u89e3\u4e4b\u95f4\u6765\u56de\u8df3\u8dc3\u4f46\u5c31\u662f\u627e\u4e0d\u5230\u6700\u4f18\u89e3\u7684\u5883\u5730\uff09\u3002</p> <p>\u89c2\u5bdfmetropolis\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u4e4b\u540e\uff0c\u53d1\u73b0\u9ad8\u6e29\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u6e29\u5ea6\u8f83\u4f4e\u65f6\uff0c\u8fdb\u5165\u6700\u4f18\u89e3\u540e\u4e0d\u6613\u8df3\u51fa\u3002\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5728\u5f00\u59cb\u7684\u65f6\u5019\u6e29\u5ea6\u5f88\u9ad8\uff0c\u7136\u540e\u9010\u6e10\u964d\u4f4e\u6e29\u5ea6\uff0c\u8fd9\u6837\u5728\u5f00\u59cb\u65f6\u6211\u4eec\u80fd\u591f\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u5728\u9010\u6e10\u964d\u6e29\u540e\u505c\u7559\u5728\u6700\u4f18\u89e3\u3002<code>\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u6a21\u62df\u9000\u706b\u7684\u601d\u60f3</code></p> <p>\u6a21\u62df\u9000\u706b(simulated annealing)</p> <p>Cooling schedule: T = { T1 , T2 , \u2026 }</p>"},{"location":"ADS/12.%20Local%20Search/#123-hopfield-neural-networks","title":"12.3 Hopfield Neural Networks","text":"<p>Graph\\(G = (V, E)\\)with integer edge weights w (positive or negative).</p> <p>If\\(w_e\\)&lt; 0, where\\(e = (u, v)\\), then u and v want to have the same state;</p> <p>if\\(w_e &gt; 0\\)then u and v want different states.</p> <p>The absolute value\\(|w_e|\\)indicates the strength of this requirement.</p> <p>\u7edd\u5bf9\u503c\\(|w_e|\\)\u8868\u793a\u6b64\u8981\u6c42\u7684\u5f3a\u5ea6\u3002</p> <ol> <li> <p>Hopfield \u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u4e2a\u65e0\u5411\u56fe\\(G = (V,E)\\)\uff0c\u5176\u4e2d\\(V\\)\u662f\u795e\u7ecf\u5143\u7684\u96c6\u5408\uff0c\\(E\\)\u662f\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\uff0c\u5e76\u4e14\u6bcf\u6761\u8fb9\\(e\\)\u90fd\u6709\u4e00\u4e2a\u6743\u91cd\\(w_e\\)\uff0c\u8fd9\u53ef\u80fd\u662f\u6b63\u6570\u6216\u8d1f\u6570\uff1b</p> </li> <li> <p>\u5bf9\u7f51\u7edc\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\uff08\u5373\u56fe\u7684\u9876\u70b9\uff09\u7684\u72b6\u6001\u7684\u4e00\u4e2a\u8d4b\u503c\uff0c\u8d4b\u503c\u53ef\u80fd\u4e3a\\(1\\)\u6216\\(-1\\)\uff0c\u6211\u4eec\u8bb0\u9876\u70b9\\(u\\)\u7684\u72b6\u6001\u4e3a\\(s_u\\)\uff1b</p> </li> <li> <p>\u5982\u679c\u5bf9\u4e8e\u8fb9\\(e = (u, v)\\)\u6709\\(w_e &gt; 0\\)\uff0c\u5219\u6211\u4eec\u5e0c\u671b\\(u\\)\u548c\\(v\\)\u5177\u6709\u76f8\u53cd\u7684\u72b6\u6001\uff1b\u5982\u679c\\(w_e &lt; 0\\)\uff0c\u5219\u6211\u4eec\u5e0c\u671b\\(u\\)\u548c\\(v\\)\u5177\u6709\u76f8\u540c\u7684\u72b6\u6001\uff1b\u7efc\u5408\u800c\u8a00\uff0c\u6211\u4eec\u5e0c\u671b\\(w_es_us_v &lt; 0\\)</p> </li> <li> <p>\u6211\u4eec\u5c06\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u8fb9\\(e\\)\u79f0\u4e3a\u201c\u597d\u7684\uff08\\(good\\)\uff09\u201d\uff0c\u5426\u5219\u79f0\u4e3a\u201c\u574f\u7684\uff08\\(bad\\)\uff09\u201d\uff1b</p> </li> <li> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u70b9u \u662f\u201c\u6ee1\u610f\u7684\uff08\\(satisfied\\)\uff09\u201d\uff0c\u5f53\u4e14\u4ec5\u5f53\\(u\\)\u6240\u5728\u7684\u8fb9\u4e2d\uff0c\u597d\u8fb9\u7684\u6743\u91cd\u7edd\u5bf9\u503c\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8e\u574f\u8fb9\u7684\u6743\u91cd\u7edd\u5bf9\u503c\u4e4b\u548c   $$    \\underset{v:e=(u,v)\\in E}{\\sum}w_es_us_v \\leq 0   $$</p> </li> <li> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u6784\u578b\u662f\u201c\u7a33\u5b9a\u7684\uff08stable\uff09\u201d\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u7684\u70b9\u90fd\u662f\u6ee1\u610f\u7684</p> </li> </ol> <p>Output: A configuration S of the network \u2013 an assignment of the state\\(s_u\\)to each node u</p> <p></p> <p>\u3016Definition\u3017 In a configuration S, edge\\(e = (u, v)\\)is <code>good</code> if\\(w_e s_u s_v &lt; 0\\)(\\(w_e &lt; 0\\)iff\\(s_u = s_v\\)); otherwise, it is <code>bad</code>.</p> <p>\u3016Definition\u3017 In a configuration S, a node u is <code>satisfied</code> if the weight of incident good edges\\(\\geq\\) weight of incident bad edges. $$ \\sum_{v:e=(u,v)\\in E} w_es_us_v \\leq 0 $$ \u7531\u4e8e\u4e0d\u4e00\u5b9a\u80fd\u627e\u5230\u5b8c\u7f8e\u7684configuration\uff0c\u6240\u4ee5\u9000\u800c\u6c42\u5176\u6b21\uff0c\u8981\u6c42\u597d\u8fb9\u7684\u6743\u91cd\u5927\u4e8e\u5916\u8fb9\u7684\u6743\u91cd</p> <p>\u3016Definition\u3017A configuration is <code>stable</code> if all nodes are <code>satisfied.</code></p> <p></p> <p>Does a Hopfield network always have a stable configuration, and if so, how can we find one?</p> <p>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u6211\u5c31\u628a\u8fd9\u4e2a\u7ed3\u70b9\u7684state\u53d6\u53cd\uff08\u56e0\u4e3a\u4ec5\u6709\u6ee1\u8db3\u548c\u4e0d\u6ee1\u8db3\uff09\uff0c\u53d6\u53cd\u4e4b\u540e\u4e0e\u8be5\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u597d\u8fb9\u53d8\u574f\u8fb9\uff0c\u574f\u8fb9\u53d8\u597d\u8fb9</p> <p></p> <p>\u5173\u952e\u95ee\u9898\u662f\uff1aWill it always terminate\uff1f\u662f\u5426\u603b\u4f1a\u505c\u6b62</p> <p><code>\u6bcf\u4e00\u6b21\u53d6\u53cd\u4e4b\u540e\uff0c\u8be5\u70b9\u7684\u597d\u8fb9\u6743\u91cd\u81f3\u5c11+1\uff0c\u4f46\u662f\u603b\u6743\u91cd\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u505c\u6b62</code></p> <ul> <li> <p>Claim:  The state-flipping algorithm terminates at a stable configuration after at most\\(W = _e|w_e|\\)iterations.</p> </li> <li> <p>Proof: </p> </li> <li> <p>Problem:  To maximize\\(\\Phi\\)</p> </li> </ul> <p>\\(S - S'\\):\\(S'\\)can be obtained from S by flipping a single state</p> <p>Claim:  Any local maximum in the state-flipping algorithm to maximize\\(\\Phi\\)is a stable configuration.</p> <ul> <li> <p>\u4ed6\u662f\u5426\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\uff1f</p> <p>Still an open question: to find an algorithm that constructs stable states in time polynomial in\\(n\\)and\\(logW\\)(rather than n and W), or in a number of primitive arithmetic operations that is polynomial in n alone, independent of the value of W.</p> <p>\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff1a\u627e\u5230\u4e00\u79cd\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u5728 n \u548c logW\uff08\u800c\u4e0d\u662f n \u548c W\uff09\u4e2d\u6784\u9020\u65f6\u95f4\u591a\u9879\u5f0f\u4e2d\u7684\u7a33\u5b9a\u72b6\u6001\uff0c\u6216\u8005\u5728\u4e00\u4e9b\u539f\u59cb\u7b97\u672f\u8fd0\u7b97\u4e2d\u6784\u9020\u7a33\u5b9a\u72b6\u6001\uff0c\u8be5\u8fd0\u7b97\u4ec5\u5728 n \u4e2d\u662f\u591a\u9879\u5f0f\u7684\uff0c\u4e0e W \u7684\u503c\u65e0\u5173\u3002</p> </li> </ul>"},{"location":"ADS/12.%20Local%20Search/#124-the-maximum-cut-problem","title":"12.4 The Maximum Cut Problem","text":"<p>Maximum Cut problem: Given an undirected graph\\(G = (V, E)\\)with positive integer edge weights we, find a node partition\\((A, B)\\)such that the total weight of edges crossing the cut is maximized. $$ w(A,B) = \\sum_{u\\in A, v\\in B} w_{uv} $$ \u5e94\u7528\uff1an\u9879\u6d3b\u52a8\uff0cM\u9879\u4eba\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u53c2\u52a0\u5176\u4e2d\u4e24\u9879\u6d3b\u52a8\u3002\u5c06\u6bcf\u9879\u6d3b\u52a8\u5b89\u6392\u5728\u4e0a\u5348\u6216\u4e0b\u5348\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u589e\u52a0\u53ef\u4ee5\u4eab\u53d7\u8fd9\u4e24\u9879\u6d3b\u52a8\u7684\u4eba\u6570\u3002</p> <ul> <li>problem\uff1a To maximize \\(\\Phi(S) = \\sum_{e \\ is \\ good}|w_e|\\)</li> <li>Feasible solution set FS : any partition (A, B) </li> <li>S - S': S' can be obtained from S by moving one node from A to B, or one from B to A.</li> </ul> <p>\u6700\u5927\u5272\u95ee\u9898\u548cHopfield\u795e\u7ecf\u7f51\u7edc\u95ee\u9898\u5b58\u5728\u7740\u5173\u8054\u3002\u5bf9\u4e8e\u4efb\u610f\u89e3\uff08A\uff0cB\uff09\uff0c\u5c06A\u4e2d\u7684\u70b9\u7684\u72b6\u6001\u8d4b\u503c\u4e3a-1\uff0cB\u4e2d\u7684\u70b9\u7684\u72b6\u6001\u8d4b\u503c\u4e3a1.\u6b64\u65f6\u7ec4\u5185\u7684\u8fb9\u53d8\u4e3a\u574f\u8fb9\uff08\\(w_es_us_v &gt;0\\)\uff09,\u7ec4\u95f4\u7684\u8fb9\u53d8\u4e3a\u597d\u8fb9\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6700\u5927\u5316\u597d\u8fb9\u7684\u603b\u6743\u91cd\u4e4b\u548c\\(\\Phi(S)\\).</p> <p>\u79fb\u52a8\u4e00\u70b9\u4ece\u7ec4A\u5230\u7ec4B\uff0c\u4e0e\u8be5\u70b9\u76f8\u8fde\u7684\u53d8\uff0c\u7ec4\u95f4\u7684\u53d8\u7ec4\u5185\uff0c\u7ec4\u5185\u7684\u53d8\u7ec4\u95f4</p> <pre><code>ConfigType State_flipping()\n{\n    Start from an arbitrary configuration S;\n    while ( ! IsStable(S) ) {\n        u = GetUnsatisfied(S);\n        su = - su;\n    }\n    return S;\n}\n</code></pre> <p></p> <p>\u5373\u56feG\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u91cd\u4e4b\u548c\u4e3a\\(W = \\underset{(u,v)\\in E}{\\sum}w_{uv}\\),\u56e0\u4e3a\uff08A\uff0cB\uff09\u662f\u4e00\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u5373\u628au\u653e\u5230B\u4f1a\u4f7f\u5272\u8fb9\u7684\u6743\u91cd\u548c\u964d\u4f4e\uff0c<code>\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5728A\u4e2d\u7684\u70b9u\uff0c\u6ee1\u8db3\u7ec4\u95f4\u6743\u91cd\u4e4b\u548c\u5927\u4e8e\u7ec4\u5185\u6743\u91cd\u4e4b\u548c</code>\u5373\\(\\underset{v\\in A}{\\sum}w_{uv} \\leq \\underset{v \\in B}{\\sum}w_{uv}\\)</p> <p><code>\u8fd9\u662f\u56e0\u4e3a\u539f\u5148\u70b9u\u7684\u597d\u8fb9\u6743\u91cd\u4e4b\u548c\u5927\u4e8e\u574f\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u4e00\u65e6\u4eceA\u79fb\u52a8\u5230B\u4e4b\u540e\uff0c\u539f\u5148\u7684\u597d\u8fb9\u53d8\u4e3a\u574f\u8fb9\uff0c\u574f\u8fb9\u53d8\u4e3a\u597d\u8fb9\uff0c\u5bfc\u81f4\u597d\u8fb9\u7684\u6743\u91cd\u964d\u4f4e</code></p> <p>\u5bf9\u6240\u6709\u7684\\(u \\in A\\)\u90fd\u6709\u8fd9\u6837\u7684\u4e0d\u7b49\u5f0f\uff0c\u5bf9\u6240\u6709\u7684\u4e0d\u7b49\u5f0f\u6c42\u548c\u5f97\u5230 $$ \\underset{u \\in A}{\\sum} \\underset{v \\in A}{\\sum}w_{uv} \\leq \\underset{u \\in A}{\\sum} \\underset{v \\in B}{\\sum}w_{uv} $$ \u663e\u7136\u5de6\u8fb9\u662f2\u500d\u7684A\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u91cd\u4e4b\u548c\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u4e86\u4e24\u6b21\uff0c\u53f3\u8fb9\u4f7f\u6240\u6709\u7684\u5272\u8fb9\u7684\u6743\u91cd\u4e4b\u548c $$ 2\\underset{(u,v) \\in A}{\\sum} w_{u,v} = \\underset{u \\in A}{\\sum} \\underset{v \\in A}{\\sum}w_{uv} \\leq \\underset{u \\in A}{\\sum} \\underset{v \\in B} {\\sum}w_{uv} = w(A,B) \\ \u5bf9(u,v) \\in B \u540c\u7406 $$ \u7ec4\u95f4\u6743\u91cd\u8981\u5927\u4e8e\u7ec4\u5185\u6743\u91cd\uff0c\u7ec4\u95f4\u6743\u91cd\u5728\u603b\u6743\u91cd\u4e2d\u81f3\u5c11\u8981\u53601/2</p> <p>\u603b\u6743\u91cd\\(W = \\underset{(u,v) \\in A}{\\sum} w_{u,v} + \\underset{(u,v) \\in B}{\\sum} w_{u,v} + w(A, B)\\), <code>\u7531\u4e8e\u6700\u5927\u5272\u7684\u6743\u91cd\u4e4b\u548c\u4e0d\u4f1a\u8d85\u8fc7\u5168\u4f53\u8fb9\u7684\u6743\u91cd\u548cW</code>\uff0c\u6240\u4ee5\\(w(A^*,B^*) \\leq W = \\underset{(u,v) \\in A}{\\sum} w_{u,v} + \\underset{(u,v) \\in B}{\\sum} w_{u,v} + w(A, B)  \\leq 2w(A,B)\\)</p> <p></p> <p><code>\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\uff0c\u8981\u6c42\u6bcf\u4e00\u6b21\u6743\u91cd\u7684\u589e\u52a0\u9700\u8981\u5927\u4e8e\u9608\u503c</code></p> <ul> <li>\u5982\u679c\u6dfb\u52a0\u9608\u503c\uff0c\\(\\dfrac{2\\epsilon }{|V|} w(A,B)\\),\u90a3\u4e48\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u6ee1\u8db3\\(w(A^*,B^*) \\leq (2 + \\epsilon)w(A,B)\\)</li> </ul> <p>\u6700\u7ec8\u7ffb\u8f6c\\(O(n/\\epsilon logW)\\)\u6b21</p> <ul> <li>\u5982\u679c\u4e0d\u6dfb\u52a0\u9608\u503c\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u6ee1\u8db3\\(w(A^*,B^*) \\leq 2w(A,B)\\)</li> </ul>"},{"location":"ADS/12.%20Local%20Search/#125-\u65c5\u884c\u5546\u95ee\u9898","title":"12.5 \u65c5\u884c\u5546\u95ee\u9898","text":"<p>\u5b9a\u4e49\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u5b8c\u5168\u56fe\\(G = (V,E)\\),\u6bcf\u6761\u8fb9\\((u,v) \\in E\\)\u6709\u4e00\u4e2a\u6743\u91cd\\(w(u,v)\\),\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u6700\u77ed\u56de\u8def\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u9876\u70b9\u90fd\u88ab\u6070\u597d\u8bbf\u95ee\u4e00\u6b21\uff0c\u5e76\u4e14\u6240\u4ed8\u51fa\u7684\u4ee3\u4ef7\u6700\u5c11\u3002</p> <p><code>\u8fd9\u662f\u4e00\u4e2aNP-Hard\u95ee\u9898\uff0c\u6682\u65f6\u627e\u4e0d\u5230\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</code></p>"},{"location":"ADS/12.%20Local%20Search/#1251-\u52a8\u6001\u89c4\u5212","title":"12.5.1 \u52a8\u6001\u89c4\u5212","text":"<p>\u5047\u8bbe\u6211\u4eec\u7ed9\u6240\u6709\u9876\u70b9\u7f16\u53f7\u4e3a1\uff0c2\uff0c3\uff0c4....\uff0cn\uff0c\u7136\u540e\u6211\u4eec\u7684\u76ee\u6807\u65f6\u627e\u4e00\u6761\u6700\u77ed\u7684\u7ecf\u8fc7\u6bcf\u4e00\u70b9\u6070\u597d\u4ece1\u56de\u52301\uff08\u8d77\u59cb\u70b9\u4efb\u610f\uff0c\u56de\u8def\u7b49\u4ef7\uff09\u7684\u54c8\u5bc6\u987f\u56de\u8def\u3002\u90a3\u4e48\u8fd9\u4e2a\u8def\u5f84\u7684\u6700\u540e\u4e00\u8df3\u5e94\u5f53\u662f\u4ece\u67d0\u4e2a\u70b9\\(j != 1\\),\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u627e\u6700\u4f18\u7684\u70b9\\(j\\)\u5b8c\u6210\u6700\u540e\u4e00\u8df3\u3002 $$ \u6700\u4f18\u8def\u7ebf\u7684\u6210\u672c = min_{j = 2,3,...n}\u8bbf\u95ee\u6bcf\u4e2a\u9876\u70b9\u7684\u65e0\u73af1\\rightarrow j\u8def\u5f84\u7684\u6700\u4f4e\u6210\u672c + c_{j1} $$ \u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u7528\u6700\u77ed\u8def\u95ee\u9898\u81ea\u5e26\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u6765\u8bbe\u8ba1\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u4e86\uff08\u6211\u4eec\u5728Bellman-Ford \u548cFloyd-Warshall \u7b97\u6cd5\u4e2d\u5df2\u7ecf\u5b9e\u8df5\u8fc7\uff09\uff1a\u5373\u6700\u77ed\u8def\u5f84\u7684\u67d0\u4e00\u6bb5\u4e5f\u4e00\u5b9a\u662f\u5bf9\u5e94\u7684\u8d77\u70b9\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u56e0\u6b64\u5982\u679c\u6211\u4eec\u8981\u6c42\u4ece\\(1\\)\u5230\\(j\\)\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6700\u540e\u4e00\u8df3\u7684\u9009\u53d6\uff0c\u5047\u8bbe\u6700\u77ed\u8def\u5f84\u6700\u540e\u4e00\u8df3\u662f\u4ece\\(k\\)\u5230\\(j\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u4ece\\(1\\)\u5230\\(k\\)\u7684\u6700\u77ed\u8def\u5f84\u52a0\u4e0a\u4ecek \u5230j \u7684\u6210\u672c.</p> <p>\u5f53\u7136\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u77e5\u9053\u54ea\u4e2a\\(k\\)\u6700\u597d\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u904d\u5386\u6240\u6709\u7684\\(k\\)\uff0c\u8fd9\u6837\u5c31\u51b3\u5b9a\u4e86\u6700\u540e\u4e00\u8df3\u3002\u7136\u540e\u6211\u4eec\u9012\u5f52\u89e3\u51b3\u5012\u6570\u7b2c\u4e8c\u8df3\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7684\u5b50\u95ee\u9898\u53ef\u4ee5\u8868\u8fbe\u4e3a\\(C_{S,j}\\),\u8868\u793a\u4ece1\u5230\\(j \\in S\\)\u7ecf\u8fc7S\u4e2d\u6240\u6709\u70b9\u6070\u597d\u4e00\u6b21\u7684\u6700\u77ed\u8def\u5f84\u3002 $$ C_{S,j} = \\underset{k \\in S, k != 1,j}{min} C_{S-{j},k}+c_{k,j} $$ \u6839\u636e\u9012\u63a8\u5f0f\u7684\u7279\u70b9\uff0c\u6211\u4eec\u53ea\u8981\u6309\u7167S\u7684\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u586b\u8868\uff0c\u5c31\u80fd\u4fdd\u8bc1\u89e3\u6bcf\u4e00\u4e2a\u95ee\u9898\u7684\u65f6\u5019\uff0c\u9700\u8981\u7684\u5b50\u95ee\u9898\u7684\u7b54\u6848\u90fd\u5df2\u77e5\u3002</p>"},{"location":"ADS/12.%20Local%20Search/#1252-\u5c40\u90e8\u641c\u7d22","title":"12.5.2 \u5c40\u90e8\u641c\u7d22","text":"<ol> <li>\u5b9a\u4e49\u90bb\u5c45\u5173\u7cfb\uff1a<code>\u5bf9\u4e8e\u4e24\u6761\u957f\u5ea6\u4e3an\u7684\u4e0d\u540c\u7684\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u5b83\u4eec\u4e4b\u95f4\u80fd\u5171\u4eab\u7684\u6700\u5927\u8fb9\u6570\u4e3an-2</code>\uff0c\u56e0\u6b64\u6211\u4eec\u5b9a\u4e49\u4e24\u6761\u54c8\u5bc6\u987f\u56de\u8defS\u548cS\u2018\u4e4b\u95f4\u7684\u90bb\u5c45\u5173\u7cfb\u4e3a\uff1aS\u548cS\u2019\u4e4b\u95f4\u7684\u8fb9\u6709\u4e24\u6761\u4e0d\u4e00\u6837</li> </ol> <ol> <li>\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u57282-\u8fd1\u4f3c\u7684\u89e3\u7684\u57fa\u7840\u4e0a\u505a2-\u53d8\u6362\u8fdb\u4e00\u6b65\u6539\u8fdb\u89e3\uff08\u5373\u68c0\u67e5\u6539\u53d8\u4e4b\u540e\u53d7\u5230\u5f71\u54cd\u7684\u8fb9\u7684\u957f\u5ea6\u662f\u5426\u51cf\u5c0f\uff09</li> </ol>"},{"location":"ADS/12.%20Local%20Search/#126-\u4e60\u9898\u96c6","title":"12.6 \u4e60\u9898\u96c6","text":"<ol> <li>Q1-1. For the graph given in the following figure, if we start from deleting the black vertex, then local search can always find the minimum vertex cover. (T/F)</li> </ol> <p><code>T</code></p> <p>\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5220\u9664\u7684\u6761\u4ef6\u662f\uff1a\u8fd9\u6761\u8fb9\u7684\u53e6\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u5220\u9664\u3002\u5982\u679c\u53ef\u4ee5\u5220\u9664\uff0c\u5219\u4efb\u610f\u5220\u9664\u4e00\u4e2a\u3002\u5982\u679c\u4e0d\u80fd\u5220\u9664\uff0c\u5219\u7b97\u6cd5\u7ed3\u675f\u3002\u5269\u4e0b\u7684\u70b9\u8d8a\u5c11\u8d8a\u597d\u3002</p> <p>\u5982\u679c\u5220\u9664\u9ed1\u70b9\uff0c\u90a3\u4e48\u4e0d\u80fd\u5220\u9664\u53f3\u8fb9\u7684\u70b9\uff0c\u4e5f\u4e0d\u80fd\u5220\u9664\u4e0b\u9762\u7684\u70b9\uff0c\u53ea\u80fd\u5220\u9664\u6700\u4e0b\u9762\u4e24\u4e2a\u3002\u56e0\u6b64\u786e\u5b9e\u8fbe\u5230\u4e86\u6700\u4f18\u89e3\u3002</p> <ol> <li> <p>Q1-2. We are given a set of sites\\(S=\\{s_{1}, s_{2}, \\cdots, s_{n}\\}\\)in the plane, and we want to choose a set of\\(k\\)centers\\(C=\\{c_{1}, c_{2}, \\cdots, c_{k}\\}\\)so that the maximum distance from a site to the nearest center is minimized. Here\\(c_{i}\\)can be an arbitrary point in the plane.</p> <p>A local search algorithm arbitrarily choose\\(k\\)points in the plane to be the centers, then</p> <ul> <li> <p>(1) divide\\(S\\)into\\(k\\)sets, where\\(S_{i}\\)is the set of all sites for which\\(c_{i}\\)is the nearest center; and</p> </li> <li> <p>(2) for each\\(S_{i}\\), compute the central position as a new center for all the sites in\\(S_{i}\\).</p> </li> </ul> <p>If steps (1) and (2) cause the covering radius to strictly decrease, we perform another iteration, otherwise the algorithm stops.</p> <p>When the above local search algorithm terminates, the covering radius of its solution is at most 2 times the optimal covering radius. (T/F)</p> <p><code>F</code>\u539f\u56e0\u5728\u4e8eK center\u8fd1\u4f3c\u6bd4\u4e0d\u80fd\u4f4e\u4e8e2.\u5426\u5219P=NP</p> <p>\u7ed9\u51fa\u53cd\u4f8b\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2d\u6709</p> <p>$$   \\begin{gathered}      A(-1, \\frac{\\sqrt{3}}{2}),\\quad      B(1, \\frac{\\sqrt{3}}{2}),\\quad      C(-1, -\\frac{\\sqrt{3}}{2}),\\quad      D(1, -\\frac{\\sqrt{3}}{2})   \\end{gathered}   $$</p> <p>$$   \\begin{gathered}      E(-3, 2\\sqrt{3}),\\quad      F(3, 2\\sqrt{3}),\\quad      G(0, 2\\sqrt{3}+\\sqrt{7}),\\quad      H(0,0.000001),\\quad      I(0,-0.000001)   \\end{gathered}   $$</p> <p>\u90fd\u662f\u9700\u8981\u88ab\u8986\u76d6\u7684\u70b9\u3002</p> <p>$$   c_1(-1, 0),\\quad   c_2(0, 0),\\quad   c_3(1, 0),\\quad   c_4(0, 2\\sqrt{3}+\\sqrt{7}),\\quad   $$</p> <p>\\(c_1\\),\\(c_3\\)\u534a\u5f84\u4e3a\\(\\frac{\\sqrt{3}}{2}\\),\\(c_2\\)\u534a\u5f84\u4e3a\\(0.0001\\),\\(c_4\\)\u534a\u5f84\u4e3a\\(4\\)\u3002\u8fd9\u6837\u5f97\u5230\u7684\u89e3\u5c31\u662f Local Search \u7684\u4e00\u4e2a\u53ef\u80fd\u89e3\uff0c\u8986\u76d6\u534a\u5f84\u4e3a\\(4\\)\u3002</p> <p>\u7136\u800c\uff0c\u5982\u679c\u53d6</p> <p>$$   c_1'(-2, \\frac{5\\sqrt{3}}{4}),\\quad   c_2'(0, 0),\\quad   c_3'(2, \\frac{5\\sqrt{3}}{4}),\\quad   c_4'(0, 2\\sqrt{3}+\\sqrt{7}+4),\\quad   $$</p> <p>\\(c_1\\),\\(c_3\\)\u534a\u5f84\u4e3a\\(\\frac{\\sqrt{41}}{4}\\),\\(c_2\\)\u534a\u5f84\u4e3a\\(\\frac{\\sqrt{7}}{2}\\),\\(c_4\\)\u534a\u5f84\u4e3a\\(0.0001\\)\u3002\u8fd9\u6837\u5f97\u5230\u7684\u89e3\u8986\u76d6\u534a\u5f84\u4e3a\\(\\frac{\\sqrt{41}}{4}&lt;2\\)\u3002</p> <p>\u56e0\u6b64\u867d\u7136\u4e0d\u786e\u5b9a\u6700\u4f18\u89e3\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u6700\u4f18\u89e3\u4e00\u5b9a\u6bd4\u4e0a\u9762\u7684 Local Search \u7684\u89e3\u7684\u4e8c\u5206\u4e4b\u4e00\u66f4\u5c0f.</p> <p>\u4e0b\u56fe\u4e2d\uff0c\u7eff\u8272\u5706\u5708\u8868\u793a Local Search\uff0c\u84dd\u8272\u5706\u5708\u8868\u793a\u7ed9\u51fa\u7684\u4e00\u4e2a\u6bd4 Local Search \u7684\\(1/2\\)\u66f4\u5c0f\u7684\u89e3\u3002</p> <p> </p> </li> <li> <p>In local search, if the optimization function has a constant value in a neighborhood, there will be a problem.</p> <p><code>T</code> \u8bf4\u660e\u5230\u4e86\u4e00\u4e2a\u4f4e\u8c37\u6216\u8005\u5c71\u5cf0\u3002\u6216\u8005\u5e73\u8861\u72b6\u6001\u3002\u9700\u8981\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u8f6c\u79fb\u3002</p> </li> <li> <p>Greedy method is a special case of local search.</p> <p><code>F</code> Greedy\u662f\u4e0d\u65ad\u524d\u8fdb\uff0c\u6700\u540e\u8fbe\u5230\u89e3\u3002\u800clocal search\u662f\u4e0d\u65ad\u4fee\u6539\u503c\uff0c\u9009\u62e9\u4e00\u4e2a\u6700\u4f73\u7684\u89e3\u3002\u6c42\u51fa\u7684\u6bcf\u4e00\u4e2a\u89e3\u90fd\u662f\u6700\u7ec8\u7684\u89e3\u3002</p> </li> <li> <p>Random restarts can help a local search algorithm to better find global maxima that are surrounded by local maxima.</p> <p><code>T</code> \u7b97\u6cd5\u5982\u679c\u5230\u8fbelocal maximum\u5c31\u505c\u6b62\u4e86\uff0c\u4f46\u662f\u5982\u679c\u968f\u673a\u5f00\u59cb\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u5230\u8fbelocal maximum\u548cglobal maximum\u4e4b\u95f4\uff0c\u7136\u540e\u627e\u5230\u5168\u5c40\u6700\u4f18\u3002</p> </li> <li> <p>In Metropolis Algorithm, the probability of jumping up depends on T, the temperature. When the temperature is high, it\u2019ll be close to the original gradiant descent method.</p> <p><code>F</code> \u6e29\u5ea6\u9ad8\u7684\u65f6\u5019\u4f1a\u8df3\u8dc3\uff0c\u6e29\u5ea6\u4f4e\u7684\u65f6\u5019\u63a5\u8fd1\u4e0b\u964d\u7b97\u6cd5\u3002</p> </li> <li> <p>Local search algorithm can be used to solve lots of classic problems, such as SAT and N-Queen problems. Define the configuration of SAT to be X = vector of assignments of N boolean variables, and that of N-Queen to be Y = positions of the N queens in each column. The sizes of the search spaces of SAT and N-Queen are\\(O(2^N)\\)and\\(O(N^N)\\), respectively.</p> <p><code>F</code> N\u7687\u540e\u95ee\u9898\u7684\u641c\u7d22\u7a7a\u95f4\u4e3a\\(N!\\)</p> </li> <li> <p>Q2-1. Spanning Tree Problem: Given an undirected graph\\(G=(V, E)\\), where\\(|V|=n\\)and\\(|E|=m\\). Let\\(F\\)be the set of all spanning trees of\\(G\\). Define\\(d(u)\\)to be the degree of a vertex\\(u \\in V\\). Define\\(w(e)\\)to be the weight of an edge\\(e \\in E\\).</p> <p>We have the following three variants of spanning tree problems:</p> <ul> <li> <p>(1) Max Leaf Spanning Tree: find a spanning tree\\(T \\in F\\)with a maximum number of leaves.</p> </li> <li> <p>(2) Minimum Spanning Tree: find a spanning tree\\(T \\in F\\)with a minimum total weight of all the edges in\\(T\\).</p> </li> <li> <p>(3) Minimum Degree Spanning Tree: find a spanning tree\\(T \\in F\\)such that its maximum degree of all the vertices is the smallest.</p> </li> </ul> <p>For a pair of edges\\(\\left(e, e^{\\prime}\\right)\\)where\\(e \\in T\\)and\\(e^{\\prime} \\in(G-T)\\)such that\\(e\\)belongs to the unique cycle of\\(T \\cup e^{\\prime}\\), we define edge-swap\\(\\left(e, e^{\\prime}\\right)\\)to be\\((T-e) \\cup e^{\\prime}\\).</p> <p>Here is a local search algorithm:</p> <pre><code>T = any spanning tree in F_i\nwhile (there is an edge-swap (e, e') which reduces Cost(T)) {\n   T = T - e + e';\n}\nreturn T;\n</code></pre> <p>Here\\(\\operatorname{cost}(T)\\)is the number of leaves in\\(T\\)in Max Leaf Spanning Tree; or is the total weight of\\(T\\)in Minimum Spanning Tree; or else is the minimum degree of\\(T\\)in Minimum Degree Spanning Tree.</p> <p>Which of the following statements is TRUE?</p> <p>A. The local search always return an optimal solution for Max Leaf Spanning Tree</p> <p>B.<code>The local search always return an optimal solution for Minimum Spanning Tree</code></p> <p>C. The local search always return an optimal solution for Minimum Degree Spanning Tree</p> <p>D. For neither of the problems that this local search always return an optimal solution</p> <p>B\u3002</p> <p>\u6700\u5c0f\u751f\u6210\u6811\u7684 Prim \u7b97\u6cd5\u662f\u5c40\u90e8\u6027\u7684, \u4f46\u662f\u5374\u662f\u6b63\u786e\u7684, \u731c\u60f3\u6700\u5c0f\u751f\u6210\u6811\u7684\u5c40\u90e8\u6700\u4f18\u5c31\u662f\u5168\u5c40\u6700\u4f18\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u7ed3\u8bba\u786e\u5b9e\u662f\u6b63\u786e\u7684\uff0c\u8fd9\u4e2a\u8bc1\u660e\u6bd4\u8f83\u96be\uff0c\u8bfb\u8005\u53ef\u4ee5\u8003\u8651\u52bf\u80fd\u51fd\u6570\u7b49\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u5176\u4ed6\u4e24\u79cd\uff0c\u5bfb\u627e\u5176\u53cd\u4f8b\u3002</p> <p>\u5bf9\u4e8eMax Leaf Spanning Tree\uff0c\u5bfb\u627e\u53cd\u4f8b\u5982\u4e0b:</p> <p> </p> <p>\u5bf9\u4e8eMinimum Degree Spanning Tree\uff0c\u540c\u6837\u7684\u539f\u56fe(Original)\uff0c\u5bfb\u627e\u53cd\u4f8b\u5982\u4e0b:</p> <p> </p> <p>\u7a76\u5176\u672c\u8d28\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5982\u679c\u6709\u66f4\u597d\u7684\u9009\u62e9\u4e00\u5b9a\u80fd\u4ea4\u6362\uff0c\u56e0\u4e3a\u8fdb\u884c\u7684\u6b63\u662f\u8fb9\u4ea4\u6362\uff0c\u76f4\u63a5\u5f71\u54cd\u7684\u5c31\u662f\u6811\u7684\u6574\u4f53\u6743\u503c\u3002\u53e6\u5916\u4e24\u79cd\u6811\u7684\u6027\u8d28\u5219\u4e0e\u9876\u70b9\u76f8\u5173\uff0c\u4e0d\u80fd\u76f4\u63a5\u5f71\u54cd\uff0c\u6240\u4ee5\u5c31\u5bc4\u4e86\u3002</p> </li> <li> <p>Q2-2. There are\\(n\\)jobs, and each job\\(j\\)has a processing time\\(t_{j}\\). We will use a local search algorithm to partition the jobs into two groups A and B, where set A is assigned to machine\\(M_{1}\\)and set\\(\\mathrm{B}\\)to\\(M_{2}\\). The time needed to process all of the jobs on the two machines is\\(T_{1}=\\sum_{j \\in A} t_{j}, T_{2}=\\sum_{j \\in B} t_{j}\\). The problem is to minimize\\(\\left|T_{1}-T_{2}\\right|\\).</p> <p>Local search: Start by assigning jobs\\(1, \\ldots, n / 2\\)to\\(M_{1}\\), and the rest to\\(M_{2}\\).</p> <p>The local moves are to move a single job from one machine to the other, and we only move a job if the move decreases the absolute difference in the processing times. Which of the following statement is true?</p> <p>A. The problem is NP-hard and the local search algorithm will not terminate.</p> <p><code>B. When there are many candidate jobs that can be moved to reduce the absolute difference, if we always move the job$j$with maximum$t_j$, then the local search terminates in at most$n$moves.</code></p> <p>C. The local search algorithm always returns an optimal solution.</p> <p>D. The local search algorithm always returns a local solution with\\(\\frac{1}{2}T_1\\leqslant T\\leqslant 2T_1\\).</p> <p>B\u3002</p> <p>A\uff0c\u6bcf\u6b21\u90fd\u51cf\u5c0f\uff0c\u80af\u5b9a\u4f1a\u51cf\u65e0\u53ef\u51cf\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u7ec8\u6b62\u3002NP-hard\u731c\u60f3\u5e94\u8be5\u662f\u7684\uff0c\u4e00\u5171\u6709\\(2^n\\)\u79cd\u72b6\u6001\u3002</p> <p>B\uff0c\u4e00\u9879\u88ab\u79fb\u5230\u53e6\u4e00\u4fa7\u4e4b\u540e\u80af\u5b9a\u4e0d\u4f1a\u518d\u88ab\u79fb\u56de\u6765\uff0c\u56e0\u6b64\u6700\u591a\u79fb\\(n\\)\u6b21\u3002</p> <p>C\uff0c\u8003\u8651\\(\\{10,11,12,12,13,14\\}=\\{10,11,13\\}+\\{12,12,14\\}\\)\uff0c\u53ef\u77e5\u65e0\u6cd5\u79fb\u52a8\u4e86\uff0c\u4f46\u662f\u663e\u7136\u6700\u4f18\u89e3\u662f\\(\\{11,12,13\\}+\\{10,12,14\\}\\)\u3002</p> <p>D\uff0c\u8003\u8651\\(\\{1,2,100\\}=\\{1,2\\}+\\{100\\}\\)\u3002    </p> </li> <li> <p>Q2-3. Max-cut problem: Given an undirected graph\\(G=(V, E)\\)with positive integer edge weights\\(w_{e}\\), find a node partition\\((A, B)\\)such that\\(w(A, B)\\), the total weight of edges crossing the cut, is maximized. Let us define\\(S^{\\prime}\\)be the neighbor of\\(S\\)such that\\(S^{\\prime}\\)can be obtained from\\(S\\)by moving one node from\\(A\\)to\\(B\\), or one from\\(B\\)to\\(A\\). only choose a node which, when flipped, increases the cut value by at least\\(w(A, B) /|V|\\). Then which of the following is true?</p> <p>A. <code>Upon the termination of the algorithm, the algorithm returns a cut</code>\\((A,B)\\)so that\\(2.5w(A,B)\\geqslant w(A^\u2217, b^*)\\),    where\\((A^\u2217 ,B^\u2217)\\)is an optimal partition.</p> <p>B. The algorithm terminates after at most\\(O(\\log|V|\\log W)\\)flips, where\\(W\\)is the total weight of edges.</p> <p>C. Upon the termination of the algorithm, the algorithm returns a cut\\((A,B)\\)so that\\(2w(A,B)\\geqslant w(A^\u2217, b^*)\\).</p> <p>D. The algorithm terminates after at most\\(O(|V|^2)\\)flips.</p> <p>\u9898\u76ee\u4e2d\u7ed9\u51fa\u6761\u4ef6\uff0cincrease the cut value by at least w(A,B)/V,\u8bf4\u660e\u6b64\u65f6\\(\\epsilon = 0.5\\)</p> <p>\u6839\u636e\u5b9a\u7406\uff0c\u6700\u540e\u81f3\u591a\u6267\u884c\\(n/\\epsilon \\ logW\\)\u6b21flip</p> <p>\u6700\u7ec8\u7ed3\u679c\u6ee1\u8db3\uff0c\\(w(A^*,B^*) &lt; (2 + \\epsilon)w(A,B)\\)</p> <p> </p> </li> </ol>"},{"location":"ADS/13.%20Randomized%20Algorithms/","title":"13. Randomized Algorithms","text":"<p> \u7ea6 1649 \u4e2a\u5b57  17 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>efficient randomized algorithms that only need to yield the correct answer with high probability</p> <p>randomized algorithms that are always correct, and run efficiently in expectation</p> <p></p>"},{"location":"ADS/13.%20Randomized%20Algorithms/#131-the-hiring-problem","title":"13.1 The Hiring Problem","text":"<ul> <li> <p>Hire an office assistant from headhunter </p> </li> <li> <p>Interview a different applicant per day for N days</p> </li> <li> <p>Interviewing\\(Cost = C_i  &lt;&lt;  Hiring Cost = C_h\\)</p> </li> </ul> <p>\\(\u9762\u8bd5\u6210\u672c = C_i &lt;&lt; \u62db\u8058\u6210\u672c = C_h\\)</p> <ul> <li>Analyze interview &amp; hiring cost instead of running time</li> </ul> <p>\u5206\u6790\u9762\u8bd5\u548c\u62db\u8058\u6210\u672c\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u95f4</p> <p>Assume M people are hired. Total Cost:\\(O(NC_i + MC_h)\\)</p> <pre><code>int Hiring ( EventType C[ ], int N )\n{   /* candidate 0 is a least-qualified dummy candidate */\n    int Best = 0;\n    int BestQ = the quality of candidate 0;\n    for ( i=1; i&lt;=N; i++ ) {\n        Qi = interview( i ); /* Ci */\n        if ( Qi &gt; BestQ ) {\n            BestQ = Qi;\n            Best = i;\n            hire( i );  /* Ch */\n        }\n    }\n    return Best;\n}\n</code></pre> <p>worse case: The candidates come in increasing quality order.</p> <p><code>\u6700\u574f\u7684\u60c5\u51b5\u662f\uff1a\u9762\u8bd5\u8005\u7684\u7d20\u8d28\u4e00\u6b21\u9012\u589e\uff0c\u76f8\u5f53\u4e8e\u6bcf\u9762\u8bd5\u4e00\u4e2a\u4eba\uff0c\u5c31\u4f1a\u62db\u52df\u4e00\u4e2a\u4eba</code></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(O(NC_h)\\)</p> <p>Assume candidates arrive in random order</p> <p>Randomness assumption: any of first i candidates is equally likely to be best-qualified so far.</p> <p>\u968f\u673a\u6027\u5047\u8bbe\uff1a\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u524d i \u540d\u5019\u9009\u4eba\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u540c\u6837\u53ef\u80fd\u6700\u6709\u8d44\u683c</p> <p></p> <p><code>\u524di\u4e2a\u5019\u9009\u4eba\uff0c\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u80fd\u88ab\u5f55\u53d6\u3002\u4ee5\u7b2ci\u4e2a\u4eba\u4e3a\u4f8b\uff0c\u7b2ci\u4e2a\u4eba\u88ab\u5f55\u53d6\uff0c\u610f\u5473\u7740\u5b83\u7684\u80fd\u529b\u6bd4\u524d\u9762\u6240\u6709\u4eba\u7684\u80fd\u529b\u90fd\u5f3a\uff0c\u6b64\u65f6\u7684\u6982\u7387\u662f1/i\uff0c\u5bf9\u5e94\u7684\u671f\u671b\u5c31\u662f1*1/i + 0*(i-1)/i = 1/i</code></p> <p>\u6240\u4ee5\u6700\u7ec8\u7684\u671f\u671b\u4e3a\\(E[X] = E[\\sum_{i=1}^NX_i] = \\sum_{i=1}^NE[X_i] = \\sum_{i=1}^N \\dfrac{1}{i} = lnN\\)\u3002\u4ed8\u51fa\u7684\u603b\u4ee3\u4ef7\u4e3a\\(O(C_hlnN+NC_i)\\)</p> <pre><code>int RandomizedHiring ( EventType C[ ], int N )\n{   /* candidate 0 is a least-qualified dummy candidate */\n    int Best = 0;\n    int BestQ = the quality of candidate 0;\n\n    randomly permute the list of candidates;\n\n    for ( i=1; i&lt;=N; i++ ) {\n        Qi = interview( i ); /* Ci */\n        if ( Qi &gt; BestQ ) {\n            BestQ = Qi;\n            Best = i;\n            hire( i );  /* Ch */\n        }\n    }\n}\n</code></pre>"},{"location":"ADS/13.%20Randomized%20Algorithms/#1311-randomized-permutation-algorithm","title":"13.1.1 Randomized Permutation Algorithm","text":""},{"location":"ADS/13.%20Randomized%20Algorithms/#1312-online-hiring-algorithm","title":"13.1.2 Online Hiring Algorithm","text":"<p>hire only once</p> <pre><code>int OnlineHiring ( EventType C[ ], int N, int k)\n{\n    int Best = N;\n    int BestQ = - \uf0a5 ;\n    for ( i=1; i&lt;=k; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ )   BestQ = Qi;\n    }\n    for ( i=k+1; i&lt;=N; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ ) {\n            Best = i;\n            break;\n        }\n    }\n    return Best;\n}\n</code></pre> <p><code>\u524d\u9762k\u4e2a\u4eba\u4ec5\u7528\u4e8e\u6d4b\u8bd5\u8bc4\u4f30\u9762\u8bd5\u8005\u7684\u6c34\u5e73(\u6311\u9009\u51fa\u6700\u9ad8\u7684\u7d20\u8d28)\uff0c\u96c7\u4f63\u4eba\u4ecek+1\u4e2a\u4eba\u5f00\u59cb\uff0c\u6bcf\u4e2a\u4eba\u7684quality\u90fd\u4e0e\u6700\u9ad8\u7684\u7684quality\u8fdb\u884c\u6bd4\u8f83\uff0c\u9009\u62e9\u51fa\u6700\u597d\u7684</code></p> <p>What is the probability we hire the best qualified candidate for a given k?</p> <p></p> <p><code>\u6700\u597d\u7684\u9762\u8bd5\u8005\u5728\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u8981\u6c42i&gt;k,\u5e76\u4e14\u4ecek+1\u5230i-1\u7684\u9762\u8bd5\u8005\u90fd\u6ca1\u6709\u88ab\u96c7\u4f63</code></p> <p>What is the best value of k to maximize above probability?</p> <ul> <li> <p>\u7528\\(S_i\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u5019\u9009\u8005\u662f\u6700\u597d\u7684</p> </li> <li> <p>\u8981\u4f7f\u7b2c\\(i\\)\u4e2a\u4eba\u662f\u6700\u597d\u7684\uff0c\u9700\u8981\u6ee1\u8db3\u7b2c\\(i\\)\u4e2a\u4eba\u9996\u5148quality\u9700\u8981\u5927\u4e8ebestQ\uff0c\u7136\u540e\u4ece\\(k+1\\)\u5230\\(i-1\\)\u4e2a\u4eba\u6ca1\u6709\u4eba\u7684quality\u5927\u4e8ebestQ\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u4eba\u88abhire\uff08<code>\u56e0\u4e3a\u4ece\u4e0a\u65b9\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u4e00\u65e6\u67d0\u4e2a\u4eba\u7684quality\u5927\u4e8ebestQ\uff0c\u5c31\u4f1abreak</code>\uff09</p> </li> </ul> <p>\u4ece\u7b2c\\(k+1\\)\u5230\u7b2c\\(i-1\\)\u6ca1\u6709\u5f55\u4e8e\u4efb\u4f55\u4eba\u3002\u8fd9\u610f\u5473\u7740\u524d\\(i-1\\)\u4e2a\u4eba\u91cc\u9762\uff0c\u6700\u597d\u7684\u843d\u5728\u4e86\u524d\\(k\\)\u4e2a\u4eba\u4e4b\u4e2d\uff0c\u6982\u7387\u5c31\u662f\\(\\dfrac{k}{i-1}\\)</p> <ul> <li> <p>\u6b64\u65f6\u6982\u7387\u4e3a\\(P[S_i] = P[A\\cap B] = P[A]\\times P[B] = \\dfrac{1}{N} \\times \\dfrac{k}{i-1} = \\dfrac{k}{N(i-1)}\\)</p> </li> <li> <p>\u90a3\u4e48\u6700\u597d\u7684\u9762\u8bd5\u8005\u51fa\u73b0\u5728\u7b2c\\(k\\)\u4e2a\u4eba\u4e4b\u540e\u7684\u6982\u7387\u4e3a\uff1a  $$   P[S] = \\sum_{i=k+1}^N P[S_i] = \\sum_{i=k+1}^N \\dfrac{k}{N(i-1)} = \\dfrac{k}{N}\\sum_{i=k}^{N-1} \\dfrac{1}{i}  $$</p> </li> </ul> <p></p> <p></p>"},{"location":"ADS/13.%20Randomized%20Algorithms/#132-quicksort","title":"13.2 Quicksort","text":"<ul> <li> <p>Deterministic Quicksort</p> <p>-\\(\\Theta(N^2)\\)<code>worst-case running time</code> -\\(\\Theta(N logN)\\)<code>average case running time</code></p> </li> </ul> <p>\u8981\u60f3\u52a0\u901fquicksort\uff0c\u6bcf\u4e00\u6b21\u5c06\u6570\u636e\u4e00\u5206\u4e3a\u4e8c\u65f6\uff0c\u5e0c\u671b\u4e24\u8fb9\u7684\u6570\u636e\u5927\u81f4\u76f8\u7b49</p> <p>Central splitter := the pivot that divides the set so that each side contains at least n/4</p> <p><code>Central splitter := \u5212\u5206\u96c6\u5408\u7684\u4e3b\u5143\uff0c\u4f7f\u5f97\u6bcf\u8fb9\u81f3\u5c11\u5305\u542b n/4</code></p> <p>Modified Quicksort := always select a central splitter before recursions</p> <p><code>\u76f8\u5f53\u4e8e\u9009\u62e9pivot\u7684\u8303\u56f4\u5728[n/4,3n/4].\u9009\u62e9\u5230central splitter\u7684\u6982\u7387\u662f1/2</code></p> <p>\u5982\u679c\u7b2c\u4e00\u6b21\u6ca1\u6709\u9009\u62e9\u5230\uff0c\u5c31\u518d\u6b21\u9009\u62e9\u3002\u671f\u671b\u6b21\u6570\u4e3a\uff1a</p> \\[ \\begin{aligned} &amp;1 \\times 1/2 + 2 \\times 1/4 + 3\\times 1/8 + ...\\\\ = &amp;\\sum_{i=1}^\\infin i \\times \\dfrac{1}{2^i}\\\\ = &amp; (1/2+1/4+...) + (1/4+1/8+...)+(1/8+1/16+..)+..\\\\ = &amp; 1 + 1/2 + 1/4 + ..\\\\ = &amp;2 \\end{aligned} \\] <p></p> <p>\u5212\u5206j\u6b21\u4e4b\u540e\uff0c\u5b50\u95ee\u9898\u7684\u6700\u5927\u5c3a\u5bf8\u662f\\(N (\\dfrac{3}{4})^{j+1} \\leq |S| \\leq N (\\dfrac{3}{4})^{j}\\)</p> <p><code>\u6309\u7167\u5b50\u95ee\u9898\u7684\u6700\u5927\u5c3a\u5bf8\u6765\uff0c\u76f8\u5e94\u7684\u5b50\u95ee\u9898\u7684\u6700\u5927\u6570\u91cf\u4e3a</code>\\((\\dfrac{4}{3})^{j+1}\\),\u6b64\u65f6\u6070\u597d\uff0c\u5b50\u95ee\u9898\u7684\u6570\u91cf\u4e58\u4ee5\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u5f97\u5230N</p> <p>\u89e3\u51b3\u7c7b\u578bj\u6240\u9700\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\\(E[T_{type \\ j}] = O(N(\\dfrac{3}{4})^j)\\times (\\dfrac{4}{3})^{j+1} = O(N)\\)</p> <p>\u5176\u4e2d\u95ee\u9898\u7684\u7c7b\u578b\u662f\\(log_{\\frac{4}{3} }N\\),<code>\u56e0\u4e3a\u95ee\u9898\u7684\u6700\u5c0f\u89c4\u6a21\u9700\u8981\u4e3a1</code></p> <p>\u6240\u4ee5\u603b\u7684\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N) \\times O(logN) = O(NlogN)\\)</p>"},{"location":"ADS/13.%20Randomized%20Algorithms/#133-\u4e60\u9898\u96c6","title":"13.3 \u4e60\u9898\u96c6","text":"<ol> <li> <p>Let\\(a=\\left(a_{1}, a_{2}, \\ldots, a_{i}, \\ldots, a_{j}, \\ldots, a_{n}\\right)\\)denote the list of elements we want to sort. In the quicksort algorithm, if the pivot is selected uniformly at random. Then any two elements get compared at most once and the probability of\\(a_{i}\\)and\\(a_{j}\\)being compared is\\(2 /(j-i+1)\\)for\\(j&gt;i\\), given that\\(a_{i}\\)or\\(a_{j}\\)is selected as the pivot. (T/F)</p> <p><code>F</code></p> <p>\u4e3e\u53cd\u4f8b\u5982\u4e0b\uff1a{3, 4, 1, 2, }\u3002\u5982\u679c\u7b2c\u4e00\u6b21\u9009pivot\u9009\u4e2d3\u6216\u80052\uff0c\u90a3\u4e481\u548c4\u4f1a\u88ab\u5206\u5f00\uff0c\u4e0d\u4f1a\u88ab\u6bd4\u8f83\u3002</p> <p>\u5982\u679c\u7b2c\u4e00\u6b21\u5c31\u9009\u4e2d1\u62164\uff0c\u5b83\u4eec\u624d\u4f1a\u88ab\u6bd4\u8f83\u3002\u56e0\u6b64\u5b83\u4eec\u88ab\u6bd4\u8f83\u7684\u6982\u7387\u662f1/2\u3002\u6309\u7167\\(\\dfrac{2}{j-i+1}\\)\u8ba1\u7b97\uff0c\u5e94\u8be5\u662f1\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u662f\u5df2\u7ecf\u88ab\u6392\u5e8f\u597d\u7684\uff0c\u8fd9\u5c31\u662f\u5bf9\u7684\u3002</p> </li> <li> <p>Given a linked list containing\\(N\\)nodes. Our task is to remove all the nodes. At each step, we randomly choose one node in the current list, then delete the selected node together with all the nodes after it. Here we assume that each time we choose one node uniformly among all the remaining nodes. What is the expected number of steps to remove all the nodes?</p> <p>A.\\(\\Theta (\\log N)\\)</p> <p>B.\\(N/e\\)</p> <p>C.\\(N/2\\)</p> <p>D.\\(\\sqrt{N}\\)</p> <p><code>A</code></p> <ol> <li>\u521d\u59cb\u65f6\uff0c\u94fe\u8868\u6709 \ud835\udc41N \u4e2a\u8282\u70b9\u3002</li> <li>\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u968f\u673a\u9009\u62e9\u5f53\u524d\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5220\u9664\u8be5\u8282\u70b9\u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u8282\u70b9\u3002</li> <li>\u76ee\u6807\u662f\u8ba1\u7b97\u5b8c\u5168\u5220\u9664\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u9884\u671f\u6b65\u9aa4\u6570\u3002</li> </ol> <p>\u5047\u8bbe \ud835\udc38(\ud835\udc41)\u8868\u793a\u4ece\u6709 \ud835\udc41 \u4e2a\u8282\u70b9\u7684\u94fe\u8868\u4e2d\u5220\u9664\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u9884\u671f\u6b65\u9aa4\u6570</p> <p>\u5982\u679c\u6211\u4eec\u9009\u62e9\u7b2c \ud835\udc56 \u4e2a\u8282\u70b9\uff08\u5176\u4e2d \ud835\udc56 \u7684\u8303\u56f4\u662f\u4ece 1 \u5230 \ud835\udc41 \uff09\uff0c\u5219\u8be5\u9009\u62e9\u4f1a\u5220\u9664\u4ece\u7b2c \ud835\udc56 \u4e2a\u8282\u70b9\u5230\u672b\u5c3e\u7684\u6240\u6709\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u4e00\u6b65\u4e2d\u5220\u9664\u4e86\\(\ud835\udc41\u2212\ud835\udc56+1\\)\u4e2a\u8282\u70b9\u3002</p> <p><code>\u9996\u5148\u5148\u5728N\u4e2a\u70b9\u4e2d\u4efb\u9009\u4e00\u4e2a\u70b9\uff0c\u6267\u884c\u4e00\u6b65\u64cd\u4f5c\uff0c\u5047\u8bbe\u9009\u53d6\u7b2ci\u4e2a\u70b9\uff0c\u90a3\u4e48\u5269\u4f59\u7684\u70b9\u4e3ai-1\uff0c\u540e\u7eed\u53ea\u9700\u8981\u6c42E(i-1)</code></p> <p>\u90a3\u4e48\u5f97\u5230\u9012\u5f52\u5173\u7cfb\u5f0f\uff1a\\(E(N) = 1 + \\dfrac{1}{N}\\sum_{i=1}^NE(i-1) = 1 + \\dfrac{1}{N}\\sum_{i=0}^{N-1}E(i)\\)</p> <ul> <li> <p>\u76f4\u63a5\u4ee3\u5165 B,C\uff0c\u663e\u7136\u4e0d\u5bf9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u9012\u63a8\u5f0f\u53ea\u53ef\u80fd\u51fa\u6709\u7406\u6570\uff0cD \u5f88\u53ef\u80fd\u51fa\u65e0\u7406\u6570\uff0c\u4e5f\u4e0d\u5bf9\u3002</p> </li> <li> <p>\u7136\u800c\uff0c\u5f88\u8f7b\u677e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5f3a\u5f52\u7eb3\u6cd5\u5224\u65ad\\(a_n=O(\\log N)\\)\u3002(\\(\\Omega\\)\u6ca1\u6709\u8bd5\u8fc7\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u3002)     $$     a_n = \\frac{1}{N}\\sum_{i=1}^{N-1}a_i+1     \\leqslant \\frac{C}{N}\\log\\left(2N\\prod_{i=1}^{N-1}i\\right)     \\leqslant C\\log N     $$     \u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u53f7\u5e76\u4e0d\u90a3\u4e48\u4e25\u683c\uff0c\u4e0d\u8fc7\\(N\\)\u8db3\u591f\u5927\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u4e25\u683c\u7684\u3002</p> </li> </ul> </li> <li> <p>Use The Online Hiring Algorithm ( hire only once ). Assume that the quality input\\(C[ ]\\)is uniformly random.</p> <pre><code>int OnlineHiring ( EventType C[ ], int N, int k )\n{\n    int Best = N;\n    int BestQ = -INFINITY ;\n    for ( i=1; i&lt;=k; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ )   BestQ = Qi;\n    }\n    for ( i=k+1; i&lt;=N; i++ ) {\n        Qi = interview( i );\n        if ( Qi &gt; BestQ ) {\n            Best = i;\n            break;\n        }\n    }\n    return Best;\n}\n</code></pre> <p>When\\(N = 271\\)and\\(k = 90\\), the probability of hiring the Nth candidate is __.</p> <p><code>1/3\u3002\u8981\u6c42\u524d 270 \u4eba\u4e2d\u6700\u597d\u7684\u843d\u5728\u524d 90 \u4eba\u4e2d\u3002</code></p> <p>\u4e5f\u53ef\u4ee5\u5206\u524d 271 \u4eba\u4e2d\u6700\u597d\u7684\u5728\u54ea\u91cc\u8fdb\u884c\u8ba8\u8bba\uff0c\u5373</p> \\[ \\frac{1}{N}\\cdot \\frac{k}{N-1} + \\frac{k}{N} = \\frac{1}{3} \\] </li> </ol>"},{"location":"ADS/14.%20Parallel%20Algorithm/","title":"14. Parallel Algorithm","text":"<p> \u7ea6 3855 \u4e2a\u5b57  17 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f</p> <ol> <li> <p>\u6307\u4ee4\u7ea7\u5e76\u884c\uff08Instruction-Level Parallelism\uff0cILP\uff09\uff1a\u5728\u4e00\u4e2aCPU \u5185\u90e8\uff0c\u591a\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u6267\u884c\uff1b\u4f8b\u5982\u5927\u5bb6\u73b0\u5728\u5c31\u5df2\u7ecf\u5b66\u8fc7\u7684\u6d41\u6c34\u7ebfCPU\uff0c\u4ee5\u53ca\u5c06\u6765\u53ef\u80fd\u4f1a\u5b66\u5230\u7684\u4e71\u5e8f\u3001\u591a\u53d1\u5c04\u4ee5\u53ca\u8d85\u957f\u6307\u4ee4\u5b57\uff08VLIW\uff0c\u5373\u628a\u4e0d\u76f8\u5173\u7684\u6307\u4ee4\u5c01\u88c5\u5230\u4e00\u6761\u8d85\u957f\u7684\u6307\u4ee4\u5b57\u4e2d\u3001\u8d85\u6807\u91cf\uff08\u4f8b\u5982\u6709\u591a\u4e2aALU\uff0c\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u6ca1\u6709\u76f8\u5173\u6027\u7684\u591a\u6761\u6307\u4ee4\uff09\u7b49\uff1b</p> </li> <li> <p>\u6570\u636e\u7ea7\u5e76\u884c\uff08Data-Level Parallelism\uff0cDLP\uff09\uff1a\u5373\u5c06\u76f8\u540c\u7684\u64cd\u4f5c\u540c\u65f6\u5e94\u7528\u4e8e\u4e00\u4e9b\u6570\u636e\u9879\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u4f8b\u5982\u7ecf\u5178\u7684SIMD\uff08Single Instruction, Multiple Data\uff09\u67b6\u6784\uff0c\u5373\u4e00\u6761\u6307\u4ee4\u540c\u65f6\u4f5c\u7528\u4e8e\u591a\u4e2a\u6570\u636e\uff0c\u4f8b\u5982\u7528\u4e00\u6761\u6307\u4ee4\u5b9e\u73b0\u5411\u91cf\u52a0\u6cd5\uff0c\u4e24\u4e2a\u5411\u91cf\u4e2d\u6bcf\u5bf9\u5bf9\u5e94\u7684\u5143\u7d20\u76f8\u52a0\u4e92\u4e0d\u5e72\u6270\uff0c\u6240\u4ee5\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6240\u6709\u7684\u52a0\u6cd5\uff1b</p> </li> <li>\u7ebf\u7a0b\u7ea7\u5e76\u884c\uff08Thread-Level Parallelism\uff0cTLP\uff09\uff1a\u4e00\u79cd\u663e\u5f0f\u5e76\u884c\uff0c\u7a0b\u5e8f\u5458\u8981\u8bbe\u8ba1\u5e76\u884c\u7b97\u6cd5\uff0c\u5199\u591a\u7ebf\u7a0b\u7a0b\u5e8f\uff0c\u8fd9\u4e5f\u662f\u672c\u8bb2\u5c06\u8981\u8ba8\u8bba\u7684\u5185\u5bb9\u3002\u7ebf\u7a0b\u7ea7\u5e76\u884c\u4e3b\u8981\u6307\u540c\u65f6\u591a\u7ebf\u7a0b\uff08SMT\uff0c\u662f\u4e00\u79cd\u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u57fa\u7840\u4e0a\u7684\u6269\u5c55\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u6838\u4e0a\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u6267\u884c\u5355\u5143\uff0c\u4ee5\u4fbf\u63d0\u9ad8\u90e8\u4ef6\u7684\u5229\u7528\u7387\uff0c\u63d0\u9ad8\u541e\u5410\u91cf\uff09/\u8d85\u7ebf\u7a0b\uff08HT\uff0c\u4e00\u4e2a\u7269\u7406CPU \u6838\u5fc3\u88ab\u4f2a\u88c5\u6210\u4e24\u4e2a\u4ee5\u4e0a\u7684\u903b\u8f91CPU \u6838\u5fc3\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u591a\u4e2aCPU \u5728\u540c\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u662f\u901a\u8fc7\u5728\u4e00\u4e2a\u7269\u7406\u6838\u5fc3\u4e2d\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\u5b9e\u73b0\u7684\uff09\u4ee5\u53ca\u591a\u6838\u548c\u591a\u5904\u7406\u5668\u3002</li> </ol>"},{"location":"ADS/14.%20Parallel%20Algorithm/#141-\u5e76\u884c\u7b97\u6cd5\u57fa\u672c\u6a21\u578b","title":"14.1 \u5e76\u884c\u7b97\u6cd5\u57fa\u672c\u6a21\u578b","text":"<p><code>\u5b9a\u4e49</code> \u52a0\u901f\u6bd4\uff08Speedup\uff09\u662f\u6307\u5728\u5e76\u884c\u8ba1\u7b97\u4e2d\uff0c\u4f7f\u7528p \u4e2a\u5904\u7406\u5668\u65f6\u76f8\u5bf9\u4e8e\u4f7f\u7528\u4e00\u4e2a\u5904\u7406\u5668\u65f6\u7684\u6027\u80fd\u63d0\u5347\u6bd4\u4f8b\uff0c\u5373 $$ S(p) = \\dfrac{T_1}{T_p} $$ \u5176\u4e2d\\(T1\\)\u662f\u4f7f\u7528\u4e00\u4e2a\u5904\u7406\u5668\u65f6\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\\(Tp\\)\u662f\u4f7f\u7528\\(p\\)\u4e2a\u5904\u7406\u5668\u65f6\u7684\u8fd0\u884c\u65f6\u95f4\u3002</p> <p>\u663e\u7136\u6700\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u52a0\u901f\u6bd4\u5e94\u5f53\u662fp\uff0c\u5373\u4f7f\u7528p \u4e2a\u5904\u7406\u5668\u65f6\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u4f7f\u7528\u4e00\u4e2a\u5904\u7406\u5668\u65f6\u76841/p\u3002\u7136\u800c\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u7531\u4e8e\u5e76\u884c\u7b97\u6cd5\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u90fd\u6709\u4e00\u5b9a\u7684\u56f0\u96be\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u4f7f\u7528\u591a\u4e2a\u5904\u7406\u5668\u610f\u5473\u7740\u989d\u5916\u7684\u901a\u4fe1\u5f00\u9500\uff1b</li> <li>\u5176\u6b21\uff0c\u5982\u679c\u5904\u7406\u5668\u5e76\u672a\u5206\u914d\u5230\u5b8c\u5168\u76f8\u540c\u7684\u5de5\u4f5c\u91cf\uff0c\u5219\u4f1a\u4ea7\u751f\u4e00\u90e8\u5206\u7684\u95f2\u7f6e\uff0c\u5c31\u4f1a\u9020\u6210\u8d1f\u8f7d\u4e0d\u5747\u8861\uff08load unbalance\uff09\uff0c\u518d\u6b21\u964d\u4f4e\u5b9e\u9645\u901f\u5ea6\uff1b</li> <li>\u6700\u540e\uff0c\u4ee3\u7801\u8fd0\u884c\u53ef\u80fd\u4f9d\u8d56\u5176\u539f\u6709\u987a\u5e8f\uff0c\u4e0d\u80fd\u5b8c\u5168\u5e76\u884c\u3002</li> </ul> <p>\u4e0a\u8ff0\u77e9\u9635\u76f8\u4e58\u5e76\u884c\u7b97\u6cd5\u53ef\u80fd\u6709\u5f88\u591a\u4e2aCPU \u540c\u65f6\u8bbf\u95ee\u4e86\u539f\u59cb\u77e9\u9635\u7684\u540c\u4e00\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982\u540c\u65f6\u5f97\u5230C \u7684\u7b2c\u4e00\u884c\u7684\u6240\u6709\u5143\u7d20\u9700\u8981\u540c\u65f6\u8bbf\u95eeA \u7684\u7b2c\u4e00\u884c\u7684\u6240\u6709\u5143\u7d20\u3002\u4e8b\u5b9e\u4e0a\uff0c<code>\u8fd9\u79cd\u7b97\u6cd5\u6a21\u578b\u88ab\u79f0\u4e3aPRAM \u6a21\u578b\uff08Parallel Random Access Machine\uff09\uff0c\u662fRAM \u6a21\u578b\uff08Random Access Machine\uff09\u5728\u5171\u4eab\u5185\u5b58\u7cfb\u7edf\u4e0a\u7684\u6269\u5c55</code>\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u6240\u6709\u5904\u7406\u5668\u5171\u4eab\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6b64\u5916\uff0c\u6a21\u578b\u8fd8\u5141\u8bb8\u540c\u4e00\u4f4d\u7f6e\u4e0a\u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u8bbf\u95ee\u3002\u8fd9\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7279\u522b\u662f\u5728\u6269\u5927\u95ee\u9898\u89c4\u6a21\u548c\u5904\u7406\u5668\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5bf9PRAM \u6a21\u578b\u7684\u53e6\u4e00\u4e2a\u53cd\u5bf9\u610f\u89c1\u662f\uff0c\u5373\u4f7f\u5728\u5355\u4e2a\u5904\u7406\u5668\u4e0a\uff0c\u5b83\u4e5f\u5ffd\u7565\u4e86\u5185\u5b58\u7684\u5c42\u6b21\u7ed3\u6784\uff08\u5373\u5ffd\u7565\u4e86cache \u7b49\uff09\u3002\u4f46\u5728\u6211\u4eec\u63a5\u4e0b\u6765\u7684\u7406\u8bba\u8ba8\u8bba\u4e2d\uff0c\u6211\u4eec\u5ffd\u7565\u8fd9\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u8ba8\u8bba\u5e76\u884c\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u3002\u6211\u4eec\u4f7f\u7528PRAM \u6a21\u578b\uff0c\u8fd9\u4e00\u6a21\u578b\u6709\u89c4\u5b9a\u5982\u4e0b\u4e09\u79cd\u5185\u5b58\u5171\u4eab\u65b9\u5f0f\uff1a</p> <ol> <li>EREW\uff08Exclusive Read Exclusive Write\uff09\uff1a\u6bcf\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5728\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u88ab\u4e00\u4e2a\u5904\u7406\u5668\u8bfb\u53d6\u6216\u5199\u5165\uff1b</li> <li>CREW\uff08Concurrent Read Exclusive Write\uff09\uff1a\u6bcf\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5728\u4efb\u610f\u65f6\u523b\u53ef\u4ee5\u88ab\u591a\u4e2a\u5904\u7406\u5668\u8bfb\u53d6\uff0c\u4f46\u53ea\u80fd\u88ab\u4e00\u4e2a\u5904\u7406\u5668\u5199\u5165\uff1b</li> <li>CRCW\uff08Concurrent Read Concurrent Write\uff09\uff1a\u6bcf\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5728\u4efb\u610f\u65f6\u523b\u53ef\u4ee5\u88ab\u591a\u4e2a\u5904\u7406\u5668\u8bfb\u53d6\u6216\u5199\u5165\uff0c\u56e0\u4e3a\u5199\u5165\u6d89\u53ca\u5230\u540c\u65f6\u5199\u5165\u4e0d\u540c\u503c\u53ef\u80fd\u9020\u6210\u7684\u51b2\u7a81\uff0c\u56e0\u6b64\u5199\u5165\u7b56\u7565\u53c8\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u4e09\u79cd\uff1a</li> </ol> <p>(a) <code>CRCW-C\uff08Common\uff09</code>\uff1a\u6240\u6709\u5904\u7406\u5668\u5199\u5165\u7684\u503c\u76f8\u540c\u65f6\u624d\u4f1a\u5199\u5165\uff1b (b) <code>CRCW-A\uff08Arbitrary\uff09</code>\uff1a\u6240\u6709\u5904\u7406\u5668\u5199\u5165\u7684\u503c\u53ef\u4ee5\u4e0d\u540c\uff0c\u4efb\u610f\u9009\u53d6\u5176\u4e2d\u4e00\u4e2a\u5199\u5165\u5373\u53ef\uff1b (c)<code>CRCW-P\uff08Priority\uff09</code>\uff1a\u6240\u6709\u5904\u7406\u5668\u5199\u5165\u7684\u503c\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u53ea\u6709\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5199\u5165\u624d\u4f1a\u751f\u6548\u3002</p>"},{"location":"ADS/14.%20Parallel%20Algorithm/#142-the-summation-problem","title":"14.2 The Summation Problem","text":"<pre><code> for (s=2; s&lt;2*n; s*=2)\n      for (i=0; i&lt;n-s/2; i+=s)\n        x[i] += x[i+s/2]\n</code></pre> <p><code>\u968f\u7740h\u7684\u589e\u52a0\uff0c\u9700\u8981\u4f7f\u7528\u7684\u5904\u7406\u5668\u7684\u6570\u91cf\u9010\u6e10\u51cf\u5c11\u3002\u4f46\u662f\u53c8\u4e3a\u6bcf\u4e00\u4e2aprocessor\u5206\u914d\u4e86\u4efb\u52a1\uff08stay idle\uff09\uff0c\u8fd9\u662f\u4e0d\u5fc5\u8981\u7684</code></p> <p><code>\u6539\u8fdb</code></p> <p></p> <p><code>pardo</code>\u8868\u793a\u4e0d\u6307\u5b9a\u8fd0\u884c\u7684processor\uff0c\u7531\u7f16\u8bd1\u5668\u81ea\u884c\u51b3\u5b9a\u4efb\u52a1\u7684\u5206\u914d\u3002\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u4e5f\u968f\u4e4b\u51cf\u5c11</p> <p><code>Measuring the performance</code></p> <ul> <li> <p>Work load \u2013 total number of operations: W(n)</p> </li> <li> <p>Worst-case running time: T(n)</p> </li> <li>W(n) operations and T(n) time</li> <li>P(n) = W(n)/T(n) processors and T(n) time (on a PRAM)</li> <li>W(n)/p time using any number of p \u2264 W(n)/T(n) processors (on a PRAM)</li> <li>W(n)/p + T(n) time using any number of p processors (on a PRAM)</li> </ul> <p><code>\u8ba1\u7b97n\u4e2a\u6570\u7684\u548c\u95ee\u9898\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(log N),\u5982\u679c\u7ed9\u5b9a\u7684\u5904\u7406\u5668\u6570\u91cf\u4e3an/2\uff0c\u4f1a\u4f7f\u5f97\u6700\u5e95\u5c42\u7684\u8fd0\u7b97\u6b21\u6570\u52a0\u4e00\uff0c\u4e8e\u662fT'(n) = T(n) + 1</code></p> <p><code>\u5b9a\u7406\uff1a\u8bbe\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u95ee\u9898\u7684\u5de5\u4f5c\u91cf\u4e3aW\uff0c\u5173\u952e\u8def\u5f84\u957f\u5ea6\u4e3aD\uff0c\u90a3\u4e48\u4f7f\u7528p\u4e2a\u5904\u7406\u5668\u7684\u5e76\u884c\u65f6\u95f4\u5177\u6709\u5982\u4e0b\u4e0a\u4e0b\u754c\uff1a</code> $$ \\dfrac{W}{p} \\leq T_p \\leq \\dfrac{W-D}{p} + D $$ \u4e0b\u754c\u662f\u663e\u7136\u7684\uff0c\u53d7\u5230\u7406\u60f3\u52a0\u901f\u6bd4\u7684\u9650\u5236</p> <p>\u5bf9\u4e8e\u4e0a\u754c\uff0c\u56e0\u4e3a\u5173\u952e\u8def\u5f84\u7684\u957f\u5ea6\u4e3aD\uff0c\u7b97\u6cd5\u7684\u6267\u884c\u53ef\u4ee5\u5206\u4e3aD\u4e2a\u5185\u90e8\u5e76\u884c\uff0c\u4e92\u76f8\u4e4b\u95f4\u4e32\u884c\u7684\u9636\u6bb5\uff0c\u6bcf\u4e00\u4e2a\u9636\u6bb5\u7684\u5de5\u4f5c\u91cf\u4e3a\\(W_i\\),\\(W = \\underset{i = 1}{\\sum}W_i\\)</p> <p>\u4f7f\u7528p \u4e2a\u5904\u7406\u5668\u65f6\uff0c\u6bcf\u4e00\u4e2a\u9636\u6bb5\u6240\u9700\u7684\u65f6\u95f4\u4e3adWi/pe\uff0c\u5411\u4e0a\u53d6\u6574\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u6bcf\u4e2a\u9636\u6bb5\u7684\u5de5\u4f5c\u91cf\u53ef\u80fd\u4e0d\u80fd\u88abp \u6574\u9664\uff0c\u6bd4\u5982\u5927\u4efb\u52a1\u88ab\u5206\u6210\u4e867 \u4e2a\u5b50\u4efb\u52a1\uff0c7 \u4e2a\u4efb\u52a1\u5206\u914d\u7ed93 \u4e2a\u5904\u7406\u5668\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5904\u7406\u5668\u5206\u914d\u5230\u7684\u4efb\u52a1\u6570\u5e94\u5f53\u662f2\uff0c2\uff0c3\u3002</p> <p>\u9700\u8981\u7684\u603b\u65f6\u95f4\u4e3a\uff1a $$ T_p = \\sum_{i=1}^D \\lceil \\dfrac{W_i}{p}\\rceil= \\sum_{i=1}^D \\lceil \\dfrac{W_i - 1}{p}\\rceil + 1 \\leq \\sum_{i=1}^D  \\dfrac{W_i - 1}{p} + 1 =\\dfrac{W-D}{p}+D $$ </p> <p>\u4e34\u754c\u72b6\u6001\uff0c\u5904\u7406\u5668\u7684\u6570\u76ee\u53d8\u4e3an/log n</p> <p></p> <p>\u77e9\u9635\u4e58\u6cd5\uff1a\u4e24\u4e2an\u9636\u65b9\u9635A\u548cB\u76f8\u4e58\u5f97\u5230\u77e9\u9635C\uff0c\u663e\u7136\u603b\u7684\u64cd\u4f5c\u6570\u662f2\\(n^3\\)(\u4e58\u6cd5\u548c\u52a0\u6cd5)\uff0c\u5982\u679c\u6211\u4eec\u6709\\(n^2\\)\u4e2a\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u8ba9\u6bcf\u4e00\u4e2a\u5904\u7406\u5668\u8d1f\u8d23\u7ed3\u679c\u77e9\u9635C\u7684\u4e00\u4e2a\u5143\u7d20\u7684\u8ba1\u7b97\u3002\u8fd9\u6837\u5e76\u884c\u8ba1\u7b97\u9700\u8981\u7684\u65f6\u95f4\u5c31\u662f\u8ba1\u7b97\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\\(2n\\)</p> <p>\u73b0\u5728\u63d0\u4f9b\u66f4\u591a\u7684\u5904\u7406\u5668\uff0c\u7528\u4e8e\u52a0\u901fn\u4e2a\u5bf9\u5e94\u5143\u7d20\u4e58\u6cd5\u7684\u548c\uff0c\u5229\u7528\u4e0a\u9762\u63d0\u5230\u7684\u7b97\u6cd5\uff0c\u989d\u5916\u63d0\u4f9bn/2\u4e2a\u5904\u7406\u5668\uff0c\u52a0\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u4eceO(n)\u4e0b\u964d\u5230O(logN)</p>"},{"location":"ADS/14.%20Parallel%20Algorithm/#143-prefix-sums","title":"14.3 Prefix-Sums","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u8ba1\u7b97\u8fd9\u4e2aC\uff0c\u6bcf\u4e00\u5c42\u8ba1\u7b97\u90fd\u53ef\u4ee5\u5e76\u884c\uff0c\u76f4\u5230\u7b97\u5b8cC(0, i) \u5b9e\u9645\u4e0a\u5c31\u662f1 \u5230i \u7684\u524d\u7f00\u548c\u3002\u56e0\u6b64\u5173\u952e\u5c31\u662f\u600e\u4e48\u4ece\u4e0a\u5f80\u4e0b\u8ba1\u7b97\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6bcf\u4e00\u5c42\u90fd\u80fd\u5e76\u884c</p> <p><code>B(h,i)\u8bb0\u5f55\u7684\u662fsummation problem\u8bb0\u5f55\u7684\u503c\uff0c\u4e0e\u524d\u7f00\u548c\u95ee\u9898\u5b58\u5728\u7740\u91cd\u5408\u4e4b\u5904</code></p> <p><code>C(h,i)\u8868\u793a\u524d2^h * i\u4e2a\u70b9\u7684\u548c</code></p> <ul> <li><code>\u5982\u679ci=1\uff0c\u90a3\u4e48C(h,i) = B(h,i).\u56e0\u4e3ai=1\u65f6\uff0c\u6839\u636e\u5b9a\u4e49\uff0cC(h,i)\u7b49\u4e8e\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u52a0\u5230\u8be5\u70b9\u4e3a\u6839\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u7684\u53f3\u4e0b\u89d2\u53f6\u5b50\u3002\u6240\u4ee5\u4e24\u8005\u76f8\u7b49</code></li> <li><code>\u5982\u679ci\u662f\u5076\u6570\uff0c\u8fd9\u8868\u660e\u8fd9\u4e00\u70b9\u662f\u67d0\u4e2a\u70b9\u7684\u53f3\u513f\u5b50\uff0c\u56e0\u6b64\u5b83\u548c\u5b83\u7684\u7236\u4eb2\u7684\u6700\u53f3\u4e0b\u89d2\u7684\u53f6\u5b50\u662f\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u6709C(h,i) = C(h+1,i/2)</code></li> <li><code>\u5982\u679ci\u662f\u5947\u6570\u4e14\u4e0d\u662f1\uff0c\u8fd9\u8868\u660e\u8be5\u70b9\u662f\u67d0\u4e00\u4e2a\u70b9\u7684\u5de6\u513f\u5b50\uff0c\u9996\u5148\u5b83\u81ea\u5df1\u7684\u503cB(h, i) \u4e0d\u662f\u4ece1 \u5f00\u59cb\u52a0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u9009\u4e00\u4e2a\u5de6\u8fb9\u7684\u70b9\uff0c\u628a\u4ece1\u5f00\u59cb\u52a0\u5230\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u4e4b\u524d\u7684\u90e8\u5206\u8865\u4e0a\u3002\u6240\u4ee5C(h,i) = C(h+1,(i-1)/2) + B(h,i).</code></li> </ul> <p></p> <p>\u663e\u7136\u8fd9\u4e00\u5e76\u884c\u7b97\u6cd5\u7684\u6df1\u5ea6\u662fO(log n)\uff0c\u603b\u5de5\u4f5c\u91cf\u662fO(n)\uff0c\u56e0\u4e3a\u65e0\u975e\u5c31\u662f\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0a\u5148\u4ece\u4e0b\u5f80\u4e0a\uff0c\u7136\u540e\u518d\u4ece\u4e0a\u5f80\u4e0b\u5206\u5c42\u904d\u5386\u4e86\u4e24\u8f6e\u3002</p>"},{"location":"ADS/14.%20Parallel%20Algorithm/#144-merge","title":"14.4 Merge","text":"<p><code>\u5173\u952e\u5728\u4e8e\u6c42\u51faA\u5143\u7d20\u5728B\u4e2d\u7684\u6392\u5e8f\u6216\u8005B\u5143\u7d20\u5728A\u4e2d\u7684\u6392\u5e8f</code></p> <p></p> <p></p> <p>Binary Search:<code>\u5728n\u4e2a\u5904\u7406\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8ba1\u7b97\u6392\u5e8f\u6240\u9700\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n),\u5982\u679c\u662f\u5355\u4e2a\u5904\u7406\u5668\uff0c\u6240\u9700\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlog n)</code></p> <p>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230\u4e00\u4e2a\u5143\u7d20\u5728\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u53ea\u9700\u8981O(logN)\u7684\u65f6\u95f4\uff0c\u5373\u6df1\u5ea6D=O(logN),\u603b\u5de5\u4f5c\u91cf\u4e3aO(nlogn),\u7136\u540e\u6211\u4eec\u9700\u8981\u5c06\u5143\u7d20\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u4e00\u6df1\u5ea6\u4e3aO(1),\u603b\u5de5\u4f5c\u91cf\u4e3aO(n),\u4e24\u6b65\u5408\u5728\u4e00\u8d77\u6df1\u5ea6\u5c31\u662fO(logn),\u603b\u5de5\u4f5c\u91cf\u4e3aO(nlogn)</p> <p>Serial Ranking: </p> <p>\u4e24\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u4ece\u5934\u4f9d\u6b21\u5411\u540e\u6bd4\u8f83</p> <p>Binary Search\u6240\u9700\u7684\u65f6\u95f4\u66f4\u5c11\uff0cSerial Ranking\u6240\u9700\u7684\u64cd\u4f5c\u6570\u91cf\u66f4\u5c0f</p> <p><code>\u6539\u8fdb\uff1aParallel Ranking \u4f7f\u7528\u5212\u5206\u8303\u5f0f\u7684\u65b9\u6cd5</code></p> <p></p> <p>\u5047\u8bbe\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u4e3alog n\uff0c\u90a3\u4e48\u80fd\u591f\u5206\u6210 n/log n\u6bb5</p> <p>\u5148\u5bf9\u6bcf\u4e00\u6bb5\u7684\u6bb5\u5934\u8fdb\u884c\u6392\u5e8f</p> <p>\u518d\u53ea\u9700\u8981\u4fdd\u8bc1\u6bb5\u5934\u4e4b\u95f4\u7684\u7ed3\u70b9\u662f\u6709\u5e8f\u7684\uff0c\u90a3\u4e48C\u5c31\u662f\u6709\u5e8f\u7684</p> <ol> <li> <p><code>\u5212\u5206\uff1a\u6211\u4eec\u5c06\u6570\u7ec4\u5212\u5206\u4e3ap\u4efd\uff08\u6b64\u65f6p\u672a\u77e5\uff0c\u9700\u8981\u7ecf\u8fc7\u5206\u6790\u9009\u53d6\u5230\u6700\u4f18\u7684p\uff09\u3002\u6211\u4eec\u9996\u5148\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u95ee\u9898\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u6c42\u51fa\u5b83\u5728\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u800c\u975e\u7ebf\u6027\u641c\u7d22\uff0c\u6df1\u5ea6\u4e3aO(logn),\u603b\u5de5\u4f5c\u91cf\u4e3aO(plogn)</code></p> </li> <li> <p><code>\u771f\u5b9e\u5de5\u4f5c\uff1a\u5269\u4e0b\u7684\u5de5\u4f5c\u5c31\u662f\u76f8\u90bb\u4e24\u4e2a\u7bad\u5934\u4e4b\u95f4\u7684\u90e8\u5206\u9700\u8981\u5728\u6700\u7ec8\u6570\u7ec4\u4e2d\u786e\u5b9a\u76f8\u5bf9\u4f4d\u7f6e\u3002\u76f8\u90bb\u7684\u4e24\u4e2a\u7bad\u5934\u7684\u8ddd\u79bb\u4e0d\u4f1a\u8d85\u8fc7n/p\uff0c\u5e76\u4e14\u4e00\u4e2a\u6570\u7ec4\u4e0a\u6709p\u4e2a\u51fa\u53d1\u7684\u4f4d\u7f6e\u548cp \u4e2a\u5230\u8fbe\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5728\u4efb\u610f\u4e00\u4e2a\u6570\u7ec4\u4e0a\uff0c\u51fa\u53d1\u70b9\u548c\u5230\u8fbe\u70b9\u4e00\u5171\u6700\u591a\u67092p\u4e2a\u3002\u5bf9\u5e94\u7684\u8fd8\u5269\u4e0b2p\u4e2a\u5927\u5c0f\u4e3aO(n/p)\u7684\u5b50\u95ee\u9898\u3002</code></p> </li> </ol> <p><code>\u5982\u679c\u91c7\u7528\u7ebf\u6027\u67e5\u627e\uff0c\u6df1\u5ea6\u5c31\u662fO(n/p),\u603b\u5de5\u4f5c\u91cf\u4e3a2p*O(n/p) = O(n),\u5982\u679c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u603b\u5de5\u4f5c\u91cf\u5c31\u662f</code>\\(2p \\times \\frac{n}{p}O(log \\frac{n}{p}) = 2n log \\frac{n}{p}\\)</p> <ol> <li>\u63a5\u4e0b\u6765\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7684p\uff0c\u4f7f\u5f97\u7b2c\u4e00\u6b65\u7684\u603b\u5de5\u4f5c\u91cf\u4e3aO(n),\u7b2c\u4e8c\u6b65\u7684\u6df1\u5ea6\u4e3aO(log n),<code>\u4e5f\u5c31\u662f\u96c6\u6210\u4e4b\u524dBinary Search\u548cserial Ranking\u7684\u4f18\u70b9\u3002</code>\u4e8e\u662f\u5f97\u5230\\(p=n/logn\\)</li> </ol>"},{"location":"ADS/14.%20Parallel%20Algorithm/#145-maximum-finding","title":"14.5 Maximum Finding","text":"<p><code>\u7b2c\u4e00\u79cd\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\u7c7b\u4f3c\u4e8e\u524d\u9762\u6c42\u548c\u95ee\u9898\u7684\u505a\u6cd5\uff0c\u6784\u9020\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u521d\u59cb\u5143\u7d20\u4e24\u4e24\u5206\u7ec4\u6bd4\u8f83\uff0c\u7136\u540e\u9010\u5c42\u4e0a\u9012\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5927\u503c\u3002\u8fd9\u6837\u7684\u7b97\u6cd5\u6df1\u5ea6\u4e3aO(log n)\uff0c\u603b\u5de5\u4f5c\u91cf\u4e3aO(n)\u3002</code></p> <p><code>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u5e76\u884c\u6bd4\u8f83\u6bcf\u4e00\u5bf9\u5143\u7d20\u7684\u503c\u3002\u53ea\u8981A[i]&lt;A[j],\u5c31\u5f80B[i]\u4e2d\u51991\uff0c\u6700\u540e\u53ea\u6709\u6700\u5927\u7684\u6570\u4e0d\u4f1a\u88ab\u51991\u3002\u5728\u5e76\u884c\u6bd4\u8f83\u6bcf\u4e00\u5bf9\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5f80\u6570\u7ec4B \u4e2d\u8fdb\u884c\u5199\u5165\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684CRCW \u7b56\u7565\u5141\u8bb8\u540c\u65f6\u5199\u5165\uff0c\u7136\u540e\u6309common rule \u5199\u5165\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6240\u6709\u7ebf\u7a0b\u5f80\u4efb\u610f\u4e00\u4e2aB[i] \u53ea\u4f1a\u5199\u51651 \u8fd9\u4e2a\u6570\u5b57\uff0c\u6240\u4ee5\u5199\u5165\u7684\u5185\u5bb9\u90fd\u662f\u4e00\u6837\u7684\u3002</code></p> <p>\u6700\u540e\u5f97\u5230\u6df1\u5ea6\u4e3aO(1),\u603b\u5de5\u4f5c\u91cf\u4e3aO(n^2)</p> <p></p> <p>\u53cc\u5bf9\u6570\u8303\u5f0f</p> <p>\u53cc\u5bf9\u6570\u8303\u5f0f\u662f\u4e00\u79cd\u53ef\u4ee5\u4e8c\u53c9\u6811\u7684\u6269\u5c55\u3002\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u8bbe\u53f6\u5b50\u7684\u6570\u91cf\u4e3an\uff0c\u90a3\u4e48\u6811\u9ad8\u662flog n \u7ea7\u522b\u7684\uff0c\u8fd9\u91cc\u53cc\u5bf9\u6570\u5219\u662f\u5e0c\u671b\u6784\u9020\u4e00\u68f5\u6811\uff0c\u4f7f\u5f97\u6811\u9ad8\u662flog log n \u7ea7\u522b\u7684\u3002\u4e3a\u4e86\u6784\u9020\u8fd9\u6837\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u9996\u5148\u8bbe\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684level \u4e3a\u4ece\u6839\u5230\u8be5\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u9700\u8981\u7ecf\u8fc7\u7684\u8fb9\u6570\uff09\uff0c\u6839\u7684level \u4e3a0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6784\u9020\u8fd9\u68f5\u6811\u5982\u4e0b\uff1a</p> <ol> <li>\u8bbe\u67d0\u4e2a\u7ed3\u70b9\u7684level\u4e3as\uff0c\u5f53\\(s \\leq loglogn-1\\)\u65f6\uff0c\u5219\u5b83\u6709\\(2^{2^{h-s-1}}\u4e2a\u5b69\u5b50\\)</li> <li>\u5f53\\(s = loglogn\\)\u65f6\uff0c\u5b83\u67092\u4e2a\u5b69\u5b50\u4f5c\u4e3a\u6811\u7684\u53f6\u5b50</li> </ol> <p></p> <p>\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u4e3a\\(\\sqrt n\\),\u4e00\u5171\u6709\\(\\sqrt n\\)\u6bb5</p> <p></p> <p>\u628a\u6570\u636e\u5212\u5206\u6210\u66f4\u5c0f\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u4e3aloglog n</p> <ol> <li>\u5c06\u6570\u7ec4\u5206\u4e3a\\(n/ log log n\\)\u4efd\uff0c\u5373\u6bcf\u4e00\u4efd\u7684\u5927\u5c0f\u4e3a\\(log log n\\)\uff0c\u5982PPT \u7b2c20 \u9875\uff1b\u5b9e\u9645\u4e0a\u6bcf\u4e00\u4efd\u7684\u5927\u5c0f\u90fd\u5f88\u5c0f\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u7ebf\u6027\u67e5\u627e\u7684\u65b9\u5f0f\u627e\u5230\u6bcf\u4e00\u4efd\u7684\u6700\u5927\u503c\uff0c\u5219\u6bcf\u4e00\u4efd\u7684\u6df1\u5ea6\u548c\u5de5\u4f5c\u91cf\u90fd\u662f\\(O(log log n)\\)\u7684\uff1b</li> <li>\u7136\u540e\u6211\u4eec\u5bf9\u4e0a\u9762\u6c42\u51fa\u7684\\(n/ log log n\\)\u4e2a\u6700\u5927\u503c\u4f7f\u7528\u53cc\u5bf9\u6570\u8303\u5f0f\u7684\u7b97\u6cd5\u3002</li> </ol> <p></p> <p></p>"},{"location":"ADS/14.%20Parallel%20Algorithm/#146-\u4e60\u9898\u96c6","title":"14.6 \u4e60\u9898\u96c6","text":"<ol> <li> <p>While comparing a serial algorithm with its parallel counterpart, we just concentrate on reducing the work load.</p> <p><code>F\uff0c\u9664\u4e86work load\u8fd8\u9700\u8981\u5173\u6ce8\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5206\u522b\u5bf9\u5e94W\u548cT</code></p> </li> <li> <p>To evaluate the Prefix-Sums of a sequence of 16 numbers by the parallel algorithm with Balanced Binary Trees, C(4,1) is found before C(2,2).</p> <p><code>\u8ba1\u7b97\u524d\u7f00\u548c\u65f6\uff0c\u4ece\u4e0a\u5f80\u4e0b\u8ba1\u7b97\u3002\u5bf9\u4e8esummation\u95ee\u9898\uff0cB[]\u662f\u4ece\u4e0b\u5f80\u4e0a\u8ba1\u7b97\u7684</code></p> </li> <li> <p>To evaluate the sum of a sequence of 16 numbers by the parallel algorithm with Balanced Binary Trees, B(1,6) is found before B(2,1).</p> <p><code>B[]\u4ece\u4e0b\u5f80\u4e0a\u8ba1\u7b97</code></p> </li> <li> <p>In order to solve the maximum finding problem by a parallel algorithm with\\(T(n)=O(1)\\), we need work load\\(W(n)=\u03a9(n^2)\\)in return.</p> <p><code>F.\u91c7\u7528 Random Sampling\uff0c\u5c31\u53ef\u4ee5\u5728$\ud835\udc4a(\ud835\udc5b)=\ud835\udc42(\ud835\udc5b)$\u4e0b\u5f97\u5230\u7ed3\u679c\u3002</code></p> </li> <li> <p>To solve the Maximum Finding problem with parallel Random Sampling method,\\(O(n)\\)processors are required to get\\(T(n)=O(1)\\)and\\(W(n)=O(n)\\)with very high probability</p> <p><code>T</code></p> </li> <li> <p>The prefix-min problem is to find for each i, 1\u2264i\u2264n, the smallest element among A(1), A(2), \u22ef, A(i). What is the run time and work load for the following algorithm?</p> <pre><code>for i, 1\u2264i\u2264n pardo\nB(0, i) = A(i)\nfor h=1 to log(n)\nfor i, 1\u2264i\u2264n/2^h pardo\n   B(h, i) = min {B(h-1, 2i-1), B(h-1, 2i)}\nfor h=log(n) to 0\nfor i even, 1\u2264i\u2264n/2^h pardo\n   C(h, i) = C(h+1, i/2)\nfor i=1 pardo\n   C(h, 1) = B(h, 1)\nfor i odd, 3\u2264i\u2264n/2^h pardo\n   C(h, i) = min {C(h + 1, (i - 1)/2), B(h, i)}\nfor i, 1\u2264i\u2264n pardo\nOutput C(0, i)\n</code></pre> <p></p> <p><code>\u53c2\u7167\u6c42\u524d\u7f00\u548c\u95ee\u9898\uff0c\u5c42\u6570\u4e3alogn,\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logn),\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u9700\u8981\u8ba1\u7b97\uff0c\u5bf9\u5e94\u7684\u4e5f\u5c31\u662fn+n/2+n/4+...+1 = 2n,work load\u5c31\u662fO(n)</code></p> </li> <li> <p>Which one of the following statements about the Maximum Finding problem is true?</p> <p>A.There exists a<code>serial algorithm</code> with time complexity being\\(O(logN)\\).</p> <p>B.<code>No parallel algorithm</code>can solve the problem in O(1) time.</p> <p>C.When partitioning the problem into sub-problems and solving them in parallel, compared with\\(\\sqrt N\\), choosing\\(loglogN\\)as the size of each sub-problem can reduce the work load and the worst-case time complexity.</p> <p>D.Parallel random sampling algorithm can run in O(1) time and O(N) work with very high probability.</p> <p><code>D\u221a</code></p> <p><code>\u5173\u4e8eC\u9009\u9879\uff0cpartition by</code>\\(\\sqrt N\\),\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u4e3a\\(T(N) = O(loglogN)\\),\u5bf9\u5e94\u7684work load\u4e3a\\(O(NloglogN)\\)</p> <p>partition by\\(loglogN\\),\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(N) = loglogN\\),\u5bf9\u5e94\u7684work load\u4e3a\\(O(N)\\)</p> <p><code>\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u53d8\uff0c\u4f46\u662fwork load\u53d8\u5c0f</code></p> </li> <li> <p>Sorting-by-merging is a classic serial algorithm. It can be translated directly into a reasonably efficient parallel algorithm. A recursive description follows.\\(MERGE\u2212SORT( A(1), A(2), ..., A(n); B(1), B(2), ..., B(n) )\\)Assume that\\(n=2^l\\)for some integer\\(l\u22650\\)</p> <p>if n = 1 then return B(1) := A(1)</p> <p>else call, in parallel,\\(MERGE\u2212SORT( A(1), ..., A(n/2); C(1), ..., C(n/2) )\\)and</p> <ul> <li>\\(MERGE\u2212SORT(A(n/2+1), ..., A(n); C(n/2+1), ..., C(n) )\\)</li> <li>\\(Merge (C(1),...C(n/2)) \\ and \\ (C(n/2 + 1),...,C(n))\\)into\\((B(1), B(2), ..., B(n))\\)with time O(n)</li> </ul> <p>Then the MERGE\u2212SORT runs in __ .</p> <p>A.\\(O(nlogn)\\)work and\\(O(log^2n)\\)time</p> <p>B\\(O(nlogn)\\)work and \\(O(logn)\\)time</p> <p>C.\\(O(nlog^2n)\\)work and \\(O(log^2n)\\)time</p> <p>D.\\(O(nlog^2n)\\)) work and \\(O(logn)\\)time</p> <p></p> </li> <li> <p>Which one of the following statements about the <code>Ranking problem</code> is true? (Assume that both arrays contain N elements.)</p> <p>A.There exists a serial algorithm with time complexity being\\(O(logN)\\).</p> <p><code>serial algorithm\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548cwork load\u90fd\u662fO(n)</code></p> <p>B.Parallel binary search algorithm can solve the problem in\\(O(1)\\)time.</p> <p><code>binary search\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logN)</code></p> <p>C.When partitioning the problem into sub-problems and solving them in parallel, choosing\\(O(loglogN)\\)as the size of each sub-problem can reduce the work load and the worst-case time complexity to\\(O(logN)\\).</p> <p><code>\u5728Maximum Finding\u95ee\u9898\u4e2d\uff0c\u53cc\u5bf9\u6570\u8303\u5f0f\u5206\u5272\uff0c\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(loglogN)</code></p> <p>D.There is a parallel algorithm that can run in\\(O(logN)\\)time and\\(O(N)\\)work.</p> <p><code>D\u9009\u9879\uff0cparallel ranking\u96c6\u6210\u4e8c\u5206\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(logN)\u548c\u987a\u5e8f\u67e5\u627e\u7684work load O(n)</code></p> </li> </ol> <p></p>"},{"location":"ADS/15.%20External%20Sorting/","title":"15. External Sorting","text":"<p> \u7ea6 2765 \u4e2a\u5b57  72 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"},{"location":"ADS/15.%20External%20Sorting/#151-\u5916\u6392\u5e8f","title":"15.1 \u5916\u6392\u5e8f","text":"<p><code>\u666e\u901a\u7684\u6392\u5e8f\u7b97\u6cd5\u6392\u5e8f\u7684\u5bf9\u8c61\u90fd\u662f\u653e\u5728\u5185\u5b58\u91cc\u7684\u4e00\u4e9b\u6570\u636e</code>\uff0c\u4f8b\u5982\u4e00\u4e2a <code>int</code> \u6570\u7ec4\u3002\u7136\u800c\u5916\u90e8\u6392\u5e8f\u6392\u5e8f\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u8bf4\u8981\u6392\u5e8f\u7684\u90a3\u4e2a\u201c\u6570\u7ec4\u201d\uff0c\u6ca1\u6cd5\u88ab\u5b8c\u6574\u5730\u5b58\u5728\u5185\u5b58\u91cc\uff0c\u5b83\u4eec\u90fd\u88ab\u5b58\u50a8\u5728\u786c\u76d8\u4e4b\u7c7b\u7684\u975e\u6613\u5931\u4ecb\u8d28\u4e2d\uff0c\u800c\u4ece\u8fd9\u79cd\u4ecb\u8d28\u91cc\u8bfb\u53d6\u6570\u636e\u5f80\u5f80\u5177\u6709\u8f83\u5927\u7684\u5f00\u9500\uff0c\u6240\u4ee5\u6211\u4eec\u603b\u662f\u201c\u4e00\u5757\u4e00\u5757\u201d\u4ece\u91cc\u9762\u90a3\u6570\u636e\u3002</p> <p>\u4ece\u6267\u884c\u7684\u987a\u5e8f\u6765\u8bf4\uff0c\u5185\u6392\u5e8f\u4e2d\u7684\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u4e2a\u81ea\u4e0a\u800c\u4e0b\u4e0d\u65ad\u5730\u5212\u5206\uff0c\u518d\u81ea\u4e0b\u800c\u4e0a\u4e0d\u65ad\u5f52\u5e76\u7684\u8fc7\u7a0b\u3002\u76f8\u53cd\uff0c\u5916\u6392\u5e8f\u7531\u4e8e\u5176\u7279\u6027\u9650\u5236\uff0c\u5176\u201c\u5f52\u5e76\u6bb5\u201d\u5e76\u4e0d\u662f\u81ea\u4e0a\u800c\u4e0b\\(\\dfrac{1}{f}\\)\u5212\u5206\u51fa\u6765\u7684\uff0c\u800c\u662f\u6839\u636e\u786c\u4ef6\u5904\u7406\u80fd\u529b\uff0c\u76f4\u63a5\u5212\u5206\u597d\u6700\u5c0f\u7684\u5f52\u5e76\u6bb5\uff0c\u7136\u540e\u76f4\u63a5\u81ea\u4e0b\u800c\u4e0a\u5f52\u5e76\u3002</p> <p>\u800c\u8fd9\u6837\u4e00\u4e2a\u5c06 \\(\ud835\udc58\u22c5\ud835\udc50\\) \u4e2a run merge \u6210 \\(c\\) \u4e2a run \u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e00\u4e2a <code>pass</code>\u3002\uff08\u5728\u5f52\u5e76\u6811\u4e0a\u4f53\u73b0\u4e3a\u4e00\u5c42\u3002\uff09</p>"},{"location":"ADS/15.%20External%20Sorting/#152-example-2-way-merge","title":"15.2 example 2-way merge","text":"<p><code>\u5982\u4f55\u51cf\u5c0fpass\u7684\u6b21\u6570</code></p> <p>Use a k-way merge!</p> <p></p> <p>\u6570\u636e\u6700\u521d\u4fdd\u5b58\u5728\\(T1\\)\u4e0a\uff0c\u521d\u59cb\u6570\u7ec4\u4e00\u5171\u6709\\(N\\)\u4e2a\u5143\u7d20\uff0c\u5185\u5b58\u53ef\u4ee5\u5bb9\u7eb3\uff08\u6392\u5e8f\uff09\\(M\\)\u4e2a\u5143\u7d20\u3002</p> <ol> <li> <p>\u4ece\u78c1\u5e26\\(T1\\)\u8bfb\u5165\\(M\\)\u4e2a\u8bb0\u5f55\uff0c\u5728\u5185\u5b58\u4e2d\u6392\u5e8f\uff0c\u5c06\u6392\u597d\u5e8f\u7684\u8bb0\u5f55\u4ea4\u66ff\u5199\u5165\u5230\\(T2\\)\u548c\\(T3\\),\u6bcf\u7ec4\u6392\u597d\u5e8f\u7684\u8bb0\u5f55\u53eb\u505arun\uff08\u76ee\u524d\u7684\u957f\u5ea6\u4e3aM\uff09</p> </li> <li> <p>\u63a5\u4e0b\u6765\\(T2,T3\\)\u4f5c\u4e3a\u8f93\u5165\u78c1\u5e26\uff0c\\(T1\\)\u7684\u6570\u636e\u5df2\u7ecf\u5931\u6548\uff0c\u548c\\(T4\\)\u4e00\u8d77\u4f5c\u4e3a\u8f93\u51fa\u78c1\u5e26\u3002\u6211\u4eec\u5c06\\(T2,T3\\)\u7684\u7b2c\u4e00\u4e2arun\u53d6\u51fa\uff0c\u5c06\u4e24\u8005\u5408\u5e76\uff0c\u7ed3\u679c\u5199\u5165\u5230\\(T1\\),<code>\u5f97\u5230\u7684\u662f$2M$\u957f\u5ea6\u7684run</code>\u3002\u6211\u4eec\u518d\u4ece\u78c1\u5e26\\(T2,T3\\)\u53d6\u51fa\u4e0b\u4e00\u4e2arun\uff0c\u5408\u5e76\uff0c\u5c06\u7ed3\u679c\u5199\u5165\u5230\\(T4\\)\u3002\u4ea4\u66ff\u6267\u884c\uff0c\u76f4\u5230\\(T2\\)\u6216\u8005\\(T3\\)\u4e3a\u7a7a\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u78c1\u5e26\u5b58\u5728\u5269\u4f59\u5143\u7d20\uff0c\u5c31\u76f4\u63a5\u62f7\u8d1d\u5230\u78c1\u76d8\u672b\u5c3e\u3002</p> </li> <li> <p>\u91cd\u590d\u76f8\u540c\u7684\u64cd\u4f5c\uff0c<code>\u7ed3\u679c\u5f97\u5230\u957f\u5ea6\u4e3a$4M$\u7684run\uff0c\u91cd\u590d\u76f4\u5230\u5f97\u5230\u957f\u5ea6\u4e3a$N$\u7684run</code></p> </li> <li> <p>\u6bcf\u6267\u884c\u4e00\u6b21\u5408\u5e76\uff0crun\u7684\u957f\u5ea6\u52a0\u500d\uff0c\u6240\u4ee5\u4e00\u5171\u9700\u8981\\(\\lceil log_2(N/M) \\rceil\\)\u6b21\u5408\u5e76\uff08pass\uff09\uff0c\u5916\u52a0\u4e0a\u7b2c\u4e00\u6b21\u6784\u9020\u521d\u59cb\u7684\u6392\u597d\u5e8f\u7684run\uff0c\u4e8e\u662f\u4e00\u5171\u9700\u8981pass\u7684\u6b21\u6570\u662f    $$    1 + \\lceil log_2(N/M) \\rceil    $$</p> </li> </ol> <p><code>\u4f8b\u5982PPT \u4e0a\u7684\u4f8b\u5b50\uff0c\u7b2c\u4e00\u8d9f\u6784\u9020\u51fa\u957f\u5ea6\u4e3a3 \u7684run\uff0c\u63a5\u4e0b\u6765\u662f\u4e09\u6b21pass\uff08\u5408\u5e76\uff09\uff1arun\u957f\u5ea6\u4f9d\u6b21\u75313 \u53d86\uff0c6 \u53d812\uff0c12 \u53d813\uff0c\u56e0\u6b64\u51714 \u6b21pass\u3002</code></p>"},{"location":"ADS/15.%20External%20Sorting/#153-k\u8def\u5408\u5e76","title":"15.3 k\u8def\u5408\u5e76","text":"<p><code>\u4f18\u5316\uff1a\u91c7\u7528\u591a\u8def\u5408\u5e76</code></p> <p>\u7b2c\u4e00\u4e2a\u4f18\u5316\u7684\u65b9\u5411\u662f\u51cf\u5c11\u5de5\u4f5c\u7684pass\u6570\u91cf\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528k\u8def\u7684\u5f52\u5e76\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u6b21\u5f52\u5e76k\u6761\u78c1\u5e26\u4e0a\u5bf9\u5e94\u4f4d\u7f6e\u7684run\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u5408\u5e76\u4e4b\u540e\uff0crun\u7684\u957f\u5ea6\u4e3a\u589e\u52a0k\u500d\u3002</p> <p>\u6240\u4ee5\u53ea\u9700\u8981</p> \\[ 1 + \\lceil log_k(N/M) \\rceil \\] <p>\u6b21pass\uff0c\u5373\u53ef\u5b8c\u6210\u6392\u5e8f\u3002\u51cf\u5c11\u4e86\u8d9f\u6570\uff0c\u56e0\u6b64\u51cf\u5c11\u4e86\u78c1\u5e26\u79fb\u52a8\u7684\u6b21\u6570\uff0c\u4ece\u800c\u51cf\u5c11\u603b\u65f6\u95f4\u3002</p> <p>k \u8def\u5408\u5e76\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e0a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u662fk \u4e2arun\u8981\u5408\u5e76\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u7684\u5728k \u4e2a\u5143\u7d20\u4e2d\u9009\u53d6\u6700\u5c0f\u503c\u653e\u5230\u8f93\u51fa\u7684\u78c1\u5e26\u4e0a\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528<code>\u4f18\u5148\u961f\u5217</code>\u6765\u5b9e\u73b0\uff0cPPT \u7b2c5 \u9875\u7ed9\u51fa\u4e86\u8fd9\u6837\u7684\u4f8b\u5b50\u3002</p> <p><code>\u6b64\u5904\u589e\u5927k\uff0c\u4f7f\u7528\u4e09\u8def\u5f52\u5e76\uff0c\u4ece\u5212\u5206\u597d\u7684\u6700\u5c0f\u5f52\u5e76\u6bb5\uff0c\u4ece\u4e0b\u5f80\u4e0a\u5408\u5e76</code></p> <p><code>\u8fd8\u9700\u8981T6\u7528\u4e8e\u5b58\u653e\u6700\u7ec8\u7684\u7ed3\u679c\uff08\u6700\u540e\u7684\u5f52\u5e76\uff09\uff0c\u6240\u4ee5\u9700\u89812k\u4e2atype\u3002\u6216\u8005\u7406\u89e3\u4e3a\uff0c\u6bcf\u4e00\u6b21\u90fd\u5c3d\u53ef\u80fd\u9700\u8981\u8fdb\u884ck\u8def\u5408\u5e76\uff0c\u90a3\u4e48\u663e\u7136\u9700\u8981k\u8def\u7684\u8f93\u5165\uff0c\u56e0\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u78c1\u5e26\u7684\u4ea4\u66ff\uff0c\u6240\u4ee5\u8f93\u51fa\u78c1\u5e26\u4e5f\u9700\u8981k\u8def\uff0c\u6240\u4ee5\u4e00\u5171\u9700\u89812k\u4e2a\u78c1\u5e26</code></p>"},{"location":"ADS/15.%20External%20Sorting/#154-\u591a\u76f8\u5408\u5e76\u6590\u6ce2\u90a3\u5951","title":"15.4 \u591a\u76f8\u5408\u5e76\uff08\u6590\u6ce2\u90a3\u5951\uff09","text":"<p><code>k \u8def\u5408\u5e76\u9700\u8981\u7684\u78c1\u5e26\u6570\u76ee\u662f2k\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21pass\u9700\u8981k \u4e2a\u8f93\u5165\u78c1\u5e26\u548ck \u4e2a\u8f93\u51fa\u78c1\u5e26</code>\u3002\u56e0\u6b64\uff0c\u5982\u679ck \u5f88\u5927\uff0c\u90a3\u4e48\u78c1\u5e26\u6570\u76ee\u5c31\u4f1a\u5f88\u591a\uff0c\u8fd9\u662f\u4e0d\u592a\u5408\u7406\u7684\u3002\u56e0\u6b64\u6211\u4eec\u8ba8\u8bba\u53e6\u4e00\u79cd\u4f18\u5316\u65b9\u6848\uff1a<code>\u591a\u76f8\u5408\u5e76\uff0c\u80fd\u591f\u5927\u5927\u51cf\u5c0f\u5f52\u5e76\u9700\u8981\u7684\u78c1\u5e26\u6570\u76ee\uff1ak \u8def\u5408\u5e76\u53ea\u9700\u8981k + 1 \u6761\u78c1\u5e26</code>\u3002</p> <p><code>\u4e09\u6761\u78c1\u5e26\uff0c2\u8def\u5f52\u5e76\u3002T2\u548cT3\u5f52\u5e76\u540e\u7ed3\u679c\u4fdd\u5b58\u5728T1\uff0c\u4e0b\u4e00\u6b21\u53c8\u8981\u4eceT1\u5c06\u7ed3\u679c\u62f7\u8d1d\u5230T2\u548cT3\uff0c\u62f7\u8d1d\u9700\u8981\u7684IO\u6b21\u6570\u592a\u591a</code></p> <ul> <li> <p>\u5148\u4ecb\u7ecd\u5747\u5300\u5212\u5206\uff1a</p> <ul> <li> <p>\u8bbe\u6709\u4e09\u76d8\u78c1\u5e26\\(T1\\)\u3001\\(T2\\) \u548c\\(T3\\)\uff0c\u5728\\(T1\\) \u4e0a\u6709\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\uff0c\u5b83\u5c06\u4ea7\u751f34 \u4e2arun\u3002\u4e00\u79cd\u9009\u62e9\u662f\u5728\\(T2 \\(\u548c\\)T3\\) \u7684\u6bcf\u4e00\u76d8\u78c1\u5e26\u4e2d\u653e\u516517 \u4e2arun\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed3\u679c\u5408\u5e76\u5230T1 \u4e0a\uff0c\u5f97\u5230\u4e00\u76d8\u670917 \u4e2arun\u7684\u78c1\u5e26\u3002</p> </li> <li> <p><code>\u7531\u4e8e\u6240\u6709\u7684run\u90fd\u5728\u4e00\u76d8\u78c1\u5e26\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u628a\u5176\u4e2d\u7684\u4e00\u4e9brun\u653e\u5230T2 \u4e0a\u4ee5\u8fdb\u884c\u53e6\u4e00\u6b21\u7684\u5408\u5e76\u3002\u6267\u884c\u5408\u5e76\u7684\u903b\u8f91\u65b9\u5f0f\u662f\u5c06\u524d8 \u4e2arun\u4eceT1 \u62f7\u8d1d\u5230T2 \u5e76\u8fdb\u884c\u5408\u5e76\u3002</code>\u8fd9\u6837\u7684\u6548\u679c\u662f\uff0c\u4e3a\u4e86\u6211\u4eec\u6240\u505a\u7684\u6bcf\u4e00\u8d9f\u5408\u5e76\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u9644\u52a0\u989d\u5916\u7684\u590d\u5236\u5de5\u4f5c\uff0c\u800c\u590d\u5236\u4e5f\u9700\u8981\u78c1\u5934\u7684\u79fb\u52a8\uff0c\u662f\u5f88\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u597d\u3002</p> </li> <li> <p>\u5982\u679c\u6211\u4eec\u63a5\u7740\u628a\u6240\u6709\u7684\u6b65\u9aa4\u90fd\u753b\u5b8c\uff0c<code>\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u603b\u5171\u9700\u89811 \u8d9f\u521d\u59cb+6 \u8d9fpass\uff0c\u5916\u52a05 \u6b21\u590d\u5236\u64cd\u4f5c\u3002</code></p> </li> </ul> </li> <li> <p>\u5982\u679c\u4f7f\u7528\u4e0d\u5747\u5300\u7684\u5212\u5206\uff0c\u53ef\u4ee5\u51cf\u5c11copy\u7684\u6b21\u6570\uff0c\u4f46\u662f\u589e\u52a0passes\u7684\u6b21\u6570</p> <ul> <li>\u8bbe\u6211\u4eec\u628a21 \u4e2arun\u653e\u5230T2 \u4e0a\u800c\u628a13 \u4e2arun\u653e\u5230T3 \u4e0a\u3002\u7136\u540e\uff0c\u5728T3 \u7528\u5b8c\u4e4b\u524d\u5c0613 \u4e2arun\u5408\u5e76\u5230T1 \u4e0a\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u5177\u670913 \u4e2arun\u7684T1 \u548c8\u4e2arun\u7684T2 \u5408\u5e76\u5230T3 \u4e0a\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u5408\u5e768 \u4e2arun\u76f4\u5230T2 \u7528\u5b8c\u4e3a\u6b62\uff0c\u8fd9\u6837\uff0c\u5728T1 \u4e0a\u5c06\u7559\u4e0b5 \u4e2a\u987a   \u4e32\u800c\u5728T3 \u4e0a\u5219\u67098 \u4e2arun\u3002\u7136\u540e\uff0c\u6211\u4eec\u518d\u5408\u5e76T1 \u548cT3\uff0c\u7b49\u7b49\uff0c\u76f4\u5230\u5408\u5e76\u7ed3\u675f</li> </ul> </li> </ul> <p></p> <p></p> <p><code>run\u7684\u6700\u521d\u5206\u914d\u4f1a\u5f71\u54cd\u6392\u5e8f\u7684\u6548\u7387\uff1f\u90a3\u6709\u8be5\u5982\u4f55\u8fdb\u884c\u5206\u914d\u5462\uff1f</code></p> <ul> <li>\u82e522 \u4e2arun\u653e\u5728T2 \u4e0a\uff0c12 \u4e2a\u5728T3 \u4e0a\uff0c\u5219\u7b2c\u4e00\u8d9f\u5408\u5e76\u540e\u6211\u4eec\u5f97\u5230T1 \u4e0a\u768412 \u4e2arun\u4ee5\u53caT2 \u4e0a\u768410 \u4e2arun\u3002</li> <li>\u5728\u53e6\u4e00\u6b21\u5408\u5e76\u540e\uff0cT1 \u4e0a\u670910 \u4e2arun\u800cT3 \u4e0a\u67092 \u4e2arun\u3002<code>\u6b64\u65f6\uff0c\u8fdb\u5c55\u7684\u901f\u5ea6\u6162\u4e86\u4e0b\u6765\uff0c\u56e0\u4e3a\u5728T3 \u7528\u5b8c\u4e4b\u524d\u6211\u4eec\u53ea\u80fd\u5408\u5e76\u4e24\u7ec4run\u3002</code>\u8fd9\u65f6T1 \u67098 \u4e2arun\u800cT2 \u67092 \u4e2arun\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ea\u80fd\u5408\u5e76\u4e24\u7ec4run\uff0c\u7ed3\u679cT1 \u67096 \u4e2arun\u4e14T3 \u67092 \u4e2arun\u3002\u518d\u7ecf\u8fc7\u4e09\u8d9f\u5408\u5e76\u4e4b\u540e\uff0cT2 \u8fd8\u67092 \u4e2arun\u800c\u5176\u4f59\u78c1\u5e26\u5747\u5df2\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\u3002\u6211\u4eec\u5fc5\u987b\u5c06\u4e00\u4e2arun\u62f7\u8d1d\u5230\u53e6\u5916\u4e00\u76d8\u78c1\u5e26\u4e0a\uff0c\u7136\u540e\u7ed3\u675f\u5408\u5e76\uff0c\u6240\u4ee5\u975e\u5e38\u590d\u6742\u3002</li> </ul> <p>\u5982\u4f55\u4e00\u4e2arun\u7684\u957f\u5ea6\u662f\u6590\u6ce2\u90a3\u5951\u6570\\(F_n\\)\uff0c\u90a3\u4e48\u5206\u914d\u8fd9\u4e9brun\u7684\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u628a\u5b83\u4eec\u5206\u88c2\u6210\u4e24\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\\(F_{n-1}, F_{n-2}\\)\u200b, <code>\u5bf9\u4e8e\u4e0d\u662f\u6590\u6ce2\u90a3\u5951\u6570\u7684run\u6570\uff0c\u53ef\u4ee5\u6dfb\u52a0\u65e0\u7a77\u5927\u8865\u6210\u6590\u6ce2\u90a3\u5951\u6570</code></p> <p>\u73b0\u5728\u6269\u5145\u5230k\u8def\u5408\u5e76\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981<code>\u7b2ck \u9636\u6590\u6ce2\u90a3\u5951\u6570</code>\u7528\u4e8e\u5206\u914drun\uff0c\u5176\u4e2dk \u9636\u6590\u6ce2\u90a3\u5951\u6570\u5b9a\u4e49\u4e3a $$ F^{(k)}(n) = F^{(k)}(n-1) + F^{(k)}(n-2) +...+ F^{(k)}(n-k) $$</p>"},{"location":"ADS/15.%20External%20Sorting/#155-\u7f13\u5b58\u5e76\u884c\u5904\u7406","title":"15.5 \u7f13\u5b58\u5e76\u884c\u5904\u7406","text":"<p><code>\u5728\u5b9e\u73b0\u5916\u90e8\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u662f\u4e00\u5757\u4e00\u5757\u5730\u8bfb\u5165\u6570\u636e\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u6bd4\u8f83\u4e00\u6b21\u5c31\u5f80\u78c1\u76d8\u4e2d\u5199\u5165\u4e00\u4e2a\u5143\u7d20\u3002\u6240\u4ee5\u6211\u4eec\u662f\u628a\u5185\u5b58\u5212\u5206\u4e3a\u4e24\u4e2a\u8f93\u5165\u7f13\u5b58\u533a(buffer),\u4e00\u4e2a\u8f93\u51fa\u7f13\u5b58\u533a\uff0c\u8f93\u5165\u7f13\u5b58\u533a\u7528\u6765\u5b58\u653e\u4ece\u8f93\u5165\u78c1\u76d8\u8bfb\u5165\u7684\u6570\u636e\uff0c\u7136\u540e\u4e24\u4e2a\u8f93\u5165\u7f13\u5b58\u533a\u7684\u6570\u636e\u6bd4\u8f83\u4e4b\u540e\u7684\u6392\u5e8f\u7ed3\u679c\u5148\u653e\u5230\u8f93\u51fa\u7f13\u5b58\u533a\uff0c\u5f53\u8f93\u51fa\u7f13\u5b58\u533a\u6ee1\u4e86\u4e4b\u540e\u518d\u4e00\u6b21\u6027\u5199\u5165\u8f93\u51fa\u78c1\u76d8\u3002</code></p> <p>\u4e00\u6b21\u8bfb2 * 250\u4e2arecord\uff0c\u7ed3\u679c\u6682\u5b58\u5728\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u6570\u636e\u79ef\u7d2f\u5230250\uff0c\u624d\u5199\u56de\u5230\u78c1\u76d8\u3002\u80fd\u591f\u51cf\u5c11IO\u6b21\u6570</p> <p><code>\u7136\u800c\uff0c\u8fd9\u6837\u7684\u5b9e\u73b0\u65b9\u5f0f\u4ecd\u7136\u5b58\u5728\u95ee\u9898\u3002</code></p> <p>\u5f53\u8f93\u51fa\u7f13\u5b58\u533a\u5199\u56de\u5230\u78c1\u76d8\u65f6\uff0c\u5185\u5b58\u91cc\u4ec0\u4e48\u4e8b\u60c5\u90fd\u5e72\u4e0d\u4e86\uff0c\u5f71\u54cd\u6392\u5e8f\u6548\u7387\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u8f93\u51fa\u7f13\u5b58\u533a\u4e5f\u62c6\u5206\u6210\u4e24\u4e2a\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a\u6ee1\u4e86\u9700\u8981\u5199\u56de\u78c1\u76d8\u65f6\uff0c\u53e6\u5916\u4e00\u4e2a\u8f93\u51fa\u7f13\u5b58\u533a\u63a5\u6536\u6570\u636e\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5e76\u884c\u5904\u7406\uff0c\u4e00\u4e2a\u5728\u5185\u5b58\u91cc\u64cd\u4f5c\uff0c\u4e00\u4e2a\u8fdb\u884cI/O\u4ea4\u4e92</p> <p>\u5bf9\u4e8e\u8f93\u5165\u7f13\u5b58\u533a\u540c\u7406\u3002\u5982\u679c\u4ecd\u7136\u662f2 \u4e2a\u8f93\u5165\u7f13\u5b58\uff0c\u5f53\u6240\u6709\u8f93\u5165\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u90fd\u6bd4\u8f83\u5b8c\u4e86\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u8981\u88ab\u8feb\u505c\u6b62\u7b49\u5f85\u65b0\u7684\u6570\u636e\u4ece\u8f93\u5165\u78c1\u76d8\u4e2d\u8bfb\u5165\u3002\u56e0\u6b64\u6211\u4eec\u8981\u8fdb\u4e00\u6b65\u5212\u5206\u4e3a4 \u4e2a\u8f93\u5165\u7f13\u5b58\uff0c\u8fd9\u6837\u5f53\u5176\u4e2d\u4e24\u4e2a\u8f93\u5165\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u6b63\u5728\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u53e6\u5916\u4e24\u4e2a\u8f93\u5165\u7f13\u5b58\u53ef\u4ee5\u540c\u65f6\u5e76\u884c\u5730\u8bfb\u5165\u65b0\u7684\u6570\u636e</p> <p></p> <p>\u8fd9\u91cc\u89e3\u91ca\u4e3a\u4ec0\u4e48k\u592a\u5927\u65f6\uff0ck\u8def\u5408\u5e76\u5c3d\u7ba1\u51cf\u5c11\u4e86pass\u7684\u6570\u91cf\uff0c\u4f46\u662f\u5e76\u4e0d\u4e00\u5b9a\u66f4\u4f18\u7684\u539f\u56e0</p> <p><code>\u8fd9\u662f\u56e0\u4e3a\uff1a\u7531\u4e8e\u6211\u4eec\u5c06\u5185\u5b58\u533a\u57df\uff0c\u5212\u5206\u4e3a2k\u4e2a\u8f93\u5165\u7f13\u5b58\u533a\u548c2\u4e2a\u8f93\u51fa\u7f13\u5b58\u533a\uff0c\u5f53k\u5f88\u5927\u7684\u65f6\u5019\uff0c\u8f93\u5165\u7f13\u5b58\u5c31\u4f1a\u5212\u5206\u7684\u5f88\u7ec6\uff0c\u4e00\u6b21\u80fd\u591f\u8bfb\u5165\u5230\u8f93\u5165\u7f13\u5b58\u7684\u6570\u636e\u5c31\u4f1a\u5f88\u5c11\uff0cblock\u7684\u5927\u5c0f\u964d\u4f4e\uff0c\u4ece\u800c\u5bfc\u81f4seek\u65f6\u95f4\u5927\u5927\u589e\u591a\uff08I/O\u7684\u6b21\u6570\u589e\u591a\uff09\u3002\u5c3d\u7ba1pass\u7684\u6b21\u6570\u51cf\u5c11\uff0c\u4f46\u662fI/O\u64cd\u4f5c\u6b21\u6570\u589e\u52a0\uff0c\u5f62\u6210\u4e00\u4e2a\u6743\u8861\u3002\u6240\u4ee5\u5bf9\u4e8ek\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u503c\uff0c\u6839\u636e\u5b9e\u9645\u8fdb\u884c\u9009\u53d6</code></p>"},{"location":"ADS/15.%20External%20Sorting/#156-\u66ff\u6362\u9009\u62e9","title":"15.6 \u66ff\u6362\u9009\u62e9","text":"<p>\u8fc4\u4eca\u6211\u4eec\u5df2\u7ecf\u7528\u5230\u7684\u7b56\u7565\u662f\u6bcf\u4e2arun\u7684\u5927\u5c0f\u90fd\u662f\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u8fd9\u4e00\u957f\u5ea6\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6269\u5c55\u3002</p> <p>\u539f\u56e0\u5728\u4e8e\uff0c\u6211\u4eec\u67d0\u4e2a\u5185\u5b58\u4f4d\u7f6e\u4e2d\u7684\u5143\u7d20\u4e00\u65e6\u5199\u5165\u78c1\u76d8\u4e86\uff0c\u8fd9\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u7a7a\u51fa\u6765\u7ed9\u6570\u7ec4\u540e\u7eed\u7684\u5143\u7d20\u4f7f\u7528\u3002<code>\u53ea\u8981\u540e\u7eed\u7684\u5143\u7d20\u6bd4\u73b0\u5728\u5199\u5165\u7684\u66f4\u5927\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80run\u540e\u9762\u6dfb\u52a0\u8be5\u5143\u7d20</code>\u3002PPT \u7b2c10 \u9875\u7ed9\u51fa\u4e86\u5f88\u6e05\u6670\u7684\u52a8\u6001\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c<code>\u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6bd4\u5f53\u524drun\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u66f4\u5927\u7684\u6700\u5c0f\u7684\u5143\u7d20\u5199\u5165\u78c1\u76d8</code>\uff0c\u7136\u540e\u518d\u4ece\u78c1\u76d8\u4e2d\u8bfb\u5165\u4e00\u4e2a\u5143\u7d20\u653e\u5165\u961f\u5217\u4e2d\uff0c\u76f4\u5230\u961f\u5217\u4e2d\u7684\u5143\u7d20\u90fd\u6bd4run\u7684\u6700\u540e\u4e00\u4e2a\u8981\u5c0f\uff0c\u5c31\u5f00\u542f\u4e00\u4e2a\u65b0\u7684run\u3002</p> <p><code>\u5728\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u66ff\u6362\u9009\u62e9\u751f\u6210\u7684run\u7684\u957f\u5ea6\u4e3a2M\uff0c\u5176\u4e2dM\u65f6\u5185\u5b58\u7684\u5927\u5c0f\u3002\u968f\u7740M\u7684\u589e\u5927\uff0c\u610f\u5473\u7740run\u7684\u6570\u91cf\u5c06\u4f1a\u51cf\u5c11\uff08N/2M\uff09\uff0c\u56e0\u6b64\u5408\u5e76\u7684pass\u6b21\u6570\u4e5f\u5c06\u51cf\u5c11\uff0c\u4ece\u800c\u51cf\u5c11I/O\u64cd\u4f5c\u7684\u6b21\u6570</code></p> <p>\u73b0\u5728\u53d8\u6210\u5f52\u5e76\u6bb5\u6709\u957f\u6709\u77ed\uff0c\u9700\u8981\u51b3\u5b9a\u5f52\u5e76\u7684\u6b21\u5e8f</p> <p></p> <p><code>\u5982\u4f55\u51b3\u5b9a\u5f52\u5e76\u7684\u6b21\u5e8f\uff1f\u6700\u4f18\u89e3\u662f\u91c7\u7528huffman\u6811\uff0c\u8ba9\u957f\u7684run\u5c3d\u53ef\u80fd\u5c11\u53c2\u4e0e\u5408\u5e76\uff0c\u90a3\u4e48\u663e\u7136\u8d2a\u5fc3\u5730\u4e0d\u65ad\u9009\u62e9\u6700\u5c0f\u7684\u4e24\u4e2arun\u8fdb\u884c\u5408\u5e76\u662f\u6700\u4f18\u7684\u3002</code></p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define MAXSIZE 100000 + 5\nint main()\n{\n    int n, m;\n    scanf(\"%d %d\", &amp;n, &amp;m);\n    int temp[MAXSIZE];\n    // ans[i]\u8868\u793arun\u7684\u96c6\u5408\uff0ci\u8868\u793a\u7b2ci\u4e2arun\n    // temp1\u4e3afirst run\uff0ctemp2\u4e3asecond run\n    priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt; ans[100000], temp1, temp2;\n    // ans\u7684\u4e0b\u6807\n    int index = 0; \n    for(int i = 0; i &lt; n; i++)\n    {\n        scanf(\"%d\", &amp;temp[i]);\n        if(i &lt; m)\n        {\n            // \u5c06\u524dm\u4e2a\u6570\u653e\u5165first run\u4e2d\n            temp1.push(temp[i]);\n            ans[index].push(temp[i]);\n        }\n        else\n        {\n            // \u5982\u679ctemp[i]\u6bd4first run\u4e2d\u7684\u6700\u5c0f\u503c\u5927\uff0c\u6ee1\u8db3\u5f53\u524d\u96c6\u5408\u7684\u8981\u6c42\n            if(temp[i] &gt; temp1.top())\n            {\n                // \u5220\u9664first run\u4e2d\u7684\u6700\u5c0f\u503c\n                temp1.pop();\n                // \u5c06temp[i]\u653e\u5165first run\u4e2d\u7684\u672b\u5c3e\n                temp1.push(temp[i]);\n                // \u5c06temp[i]\u653e\u5165\u6700\u7ec8\u7ed3\u679cans[cnt]\n                ans[index].push(temp[i]);\n            }\n            else\n            {\n                // \u5426\u5219\uff0c temp[i]\u6bd4first run\u4e2d\u7684\u6700\u5c0f\u503c\u8fd8\u5c0f\uff0c\u65b0\u5efa\u4e00\u4e2aans[cnt + 1]\u96c6\u5408\n                temp1.pop();\n                // \u5c06temp[i]\u653e\u5165second run\u4e2d\n                temp2.push(temp[i]);\n                // \u5c06temp[i]\u653e\u5165\u4e0b\u4e00\u4e2a\u96c6\u5408\u4e2d\n                ans[index + 1].push(temp[i]);\n            }\n\n            // \u5982\u679cfirst run\u4e3a\u7a7a\uff0ctemp1\u4e2d\u6ca1\u6709\u5143\u7d20\n            if(temp1.size() == 0 || i == n - 1 &amp;&amp; temp2.size() != 0)\n            {\n                // \u5c06second run\u4e2d\u7684\u5143\u7d20\u653e\u5165first run\u4e2d\n                temp1 = temp2;\n                // temp2\u6e05\u7a7a\n                temp2 = priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt;();\n                // index++\u610f\u5473\u7740\u5230\u4e0b\u4e00\u4e2arun\n                index++;\n            }\n        }\n\n    }\n    // \u6253\u5370\u7ed3\u679c\uff0c\u6bcf\u4e00\u884c\u6700\u540e\u4e00\u4e2a\u6570\u540e\u9762\u6ca1\u6709\u7a7a\u683c\n    for(int i = 0; i &lt;= index ; i++)\n    {\n        if(ans[i].size() &gt; 1)\n        {\n            while(ans[i].size() &gt; 1)\n            {\n                printf(\"%d \", ans[i].top());\n                ans[i].pop();\n            }\n        }\n        printf(\"%d\\n\", ans[i].top());\n    }\n}\n</code></pre>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/","title":"2. Red Black Tree &amp; B+ Tree","text":"<p> \u7ea6 3363 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#21-red-black-tree","title":"2.1 Red Black Tree","text":"<p>\u7ea2\u9ed1\u6811\u662f\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\u7684\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff1a</p> <ol> <li> <p>Every node is either red or black.</p> </li> <li> <p>The root is black.</p> </li> <li> <p>Every leaf (<code>NIL</code>) is black.</p> </li> <li> <p>if a node is red, then both its children are black.</p> </li> <li> <p>For each node, all simple paths from the node to descendant leaves contain the same number of black nodes.</p> </li> </ol> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u4ece\u8be5\u7ed3\u70b9\u5230\u540e\u4ee3\u53f6\u5b50\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u91cf\u7684\u9ed1\u8272\u7ed3\u70b9\u3002</p> <p>\u6ce8\u610f\u70b9\uff1a</p> <p><code>1. \u7ea2\u7ed3\u70b9\u7684\u7236\u7ed3\u70b9\u4e00\u5b9a\u4e3a\u9ed1\u7ed3\u70b9</code></p> <p><code>2. \u6027\u8d283\uff0c\u6240\u6709\u7684NULL leaf \u90fd\u662fblack\uff0c\u4f60\u770b\u5230\u7684leaf\u4e0d\u662fNULL\uff0c\u4f46\u662f\u5b83\u7684\u5de6\u53f3\u7ed3\u70b9\u662fNULL\uff0c\u672a\u663e\u793a\u7684\u5de6\u53f3\u513f\u5b50\u4e5f\u662f\u9ed1\u7ed3\u70b9\u3002</code></p> <p>\u6b64\u5904\u53f6\u5b50\u7ed3\u70b9\u88ab\u91cd\u65b0\u5b9a\u4e49\uff0c\u79f0\u6240\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u90fd\u662fNULL\u7684\u7ed3\u70b9\u4e3a\u672b\u7aef\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684leaf\uff09</p> <p><code>3. \u7531\u6027\u8d285\u5f97\uff0c\u5408\u6cd5\u7ea2\u9ed1\u6811\u7684\u7ea2\u8272\u7ed3\u70b9\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff08\u5b58\u5728\u4e14\u4e3a\u9ed1\u8272\uff09\u4e00\u5b9a\u90fd\u662f\u53f6\u5b50\u6216\u8005\u90fd\u4e0d\u662f\u53f6\u5b50\uff0c\u4e0d\u7136\u4ece\u7ea2\u7ed3\u70b9\u51fa\u53d1\uff0c\u5230\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u5305\u542b\u4e0d\u540c\u6570\u91cf\u7684\u9ed1\u8272\u7ed3\u70b9</code></p> <p><code>4. \u6211\u4eec\u79f0NIL \u4e3a\u5916\u90e8\u7ed3\u70b9(external)\uff0c\u5176\u4f59\u6709\u952e\u503c\u7684\u7ed3\u70b9\u4e3a\u5185\u90e8\u7ed3\u70b9(internal)\u3002</code></p> <p></p> <p>\u4e0a\u56fe\u7684\u7ea2\u9ed1\u6811\u662f\u5426\u5408\u6cd5\uff1f</p> <p><code>16</code> \u53f7\u7ed3\u70b9\u7684\u53f3\u513f\u5b50\u662f\u4e00\u4e2a\u9ed1\u53f6\u5b50\uff08NULL\uff09\uff0c\u800c\u8fd9\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u8def\u5f84\u4e0a\u53ea\u6709 3 \u4e2a\u9ed1\u7ed3\u70b9\uff0c\u800c\u5176\u4ed6\u53f6\u5b50\u5230\u6839\u90fd\u6709 4 \u4e2a\u9ed1\u7ed3\u70b9\u3002</p> <p><code>black height</code>\u7684\u5b9a\u4e49\uff1a</p> <p>\u7279\u5b9a\u7ed3\u70b9\u7684\u9ed1\u9ad8\uff0c\u7b49\u4e8e\u8be5\u7ed3\u70b9\u5230\u53f6\u7ed3\u70b9(NIL)\u5230\u7b80\u5355\u8def\u5f84\u4e2d\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\uff0c\u9ed1\u8272\u7ed3\u70b9\u7684\u6570\u91cf\u3002\u8bb0\u4f5c\\(bh(X)\\),\u5176\u4e2d\u6574\u68f5\u7ea2\u9ed1\u6811\u7684\u9ed1\u9ad8\u4e5f\u5c31\u662f\u6839\u7ed3\u70b9\u7684\u9ed1\u9ad8</p> <p>\u3010lemma\u3011\u4e00\u4e2a\u6709 \\(N\\) \u4e2a\u5185\u90e8\u7ed3\u70b9\uff08\u4e0d\u5305\u62ec\u53f6\u5b50\u7ed3\u70b9\uff09\u7684\u7ea2\u9ed1\u6811\uff0c\u5176\u9ad8\u5ea6\u6700\u5927\u4e3a \\(2log_\u20612(N + 1)\\)\u3002</p> <p>\u3010lemma\u3011\\(bh(Tree) &gt;= h(Tree)/2\\) \u9ed1\u7ed3\u70b9\u7684\u6570\u91cf\u81f3\u5c11\u5360\u6811\u9ad8\u7684\u4e00\u534a</p> <p></p> <ol> <li>\u7ea2\u9ed1\u6811\u7ed3\u70b9\u6700\u5c11\u60c5\u51b5\uff0c\u5168\u662f\u9ed1\u7ed3\u70b9\uff0c\u6b64\u65f6\u5c31\u662f\u4e8c\u5206\u641c\u7d22\u6811\uff0c\u4e8c\u5206\u641c\u7d22\u6811\\(sizeof(x) = 2^{h(x)} - 1\\)\u3002<code>\u8bf7\u6ce8\u610f\u6b64\u5904\u4e3a\u5185\u90e8\u7ed3\u70b9</code> \u5927\u4e8e\u662f\u56e0\u4e3a\u6b64\u65f6\u7684\u4e8c\u5206\u641c\u7d22\u6811\u5e76\u4e0d\u4e00\u5b9a\u662f\u5b8c\u5168\u5e73\u8861\u4e8c\u53c9\u6811</li> <li>\\(bh(child) = bh(x)\\ or \\ bh(x)-1\\), \u5206\u522b\u5bf9\u5e94child\u662f\u5426\u4e3a\u9ed1\u7ed3\u70b9</li> <li>\\(sizeof(x) = 1 + 2 \\times sizeof(child) &gt;= 1 + 2 \\times (2^{bh(child)}-1) &gt;= 2 \\times 2^{bh(x)-1} -1 = 2^{bh(x)}-1\\)</li> <li>\u7ea2\u7ed3\u70b9\u7684\u5b69\u5b50\u4e00\u5b9a\u662f\u9ed1\u7ed3\u70b9\uff0c\u6240\u4ee5\u6709\u7ea2\u5fc5\u6709\u9ed1\uff0c\u4efb\u4f55\u8def\u5f84\u4e0a\u9ed1\u8272\u7ed3\u70b9\u5fc5\u5b9a\u5360\u5230\u81f3\u5c11\u4e00\u534a\u7684\u6570\u91cf</li> </ol>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#211-insert","title":"2.1.1 Insert","text":"<p><code>\u524d\u60c5\u63d0\u8981\uff1a</code>\u5982\u679c\u63d2\u5165\u4e00\u4e2a\u7ea2\u8272\u7ed3\u70b9\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2aNULL\u7ed3\u70b9\u88ab\u7ea2\u8272\u7ed3\u70b9\u66ff\u4ee3\uff0c\u6b64\u65f6\u5e76\u4e0d\u4f1a\u6539\u53d8\u9ed1\u9ad8\u3002\u4f46\u662f\u9700\u8981\u6ee1\u8db3\u7ea2\u8272\u7ed3\u70b9\u4e92\u4e0d\u76f8\u90bb\u7684\u6027\u8d28\u3002</p> <p>\u5982\u679c\u63d2\u5165\u7684\u662f\u9ed1\u8272\u7ed3\u70b9\uff0c\u90a3\u4e48\u6027\u8d285\u4e00\u5b9a\u4f1a\u88ab\u6253\u7834\uff0c\u9ed1\u9ad8\u4e00\u5b9a\u4f1a\u52a01</p> <p>\u603b\u4f53\u601d\u8def\u4e3a\uff1a\u5148\u5c06\u7ea2\u9ed1\u6811\u5f53\u4f5c\u666e\u901a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5c06\u76ee\u6807\u6570\u636e\u63d2\u5165\u5230\u4e66\u4e2d\u7684\u672b\u7aef\uff0c<code>\u5e76\u5c06\u5b83\u67d3\u6210\u7ea2\u8272</code>\uff0c\u518d\u8c03\u6574\u4f7f\u4e4b\u5728\u6ee1\u8db3\u9ed1\u9ad8\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u7ea2\u8272\u7ed3\u70b9\u4e0d\u76f8\u90bb</p> <p>\u4e0d\u59a8\u5148\u5047\u8bbe\u6211\u4eec\u63d2\u5165\u7684\u662f\u7ea2\u8272\u7ed3\u70b9\u3002</p> <ul> <li> <p>\u5982\u679c\u63d2\u5728\u9ed1\u8272\u7ed3\u70b9\u4e0b\u9762\uff0c\u6ca1\u6709\u5f71\u54cd</p> </li> <li> <p>\u5982\u679c\u63d2\u5165\u7a7a\u6811\uff0c\u5219\u5c06\u7ea2\u7ed3\u70b9\u76f4\u63a5\u53d8\u4e3a\u9ed1\u7ed3\u70b9</p> </li> <li> <p>\u5982\u679c\u63d2\u5165\u5230\u7ea2\u8272\u7ed3\u70b9\u7684\u4e0b\u9762\uff0c\u6b64\u65f6\u7834\u574f\u4e86\u6027\u8d284</p> </li> <li> <p>case1\uff1a<code>X\u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u7ea2\u8272\u7684</code></p> <p></p> <p>\u8fd9\u91cc\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u5e26\u5b50\u6811\uff0c\u81f3\u5c11\u4f1a\u6709NULL\u7ed3\u70b9</p> <p><code>\u89e3\u51b3\u65b9\u6cd5\uff1a\u7531\u4e8e\u7236\u7ed3\u70b9P\u548c\u53d4\u53d4\u7ed3\u70b9U\u90fd\u662f\u7ea2\u8272\u7684\uff0c\u5bfb\u6c42\u7237\u7237\u7ed3\u70b9G\u7684\u5e2e\u5fd9\uff0c\u6700\u540e\u5c06\u7236\u7ed3\u70b9P\u548c\u53d4\u53d4\u7ed3\u70b9U\u67d3\u9ed1\uff0c\u7237\u7237\u7ed3\u70b9\u67d3\u7ea2</code></p> <p>\u672c\u8d28\u5728\u4e8e\u5c06\u95ee\u9898\u5411\u4e0a\u63a8\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u4e5f\u5c31\u662f\u5c06\u95ee\u9898\u4e00\u76f4\u63a8\u5230\u6839\u7ed3\u70b9\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u5c06\u6839\u7ed3\u70b9\u67d3\u9ed1\u5373\u53ef</p> <p>\u4f46\u662f\u6240\u6709\u7ed3\u70b9\u4ecd\u7136\u6ee1\u8db3\u6027\u8d28\uff0c\u4ece\u8be5\u7ed3\u70b9\u51fa\u53d1\u5230\u540e\u4ee3\u53f6\u7ed3\u70b9\u7684\u5305\u542b\u76f8\u540c\u6570\u91cf\u7684\u9ed1\u7ed3\u70b9</p> </li> <li> <p>case2\uff1a<code>X\u7684\u53d4\u53d4\u662f\u9ed1\u7ed3\u70b9\uff0c\u4e14X\u662fP\u7684\u53f3\u5b69\u5b50</code></p> </li> <li> <p>case3\uff1a<code>X\u7684\u53d4\u53d4\u662f\u9ed1\u7ed3\u70b9\uff0c\u4e14X\u662fP\u7684\u5de6\u5b69\u5b50</code></p> <p></p> <p></p> <p>\u5bf9\u4e8ecase2\u5230case3\u7684\u8f6c\u53d8\uff0cX\u7ed5P\u70b9\u8fdb\u884c\u53f3\u65cb\uff08RR rotation\uff09</p> <p>\u5bf9\u4e8ecase3\u60c5\u51b5\uff0cG\u70b9\u7ed5X\u70b9\u8fdb\u884c\u5de6\u65cb\uff08LL rotation\uff09\uff0c\u6210\u529f\u89e3\u51b3\u95ee\u9898</p> <p>\u6700\u540e\u8fdb\u884c\u67d3\u8272\uff0c\u6839\u7ed3\u70b9\u4e3a\u9ed1\u8272\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u7ea2\u8272</p> <p>\u5bf9\u4e8ecase2\uff0c\u53ef\u4ee5\u662f\u76f4\u63a5\u4f7f\u7528LR\u65cb\u8f6c\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u6700\u7ec8\u6839\u7ed3\u70b9\u4e3a\u9ed1\u8272\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u7ea2\u8272</p> <p></p> <p></p> </li> </ul> <p>\u5373\u5982\u679c\u63d2\u5165\u540e\u76f4\u63a5\u843d\u5165\u60c5\u51b5\u4e09\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u65cb\u8f6c\u67d3\u8272\u5373\u53ef\u89e3\u51b3\u3002\u76f4\u63a5\u843d\u5165\u60c5\u51b5\u4e8c\uff0c\u4e00\u6b21\u65cb\u8f6c\u8fdb\u5165\u60c5\u51b5\u4e09\uff0c\u518d\u4e00\u6b21\u65cb\u8f6c\u67d3\u8272\u5373\u53ef\u89e3\u51b3\u3002\u4f46\u5982\u679c\u843d\u5165\u60c5\u51b5\u4e00\uff0c\u4e00\u6b21\u8c03\u6574\u540e\u53ef\u80fd\u8fd8\u5728\u60c5\u51b5\u4e00\uff0c\u53ef\u80fd\u76f4\u5230\u6700\u540e\u90fd\u662f\u901a\u8fc7\u60c5\u51b5\u4e00\u52a0\u4e0a\u67d3\u9ed1\u6839\u7ed3\u70b9\u89e3\u51b3\uff0c\u4e5f\u53ef\u80fd\u51e0\u6b21\u8c03\u6574\u540e\u8fdb\u5165\u60c5\u51b5\u4e8c\u6216\u4e09\u540e\u89e3\u51b3\u3002</p> <p><code>\u5b9a\u7406\uff1a</code> \u4e00\u68f5\u6709n\u4e2a\u5185\u90e8\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\uff0c\u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)</p> <p>\u6839\u636e\u4e0a\u8ff0\u6d41\u7a0b\uff0c\u7ea2\u9ed1\u6811\u63d2\u5165\u6700\u591a\u7684\u65cb\u8f6c\u6b21\u6570\u4e3a2\u6b21\uff08\u56e0\u4e3a\u53ea\u6709\u60c5\u51b52 \u548c3 \u4f1a\u8981\u65cb\u8f6c\u8fdb\u5165\u60c5\u51b52 \u540e1 \u6b21\u65cb\u8f6c\u5fc5\u5b9a\u8fdb\u5165\u60c5\u51b53\uff0c\u8fdb\u5165\u60c5\u51b53 \u540e1 \u6b21\u65cb\u8f6c\u5fc5\u5b9a\u89e3\u51b3\uff09\uff0c\u6539\u53d8\u989c\u8272\u6700\u591a\u662f\\(O(logN)\\)\u6b21\uff0c\u5728\u60c5\u51b52\u30013\u53ea\u9700\u8981\u67d3\u4e00\u6b21\u8272\uff0c\u60c5\u51b51\u6700\u5dee\u4e5f\u662f\u6bcf\u4e24\u5c42\u67d3\u4e00\u6b21\u8272\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u77e5\u7ea2\u9ed1\u6811\u7684\u6700\u5927\u9ad8\u5ea6\u4e3a\\(O(logN)\\)\u3002</p> <p>\u56e0\u6b64\u63d2\u5165\u64cd\u4f5c\uff0c\u9664\u4e86\\(O(logN)\\)\u7684\u641c\u7d22\u65f6\u95f4\u5916\uff0c\u4ec5\u5269\u5e38\u6570\u6b21\u7684\u65cb\u8f6c\u548c\\(O(logN)\\)\u6b21\u7684\u67d3\u8272\uff0c\u6700\u540e\u4ecd\u4e3a\\(O(logN)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p> <p></p> <p>\u4e00\u5b9a\u4f1a\u6709\u7ea2\u8272\u3002\u6570\u5b66\u5f52\u7eb3\u6cd5\u8fdb\u884c\u8bc1\u660e</p> <ol> <li>\u5f53\\(n=2\\)\u65f6\uff0c\u5728\u9ed1\u8272\u6839\u7ed3\u70b9\u7684\u4e0b\u65b9\u63d2\u5165\u4e00\u4e2a\u7ea2\u7ed3\u70b9\uff0c\u4e0d\u4ea7\u751f\u4efb\u4f55\u8d1f\u9762\u5f71\u54cd\uff0c\u7ea2\u8272\u7ed3\u70b9\u6570+1</li> <li>\u5982\u679c\u4ee5\u540e\u63d2\u5165\u7ea2\u7ed3\u70b9\u540e\u4e0d\u9700\u8981\u8c03\u6574\uff0c\u5219\u7ea2\u8272\u7ed3\u70b9\u6570\u91cf\u589e\u52a0</li> <li> <p>\u5982\u679c\u9700\u8981\u8c03\u6574\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\\(case1-3\\)</p> <ul> <li>\u5bf9\u4e8ecase1\uff0c\\(X,G\\)\u4e00\u5b9a\u4e3a\u7ea2\u8272\u7ed3\u70b9\uff0c\u5373\u4f7f \u6700\u540e\\(G\\)\u4e0d\u65ad\u5411\u4e0a\u63a8\u79fb\u5230\u6839\u7ed3\u70b9\u540e\u88ab\u67d3\u9ed1\uff0c\\(X\\)\u4f9d\u7136\u4fdd\u6301\u7ea2\u8272</li> <li>\u5bf9\u4e8ecase2\uff0c\u7ecf\u8fc7\u65cb\u8f6c\uff0c\u53d4\u53d4\u7ed3\u70b9\u7684\u8fd1\u4f84\u5b50\u53d8\u4e3a\u8fdc\u4f84\u5b50\uff0c\u7ea2\u8272\u7ed3\u70b9\u6570\u4e0d\u53d8</li> <li>\u5bf9\u4e8ecase3\uff0c\u518d\u6b21\u65cb\u8f6c\u540e\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6839\u7ed3\u70b9\u4e3a\u9ed1\u8272\uff0c\u7b2c\u4e8c\u5c42\u5747\u4e3a\u7ea2\u7ed3\u70b9</li> </ul> </li> </ol>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#212-delete","title":"2.1.2 Delete","text":"<p>\u4e0d\u8003\u8651\u7ea2\u9ed1\u6811\uff0cBST\u7ed3\u70b9\u5220\u9664\u7684\u56de\u987e</p> <ul> <li> <p>Delete a leaf node: reset its parent link to NULL \u5982\u679cX\u6ca1\u6709\u5b69\u5b50\uff0c\u76f4\u63a5\u5220\u9664\u5c31\u597d</p> </li> <li> <p>Delete a degree 1 node: replace the node by its single child \u5982\u679cX\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff0c\u90a3\u8ba9\u5b69\u5b50\u63a5\u66ffX\u7684\u4f4d\u7f6e</p> </li> <li> <p>Delete a degree 2 node: </p> <ul> <li> <p>Replace the node by the largest one in its left subtree or the smallest one in its right subtree.</p> </li> <li> <p>Delete the replacing node from the subtree.</p> </li> </ul> <p>\u5982\u679cX\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u90a3\u5c31\u8ba9X\u4e0e\u5de6\u5b50\u6811\u7684\u6700\u5927\u7ed3\u70b9\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664X</p> <p><code>\u6b64\u65f6X\u6240\u5728\u4f4d\u7f6e\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\u7ed3\u70b9\uff0c\u56e0\u4e3a\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u6ca1\u6709\u53f3\u5b69\u5b50\uff0c\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c\u6ca1\u6709\u5de6\u5b69\u5b50</code></p> </li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u5728\u6b64\u57fa\u7840\u4e0a\u5c55\u5f00\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0cX\u4e0e\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\u8fdb\u884c\u4ea4\u6362\uff0c<code>\u4ea4\u6362\u7684\u4ec5\u4ec5\u662f\u952e\u503c\uff0c\u989c\u8272\u5e76\u6ca1\u6709\u4ea4\u6362</code>\uff0c\u5426\u5219\u7ea2\u7ed3\u70b9\u53ef\u80fd\u6362\u5230\u6839\u7ed3\u70b9\uff08\u867d\u7136\u53ef\u4ee5\u67d3\u9ed1\uff09\uff0c\u9ed1\u7ed3\u70b9\u6362\u5230\u4e0b\u65b9\uff0c\u6781\u6709\u53ef\u80fd\u9020\u6210\u6027\u8d285\u88ab\u7834\u574f\u3002</p> <p>\u5e76\u4e14\u7b2c\u4e09\u79cd\u60c5\u51b5\u7ecf\u8fc7\u4ea4\u6362\u540e\uff0c\u4f1a\u76f4\u63a5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u3001\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002</p> <p>\u5bf9\u4e8e\u60c5\u51b5\u4e00\uff0c\u63a5\u66ff\u88ab\u5220\u9664\u7ed3\u70b9\u7684\u662fNULL</p> <p>\u5bf9\u4e8e\u60c5\u51b5\u4e8c\uff0c\u88ab\u5220\u9664\u7ed3\u70b9\u7684\u5b50\u7ed3\u70b9\u63a5\u66ff\u4f4d\u7f6e\u3002\u5982\u679c\u88ab\u5220\u9664\u7ed3\u70b9\u4e3a\u7ea2\u7ed3\u70b9\uff08\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\uff0c\u6027\u8d285\uff0c\u7ea2\u7ed3\u70b9\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\u90fd\u4e3a\u9ed1\u8272\uff0c\u8981\u4e48\u90fd\u4e3a\u53f6\u5b50\uff0c\u8981\u4e48\u90fd\u4e0d\u4e3a\uff09\u3002\u5982\u679c\u5220\u9664\u7684\u662f\u9ed1\u8272\uff0c<code>\u63a5\u66ff\u4e0a\u6765\u662f\u7ea2\u8272\uff0c\u67d3\u9ed1\u5373\u53ef\uff0c\u6027\u8d285\u4ecd\u7136\u6ee1\u8db3\u3002</code> <code>\u63a5\u66ff\u4e0a\u6765\u662f\u9ed1\u8272\uff0c\u8fd9\u8be5\u5982\u4f55\u5904\u7406\uff0c\u663e\u7136\u6cbf\u7740\u5b50\u6811\u7684\u8def\u5f84\uff0c\u9ed1\u8272\u7ed3\u70b9\u6570\u5c11\u4e86\u4e00</code></p> <p>\u4e3a\u4e86\u89e3\u51b3\u5220\u9664\u9ed1\u8272\uff0c\u63a5\u66ff\u7ed3\u70b9\u4e3a\u9ed1\u8272\uff0c\u6cbf\u5b50\u6811\u8def\u5f84\u9ed1\u8272\u7ed3\u70b9\u6570\u51cf\u4e00 Must add 1 black to the path of the replacing node.<code>\u76f4\u63a5\u7ed9\u66ff\u6362\u4e0a\u6765\u7684\u9ed1\u8272\u518d\u52a0\u4e00\u91cd\u9ed1\u8272\uff0c\u53d8\u6210\u53cc\u9ed1</code> </p> <p>\u4ee5\u4e0bX \u5728\u6b64\u5904\u5219\u8868\u793a\u53cc\u9ed1\u7ed3\u70b9\uff0c\u56fe\u4e2d\u7528\u9ed1\u8272\u5706\u5708\u548c\u5706\u65c1\u8fb9\u7684\u52a0\u53f7\u8868\u793a\u53cc\u9ed1\uff0c\u84dd\u8272\u8868\u793a\u989c\u8272\u65e0\u6240\u8c13\uff0c\u53ef\u7ea2\u53ef\u9ed1\u3002</p> <ul> <li>case1\uff1aX\u7684\u5144\u5f1f\u662f\u7ea2\u8272\u7684</li> </ul> <p></p> <p>   $$   \u7236\u5144\u6362\u8272 + \u53f3\u65cb   $$   \u7531\u4e8e\u539f\u5148\u7684\u6811\u6ee1\u8db3\u7ea2\u9ed1\u6811\u5b9a\u4e49\u7b2c\u56db\u6761\uff0c\u56e0\u6b64\u6b64\u65f6\u7236\u7ed3\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5144\u5f1f\u662f\u7ea2\u8272\uff0c\u90a3\u5c31\u5e0c\u671b\u5144\u5f1f\u80fd\u4e24\u808b\u63d2\u5200\uff0c\u628a\u5144\u5f1f\u8f6c\u4e0a\u53bb\uff0c\u4e3a\u4e86\u4fdd\u6301\u7ea2\u9ed1\u6811\u6027\u8d28\uff0c\u5f88\u53ef\u60dc\u53ea\u80fd\u628a\u7236\u4eb2\u67d3\u7ea2\uff0c\uff0c\u81ea\u5df1\u8fd8\u627f\u53d7\u53cc\u9ed1debuff\u3002\u4f46\u662f\u597d\u5904\u5728\u4e8e\uff0c\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u63a5\u4e0b\u6765\u7684\u60c5\u51b5\u4e8c\u4e09\u56db\u4e2d\u7684\u4e00\u79cd\uff0c\u6211\u4eec\u6765\u770b\u5982\u4f55\u89e3\u51b3\u3002</p> <ul> <li>case2\uff1aX\u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u5144\u5f1f\u7684\u4e24\u4e2a\u5b69\u5b50\uff08\u6839\u636e\u8fdc\u8fd1\u5212\u5206\u4e3a\u8fdc\u4f84\u5b50\u548c\u8fd1\u4f84\u5b50\uff09\u90fd\u662f\u9ed1\u8272\u7684</li> </ul> <p></p> <p></p> <p>\u73b0\u5728\u8fd9\u4e2a\u60c5\u51b5\u4eceP\u89c6\u89d2\u51fa\u53d1\uff0c\u6ee1\u8db3\u6027\u8d285\u3002\u6240\u4ee5\u4e3a\u4e86\u7f13\u51cf\u53cc\u9ed1\u8fd9\u4e2adebuff\uff0c\u6211\u5c06\u53cc\u9ed1\u63a8\u7ed9\u7236\u4eb2\uff0c\u8fd9\u65f6\u6027\u8d285\u88ab\u6253\u7834\u4e86\uff0c\u5144\u5f1f\u88ab\u8feb\u53d8\u4e3a\u7ea2\u8272</p> <ul> <li>\u5982\u679c\u7236\u7ed3\u70b9\u672c\u8eab\u4e3a\u7ea2\u8272\uff0c<code>\u5728\u53cc\u9ed1\u52a0\u6301\u4e0b\uff0c\u53d8\u4e3a\u9ed1\u8272\uff0c\u6070\u597d\u5f25\u8865\u9ed1\u8272\u5c11\u4e00\u7684\u60c5\u51b5\uff0c\u95ee\u9898\u89e3\u51b3</code></li> <li>\u5982\u679c\u7236\u7ed3\u70b9\u672c\u8eab\u4e3a\u9ed1\u8272\uff0c\u90a3\u5c31\u53d8\u4e3a\u53cc\u9ed1\uff0c\u95ee\u9898\u5411\u6839\u7ed3\u70b9\u9760\u8fd1</li> <li> <p>\u5047\u5982\u4ececase1\u53d8\u4e3acase2\uff0c\u7236\u7ed3\u70b9\u4e00\u5b9a\u4e3a\u7ea2\u8272\uff0c\u90a3\u4e48\u95ee\u9898\u76f4\u63a5\u89e3\u51b3</p> </li> <li> <p>case3 \uff1a X\u7684\u5144\u5f1f\u7ed3\u70b9\u662f\u9ed1\u8272\uff0c\u4f46\u662f\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\u7684</p> </li> </ul> <p></p> <p></p> <p>\u6b64\u65f6\u7684\u7ea2\u8272\u5728\u7236\u4eb2\\(P\\)\u7684\\(RL\\)\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u5b9e\u73b0double rotation\u4e2d\u7684\u4e00\u4e2asingle rotation\uff08\u5de6\u65cb\uff09\u5c31\u80fd\u5f97\u5230\\(RR\\)\u60c5\u51b5</p> <p>\u5e76\u4e14\u6b64\u5904\u5b58\u5728\u989c\u8272\u53d8\u6362</p> <ul> <li>case4 : X \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fdc\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fd1\u4f84\u5b50\u989c\u8272\u4efb\u610f</li> </ul> <p></p> <p></p> <p>\u6b64\u65f6\u5bf9\u5e94AVL\u6811\u7684RR\uff0c\u4e8e\u662f\u518d\u4e00\u6b21single rotation\u5373\u53ef\u628a\u53cc\u9ed1\u7684\u4e00\u91cd\u9ed1\u4e22\u7ed9\u7ea2\u8272\u8fdc\u4f84\u5b50\uff08\u5373\\(X,N_2\\)\u90fd\u53d8\u6210\u9ed1\u8272\uff09\uff0c\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u6027\u8d28\u7684\u989c\u8272\u53d8\u6362\uff0cP\u548cS\u8fd8\u8981\u4ea4\u6362\u989c\u8272</p> <p></p> <p><code>\u5b9a\u7406</code>: \u4e00\u68f5\u6709n\u4e2a\u5185\u90e8\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)</p> <ol> <li>\u6211\u4eec\u6700\u591a\u4f7f\u7528\\(O(logN)\\)\u7684\u65f6\u95f4\u627e\u5230\u5220\u9664\u7ed3\u70b9\uff0c\u8fdb\u884c\u4e00\u6b21\u4ea4\u6362\uff0c\u540e\u7eed\u8fdb\u884c\u5220\u9664\u64cd\u4f5c</li> <li>\u6700\u574f\u8fdb\u5165\u5220\u9664\u9ed1\u8272\uff0c\u63a5\u66ff\u70b9\u4e3a\u9ed1\u8272\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8ecase1\uff0c\u5982\u679c\u8fdb\u5165case3\uff0ccase4\u80fd\u5feb\u901f\u89e3\u51b3\uff0c\u56e0\u4e3a4 \u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\uff0c3 \u76f4\u63a5\u8fdb\u51654 \u7136\u540e\u89e3\u51b3\u3002\u5982\u679c\u8fdb\u5165case2\uff0c\u4e5f\u56e0\u4e3a\u7236\u7ed3\u70b9\u4e3a\u7ea2\u8272\u76f4\u63a5\u89e3\u51b3\u3002</li> <li>\u5bf9\u4e8ecase2\uff0c\u53ef\u4ee5\u56e0\u4e3a\u7236\u7ed3\u70b9\u4e3a\u7ea2\u8272\u76f4\u63a5\u89e3\u51b3\uff0c\u4e5f\u80fd\u591a\u6b21\u591a\u6b21\u8fdb\u5165case2\uff0c\u6bcf\u6b21\u5411\u4e0a\u63a8\u4e00\u683c\uff0c\u7531\u4e8e\u6811\u9ad8\u4e3a\\(O(logN)\\),\u6240\u4ee5\u6700\u591a\u8fdb\u884c\\(O(logN)\\)\u6b21</li> <li>\u5bf9\u4e8ecase3\uff0ccase4\uff0c\u5747\u80fd\u5feb\u901f\u89e3\u51b3\u3002</li> </ol> <p></p>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#22-b-tree","title":"2.2 B+ Tree","text":"<p>B+ \u6811\u662f\u4e00\u79cd\u7528\u6811\u72b6\u5f62\u5f0f\u7ef4\u62a4\u6709\u5e8f\u6570\u5217\u6bd4\u8f83\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u589e\u6539\u64cd\u4f5c\u62e5\u76f8\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7ed3\u6784\u66f4\u52a0\u7a33\u5b9a\u7684\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u901a\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\u3002</p> <p></p> <p>A B+ tree of order M is a tree with the following structural properties:</p> <ol> <li>The root is either a leaf or has between 2 and \\(M\\) children.    \u6839\u8981\u4e48\u662f\u53f6\u5b50\uff0c\u8981\u4e48\u5177\u6709 2 \u548c\\(M\\) \u5b50\u7ea7\u3002</li> <li>All nonleaf nodes (except the root) have between$ \u2308M/2\u2309$and M children.    \u6240\u6709\u975e\u53f6\u7ed3\u70b9\uff08\u6839\u9664\u5916\uff09\u90fd\u6709 \u2308M/2\u2309 \u548c M \u4e2a\u5b50\u7ed3\u70b9\u3002</li> <li>All leaves are at the same depth.    \u6240\u6709\u53f6\u5b50\u90fd\u5904\u4e8e\u76f8\u540c\u7684\u6df1\u5ea6\u3002</li> </ol> <p><code>\u6240\u6709\u771f\u5b9e\u7684\u6570\u636e\u90fd\u88ab\u5b58\u50a8\u5728\u53f6\u5b50\u7ed3\u70b9\u4e2d\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u5217\u3002\u800c\u975e\u53f6\u5b50\u7ed3\u70b9\uff08\u4e0d\u5305\u542broot\uff09\u4e2d\u7b2c$i$\u4e2a\u503c\u7b49\u4e8e\u7b2c$i+1$\u9897\u5b50\u6811\u7684\u6700\u5c0f\u503c\u3002\u5982\u4e0a\u56fe\u6240\u793a\u8868\u73b0\u4e3a\u989c\u8272\u76f8\u540c\u7684\u4e00\u5bf9\u4e0a\u4e0b\u7ed3\u70b9\u3002\u56e0\u6b64\u975e\u53f6\u7ed3\u70b9\u6700\u591a\u5b58 $M-1$\u4e2a\u503c\u3002</code></p> <p>\u62bd\u8c61\u5730\u6765\u8bf4\u5c31\u662f\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u5217\u76f8\u5bf9\u5747\u5300\u7684\u5206\u4e3a \\(m\\)\u5757\uff0c\u7136\u540e\u628a\u5206\u754c\u7684\u6570\u62ff\u51fa\u6765\u3002\u5f53\u6211\u4eec\u53bb\u67e5\u627e\u6216\u63d2\u5165\u65f6\uff0c\u53ea\u9700\u8981\u548c\u8fd9\u4e9b\u8fb9\u754c\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c31\u77e5\u9053\u5b83\u5e94\u8be5\u653e\u5728\u54ea\u4e00\u5757\u91cc\u3002\u518d\u4e0d\u65ad\u7ec6\u5316\u7c92\u5ea6\uff0c\u7528\u7c7b\u4f3c\u4e8e\\(m\\)\u5206\u201d\u7684\u601d\u60f3\u6765\u627e\u5230\u76ee\u6807\u4f4d\u7f6e\u3002</p> <p>\u7531\u4e8e\u5b83\u5728\u7a7a\u95f4\u6700\u6d6a\u8d39\u7684\u60c5\u51b5\u4e0b\u662f\u4e00\u68f5 \\(\\lceil M/2 \\rceil\\) \u53c9\u6811\uff0c\u6240\u4ee5 B+ \u6811\u7684\u6df1\u5ea6\u662f \\(O(\\lceil \\log_{\\lceil M/2 \\rceil} N \\rceil)\\)\u3002</p>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#221-\u67e5\u627e","title":"2.2.1 \u67e5\u627e","text":"<p>\u4f8b\u5982\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u8fd9\u68f5\u6811\u4e2d\u627e <code>43</code> \u8fd9\u4e2a\u503c\uff0c\u6a59\u8272\u90e8\u5206\u8868\u793a\u6211\u4eec\u7684\u7126\u70b9\u3002</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u6709 21\u226443&lt;48\uff0c\u6240\u4ee5\u987a\u7740\u6807\u8bc6\u7684\u6a59\u8272\u6307\u9488\u5411\u4e0b\u3002</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u6709 41\u226443\uff0c\u6240\u4ee5\u987a\u7740\u6807\u8bc6\u7684\u6a59\u8272\u6307\u9488\u5411\u4e0b</p> <p></p> <p>\u5df2\u7ecf\u8d70\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u6700\u540e\u53d1\u73b0\u6211\u4eec\u8981\u627e\u7684 <code>43</code>\u3002</p>"},{"location":"ADS/2.%20Red%20Black%20Tree%20%26%20B%2B%20Tree/#222-\u63d2\u5165","title":"2.2.2 \u63d2\u5165","text":"<p>Insert(46), no split</p> <p></p> <p></p> <p></p> <p>\u627e\u5230\u8981\u585e\u7684\u4f4d\u7f6e\u4e86\uff0c\u53d1\u73b0\u8981\u585e\u7684\u5730\u65b9\u662f <code>45</code> \u7684\u540e\u9762\uff0c\u63d2\u5165\u4ee5\u540e\u53d1\u73b0\u4e00\u5171 4 \u4e2a\u6570\uff0c\u800c \ufffd=4M=4\uff0c\u4e0d\u9700\u8981\u5206\u88c2\u3002</p> <p>Insert(44), split</p> <p></p> <p></p> <p></p> <p>\u627e\u5230\u8981\u585e\u7684\u4f4d\u7f6e\u4e86\uff0c\u53d1\u73b0\u8981\u585e\u7684\u5730\u65b9\u662f <code>45</code> \u7684\u524d\u9762\uff0c\u63d2\u5165\u4ee5\u540e\u53d1\u73b0\u4e00\u5171 5 \u4e2a\u6570\uff0c\u800c \ufffd=4M=4\uff0c\u9700\u8981\u5206\u88c2\uff01</p> <p></p> <p>\u5411\u4e0a\u9012\u5f52\uff0c\u6211\u4eec\u60b2\u75db\u5730\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8282\u70b9\u5728\u5206\u88c2\u540e\u6709\u4e86 <code>5</code> \u4e2a\u5b50\u8282\u70b9\uff0c\u4e0d\u5f97\u4e0d\u518d\u6b21\u5206\u88c2\u3002</p> <p></p> <p>\u5411\u4e0a\u9012\u5f52\uff0c\u6211\u7684\u8001\u5929\u7237\u5440\uff0c\u600e\u4e48\u8fd8\u6ca1\u5230\u5934\uff01\u8fd9\u4e0b\u6211\u4eec\u8981\u5206\u88c2\u6839\u90e8\u4e86\uff01</p> <p></p> <p>\u7531\u4e8e\u6839\u90e8\u88ab\u88c2\u5f00\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u6839\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6811\u7684\u5c42\u6570\u589e\u9ad8\u4e86\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u7ec8\u4e8e\u5b8c\u6210\u4e86\u63d2\u5165\u3002</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/","title":"3. Inverted File Index","text":"<p> \u7ea6 2670 \u4e2a\u5b57  35 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#31-\u5012\u6392\u7d22\u5f15","title":"3.1 \u5012\u6392\u7d22\u5f15","text":"<p>\u5012\u6392\u7d22\u5f15\uff08inverted file index\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6587\u672c\u68c0\u7d22\u6280\u672f\uff0c\u7528\u4e8e\u5feb\u901f\u67e5\u627e\u5305\u542b\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u6587\u6863\u3002\u5b83\u901a\u8fc7\u5c06\u5355\u8bcd\u6216\u77ed\u8bed\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u5e76\u5c06\u5b83\u4eec\u51fa\u73b0\u5728\u6587\u6863\u4e2d\u7684\u4f4d\u7f6e\u8bb0\u5f55\u5728\u4e00\u4e2a\u7d22\u5f15\u4e2d\uff0c\u4ece\u800c\u652f\u6301\u5feb\u901f\u7684\u6587\u672c\u68c0\u7d22\u3002\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u53ef\u4ee5\u5feb\u901f\u5730\u5b9a\u4f4d\u5305\u542b\u6307\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u6587\u6863\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5012\u6392\u7d22\u5f15\u5e7f\u6cdb\u5e94\u7528\u4e8e\u641c\u7d22\u5f15\u64ce\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u4fe1\u606f\u68c0\u7d22\u7b49\u9886\u57df\u3002</p> <p>\u2014\u2014 ChatGPT</p> <p>\u200b    Wiki: https://en.wikipedia.org/wiki/Inverted_index</p> <p>Definition: Inverted file contains a list of pointers(e.g. the number of a page) to all occurrences of that term in the text.</p> <p>\u6240\u8c13\u7684\u5012\u6392\u7d22\u5f15\uff0c\u6240\u6709\u7684\u601d\u60f3\u90fd\u51dd\u7ed3\u5728\u4e86\u201c\u5012\u201d\uff0c\u4e5f\u5c31\u662f inverted\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u6211\u89c9\u5f97\u7528\u201c\u9006\u201d\u66f4\u5408\u9002\u3002\u8fd9\u91cc\u7684\u7d22\u5f15\u5bf9\u8c61\u6307\u7684\u662f\u201c\u6587\u6863\u201d\u548c\u201c\u5355\u8bcd\u201d\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u5012\u6392\u7d22\u5f15\u7684\u610f\u601d\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff0c\u6211\u4eec\u8bb0\u5f55\u5b83\u51fa\u73b0\u5728\u54ea\u4e9b\u6587\u6863\u4e2d\uff0c\u4ee5\u53ca\u8bb0\u5f55\u4ed6\u4eec\u51fa\u73b0\u7684\u6b21\u6570\uff08\u9891\u7387\uff09\u3002</p> <p>\u641c\u7d22\u5f15\u64ce\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u5012\u6392\u7d22\u5f15\u7684\u5e94\u7528\u6848\u4f8b\uff0c\u6211\u4eec\u901a\u8fc7\u8f93\u5165\u6211\u4eec\u5173\u6ce8\u7684\u8bcd\u8bed\uff0c\u6765\u7d22\u5f15\u5305\u542b\u8fd9\u4e2a\u8bcd\u7684\u6240\u6709\u6587\u6863\u3002 \u5f53\u7136\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u8003\u8651\u7684\u662f\u82f1\u6587\u3002</p> <p><code>\u533a\u5206TF \u548c DF</code></p> <ul> <li>\\(TF\\)\uff08term frequency\uff09\uff1a\u4e00\u4e2a\u5355\u8bcd\u5728\u67d0\u4e00\u4e2a\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u9891\u7387\uff0c\\(TF\\)\u503c\u8d8a\u5927\uff0c\u533a\u5206\u80fd\u529b\u8d8a\u5f3a</li> <li>\\(DF\\)\uff08document frequency\uff09\uff1a\u4e00\u4e2a\u5355\u8bcd\u5728\u591a\u5c11\u6587\u6863\u4e2d\u51fa\u73b0\u8fc7\uff0c\\(DF\\)\u8d8a\u5927\uff0c\u8868\u660e\u8fd9\u4e2a\u5355\u8bcd\u5728\u5f88\u591a\u6587\u6863\u4e2d\u90fd\u51fa\u73b0\u8fc7\uff0c\u533a\u5206\u6587\u6863\u7684\u80fd\u529b\u8d8a\u5f31</li> </ul>"},{"location":"ADS/3.%20Inverted%20File%20Index/#311-\u5012\u6392\u7d22\u5f15\u7684\u5b9e\u73b0","title":"3.1.1 \u5012\u6392\u7d22\u5f15\u7684\u5b9e\u73b0","text":"<p>\u77e5\u9053\u4e86\u5012\u6392\u7d22\u5f15\u7684\u601d\u60f3\u4e4b\u540e\uff0c\u5176\u5b9e\u73b0\u5c31\u53d8\u5f97\u975e\u5e38\u76f4\u89c2\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5b57\u5178\u6765\u63cf\u8ff0\u4e00\u7c7b\u5173\u7cfb\uff0c\u5176\u4e3b\u952e\u4e3a\u5355\u8bcd\uff0c\u952e\u503c\u4e3a\u8fd9\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\u3002</p> <p>\u6700\u6734\u7d20\u7684\u7248\u672c\u5c31\u662f\u8ba9\u952e\u503c\u4e3a\u5355\u8bcd\u51fa\u73b0\u8fc7\u7684\u6587\u6863\u7684\u5e8f\u53f7\u5e8f\u5217\uff0c\u800c\u5982\u679c\u6211\u4eec\u8fd8\u9700\u8981\u77e5\u9053\u8bcd\u6c47\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5219\u53ef\u4ee5\u8ba9\u952e\u503c\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6587\u6863\u7684\u5e8f\u53f7\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u5355\u8bcd\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f8b\u5982\u6211\u4eec\u6709\u5982\u4e0b\u6587\u4ef6\u96c6\uff1a</p> <p>\u6587\u6863\u96c6</p> Doc Text 1 Gold silver truck 2 Shipment of gold damaged in a fire 3 Delivery of silver arrived in a silver truck 4 Shipment of gold arrived in a truck <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u5012\u6392\u7d22\u5f15\uff1a</p> <p>\u5012\u6392\u7d22\u5f15</p> No. Term Times; (Doc ID: Places) 1 a {3; (2;6),(3;6),(4;6)} 2 arrived {2; (3;4),(4;4)} 3 damaged {1; (2;4)} 4 delivery {1; (3;1)} 5 fire {1; (2;7)} 6 gold {3; (1;1),(2;3),(4;3)} 7 of {3; (2;2),(3;2),(4;2)} 8 in {3; (2;5),(3;5),(4;5)} 9 shipment {2; (2;1),(4;1)} 10 silver {2; (1;2),(3;3,7)} 11 truck {3; (1;3),(3;8),(4;7)} <p>\u524d\u8005\u4e3aTerm Dictionary\uff0c \u540e\u8005\u4e3a Posting List</p> <p>\u6240\u4ee5\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u626b\u63cf\u6587\u6863\uff0c\u7136\u540e\u5b58\u4e0b\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5728\u54ea\u91cc\u51fa\u73b0\u8fc7\u5373\u53ef\u3002</p> <pre><code>while(read a document D)\n{\n    while(read a term T in D)\n    {\n        if(Find(Dictionary, T) == False)\n        {\n            // \u78b0\u5230\u65b0\u5355\u8bcd\n            Insert(Dictionary, T);\n        }\n        get T's posting list;\n        // \u63d2\u5165\u7d22\u5f15\n        Insert a node to T's posting list;\n    }\n}\nWrite the inverted index to disk;\n</code></pre>"},{"location":"ADS/3.%20Inverted%20File%20Index/#32-\u6539\u8fdb","title":"3.2 \u6539\u8fdb","text":"<p>\u90a3\u4e48\u5230\u6b64\u4e3a\u6b62\u4e86\u5417\uff1f\u975e\u4e5f\u3002\u5018\u82e5\u6beb\u65e0\u8282\u5236\u7684\u5c06\u6240\u6709\u8bcd\u90fd\u5b58\u5230\u5012\u6392\u7d22\u5f15\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u5012\u6392\u7d22\u5f15\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u5176\u4e2d\u5fc5\u7136\u6709\u5f88\u591a\u5197\u4f59\u4fe1\u606f\u5b58\u5728\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5012\u6392\u7d22\u5f15\u8fdb\u884c\u4e00\u4e9b\u6539\u8fdb\u3002</p> <p>\u6587\u4ef6\u5012\u6392\u7d22\u5f15\u5efa\u7acb\u7684\u8fc7\u7a0b\u4e3b\u8981\u662f\uff1a</p> <ol> <li> <p>\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8bcd</p> </li> <li> <p>\u5c06\u8be5\u8bcd\u63d0\u53d6\u4e3a\u8bcd\u5e72(word stemming)\uff0c\u5373\u53bb\u9664\u7b2c\u4e09\u4eba\u79f0\u5f62\u5f0f\u3001\u8fc7\u53bb\u5f0f\u3001\u8fdb\u884c\u65f6\u7b49\u5f62\u5f0f\uff0c\u7559\u4e0b\u8bcd\u5e72\uff09\uff0c\u5e76\u53bb\u9664\u5206\u8bcd(stop word)\uff0c\u5373\u201da\u201d, \u201cis\u201d\u7b49\u6ca1\u6709\u610f\u4e49\u7684\u8bcd\u3002</p> </li> <li>\u68c0\u67e5\u8be5\u8bcd\u662f\u5426\u5df2\u7ecf\u5728\u8bcd\u5178\u4e4b\u4e2d\u3002</li> <li>\u82e5\u4e0d\u5728\uff0c\u5219\u5c06\u8be5\u8bcd\u6dfb\u52a0\u5165\u8bcd\u5178\u4e4b\u4e2d\u3002\u66f4\u65b0\u7d22\u5f15\u4fe1\u606f\u3002</li> <li>\u5efa\u7acb\u5b8c\u6bd5\u540e\uff0c\u5c06\u7d22\u5f15\u6587\u4ef6\u5b58\u5165\u78c1\u76d8\u3002</li> </ol> <p>\u7d22\u5f15\u4fe1\u606f\u5305\u62ec\uff1a\u8bcd\u8bed\uff0c\u8bcd\u8bed\u51fa\u73b0\u7684\u603b\u6b21\u6570\uff0c\uff08\u6587\u4ef6\u53f7\uff0c\u5728\u6587\u4ef6\u4e2d\u8be5\u8bcd\u7684\u4f4d\u7f6e\uff09</p> <p>example\uff1a\u5012\u6392\u7d22\u5f15\u4fe1\u606f\u5b9e\u4f8b           </p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#321-\u505c\u7528\u8bcd","title":"3.2.1 \u505c\u7528\u8bcd","text":"<p>\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u6211\u4eec\u5b58\u4e0b\u6765\u7684\u8fd9\u4e9b\u5185\u5bb9\u4e2d\uff0c\u6709\u4e00\u4e9b\u4e1c\u897f\u9891\u7e41\u5730\u51fa\u73b0\u5728\u6240\u6709\u6587\u6863\u4e2d\uff0c\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8bcd\u53ef\u80fd\u5e76\u4e0d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u7d22\u5f15\uff0c\u4f8b\u5982\u6b63\u5e38\u7684\u82f1\u6587\u6587\u7ae0\u4e2d\u7684 <code>a</code>\uff0c<code>the</code> \u7b49\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u7c7b\u8bcd\u2014\u2014\u6211\u4eec\u79f0\u4e4b\u4e3a\u505c\u7528\u8bcd(stop words)\uff0c\u5bf9\u4e8e\u505c\u7528\u8bcd\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5c06\u4ed6\u4eec\u5b58\u4e0b\u4e86\u3002</p> <p>question \"\u54ea\u4e9b\u8bcd\u4f1a\u6210\u4e3a\u505c\u7528\u8bcd\uff1f\"</p> <p>\u4e00\u822c\u4e00\u4e2a\u8bcd\u6210\u4e3a\u505c\u7528\u8bcd\uff0c\u662f\u56e0\u4e3a\u5b83\u65e0\u6cd5\u6210\u4e3a\u4e00\u4e2a\u6709\u6548\u7684\u68c0\u7d22\u5173\u952e\u5b57\uff0c\u5b83\u53ef\u80fd\u662f\u5728\u5927\u91cf\u8d44\u6599\u4e2d\u5927\u91cf\u51fa\u73b0\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u5229\u7528\u5b83\u627e\u51fa\u6211\u4eec\u60f3\u8981\u7684\u8d44\u6599\u3002\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u4e00\u4e2a\u5171\u901a\u70b9\u662f\u5b83\u4eec\u901a\u5e38\u90fd\u6709\u7740\u76f8\u5f53\u9ad8\u7684\u51fa\u73b0\u9891\u7387\u3002</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#322-\u8bcd\u5e72\u5206\u6790","title":"3.2.2 \u8bcd\u5e72\u5206\u6790","text":"<p>\u8bcd\u5e72\u5206\u6790(word stemming)\u662f\u4e00\u79cd\u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u5176\u8bcd\u5e72\u7684\u6280\u672f\u3002\u4f8b\u5982\uff0c\u8bcd\u5e72\u5206\u6790\u53ef\u4ee5\u5c06\u5355\u8bcd <code>trouble</code>\uff0c<code>troubled</code>\uff0c<code>troubles</code>\uff0c<code>troubling</code> \u90fd\u8f6c\u6362\u4e3a <code>trouble</code>\uff08\u751a\u81f3\u662f <code>troubl</code>\uff0c\u6838\u5fc3\u76ee\u7684\u662f\u8ba9\u5b83\u4eec\u53d8\u6210\u540c\u4e00\u4e2a\u5355\u8bcd\uff09\u3002\u76f8\u540c\u8bcd\u5e72\u7684\u8bcd\u6709\u7740\u7c7b\u4f3c\u7684\u542b\u4e49\uff0c\u5728\u68c0\u7d22 <code>troubled</code> \u7684\u65f6\u5019\uff0c\u5f53\u7136\u4e5f\u53ef\u80fd\u60f3\u627e\u5230\u5305\u542b <code>trouble</code> \u7684\u6587\u6863\u3002\u8fd9\u79cd\u6280\u672f\u4e5f\u53ef\u4ee5\u8ba9\u591a\u4e2a\u5355\u8bcd\u5171\u4eab\u540c\u4e00\u6761\u7d22\u5f15\u8bb0\u5f55\uff0c\u5728\u5b58\u548c\u627e\u7684\u8fc7\u7a0b\u4e2d\u90fd\u80fd\u4f18\u5316\u6548\u679c\u3002</p> <p>\u4e0d\u8fc7\u5728\u5177\u4f53\u64cd\u4f5c\u65b9\u9762\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5c31\u663e\u5f97\u6bd4\u8f83\u7e41\u6742\u548c\u66b4\u529b\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u6839\u636e\u8bed\u6cd5\u89c4\u8303\u8fdb\u884c\u66b4\u529b\u5339\u914d\u548c\u5224\u65ad\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u5c55\u5f00\u4e86\u3002</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#323-\u5206\u5e03\u5f0f","title":"3.2.3 \u5206\u5e03\u5f0f","text":"<p>\u5206\u5757\u6700\u540emerge</p> <pre><code>BlockCnt = 0; \nwhile ( read a document D )\n{\n  while ( read a term T in D ) \n  {\n      if ( out of memory ) \n      {\n          Write BlockIndex[BlockCnt] to disk;\n          BlockCnt ++;\n          FreeMemory;\n      }\n      if ( Find( Dictionary, T ) == false )\n          Insert( Dictionary, T );\n      Get T\u2019s posting list;\n      Insert a node to T\u2019s posting list;\n  }\n}\nfor ( i=0; i&lt;BlockCnt; i++ )\n    Merge( InvertedIndex, BlockIndex[i] );\n</code></pre> <p>\u5f53\u5012\u6392\u7d22\u5f15\u6587\u4ef6\u8f83\u5927\u65f6\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\uff0c\u65e0\u6cd5\u5b58\u5728\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u6b64\u65f6\u9700\u8981\u5012\u6392\u7d22\u5f15\u5206\u5e03\u5f0f\u5b58\u50a8\u6280\u672f\u3002</p> <ul> <li>\u672f\u8bed\u533a\u5206\u7d22\u5f15\uff08term-partitioned index\uff09</li> </ul> <p>\u6309\u7167\u5173\u952e\u8bcd\u5c06\u6587\u4ef6\u5b58\u5728\u4e8e\u4e0d\u540c\u7684\u4e3b\u673a\u4e0a\uff0c\u5168\u5c40\u5efa\u7acb\u7d22\u5f15</p> <ul> <li>\u6587\u6863\u533a\u5206\u7d22\u5f15\uff08Document-partitioned index\uff09</li> </ul> <p>\u6309\u7167\u6587\u4ef6\u53f7\u5c06\u6587\u4ef6\u5b58\u5728\u4e0d\u540c\u4e3b\u673a\u4e0a\uff0c\u5728\u6bcf\u53f0\u4e3b\u673a\u4e0a\u5efa\u7acb\u5c40\u90e8\u7d22\u5f15</p> <p>\u800c\u8fd9\u91cc\u6709\u4e24\u79cd\u5206\u5e03\u5f0f\u7684\u7b56\u7565\uff0c\u5176\u4e00\u662f\u6839\u636e\u5355\u8bcd\u7684\u5b57\u5178\u5e8f\u8fdb\u884c\u5206\u5e03\u5f0f\uff0c\u5176\u4e8c\u662f\u6839\u636e\u6587\u6863\u8fdb\u884c\u5206\u5e03\u5f0f\u3002</p> <p></p> <p>\u663e\u7136\u6839\u636e\u5355\u8bcd\u7684\u5185\u5bb9\u8fdb\u884c\u5206\u5e03\u5f0f\uff0c\u80fd\u591f\u63d0\u9ad8\u7d22\u5f15\u6548\u7387\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5c06\u6240\u6709\u5f62\u5f0f\u63a5\u8fd1\u7684\u5355\u8bcd\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5355\u70b9\u6545\u969c\uff0c\u5bb9\u707e\u80fd\u529b\u5f88\u5dee\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u662f\u5f88\u597d\u3002</p> <p>\u800c\u7b2c\u4e8c\u79cd\u529e\u6cd5\u5219\u6709\u8f83\u5f3a\u7684\u5bb9\u707e\u6027\u80fd\u3002\u5373\u4f7f\u4e00\u53f0\u673a\u5668\u65e0\u6cd5\u5de5\u4f5c\uff0c\u4e5f\u4e0d\u4f1a\u5267\u70c8\u5f71\u54cd\u5230\u6574\u4e2a\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#324-dynamic-indexing-\u52a8\u6001\u7d22\u5f15","title":"3.2.4 Dynamic indexing \u52a8\u6001\u7d22\u5f15","text":"<p><code>\u5f53\u524d\u60c5\u51b5\uff0c\u6700\u7d22\u5f15\u7684\u6587\u6863\u96c6\u53ef\u80fd\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u4f8b\u5982\u6dfb\u52a0\u65b0\u6587\u6863\u3001\u5220\u9664\u73b0\u6709\u6587\u6863</code></p> <p>\u7d22\u5f15\u9700\u8981\u5b9a\u65f6\u66f4\u65b0\uff0c\u5e76\u5efa\u7acb\u4e3b\u7d22\u5f15\u548c\u8f85\u52a9\u7d22\u5f15</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5468\u671f\u6027\u5730\u5bf9\u6587\u6863\u96c6\u4ece\u5934\u5f00\u59cb\u8fdb\u884c\u7d22\u5f15\u91cd\u6784</p> <ul> <li>\u4e00\u4e2a\u5927\u7684\u4e3b\u7d22\u5f15\uff0c\u4fdd\u5b58\u5728\u78c1\u76d8\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5c0f\u7684\u8f85\u52a9\u7d22\u5f15\uff0c\u7528\u4e8e\u5b58\u50a8\u65b0\u6587\u6863\u4fe1\u606f\uff0c\u5b58\u50a8\u5728\u5185\u5b58\u4e2d</li> <li>\u68c0\u7d22\u65f6\u53ef\u4ee5\u540c\u65f6\u904d\u5386\u4e24\u4e2a\u7d22\u5f15\uff0c\u5e76\u5c06\u7ed3\u679c\u8fdb\u884c\u5408\u5e76</li> <li>\u6587\u6863\u7684\u5220\u9664\u8bb0\u5f55\u5728\u4e00\u4e2a\u65e0\u6548\u4f4d\u5411\u91cf\uff0c\u5728\u8fd4\u56de\u68c0\u7d22\u7ed3\u679c\u4e4b\u524d\uff0c\u53ef\u4ee5\u5229\u7528\u5b83\u8fc7\u6ee4\u5df2\u7ecf\u5220\u9664\u7684\u6587\u6863\u3002</li> <li>\u6bcf\u5f53\u8f85\u52a9\u7d22\u5f15\u5f88\u5927\u65f6\uff0c\u5c31\u5c06\u5b83\u5408\u5e76\u5230\u4e3b\u7d22\u5f15</li> </ul> <p></p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#325-compression-\u7d22\u5f15\u6587\u4ef6\u538b\u7f29","title":"3.2.5 compression \u7d22\u5f15\u6587\u4ef6\u538b\u7f29","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u7d22\u5f15\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\u4e0d\u4f46\u53ef\u4ee5\u51cf\u5c0f\u7a7a\u95f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u9ad8\u7d22\u5f15\u6548\u7387\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u91c7\u7528\u9ad8\u6548\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u867d\u7136\u5c06\u8017\u8d39\u4e00\u5b9a\u65f6\u95f4\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u89e3\u538b\uff0c\u4f46\u56e0\u4e3a\u80fd\u63d0\u9ad8cache\u7684\u5229\u7528\u7387\uff0c\u5e76\u80fd\u63d0\u9ad8\u4ece\u78c1\u76d8\u5230\u5185\u5b58\u7684\u8bfb\u53d6\u6548\u7387\uff0c\u6240\u4ee5\u603b\u4f53\u6765\u8bf4\u6548\u7387\u5c06\u5f97\u5230\u63d0\u5347\u3002</p> <p><code>\u91c7\u7528\u5dee\u5206\u538b\u7f29\u7684\u65b9\u6cd5\u2014\u2014$docID$\u7684\u5b58\u50a8\u53ea\u8bb0\u5f55\u4e0e\u4e0a\u4e00\u9879$docID$\u7684\u5dee\u503c\u6765\u51cf\u5c11$docID$\u5b58\u50a8\u957f\u5ea6</code></p> <p>posting list \u8fc7\u5927\uff0c\u540e\u4e00\u9879\u51cf\u53bb\u524d\u4e00\u9879</p> <p></p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#326-threshold-\u9608\u503c","title":"3.2.6 Threshold \u9608\u503c","text":"<p>\u4ec5\u68c0\u7d22\u6587\u6863\u6309\u6743\u91cd\u6392\u540d\u7684\u524d X \u4e2a\u6587\u6863</p> <ul> <li>\u4f1a\u56e0\u4e3a\u622a\u65ad\u800c\u9519\u8fc7\u4e00\u4e9b\u76f8\u5173\u6587\u6863</li> </ul> <p>\u5bf9\u641c\u7d22\u5173\u952e\u8bcd\u8fdb\u884c\u6392\u5e8f</p> <ul> <li>\u6309\u67e5\u8be2\u8bcd\u7684\u9891\u7387\u6309\u5347\u5e8f\u5bf9\u67e5\u8be2\u8bcd\u8fdb\u884c\u6392\u5e8f;\u4ec5\u6839\u636e\u539f\u59cb\u67e5\u8be2\u8bcd\u7684\u4e00\u5b9a\u767e\u5206\u6bd4\u8fdb\u884c\u641c\u7d22</li> </ul>"},{"location":"ADS/3.%20Inverted%20File%20Index/#33-\u6027\u80fd\u8bc4\u4f30","title":"3.3 \u6027\u80fd\u8bc4\u4f30","text":"<p>\u8861\u91cf\u4e0e\u8bc4\u4ef7\u6587\u4ef6\u5012\u6392\u7d22\u5f15\u7cfb\u7edf\u7684\u6027\u80fd\uff1a</p> <p>\u533a\u5206Data Retrieval \u548cInformation Retrieval;</p> <p></p> <p>\u4e3b\u8981\u4ece\u7cbe\u786e\u5ea6\uff08Precision\uff09\u4e0e\u53ec\u56de\u5ea6\uff08Recall\uff09\u8fdb\u884c\u8861\u91cf\u3002</p> <ul> <li> <p>\u7cbe\u5ea6\u9ad8\uff1a\u8fd4\u56de\u76f8\u5173\u6587\u6863\uff0c\u4f46\u4e5f\u9057\u6f0f\u4e86\u8bb8\u591a\u6709\u7528\u7684\u6587\u6863</p> </li> <li> <p>\u7cbe\u5ea6\u4f4e\uff1a\u8fd4\u56de\u6700\u76f8\u5173\u7684\u6587\u6863\uff0c\u4f46\u662f\u5305\u542b\u4e86\u5f88\u591a\u5783\u573e</p> </li> </ul> <p></p> <p><code>Retrieved \u53ec\u56de\u7684   Relevant \u76f8\u5173\u7684</code></p> <p>\u76f8\u5173\u7684\uff0c\u53ec\u56de\u7684\u90e8\u5206\uff1a\\(R_R\\)</p> <p>\u76f8\u5173\u7684\uff0c\u672a\u53ec\u56de\u7684\u90e8\u5206\uff1a\\(R_N\\)</p> <p>\u4e0d\u76f8\u5173\u7684\uff0c\u53ec\u56de\u7684\u90e8\u5206\uff1a\\(I_R\\)</p> <p>\u4e0d\u76f8\u5173\u7684\uff0c\u672a\u53ec\u56de\u7684\u90e8\u5206\uff1a\\(I_N\\)</p> <p><code>\u7cbe\u786e\u5ea6precision \u8868\u793a\u6240\u6709\u53ec\u56de\u7684\u90e8\u5206\u91cc\u9762\uff0c\u76f8\u5173\u7684\u6240\u5360\u7684\u6bd4\u91cd\u3002</code> $$ precision  P = R_R / (R_R + I_R)  $$ <code>\u53ec\u56de\u5ea6recall\u8868\u793a\u6240\u6709\u76f8\u5173\u7684\u90e8\u5206\u4e2d\u53ec\u56de\u7684\u6240\u5360\u7684\u6bd4\u91cd</code> $$ recall  R = R_R / (R_R + R_N) $$</p>"},{"location":"ADS/3.%20Inverted%20File%20Index/#34-\u4e60\u9898\u8bad\u7ec3","title":"3.4 \u4e60\u9898\u8bad\u7ec3","text":"<p><code>In distributed indexing, document-partitioned strategy is to store on each node all the documents that contain the terms in a certain range.</code></p> <ul> <li> <p>False : \u8fd9\u662f term-partitioned \u7b56\u7565</p> </li> <li> <p>\u56e0\u4e3a\u5206\u5e03\u5f0f\u7d22\u5f15\u7684\u65b9\u5f0f\u662f\u6309\u6587\u6863\u5e8f\u53f7\u6392\u5e8f\u7684\uff0c\u5982\u679c\u6309\u5305\u542b\u7684terms\u5206\u7c7b\uff0c\u5728\u50a8\u5b58\u6545\u969c\u65f6\uff0c\u5173\u4e8e\u8fd9\u4e2aterms\u7684\u6587\u6863(in a certain range)\u5168\u6ca1\u4e86\uff0c\u4e0d\u6297\u98ce\u9669\u3002 </p> </li> </ul> <p><code>When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set.</code></p> <ul> <li>False : \u53ec\u56de\u7387\u548c\u6574\u4e2a\u7b54\u6848\u96c6\u7684\u76f8\u5173\u6027\u65e0\u5173\u3002</li> <li>\u8fd9\u4e2a\u8bf4\u7684\u662fdata retrieval\uff0c\u9519\u3002Information retrieval\u624d\u9700\u8981measure the relevancy of the answer set\u3002</li> </ul> <p></p> <ul> <li>data \u6570\u636e\u66f4\u4e3a\u5bbd\u6cdb\uff0c\u8bc4\u4ef7\u6307\u6807\u662f \u54cd\u5e94\u65f6\u95f4\u548c\u7d22\u5f15\u8303\u56f4</li> <li>information \u53ef\u4ee5\u7406\u89e3\u4e3a\u7ecf\u8fc7\u7b5b\u9009\u540e\u7684\u4fe1\u606f\uff0c\u7ec6\u5316\uff0c\u6d4b\u91cf\u7b54\u6848\u96c6\u7684\u76f8\u5173\u5ea6</li> </ul> <p><code>1. Precision is more important than recall when evaluating the explosive detection in airport security.</code></p> <ul> <li>False\uff1a \u5b89\u5168\u4e4b\u4e0a.\u673a\u573a\u5b89\u5168\uff0c\u5e94\u8be5\u662f\u8fd4\u56de\u7684\u5168\u9762\u5ea6\u66f4\u91cd\u8981\uff0c\u7cbe\u786e\u6027\u4e0d\u7b97\u91cd\u8981</li> </ul> <p><code>2. While accessing a term by hashing in an inverted file index, range searches are expensive.</code></p> <ul> <li>True,\u8fd9\u4e2a\u662f\u548cB+\u6811\u6bd4\u7684\uff0c\u5bf9</li> </ul> <p><code>3. \u3010\u4e60\u9898\u3011While accessing a term, hashing is faster than search trees.</code></p> <ul> <li>\u7b54\uff1aTrue\uff0c\u56e0\u4e3ahash\u8868\u662f\u76f4\u63a5\u4f7f\u7528hash\u51fd\u6570\u5b9a\u4f4d\u7684\u65f6\u95f4\u662f\u5e38\u6570\u7684\uff0c\u800c\u4f7f\u7528\u641c\u7d22\u6811\u5219\u662fO(logn)\u7684\u3002\u4f46\u662fhash\u8868\u7684\u50a8\u5b58\u4e0d\u7075\u6d3b\u6709\u7f3a\u70b9\u3002</li> </ul> <p></p> <ul> <li> <p>\u7cbe\u5ea6\u9ad8\uff1a\u8fd4\u56de\u76f8\u5173\u6587\u6863\uff0c\u4f46\u4e5f\u9057\u6f0f\u4e86\u8bb8\u591a\u6709\u7528\u7684\u6587\u6863</p> </li> <li> <p>\u7cbe\u5ea6\u4f4e\uff1a\u8fd4\u56de\u6700\u76f8\u5173\u7684\u6587\u6863\uff0c\u4f46\u662f\u5305\u542b\u4e86\u5f88\u591a\u5783\u573e</p> </li> </ul> <p></p> <p></p> <p>\u53ec\u56de\u7387\u662f\u76f8\u5173\u7684\u90e8\u5206\u4e2d\uff0c\u53ec\u56de\u7684\u5360\u6bd4</p> <p>\u51c6\u786e\u7387\u662f\u53ec\u56de\u7684\u90e8\u5206\u4e2d\uff0c\u51c6\u786e\u7684\u5360\u6bd4</p> <p>\\(recall=4000/(4000+8000)=33%\\)</p>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/","title":"4. Leftist Heap &amp; Skew Heap","text":"<p> \u7ea6 5339 \u4e2a\u5b57  166 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p> <p><code>\u4ec0\u4e48\u662f\u5806heap\uff1f</code></p> <p>\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u7ed3\u6784\u6027\u8d28\uff1a\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5e76\u4e14\u7531\u4e8e\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6545\u6811\u9ad8h \u548c\u603b\u7ed3\u70b9\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u663e\u7136\u4e3a\\(h = O(log n)\\)\u3002</li> <li>\u5e8f\u6027\u8d28\uff1a\u5bf9\u4e8e\u6700\u5927\u5806\uff0c\u6839\u7ed3\u70b9\u5c31\u662f\u6700\u5927\u5143\u7d20\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b69\u5b50\u90fd\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e\u672c\u8eab\u3002\u53cd\u4e4b\u5bf9\u4e8e\u6700\u5c0f\u5806\uff0c\u6839\u7ed3\u70b9\u662f\u6700\u5927\u5143\u7d20\uff0c\u5b69\u5b50\u5e94\u5f53\u5927\u4e8e\u7b49\u4e8e\u7236\u4eb2\u3002</li> </ol> <p>\u57fa\u4e8e\u6570\u7ec4\u7684\u4e8c\u53c9\u5806\u5b9e\u73b0\uff0c\u4e8b\u5b9e\u4e0a\u662f\u5229\u7528\u6570\u7ec4\u6784\u9020\u4e86\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u7d22\u5f15\u9664\u4ee52 \u627e\u5230\u7ed3\u70b9\u7684\u7236\u4eb2\uff0c\u4e58\u4ee52 \u548c\u4e58\u4ee52 \u52a01 \u83b7\u5f97\u7ed3\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\uff0c\u56e0\u6b64\u975e\u5e38\u65b9\u4fbf\uff0c\u76f8\u6bd4\u4e8e\u6307\u9488\u9700\u8981\u5bfb\u5740\uff0c\u8fd9\u6837\u7684\u5b9e\u73b0\u663e\u7136\u66f4\u52a0\u9ad8\u6548\u3002</p> <p>\u5806(\u6700\u5c0f\u5806)\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ol> <li>Insert : \u76f4\u63a5\u63d2\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u4e0b\u4e00\u4e2a\u7a7a\u4f4d\u4e0a\uff0c\u7136\u540epercolate up \u627e\u5230\u5b83\u5e94\u5f53\u5728\u7684\u4f4d\u7f6e\uff0c\u663e\u7136\u6700\u574f\u60c5\u51b5\u4e5f\u4e0e\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u6210\u6b63\u6bd4\uff0c\u5373\\(O(log n)\\)\u3002</li> <li>FindMin : \u76f4\u63a5\u8fd4\u56de\u6839\u7ed3\u70b9\uff0c \\(O(1)\\)</li> <li>DeleteMin\uff1a \u76f4\u63a5\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u9876\u66ff\u6839\u7ed3\u70b9\uff0c\u7136\u540epercolate down \u627e\u5230\u65b0\u6839\u7ed3\u70b9\u7684\u5f52\u5bbf\uff0c\u65f6\u95f4\\(O(log n)\\)</li> <li>BuildHeap: \u5bf9n \u4e2a\u5143\u7d20\u5efa\u5806\u5b58\u50a8\u3002</li> <li>\u65b9\u6cd5\u4e00\uff1a\u8fde\u7eed\u63d2\u5165n\u6b21\uff0c\u4f46\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n log n)\\)</li> <li>\u65b9\u6cd5\u4e8c\uff1a\u65e0\u9700\u7ba1\u5e8f\u6027\u8d28\uff0c\u76f4\u63a5\u4efb\u610f\u63d2\u5165\u8fd9n \u4e2a\u503c\uff0c\u7136\u540e\u4ece\u5b8c\u5168\u4e8c\u53c9\u6811\u5012\u6570\u7b2c\u4e8c\u6392\u6709\u5b69\u5b50\u7684\u7ed3\u70b9\u5f00\u59cb\uff0c\u5f80\u524d\u4f9d\u6b21\u68c0\u67e5\u662f\u5426\u6709\u8fdd\u53cd\u5e8f\u6027\u8d28\u7684\uff0c\u6709\u5c31percolate down \u5230\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u5faa\u73af\u76f4\u5230\u6839\u7ed3\u70b9\u4e5f\u8c03\u6574\u5b8c\u6bd5\u4e3a\u6b62\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u6837\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)</li> </ol> <p>\u5728\u57fa\u4e8e\u6570\u7ec4\u7684\u5b9e\u73b0\u4e2d\u6211\u4eec\u80fd\u60f3\u5230\u7684\u6700\u597d\u7684\u65b9\u6cd5\u4e5f\u53ea\u80fd\u662f\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u8c03\u7528BuildHeap \u5728O(n) \u65f6\u95f4\u5185\u5b8c\u6210\u3002</p>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#41-leftist-heap","title":"4.1 Leftist Heap","text":""},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#411-\u6982\u5ff5","title":"4.1.1 \u6982\u5ff5","text":"<p>\u5de6\u504f\u5806\uff0c\u6216\u8005\u8bf4\u5de6\u504f\u5806(Leftist Heap)\uff0c\u5b83\u76f8\u6bd4\u4e8e\u666e\u901a\u7684\u5806\uff0c\u66f4\u597d\u7684\u4e00\u70b9\u5728\u4e8e\u5b83\u652f\u6301\u5feb\u901f\u7684\u5806\u5408\u5e76\u64cd\u4f5c(speed up merging in O(N))\u3002</p> <p>\u201c\u5de6\u504f\u201d\uff0c\u5e76\u4e0d\u65ad\u5c06\u65b0\u7684\u4e1c\u897f\u5f80\u53f3\u4fa7\u5408\u5e76\uff0c\u6765\u5b9e\u73b0\u6bcf\u6b21\u90fd\u662f\u5f80\u76f8\u5bf9\u5c0f\u7684\u90a3\u4e00\u4fa7\u585e\u8fdb\u4e1c\u897f\uff0c\u8fdb\u800c\u4fdd\u76f8\u5bf9\u8bc1\u4e86\u8fd9\u4e2a</p> <p>\u7531\u4e8e\u5de6\u504f\u5806\u4e0d\u518d\u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u518d\u50cf\u7ef4\u62a4\u5927\u6839\u5806\u5c0f\u6839\u5806\u90a3\u6837\u7528\u6570\u7ec4\u6765\u7ef4\u62a4\u5b83\u4e86\u3002</p> <pre><code>// struct LeftistHeapNode {\n    // ElementType val;\n    // int Npl;\n    // LeftistHeapNode * ls, * rs;\n// };\nstruct TreeNode\n{\n    ElementType     val;\n    PriorityQueue   Left;\n    PriorityQueue   Right;\n    int             Npl;\n};\n</code></pre> <p>definition \u201cNpl\u201d in leftist heap\"</p> <p>The null path length , Npl(X), of any node X is <code>the length of the shortest path from X to a node without two children</code>.  </p> <p>Npl(x) \u8868\u793a\u4ecex\u5f00\u59cb\u5230\u6ca1\u6709\u5b69\u5b50\u7ed3\u70b9\u7684\u7ed3\u70b9\uff08\u53ef\u80fd\u662fx\u672c\u8eab\uff09\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6</p> <p>Define Npl(NULL) = \u20131.</p> <p></p> <ol> <li>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u6216\u53f3\u5b69\u5b50\u4e3a\u7a7a\u7ed3\u70b9\uff0c\u5219\u8be5\u7ed3\u70b9\u7684 Npl \u4e3a \\(0\\)\uff0c\u8fd9\u79cd\u7ed3\u70b9\u88ab\u79f0\u4e3a\u5916\u7ed3\u70b9\uff1b</li> <li>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8be5\u7ed3\u70b9\u7684 Npl \u4e3a \\(\\min{(npl_\\text{left child}, npl_\\text{right child})} + 1\\)\uff1b</li> </ol> <p> </p> <p>\u800c\u5de6\u504f\u5806\u5c31\u5efa\u7acb\u5728\u8fd9\u4e9b\u6027\u8d28\u4e0a\uff1a</p> <p>definition \"Leftist Heap\"</p> <p>\u200b    \u5de6\u504f\u5806\u7684\u6027\u8d28</p> <ol> <li>\u7ed3\u70b9\u7684value\u5e94\u5f53\u4e0d\u5927\u4e8e\uff08\u4e0d\u5c0f\u4e8e\uff09\u5176\u5b69\u5b50\u7ed3\u70b9\u7684value\u7684\u4e8c\u53c9\u6811\uff08\u5373\u5806\u7684\u6027\u8d28\uff09</li> <li>\u4e14\u6ee1\u8db3\u300c\u5de6\u504f\u300d\u6027\u8d28\u2014\u2014<code>\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u7684 Npl \u4e0d\u5c0f\u4e8e\u53f3\u5b69\u5b50\u7684 Npl</code>\u3002</li> </ol> <p></p> <p>\u867d\u7136\u5c40\u90e8\u5b58\u5728\u53f3\u5b50\u6811\u7ed3\u70b9\u6570\u5927\u4e8e\u5de6\u5b50\u6811\uff0c\u4f46\u662f\u53ef\u80fd\u4f9d\u7136\u4e0d\u5f71\u54cd\u5de6\u503e\u5806\u7684\u6027\u8d28</p> <p>\u56e0\u6b64\uff0c\u56de\u987e Npl \u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6269\u5c55\u6027\u8d28\uff1a</p> <ol> <li>A leftist tree with r nodes on the right path must have at least \\(2^r -1\\) nodes</li> </ol> <p>\u5728\u53f3\u8def\u5f84\u4e0a\u6709r \u4e2a\u7ed3\u70b9\u7684\u5de6\u5f0f\u5806\u5fc5\u7136\u81f3\u5c11\u67092r \u22121 \u4e2a\u7ed3\u70b9\uff08\u53f3\u8def\u5f84\u6307\u4ece\u6839\u7ed3\u70b9\u51fa\u53d1\u4e00\u8def\u627e\u53f3\u5b69\u5b50\u76f4\u5230\u627e\u5230\u53f6\u5b50\u7684\u8def\u5f84\uff09\u3002</p> <p>\u8bc1\u660e\uff1a \u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8fdb\u884c\u8bc1\u660e</p> <ul> <li> <p>\u82e5\\(r = 1\\),\u663e\u7136\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u7ed3\u70b9</p> </li> <li> <p>\u5047\u8bbe\u5b9a\u7406\u5bf9\u53f3\u8def\u5f84\u4e0a\u5c0f\u4e8e\u7b49\u4e8e\\(r\\)\u4e2a\u7ed3\u70b9\u7684\u60c5\u51b5\u90fd\u6210\u7acb\u3002\u73b0\u5728\u8003\u8651\u5728\u53f3\u8def\u5f84\u4e0a\u6709\\(r+1\\)\u4e2a\u7ed3\u70b9\u7684\u5de6\u503e\u5806\u3002</p> <ul> <li>\u6839\u7684\u53f3\u5b50\u6811\u6070\u597d\u5728\u53f3\u8def\u5f84\u4e0a\u6709\\(r\\)\u4e2a\u7ed3\u70b9\uff0c\u56e0\u6b64\u53f3\u5b50\u6811\u81f3\u5c11\u6709\\(2^r - 1\\)\u4e2a\u7ed3\u70b9</li> <li>\u518d\u8003\u8651\u5de6\u5b50\u6811\u3002\u5de6\u503e\u5806\u7684\u6027\u8d28\uff0c\u5de6\u5b50\u6811\u7684\\(Npl\\)\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\u53f3\u5b50\u6811\u7684\\(Npl\\)\uff0c\u800c\u53f3\u5b50\u6811\u7684\\(Npl\\)\u4e3a\\(n-1\\),\u90a3\u4e48\u5de6\u5b50\u6811\u7ed3\u70b9\u5230\u53f6\u7ed3\u70b9\u7684\u8ddd\u79bb\u81f3\u5c11\u4e3a\\(n-1\\)</li> <li>\u5229\u7528\u5b50\u6811\u4e5f\u6709\u5de6\u503e\u7684\u6027\u8d28\uff0c\u53f3\u8def\u5f84\\(Npl\\)\u66f4\u77ed\uff0c\u6240\u4ee5\u53f3\u8def\u5f84\u81f3\u5c11\u6709\\(r\\)\u4e2a\u7ed3\u70b9\uff0c\u56e0\u6b64\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u4e5f\u4e3a\\(2^r -1\\)</li> <li>\u6240\u4ee5\u6574\u68f5\u6811\u7684\u7ed3\u70b9\u6570\u81f3\u5c11\u4e3a\\(1 + 2^r-1 + 2^r -1 = 2 ^ {r+1} -1\\)</li> </ul> </li> </ul> <p><code>\u6839\u636e\u6027\u8d281\uff0c\u53ef\u4ee5\u5f97\u5230\u5171\u6709N\u4e2a\u7ed3\u70b9\u7684\u5de6\u503e\u5806\u7684\u53f3\u8def\u5f84\u6700\u591a\u542b\u6709log\uff08N+1\uff09\u4e2a\u7ed3\u70b9\u3002</code></p> <p></p> <p>\u6ce8\u610f\uff0c\u5728\u793a\u610f\u56fe\u4e2d\u6211\u4eec\u7701\u7565\u4e86\u7ed3\u70b9\u81ea\u8eab\u952e\u503c\u7684\u6807\u8bb0\uff0c\u4f46\u65e2\u7136\u4f5c\u4e3a\u4e00\u4e2a\u5806\uff0c\u5b83\u5c31\u9700\u8981\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u5373\u7ed3\u70b9\u7684\u952e\u503c\u4e0d\u5927\u4e8e\uff08\u4e0d\u5c0f\u4e8e\uff09\u5176\u5b69\u5b50\u7ed3\u70b9\u7684\u952e\u503c\u3002\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u952e\u503c\u5f88\u53ef\u80fd\u4e0d\u518d\u662f\u5355\u7eaf\u7684\u6570\uff0c\u5927\u5c0f\u5173\u7cfb\u53ef\u80fd\u8f6c\u5316\u4e3a\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u7b80\u5355\u601d\u8003\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u5de6\u504f\u5806\u4f1a\u8fd9\u4e48\u8bbe\u8ba1\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u5408\u5e76\u5806\u9700\u8981\u8003\u8651\u7684\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u70b9\u5c31\u662f\u8981\u80fd\u5728\u4e4b\u540e\u7684\u64cd\u4f5c\u4e2d\u5c3d\u53ef\u80fd\u5730\u7ef4\u62a4\u5806\u7684\u201c\u5e73\u8861\u201d\uff0c\u5426\u5219\u6211\u4eec\u628a\u5806\u7ef4\u62a4\u6210\u4e86\u4e00\u4e2a\u94fe\uff0c\u90a3\u663e\u7136\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u3002</p> <p>\u800c\u5de6\u504f\u5806\u901a\u8fc7\u7ef4\u62a4\u6574\u4e2a\u5806\u201c\u5de6\u504f\u201d\uff0c\u5e76\u4e0d\u65ad\u5f80\u53f3\u4fa7\u5408\u5e76\uff0c\u6765\u5b9e\u73b0\u6bcf\u6b21\u90fd\u662f\u5f80\\(Npl\\)\u76f8\u5bf9\u5c0f\u7684\u90a3\u4e00\u4fa7\u585e\u8fdb\u4e1c\u897f\uff0c\u8fdb\u800c\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u5806\u7684\u76f8\u5bf9\u5e73\u8861\u6027\u3002</p>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#412-merge","title":"4.1.2 Merge","text":"<p>\u5de6\u504f\u5806\u7684\u6838\u5fc3\u64cd\u4f5c\u5c31\u662f\u5408\u5e76\u3002\u800c\u5176\u5b83\u64cd\u4f5c\u90fd\u53ef\u4ee5\u770b\u4f5c\u662f\u5408\u5e76\u7684\u7279\u6b8a\u60c5\u51b5\u3002</p> <ul> <li>Insert\uff1a \u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u5806\u548c\u4e00\u4e2a\u5355\u7ed3\u70b9\u7684\u5806\u7684Merge</li> <li>Delete Min\uff1a\u9996\u5148\u5220\u9664\u6839\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u6839\u7ed3\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u8fdb\u884cMerge\u5373\u53ef</li> </ul> <p>\u4f5c\u4e3a\u5de6\u504f\u5806\u7684\u6838\u5fc3\u64cd\u4f5c\uff0c\u5408\u5e76\u64cd\u4f5c\u81ea\u7136\u5c31\u662f\u8981\u5728\u6ee1\u8db3\u6027\u8d28\u7684\u6761\u4ef6\u4e0b\uff0c\u5408\u5e76\u4e24\u4e2a\u5de6\u504f\u5806\u3002\u5927\u81f4\u601d\u8def\u5c31\u662f\u5148\u7ef4\u62a4\u5806\u7684\u6027\u8d28\uff0c\u5728\u56de\u6eaf\u65f6\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u5148\u81ea\u4e0a\u800c\u4e0b\u518d\u81ea\u4e0b\u800c\u4e0a\u7684\u8fc7\u7a0b\u3002</p> <p>\u6309\u7167\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5de6\u504f\u5806\u7684\u5408\u5e76\u53ef\u4ee5\u5206\u4e3a\u9012\u5f52\u5f0f\u548c\u8fed\u4ee3\u5f0f\u4e24\u79cd\u3002</p> <p></p> <p>\u9876\u5c0f\u7684\u6811\u8bb0\u4e3aH1\uff0c\u9876\u5927\u7684\u6811\u8bb0\u4e3aH2</p>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#4121-\u9012\u5f52\u5f0f","title":"4.1.2.1 \u9012\u5f52\u5f0f","text":"<pre><code>PriorityQueue Merge(PriorityQueue H1, PriorityQueue H2)\n{\n    if (H1 == NULL &amp;&amp; H2 == NULL)\n        return NULL;\n    else if (H1 &amp;&amp; H2 == NULL)\n        return H1;\n    else if (H2 &amp;&amp; H1 == NULL)\n        return H2;\n    else\n    {\n        if (H1-&gt;value &lt; H2-&gt;value)\n            return Merge1(H1, H2);\n        else\n            return Merge1(H2, H1);\n    }\n}\nPriorityQueue Merge1(PriorityQueue H1, PriorityQueue H2)\n{\n    // Merge1 \u5df2\u5c06\u6392\u9664H1\uff0cH2\u4e3a\u7a7a\u7684\u60c5\u51b5\n    // \u76ee\u524d H1\u7684value\u5c0f\u4e8eH2\u7684value\n    if (H1-&gt;Left == NULL)\n    {\n        H1-&gt;Left = H2;\n    }\n    else\n    {\n        H1-&gt;Right = Merge(H1-&gt;Right, H2);\n        if (H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl)\n        {\n            PriorityQueue temp = H1-&gt;Left;\n            H1-&gt;Left = H1-&gt;Right;\n            H1-&gt;Right = temp;\n        }\n    }\n    if (!H1-&gt;Left || !H1-&gt;Right)\n        H1-&gt;Npl = 0;\n    else\n        H1-&gt;Npl = H1-&gt;Right-&gt;Npl + 1;\n    return H1;\n}\n\n\nPriorityQueue Merge_Recursive(PriorityQueue H1, PriorityQueue H2)\n{\n    if (H1 == NULL &amp;&amp; H2 == NULL)\n        return NULL;\n    else if (H1 &amp;&amp; H2 == NULL)\n        return H1;\n    else if (H2 &amp;&amp; H1 == NULL)\n        return H2;\n    else\n    {\n        if(H1-&gt;value &lt; H2-&gt;value)\n        {\n            if(!H1-&gt;Left)\n            {\n                H1-&gt;Left = H2;\n            }\n            else\n            {\n                H1-&gt;Right = Merge_Recursive(H1-&gt;Right, H2);\n                if (H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl)\n                {\n                    PriorityQueue temp = H1-&gt;Left;\n                    H1-&gt;Left = H1-&gt;Right;\n                    H1-&gt;Right = temp;\n                }\n            }\n            if (!H1-&gt;Left || !H1-&gt;Right)\n                H1-&gt;Npl = 0;\n            else\n                H1-&gt;Npl = H1-&gt;Right-&gt;Npl + 1;\n            return H1;\n        }\n        else\n        {\n            if(!H2-&gt;Left)\n            {\n                H2-&gt;Left = H1;\n            }\n            else\n            {\n                H2-&gt;Right = Merge_Recursive(H2-&gt;Right, H1);\n                if (H2-&gt;Left-&gt;Npl &lt; H2-&gt;Right-&gt;Npl)\n                {\n                    PriorityQueue temp = H2-&gt;Left;\n                    H2-&gt;Left = H2-&gt;Right;\n                    H2-&gt;Right = temp;\n                }\n            }\n            if (!H2-&gt;Left || !H2-&gt;Right)\n                H2-&gt;Npl = 0;\n            else\n                H2-&gt;Npl = H2-&gt;Right-&gt;Npl + 1;\n            return H2;\n        }\n    }\n}\n</code></pre> <ol> <li>\u5982\u679c\u4e24\u4e2a\u5806\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u5373\u53ef</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u90fd\u975e\u7a7a\uff0c\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u6839\u7ed3\u70b9value\u7684\u5927\u5c0f\uff0cvalue\u5c0f\u7684\u662f\\(H1\\),value\u5927\u7684\u662f\\(H2\\)</li> <li>\u5982\u679cH1\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\uff08\u6839\u636e\u5de6\u503e\u5806\u7684\u5b9a\u4e49\uff0c\u53ea\u8981\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5c31\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\u6839\u7ed3\u70b9\uff09\uff0c\u76f4\u63a5\u628aH2\u653e\u5728H1\u7684\u5de6\u5b50\u6811\u5373\u53ef</li> <li>\u5982\u679cH1\u4e0d\u53ea\u6709\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u5219\u5c06H1\u7684\u53f3\u5b50\u6811\u548cH2merge\uff08\u6b64\u5904\u662f\u9012\u5f52\uff0c\u53ea\u8981basecase\u6b63\u786e\uff0c\u4fbf\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff09\uff0c\u6210\u4e3aH1\u7684\u65b0\u53f3\u5b50\u6811</li> <li>\u5982\u679cH1\u7684Npl\u6027\u8d28\u88ab\u8fdd\u53cd\uff0c\u5c31\u4ea4\u6362\u4e24\u4e2a\u5b50\u6811</li> <li>\u66f4\u65b0H1\u7684Npl\uff0c\u7ed3\u675f\u4efb\u52a1</li> </ol> <p>another example:</p> <p></p> <p>\u73b0\u5728\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e0b\u9762\u4e24\u4e2a\u5de6\u504f\u5806\uff0c\u5c1d\u8bd5\u5408\u5e76\u5b83\u4eec\u3002</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u7ecf\u8fc7\u6bd4\u8f83\uff0c\u2776 \u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \u2776 \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u4e0d\u53d8\uff0c\u53f3\u5b50\u6811\u66f4\u65b0\u4e3a\u300c\u7eff\u6811\u53f3\u5b50\u6811\u548c\u84dd\u6811\u7684\u5408\u5e76\u7ed3\u679c\u300d\u3002</p> <p></p> <p>\u7ecf\u8fc7\u6bd4\u8f83\uff0c\u2777 \u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \u2777 \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u4e0d\u53d8\uff0c\u53f3\u5b50\u6811\u66f4\u65b0\u4e3a\u300c\u84dd\u6811\u53f3\u5b50\u6811\u548c\u7eff\u6811\u7684\u5408\u5e76\u7ed3\u679c\u300d\u3002</p> <p></p> <p>\u6700\u540e\u8fd8\u5269\u4e0b\u4e24\u4e2a\u7ed3\u70b9\u5566\uff01\u5b9e\u9645\u4e0a\u8fd9\u91cc\u76f4\u63a5\u6a21\u62df\u4e86\u4e24\u4e2a\u6b65\u9aa4\uff0c\u9996\u5148\u662f\u6bd4\u8f83 \u277a \u548c \u277b\uff0c\u5e76\u9009\u62e9\u4e86 \u277a \u4f5c\u4e3a\u65b0\u6839\uff1b\u63a5\u4e0b\u6765\u5728\u9012\u5f52\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u9700\u8981\u5408\u5e76 <code>NULL</code> \u548c \u277b\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e86 \u277b\u3002</p> <p>\u7136\u800c\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u5de6\u53f3\u5b50\u6811 Npl \u5927\u5c0f\u5173\u7cfb\u95ee\u9898\u3002</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0 \u277a \u7684\u5de6\u5b69\u5b50\u4e3a <code>NULL</code>\uff0c\u6211\u4eec\u8bb0 \\(Npl_\\text{NULL} = -1\\)\uff0c\u53f3\u5b69\u5b50 \u277b \u6709 \\(Npl_\\text{right child}=0\\)\uff0c\u6240\u4ee5\u9700\u8981\u4ea4\u6362\u4e24\u4e2a\u5b69\u5b50\u3002</p> <p></p> <p>\u8fd9\u91cc\u4e5f\u8df3\u8fc7\u4e86\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <p>\u5f80\u56de\u8d70\uff0c\u53d1\u73b0 \u277a \u7684 Npl \u5c0f\u4e8e \u2779 \u7684 Npl\uff0c\u6ee1\u8db3\u6027\u8d28\uff0c\u4e0d\u9700\u8981\u6539\u53d8\u3002</p> <p>\u7ee7\u7eed\u5f80\u56de\u8d70\uff0c\u53d1\u73b0 \u2777 \u548c \u2778 \u7684 Npl \u76f8\u540c\uff0c\u6ee1\u8db3\u6027\u8d28\uff0c\u4e5f\u4e0d\u9700\u8981\u6539\u53d8\u3002</p> <p>\u4ece\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5e76\u4e0d\u662f\u770b\u4e0a\u53bb\u66f4\u5927\u7684\u5b50\u6811\u4e00\u5b9a\u5728\u5de6\u4fa7\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ol> <li> <p>\u9012\u5f52\u7684\u6700\u5927\u6df1\u5ea6\u662f\u591a\u5c11\uff1f\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\uff0c<code>\u4ea7\u751f\u7684\u9012\u5f52\u5c42\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e24\u4e2a\u5de6\u503e\u5806\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c</code>\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u9012\u5f52\u90fd\u4f1a\u4f7f\u4e24\u4e2a\u5806\u5176\u4e2d\u4e4b\u4e00\uff08value\u66f4\u5c0f\u7684\uff09\u5411\u7740\u53f3\u8def\u5f84\u4e0a\u4e0b\u4e00\u4e2a\u53f3\u5b69\u5b50\u63a8\u8fdb\uff0c\u77e5\u9053\u5176\u4e2d\u4e00\u4e2a\u63a8\u5230\u4e86NULL\u7ed3\u70b9\u3002</p> </li> <li> <p>\u52a0\u6df1\u4e00\u5c42\u7684\u8fc7\u7a0b\u4e2d\uff0c\u64cd\u4f5c\u90fd\u662f\u5e38\u6570\u7ea7\u522b\u7684\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u6bd4\u5927\u5c0f\u548c\u627e\u5b69\u5b50</p> </li> <li> <p>\u5047\u8bbeH1\u7684\u7ed3\u70b9\u603b\u6570\u4e3aN1\uff0cH2\u7684\u7ed3\u70b9\u603b\u6570\u4e3aN2\uff0c\u53f3\u8def\u5f84\u5c0f\u4e8e\u7b49\u4e8elog\uff08N+1),\u6240\u4ee5\u4e24\u8005\u53f3\u8def\u5f84\u4e4b\u548c\u4e3a    $$    O(logN_1 + logN_2) = O(logN_1N_2) = O(log\\sqrt{N_1N_2} = O(log(N_1+N_2))    $$    \u4e0a\u9762\u63a8\u5bfc\u4f7f\u7528\u57fa\u672c\u4e0d\u7b49\u5f0f\\(a + b &gt;= 2\\sqrt{ab}\\),\u4e24\u4e2a\u5806\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u4f9d\u7136\u662f\u4e24\u4e2a\u5806\u5927\u5c0f\u7684\u5bf9\u6570\u7ea7\u522b</p> </li> </ol>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#4122\u8fed\u4ee3\u5f0f","title":"4.1.2.2\u8fed\u4ee3\u5f0f","text":"<p>3 -&gt; 6 -&gt; 7 -&gt; 8 -&gt; 18</p> <p>\u4e0a\u8ff0\u9012\u5f52\u7684\u8fc7\u7a0b\u5c31\u7b49\u4ef7\u4e8e\u8fed\u4ee3\u7684\u8fc7\u7a0b\uff1a\u6bcf\u4e00\u6b21\u9012\u5f52\u5411\u4e0b\u5bf9\u5e94\u5f97\u5e26\u4e2d\u4fdd\u7559\u6839\u7ed3\u70b9\u66f4\u5c0f\u7684\u5806\u7684\u5de6\u5b50\u6811\uff0c\u76f4\u5230\u6700\u540e\u4e00\u6b21\u4e0eNULL\u5408\u5e76\u5e76\u76f4\u63a5\u63a5\u4e0a\u3002</p> <p>\u9012\u5f52\u8fd4\u56de\u7684\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u9010\u4e2a\u68c0\u67e5\u65b0\u7684\u53f3\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u662f\u5426\u6709\u8fdd\u53cdNpl\u6027\u8d28\uff0c\u5e76\u4e14\u66f4\u65b0Npl\u3002</p> <p>\u5728\u8fed\u4ee3\u6cd5\u7684\u8fd0\u7b97\u4e2d\uff0c\u5728\u9012\u5f52\u5411\u4e0b\u540e\uff0c\u4ea4\u6362\u5b69\u5b50\u8c03\u6574\u5de6\u503e\u5806\u6027\u8d28\u4e4b\u524d\uff0c<code>\u5408\u5e76\u540e\u7684\u5806\u7684\u53f3\u8def\u5f84\u5c31\u662f\u539f\u6765\u4e24\u4e2a\u5806\u7684\u53f3\u8def\u5f84\u5408\u5e76\u6392\u5e8f\u7684\u7ed3\u679c</code>\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u6bcf\u6b21\u90fd\u5728\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u53f3\u8def\u5f84\u4e0a\u7684\u4e24\u4e2a\u70b9\u7684\u5927\u5c0f\uff0c\u5c06\u5c0f\u7684\u4f5c\u4e3a\u6839\u7ed3\u70b9\u63d2\u5165\u3002\u53ea\u9700\u8981\u628a\u4e24\u6761\u53f3\u8def\u5f84\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u5e26\u7740\u5de6\u5b50\u6811\u63a5\u5165\u5230\u65b0\u7684\u53f3\u8def\u5f84\u5373\u53ef\uff08\u4f46\u8981\u6ce8\u610f\u5728\u6b64\u4e4b\u540e\u8fd8\u9700\u8981\u8c03\u6574\u4f7f\u5f97\u6ee1\u8db3\u5de6\u5f0f\u5806\u7ed3\u6784\u6027\u8d28\uff09</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u56fe\u7247\u7684\u6392\u7248\u7a0d\u5fae\u505a\u4e00\u4e9b\u6539\u53d8\uff0c\u6211\u4eec\u4e0d\u518d\u6309\u7167\u4e4b\u524d\u753b\u5806\u7684\u65b9\u5f0f\u53bb\u753b\uff0c\u800c\u662f\u201c\u5de6\u504f\u201d\u5730\u53bb\u753b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8c03\u6574\u4e4b\u524d</p> <p></p> <p>\u7eff\u8272\u548c\u84dd\u8272\u7684\u7bad\u5934\u5206\u522b\u8868\u793a\u4e24\u4e2a\u5f85\u5408\u5e76\u5b50\u6811\u5c1a\u672a\u5408\u5e76\u7684\u5b50\u6811\u7684\u6839\uff0c\u7d2b\u8272\u7bad\u5934\u8868\u793a\u6700\u8fd1\u7684\u5408\u5e76\u53d1\u751f\u7684\u4f4d\u7f6e\u3002</p> <p></p> <p>\u6bd4\u8f83 \u2776 \u548c \u2777\uff0c\u53d1\u73b0 \u2776 \u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \u2776 \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u968f\u4e4b\u5408\u5e76\u8fdb\u53bb\uff0c\u540c\u65f6\u66f4\u65b0\u7eff\u8272\u7bad\u5934\u6307\u5411\u5c1a\u672a\u5408\u5e76\u8fdb\u53bb\u7684 \u277a\u3002</p> <p></p> <p>\u548c\u4e0a\u4e00\u6b65\u7c7b\u4f3c\u7684\uff0c\u6bd4\u8f83 \u277a \u548c \u2777\uff0c\u53d1\u73b0 \u2777 \u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \u2777 \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u968f\u4e4b\u5408\u5e76\u8fdb\u53bb\uff0c\u540c\u65f6\u66f4\u65b0\u84dd\u8272\u7bad\u5934\u6307\u5411\u5c1a\u672a\u5408\u5e76\u8fdb\u53bb\u7684 \u277b\u3002</p> <p></p> <p>\u4f9d\u7136\u7c7b\u4f3c\u5730\uff0c\u6bd4\u8f83 \u277a \u548c \u277b\uff0c\u53d1\u73b0 \u277a \u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \u277a \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\uff0c\u5de6\u5b50\u6811\u968f\u4e4b\u5408\u5e76\u8fdb\u53bb\uff0c\u540c\u65f6\u66f4\u65b0\u7eff\u8272\u7bad\u5934\u6307\u5411 <code>NULL</code>\u3002</p> <p></p> <p>\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u5df2\u7ecf\u6709\u4e00\u4e2a\u6307\u9488\u7a7a\u4e86\uff0c\u4e5f\u5c31\u662f\u7eff\u8272\u6307\u9488\u5df2\u7ecf\u6307\u5411\u4e86 <code>NULL</code>\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u6309\u987a\u5e8f\u628a\u84dd\u8272\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u90fd\u63a8\u8fdb\u53bb\u5373\u53ef\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4 Npl \u4fe1\u606f\u5e76\u6839\u636e\u6027\u8d28\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002\u8fd9\u4e00\u90e8\u5206\u548c\u4e4b\u524d\u4e00\u6837\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002</p> <p>\u5728\u8fed\u4ee3\u6cd5\u7684\u8fd0\u7b97\u4e2d\uff0c\u5728\u9012\u5f52\u5411\u4e0b\u540e\uff0c\u4ea4\u6362\u5b69\u5b50\u8c03\u6574\u5de6\u503e\u5806\u6027\u8d28\u4e4b\u524d\uff0c<code>\u5408\u5e76\u540e\u7684\u5806\u7684\u53f3\u8def\u5f84\u5c31\u662f\u539f\u6765\u4e24\u4e2a\u5806\u7684\u53f3\u8def\u5f84\u5408\u5e76\u6392\u5e8f\u7684\u7ed3\u679c</code>\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u6bcf\u6b21\u90fd\u5728\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u53f3\u8def\u5f84\u4e0a\u7684\u4e24\u4e2a\u70b9\u7684\u5927\u5c0f\uff0c\u5c06\u5c0f\u7684\u4f5c\u4e3a\u6839\u7ed3\u70b9\u63d2\u5165\u3002\u53ea\u9700\u8981\u628a\u4e24\u6761\u53f3\u8def\u5f84\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u5e26\u7740\u5de6\u5b50\u6811\u63a5\u5165\u5230\u65b0\u7684\u53f3\u8def\u5f84\u5373\u53ef\uff08\u4f46\u8981\u6ce8\u610f\u5728\u6b64\u4e4b\u540e\u8fd8\u9700\u8981\u8c03\u6574\u4f7f\u5f97\u6ee1\u8db3\u5de6\u5f0f\u5806\u7ed3\u6784\u6027\u8d28\uff09</p> <p></p> <p>\u540c\u6837\u4ece\u8fd9\u5f20\u56fe\u5f00\u59cb\uff0c\u7531\u4e8e\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u9012\u5f52\u6392\u5e8f\u7684\u540e\u534a\u90e8\u5206\uff0c\u5177\u4f53\u6765\u8bf4\u662f\u6307\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\u7684\u8fc7\u7a0b\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u5de6\u504f\u5806\u6539\u5199\u6210\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\uff01</p> <p></p> <p>\u7531\u4e8e\u6211\u4eec\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u603b\u662f\u627e\u53f3\u5b69\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u6cbf\u7740\u6700\u53f3\u6cbf\u8def\u5f84\u628a\u6ca1\u4e2a\u5de6\u504f\u5806\u62c6\u6210\u8fd9\u79cd\u201c\u60ac\u540a\u201d\u7684\u5e26\u72b6\u5f62\u5f0f\uff0c\u6bcf\u4e00\u201c\u6761\u201d\u7684\u503c\u53d6\u51b3\u4e8e\u6839\u7684\u952e\u503c\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u201c\u6761\u201d\u7684\u6700\u9876\u90e8\u3002</p> <p>\u5728\u8fd9\u5f20\u56fe\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u7684\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u5206\u522b\u662f [1, 5] \u548c [2, 6]\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\u3002</p> <p></p> <p>\u7ecf\u8fc7\u6392\u5e8f\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b83\u4eec\u521a\u597d\u7b26\u5408\u6211\u4eec\u5728\u4e0a\u9762\u6b65\u9aa4\u5f97\u5230\u7684\u7ed3\u679c\uff08\u53ef\u4ee5\u5bf9\u6bd4\u7740\u4e0a\u9762\u7684 Frame 4 \u770b\uff09\u3002\u5b9e\u9645\u4e0a\uff0c\u53ea\u8981\u4f60\u56de\u987e\u4e00\u4e0b\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u518d\u5bf9\u6bd4\u7740\u770b\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u5c31\u4f1a\u53d1\u73b0\u4e00\u6a21\u4e00\u6837\u3002</p>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#413-\u5355\u70b9\u63d2\u5165","title":"4.1.3 \u5355\u70b9\u63d2\u5165","text":"<p>\u63d2\u5165\u7ed3\u70b9\u53ef\u4ee5\u770b\u4f5c\u5408\u5e76\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u7ed3\u70b9\u7684\u5de6\u504f\u5806\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u590d\u7528\u5408\u5e76\u8fc7\u7a0b\u3002</p> <pre><code>PriorityQueue Insert(int x, PriorityQueue H)\n{\n    PriorityQueue temp = (PriorityQueue)malloc(sizeof(TreeNode));\n    temp-&gt;value = x;\n    temp-&gt;Left = temp-&gt;Right = NULL;\n    temp-&gt;Npl = 0;\n    H = Merge_Recursive(temp, H);\n    LevelOrder(H);\n    return H;\n}\n</code></pre>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#414-\u5355\u70b9\u5220\u9664","title":"4.1.4 \u5355\u70b9\u5220\u9664","text":"<p>\u53ea\u9700\u8981\u5408\u5e76\u9700\u8981\u88ab\u5220\u9664\u7684\u7ed3\u70b9\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u65b0\u7684\u6811\u7684\u6839\u4ee3\u66ff\u88ab\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u518d\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d bottom-up \u5730\u66f4\u65b0 Npl \u5373\u53ef\u3002</p> <pre><code>PriorityQueue Deletemin(PriorityQueue H)\n{\n    if (IsEmpty(H))\n    {\n        printf(\"Error! Priority Queue is empty!\");\n        return H;\n    }\n    PriorityQueue LeftHeap = H-&gt;Left;\n    PriorityQueue RightHeap = H-&gt;Right;\n    free(H);\n    return Merge_Recursive(LeftHeap, RightHeap);\n}\n</code></pre>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#42-skew-heap","title":"4.2 Skew Heap","text":"<p>\u659c\u5806(Skew Heap)\u662f\u6bd4\u5de6\u504f\u5806\u66f4\u4e3a\u4e00\u822c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u540c\u6837\u6709\u7740\u80fd\u591f\u5feb\u901f\u5408\u5e76\u7684\u6027\u8d28\u3002</p> <p>\u659c\u5806\u4e0e\u5de6\u503e\u5806\u7684\u5173\u7cfb\u5c31\u50cf\u662fsplay tree \u4e0e AVL tree \u7684\u5173\u7cfb\u3002splay tree \u4e0d\u518d\u7ef4\u62a4AVL tree\u7684bf\u5c5e\u6027\uff0c\u53ea\u9700\u8981\u5728\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u70b9\u4e4b\u540e\u5c31\u65e0\u8111\u5730\u5229\u7528zig/zig-zig/zig-zag\u7ffb\u8f6c\u5230\u6839\u7ed3\u70b9</p> <p>\u659c\u5806\u5219\u662f\u4e0d\u518d\u7ef4\u62a4Npl\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u5de6\u5f0f\u5806\u6240\u6709\u7ef4\u62a4\u7ed3\u6784\u6027\u8d28\u4ee5\u53ca\u66f4\u65b0Npl\u7684\u64cd\u4f5c\u4e0d\u518d\u9700\u8981\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4ee5\u4e0b\u64cd\u4f5c</p> <ol> <li>\u5728base case \u5904\u7406H\u4e0eNULL\u8fde\u63a5\u7684\u60c5\u51b5\u65f6\uff0c\u5de6\u503e\u5806\u76f4\u63a5\u8fd4\u56deH\u3002\u4f46\u662f\u659c\u5806\u5fc5\u987b\u770bH\u7684\u53f3\u8def\u5f84\uff0c\u6211\u4eec\u8981\u6c42H\u53f3\u8def\u5f84\u4e0a\u9664\u6700\u5927\u7ed3\u70b9\u540e\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\u3002</li> <li>\u5728\u975ebase case\u65f6\uff0c\u82e5 H1\u7684\u6839\u7ed3\u70b9\u5c0f\u4e8eH2\uff0c\u5982\u679c\u662f\u5de6\u503e\u5806\uff0c\u6211\u4eec\u5408\u5e76H1\u7684\u53f3\u5b50\u6811\u548cH2\u4f5c\u4e3aH1\u65b0\u7684\u53f3\u5b50\u6811\uff0c\u6700\u540e\u5224\u65ad\u8fd9\u6837\u662f\u5426\u8fdd\u53cd\u6027\u8d28Npl\u6765\u51b3\u5b9a\u662f\u5426\u4ea4\u6362\u5b69\u5b50\u3002\u800c\u659c\u5806\u5219\u662f\u65e0\u8111\u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u8fd9\u79cd\u60c5\u51b5\uff0c\u90fd\u628aH1\u7684\u5de6\u5b69\u5b50\u6362\u5230\u53f3\u5b69\u5b50\uff0c\u7136\u540e\u628a\u65b0\u5408\u5e76\u7684\u63d2\u5165\u5230H1\u7684\u5de6\u5b50\u6811\u4e0a\u3002</li> </ol> <p>\u200b    </p> <p></p> <p></p> <pre><code>SkewHeap Merge(SkewHeap H1, SkewHeap H2)\n{\n    // \u5f53\u4e00\u8005\u4e3aNULL\u7ed3\u70b9\u65f6\uff0c\u4e0d\u8fdb\u884c\u4ea4\u6362\u5b69\u5b50\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u5bf9\u5e94\u8def\u5f84\u7684\u6700\u5927\u503c\n    if(H1 == NULL)\n        return H2;\n    if(H2 == NULL)\n        return H1;\n    if(H1-&gt;value &lt; H2-&gt;value)\n    {\n        H1-&gt;Right = Merge(H1-&gt;Right, H2);\n        // Mer\n        SkewHeap temp = H1-&gt;Left;\n        H1-&gt;Left = H1-&gt;Right;\n        H1-&gt;Right = temp;\n        return H1;\n    }\n    else\n    {\n        H2-&gt;Right = Merge(H2-&gt;Right, H1);\n        SkewHeap temp = H2-&gt;Left;\n        H2-&gt;Left = H2-&gt;Right;\n        H2-&gt;Right = temp;\n\n        return H2;\n    }\n}\n\nSkewHeap Insert(int x, SkewHeap H)\n{\n    SkewHeap SingleNode = Initialize(x);\n    SkewHeap temp = Merge(SingleNode, H);\n    LevelOrder(temp);\n    return temp;\n}\n</code></pre>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#421-\u5408\u7406\u6027\u5206\u6790","title":"4.2.1 \u5408\u7406\u6027\u5206\u6790","text":"<p>\u4ee5\u6bcf\u6b21\u53ea\u63d2\u5165\u4e00\u4e2a\u70b9\u4e3a\u4f8b\u5b50\u8bf4\u660e\u95ee\u9898\u3002</p> <p>\u8fdb\u4e00\u6b65\u5bf9\u9012\u5f52\u65cb\u8f6c\u5230\u5de6\u4fa7\u505a\u89e3\u91ca\uff0c\u9012\u5f52\u6027\u5730\u8f6c\u5230\u5de6\u4fa7\uff0c\u4f7f\u5f97\u672c\u6765\u6700\u53f3\u4fa7\u7684\u8def\u5f84\u53d8\u5230\u6700\u5de6\u4fa7\uff0c\u5373\u4f7f\u4e4b\u540e\u4ea4\u6362\u4f1a\u91cd\u65b0\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5b50\u6811\uff0c\u4f46\u6b64\u65f6\u9664\u4e86\u6839\uff0c\u5176\u4ed6\u90e8\u5206\u4f9d\u7136\u662f\u6700\u5de6\u4fa7\u7684\u8def\u5f84\uff0c\u4e5f\u4e0d\u4f1a\u518d\u8f7b\u6613\u5730\u8bbf\u95ee\u5230\u8fd9\u6b21\u8def\u5f84\u3002</p> <p>\u8ba8\u8bba2\uff1a\u5224\u65ad\u4ee5\u4e0b\u4e24\u4e2a\u8bf4\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u82e5\u6b63\u786e\uff0c\u8bf7\u7ed9\u51fa\u8be6\u7ec6\u7684\u8bc1\u660e\uff1b\u82e5\u4e0d\u6b63\u786e\uff0c\u8bf7\u4e3e\u51fa\u53cd\u4f8b\uff1a 1. \u6309\u987a\u5e8f\u5c06\u542b\u6709\u952e\u503c1, 2, \u00b7 \u00b7 \u00b7 , 2k \u2212 1 \u7684\u7ed3\u70b9\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u63d2\u5165\u5de6\u5f0f\u5806\uff0c\u90a3\u4e48\u7ed3\u679c\u5c06\u5f62\u6210\u4e00\u68f5\u5b8c\u5168\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002</p> <p></p> <ol> <li>\u6309\u987a\u5e8f\u5c06\u542b\u6709\u952e\u503c1, 2, \u00b7 \u00b7 \u00b7 , 2k \u2212 1 \u7684\u7ed3\u70b9\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u63d2\u5165\u659c\u5806\uff0c\u90a3\u4e48\u7ed3\u679c\u5c06\u5f62\u6210\u4e00\u68f5\u5b8c\u5168\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002</li> </ol>"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#422-\u644a\u8fd8\u5206\u6790","title":"4.2.2 \u644a\u8fd8\u5206\u6790","text":"<p>\u52bf\u80fd\u5206\u6790\u65b9\u6cd5\u56de\u987e</p> <p>\\(D_i\\):\u8868\u793a\u6267\u884c\u7b2c\\(i\\)\u904d\u4e4b\u540e\u7684\u6570\u636e\u7ed3\u6784</p> <p>\\(c_i\\):\u8868\u793a\u4ece\\(D_{i-1}\\)\u5230\\(D_i\\)\u7684\u5b9e\u9645\u6210\u672c</p> <p>\\(\\hat c_i\\):\u8868\u793a\u4ece\\(D_{i-1}\\)\u5230\\(D_i\\)\u7684\u5747\u644a\u6210\u672c\uff0c\\(\\hat c_i = c_i + \\Phi(D_i) - \\Phi(D_{i-1})\\)</p> <p>\u603b\u5747\u644a\u6210\u672c\u4e3a\uff1a\\(\\sum \\hat c_i = \\sum c_i + \\Phi(D_n) - \\Phi(D_0)\\)</p> <p>\u5206\u6790 skew heap \u7684\u5747\u644a\u590d\u6742\u5ea6\uff0c\u4e3b\u8981\u5c31\u662f\u5206\u6790\u5408\u5e76\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u5176\u4ed6\u64cd\u4f5c\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5408\u5e76\u64cd\u4f5c\u3002</p> <p><code>\u5f15\u7406\uff1a</code>\u5bf9\u4e8e\u53f3\u8def\u5f84\u4e0a\u6709\\(l\\)\u4e2a\u8f7b\u7ed3\u70b9\u7684\u659c\u5806\uff0c\u6574\u4e2a\u659c\u5806\u81f3\u5c11\u6709\\(2^l - 1\\)\u4e2a\u7ed3\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2an\u7ed3\u70b9\u7684\u659c\u5806\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u4e2a\u6570\u4e3a\\(O(log \\ n)\\)</p> <p><code>\u8bc1\u660e\uff1a</code></p> <p>\u200b   1. \u5bf9$ l = 1$\u663e\u7136\u6210\u7acb</p> <p>\u200b   2. \u5047\u8bbe\u5bf9\u5c0f\u4e8e\u7b49\u4e8e\\(l\\)\u90fd\u6210\u7acb\u3002\u5bf9\u4e8e\\(l+1\\)\u60c5\u51b5\uff0c\u6211\u4eec\u627e\u5230\u53f3\u8def\u5f84\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u8f7b\u7ed3\u70b9\uff0c\u4ee5\u5b83\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u81f3\u5c11\u6709\\(2^l -1\\)\u4e2a\u7ed3\u70b9\u3002         \u73b0\u5728\u8003\u8651\u7b2c\u4e00\u4e2a\u8f7b\u7ed3\u70b9\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u8f7b\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u66f4\u5927\uff0c\u800c\u53f3\u8def\u5f84\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u8f7b\u7ed3\u70b9\u5728\u53f3\u5b50\u6811\u4e2d\u3002\u6240\u4ee5\u7b2c\u4e00\u4e2a\u8f7b\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u81f3\u5c11\u6709\\(2^l -1\\)\u4e2a\u7ed3\u70b9\u3002         \u6240\u4ee5\u6574\u4e2a\u5806\u6709\\(1 + 2^l -1 + 2^l -1 = 2^{l+1}-1\\)\u4e2a\u7ed3\u70b9</p> <p><code>\u5b9a\u7406\uff1a</code>\u82e5\u6211\u4eec\u6709\u4e24\u4e2a\u659c\u5806H1\u548cH2\uff0c \u5b83\u4eec\u5206\u522b\u7531n1\u548cn2\u4e2a\u7ed3\u70b9\uff0c\u5219\u5408\u5e76H1\u548cH2\u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n), n = n1 + n2</p> <p>definition \"\u52bf\u80fd\u51fd\u6570\"</p> <p>\u6211\u4eec\u5b9a\u4e49 \\(\\Phi(Heap) = \\text{number of heavy node in } Heap\\)</p> <p>\u5176\u4e2d\uff0c\u989d\u5916\u9700\u8981\u5b9a\u4e49 heavy node \u548c light node\uff1a</p> <p>definition \"heavy node &amp; light node\"</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u5806 \\(H\\)\uff0c\u5982\u679c \\(size(H.\\text{right_descendant}) \\geq \\frac{1}{2}size(H)\\)\uff0c\u5219 \\(H\\) \u662f heavy node\uff0c\u5426\u5219\u662f light node\u3002 </p> <p>A node p is heavy if the number of descendants of p\u2019s right subtree is at least half of the number of descendants of p, and light otherwise.  Note that the number of descendants of a node <code>includes the node itself</code>.</p> <p>\u4ee4\\(H_3\\)\u4e3a\u5408\u5e76\u540e\u7684\u65b0\u5806\uff0c\u8bbe\\(H_i(i = 1,2)\\)\u7684\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u6570\u91cf\u4e3a\\(l_i\\),\u91cd\u7ed3\u70b9\u6570\u91cf\u4e3a\\(h_i\\)</p> <p>\u771f\u5b9e\u7684\u5408\u5e76\u64cd\u4f5c\u6700\u574f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\sum c_i = l_1 + l_2 + h_1+h_2\\)\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u5728\u53f3\u8def\u5f84\u4e0a\u5b8c\u6210</p> <p>\u644a\u8fd8\u65f6\u95f4\u6210\u672c\u4e3a\\(\\sum \\hat c_i = \\sum c_i + \\Phi(H_3) - \\Phi(H_1) - \\Phi(H_2)\\)</p> <p>\u5c06\\(h_i^0\\)\u8bb0\u4e3a\u4e0d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u7ed3\u70b9\u7684\u6570\u91cf\\(\\Phi(H_i) = h_i + h_i^0\\)</p> \\[ \\left\\{     \\begin{aligned}         c &amp;= l_1 + h_1 + l_2 + h_2 &amp;(1)\\\\         \\Phi(H_{3}) &amp;\\leq l_1 + h^0_1 + l_2 + h^0_2 &amp;(2)\\\\         \\Phi(H_1) &amp;= h_1 + h^0_{1} &amp;(3)\\\\         \\Phi(H_2) &amp;= h_2 + h^0_{2} &amp;(4)     \\end{aligned} \\right. \\] <p><code>\u6027\u8d28\uff1a</code></p> <ol> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f <code>heavy node</code>\uff0c\u5e76\u4e14\u5728\u5176\u53f3\u5b50\u6811\u53d1\u751f\u4e86\u5408\u5e76\uff08\u5305\u62ec\u7ffb\u8f6c\uff09\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u53d8\u4e3a\u4e00\u4e2a <code>light node</code>\uff1b</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f <code>light node</code>\uff0c\u5e76\u4e14\u5728\u5176\u53f3\u5b50\u6811\u53d1\u751f\u4e86\u5408\u5e76\uff08\u5305\u62ec\u7ffb\u8f6c\uff09\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u53d8\u4e3a\u4e00\u4e2a heavy node\uff1b</li> <li>\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684 heavy/light \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u539f\u5148\u4e00\u5b9a\u5728\u5806\u7684\u6700\u53f3\u4fa7\u8def\u5f84\u4e0a;\u56e0\u4e3a\u5176\u5b83\u7ed3\u70b9\u5408\u5e76\u524d\u540e\u5b50\u6811\u662f\u5b8c\u5168\u88ab\u590d\u5236\u7684\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u6539\u53d8\u8f7b\u91cd\u72b6\u6001</li> </ol> <p>\u5408\u5e76\u540e\u539f\u672c\u4e0d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\\(h_i^0\\)\u4e2a\u91cd\u7ed3\u70b9\u4ecd\u7136\u662f\u91cd\u7ed3\u70b9\uff0c\u5728\u53f3\u8def\u5f84\u4e0a\u7684\\(h1 + h2\\)\u4e2a\u91cd\u7ed3\u70b9\u5168\u90e8\u53d8\u6210\u8f7b\u7ed3\u70b9\uff0c\\(l1 + l2\\) \u4e2a\u8f7b\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u90fd\u53d8\u91cd\u3002</p> \\[ \\begin{aligned} \\Phi(H_3) &amp;&lt;= h_1^0 +h_2^0 + l_1 + l_2 \\\\ \\\\ \\sum \\hat c_i &amp;= \\sum c_i + \\Phi(H_3) - \\Phi(H_1) -\\phi(H_2) \\\\ &amp; &lt;= l_1 + l_2 +h_1+h_2 + (l_1 + l_2 + h_1^0 + h_2^0) - (h_1 + h_1^0 + h_2 + h_2^0)\\\\ &amp; = 2(l_1 + l_2) = O(log \\  n_1 + log \\ n_2) = O(log(n_1 + n_2)) \\end{aligned} \\]"},{"location":"ADS/4.%20Leftist%20Heaps%20and%20Skew%20Heaps/#43-\u4e60\u9898\u96c6","title":"4.3 \u4e60\u9898\u96c6","text":"<ol> <li> <p>The result of inserting keys 1 to \\(2^k -1\\) for any \\(k&gt;4\\) in order into an initially empty skew heap is always a full binary tree.</p> <p></p> <p><code>True</code></p> <p>\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff0c\u9996\u5148\u5bf9\u4e8ek=4\uff0c\u6ee1\u4e8c\u53c9\u6811\u6210\u7acb</p> <p>\u5bf9\u4e8ek=5\uff0c\u5de6\u53f3\u5b50\u6811\u7684</p> </li> <li> <p>The right path of a skew heap can be arbitrarily long. </p> <p><code>True</code></p> <p>\u76f8\u5bf9\u800c\u8a00\uff0cleftist heap \u5c31\u4e0d\u80fd\u8fd9\u4e48\u4efb\u610f\u4e86\uff0c\u5b83\u53d7$ logN$ \u9650\u5236\u3002</p> </li> <li> <p>A skew heap is a heap data structure implemented as a binary tree. Skew heaps are advantageous because of their ability to merge more quickly than balanced binary heaps. The worst case time complexities for Merge, Insert, and DeleteMin are all \\(O(N)\\), while the amorited time complexities for Merge, Insert, and DeleteMin are all \\(O(logN)\\).</p> <p>True</p> <p><code>\u659c\u5806\u6267\u884cmerge\uff0cinsert\uff0cdelete\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08N\uff09\uff0c\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08logN\uff09</code></p> </li> <li> <p>Merge the two leftist heaps in the following figure.  Which one of the following statements is FALSE?</p> <p></p> <ul> <li> <p>A. 2 is the root with 11 being its right child</p> </li> <li> <p>B. the depths of 9 and 12 are the same</p> </li> <li> <p>C. 21 is the deepest node with 11 being its parent</p> </li> <li> <p><code>D. the null path length of 4 is less than that of 2</code></p> <p></p> </li> </ul> </li> <li> <p>We can perform BuildHeap for leftist heaps by considering each element as a one-node leftist heap, placing all these heaps on a queue, and performing the following step: Until only one heap is on the queue, dequeue two heaps, merge them, and enqueue the result.  Which one of the following statements is FALSE?</p> <ul> <li> <p>A. in the \\(k\\)-th run, \\(\\lceil N/2^k \\rceil\\) leftist heaps are formed, each contains \\(2^k\\) nodes</p> </li> <li> <p>B. the worst case is when \\(N=2^K\\) for some integer \\(K\\)</p> </li> <li> <p>C. the time complexity \\(T(N) = O(\\frac{N}{2}log 2^0 + \\frac{N}{2^2}log 2^1 + \\frac{N}{2^3}log 2^2 + \\cdots + \\frac{N}{2^K}log 2^{K-1})\\) for some integer \\(K\\) so that \\(N=2^K\\)</p> </li> <li> <p>D. the worst case time complexity of this algorithm is \\(\\Theta (NlogN)\\)</p> </li> </ul> <p>C\u9009\u9879\u5f97\u5230\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N), \u4e0eD\u9009\u9879\u77db\u76fe</p> <p></p> </li> <li> <p>Insert keys 1 to 15 in order into an initially empty skew heap.  Which one of the following statements is FALSE?</p> <ul> <li> <p>A. the resulting tree is a complete binary tree</p> </li> <li> <p>B. there are 6 leaf nodes</p> </li> <li> <p>C. 6 is the left child of 2</p> </li> <li> <p>D. 11 is the right child of 7</p> </li> </ul> <p></p> <p></p> <p>\u663e\u7136\uff0cAB\u9009\u9879\u77db\u76fe\uff0c\u524d\u9762\u5f97\u5230\uff0c\u7ed3\u679c\u80af\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811</p> </li> <li> <p>Merge the two skew heaps in the following figure.  Which one of the following statements is FALSE?</p> <p></p> <ul> <li> <p>A. 15 is the right child of 8</p> </li> <li> <p>B. 14 is the right child of 6</p> </li> <li> <p>C. 1 is the root</p> </li> <li> <p>D. 9 is the right child of 3</p> </li> </ul> <p></p> <p><code>\u5177\u4f53\u601d\u8def\u4e3a\uff1a\u5148\u5bf9\u53f3\u8def\u5f84\u7ed3\u70b9\u8fdb\u884c\u5927\u5c0f\u6392\u5e8f\uff0c\u5206\u522b\u4e3a1\uff0c3\uff0c5\uff0c6\uff0c13</code></p> <p>\u5bf9\u5e94\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u76f4\u63a5\u79fb\u52a8\u5230\u53f3\u5b50\u6811\u5373\u53ef</p> </li> </ol>"},{"location":"ADS/5.%20Binomial%20Queue/","title":"5. Binomial Queue","text":"<p> \u7ea6 2631 \u4e2a\u5b57  337 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u4e8c\u9879\u5806\uff1f</p> <p>\u4e8c\u9879\u5806\u7684\u5f15\u5165\u6765\u6e90\u4e8e\u6211\u4eec\u5e0c\u671b\u63d2\u5165\u5efa\u5806\u7684\u64cd\u4f5c\u6709\u5e38\u6570\u7684\u5e73\u5747\u65f6\u95f4\u3002\u56e0\u4e3a<code>\u4e8c\u9879\u5806\u80fd\u591f\u5b9e\u73b0\u5728$O(N)$\u7684\u65f6\u95f4\u5185\u5b9e\u73b0$n$\u4e2a\u7ed3\u70b9\u7684\u63d2\u5165\u64cd\u4f5c\u3002</code></p>"},{"location":"ADS/5.%20Binomial%20Queue/#51-\u6982\u5ff5","title":"5.1 \u6982\u5ff5","text":"<p>A binomial queue is not a heap-ordered tree, but rather a collection of heap-ordered trees, known as a<code>forest</code>. Each heap-ordered tree is a binomial tree.</p> <p>\u4e8c\u9879\u5f0f\u961f\u5217\u4e0d\u662f\u5806\u6709\u5e8f\u6811\uff0c\u800c\u662f\u5806\u6709\u5e8f\u6811\u7684\u96c6\u5408\uff0c\u79f0\u4e3a\u68ee\u6797\u3002\u6bcf\u4e2a\u5806\u6392\u5e8f\u6811\u90fd\u662f\u4e00\u4e2a\u4e8c\u9879\u5f0f\u6811\u3002</p> <p>A binomial tree of height 0 is a one-node tree.</p> <p>A binomial tree, \\(B_k\\), of height k is formed by attaching a binomial tree, \\(B_{k \u2013 1}\\), to the root of another binomial tree,\\(B_{k \u2013 1}\\).</p> <p>\u4e8c\u9879\u5806\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u7ed3\u6784\u6027\u8d28</p> <ul> <li>\u4e8c\u9879\u5806\u4e0d\u518d\u662f\u4e00\u68f5\u6811\uff0c\u800c\u662f\u591a\u68f5\u6811\u6784\u6210\u7684\u68ee\u6797\uff0c\u5176\u4e2d\u6bcf\u4e00\u68f5\u6811\u90fd\u662f\u4e8c\u9879\u6811</li> <li>\u4e00\u4e2a\u4e8c\u9879\u5806\u4e2d\u7684\u6bcf\u4e00\u68f5\u4e8c\u9879\u6811\u90fd\u5177\u6709\u4e0d\u540c\u7684\u9ad8\u5ea6\uff0c\u5373\u6bcf\u4e00\u9ad8\u5ea6\u6700\u591a\u5bf9\u5e94\u4e00\u9897\u4e8c\u9879\u6811</li> <li>\u9ad8\u5ea6\u4e3a0\u7684\u4e8c\u9879\u6811\u662f\u4e00\u4e2a\u5355\u8282\u70b9\u6811\u3002\u9ad8\u5ea6\u4e3ak\u7684\u4e8c\u9879\u6811\\(B_k\\)\u901a\u8fc7\u5c06\u4e00\u68f5\u4e8c\u9879\u6811\\(B_{k-1}\\)\u8fde\u63a5\u5230\u53e6\u4e00\u68f5\u4e8c\u9879\u6811\\(B_{k-1}\\)\u7684\u6839\u4e0a\u5f62\u6210\u3002</li> </ul> </li> <li> <p>\u5e8f\u6027\u8d28\uff1a</p> <p>\u6bcf\u4e00\u68f5\u4e8c\u9879\u6811\u90fd\u4fdd\u6301\u5806\u7684\u5e8f\u6027\u8d28\uff08\u6709\u5e8f\u5806\uff09\uff0c\u5bf9\u4e8e\u6700\u5c0f\u5806\u2014\u2014\u5b69\u5b50\u7ed3\u70b9\u5927\u4e8e\u7236\u4eb2\u7ed3\u70b9</p> </li> </ol> <p></p> <p></p> \\[ (a+b)^n = \\sum_{i= 1} ^n C_n ^i a^{n-i}b^i \\] <p>\u4ece\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u51fa\u4e8c\u9879\u6811\\(B_k\\)\u5b9e\u9645\u4e0a\u662f\u7531\u4e00\u4e2aroot\u52a0\u4e0a\\(B_0,B_1,...B_{k-1}\\)\u7ec4\u6210</p> <p>\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e \\(B_k\\) \u6709 \\(2^k\\)\u4e2a\u7ed3\u70b9</p> <ol> <li> <p>\u5f53k=0\u65f6\uff0c\u663e\u7136\u4e00\u4e2a\u7ed3\u70b9\u6210\u7acb</p> </li> <li> <p>\u5f53k=m\u65f6\uff0c\u5047\u8bbe\u6761\u4ef6\u6210\u7acb\u3002\u90a3\u4e48\u5f53k=m+1\u65f6\uff0c</p> </li> </ol> <p>\\(B_{m+1}\\)\u7684\u7ed3\u70b9\u6570\u662f\\(2^0+2^1+...+2^m + 1 = 2 ^{m+1} - 1 + 1 = 2 ^{m+1}\\)</p> <p>\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\u5728\u6df1\u5ea6\u4e3a\\(d\\)\u7684\u7ed3\u70b9\u6570\u6070\u597d\u662f\u4e8c\u9879\u7cfb\u6570\\(C_n ^d\\)</p> <p><code>\u6839\u636e\u4e8c\u9879\u6811\u7684\u5b9a\u4e49\uff1aB_k\u662f\u7531\u4e24\u4e2aB_{k-1}\u5f62\u6210\u7684\uff0c\u4e14\u4e24\u68f5\u6811\u5b58\u5728\u6df1\u5ea6\u5dee1</code></p> \\[  \\begin{aligned}  &amp;C_{n}^0 = C_{n+1}^0 = 1\\\\  &amp;C_{n}^1 + C_{n}^0 = C_{n+1}^1 = n+1\\\\  &amp;....\\\\  &amp;C_n^i + C_n^{i-1} = C_{n+1}^i \\end{aligned} \\] <p>\\(B_k\\) structure + heap order + one binomial tree for each height</p> <p>A priority queue of any size can be uniquely represented by a collection of binomial trees.</p> <p></p>"},{"location":"ADS/5.%20Binomial%20Queue/#52-\u64cd\u4f5c","title":"5.2 \u64cd\u4f5c","text":""},{"location":"ADS/5.%20Binomial%20Queue/#521-findmin","title":"5.2.1 FindMin","text":"<p>The minimum key is in one of the roots.</p> <p>There are at most \\(logN\\) roots, hence \\(Tp\\) =\\(O(logN)\\).</p> <p>\u6700\u5c0f\u503c\u5728\u4e8c\u9879\u961f\u5217\u7684\u67d0\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u53ea\u9700\u904d\u5386\u6240\u6709\u7684root</p> <p>We can remember the minimum and update whenever it is changed. Then this operation will take O(1).</p> <p>\u8bbe\u7f6e\u4e13\u95e8\u8bb0\u5f55\u6700\u5c0f\u6839\u7ed3\u70b9\u7684\u7ed3\u70b9\uff0c\u53ea\u9700\u8981\u5728DeleteMin\u6216\u5219Insert \u4e00\u4e2a\u65b0\u7684\u6700\u5c0f\u503c\u540e\u66f4\u65b0\u8fd9\u4e2a\u4e34\u65f6\u7ed3\u70b9\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)</p>"},{"location":"ADS/5.%20Binomial%20Queue/#522-merge","title":"5.2.2 Merge","text":"<p>\u6bcf\u4e00\u4e2a\u4e8c\u9879\u5806\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u3002\u90a3\u4e48\u5408\u5e76\u4e8c\u9879\u5806\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7b49\u4ef7\u4e8e\u4e8c\u8fdb\u5236\u6570\u7684\u52a0\u6cd5\u3002</p> <p>\u4ece\u6700\u5c0f\u7684\u4e8c\u9879\u6811\u5f00\u59cb\uff08\u4e5f\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u6700\u4f4e\u4f4d\uff09\uff0c\u5982\u679c\u65e0\u9700\u8fdb\u4f4d\uff080+1\uff0c1+0\uff09\u5219\u76f4\u63a5\u7559\u4e0b\u4f5c\u4e3a\u65b0\u5806\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u9700\u8981\u8fdb\u4f4d(1+1)\uff0c\u5728\u5408\u5e76\u540e\u4e0e\u4e0b\u4e00\u4f4d\u505a\u52a0\u6cd5\uff0c\u5982\u6b64\u5faa\u73af\u5230\u6700\u9ad8\u4f4d\u5b8c\u6210\u64cd\u4f5c\u3002</p> <p>\u5728\u4fdd\u8bc1\u5806\u7684\u5b58\u50a8\u987a\u5e8f\u662f\u6309\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684\u524d\u63d0\uff08\u8fd9\u6837\u5c31\u4e0d\u7528\u5148\u904d\u5386\u6240\u6709\u7684\u5806\uff0c\u627e\u5230\u6700\u5c0f\u7684\u5806\u3002\u800c\u662f\u76f4\u63a5\u4ece\u5f00\u5934\u8fdb\u884c\u5408\u5e76\uff09\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u663e\u7136\u5c31\u662f\\(O(log n)\\)\uff0c\u56e0\u4e3a\u5c31\u662f\u4e8c\u8fdb\u5236\u9010\u4f4d\u505a\u64cd\u4f5c,<code>\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u5171\u6709\u591a\u5c11\u4e8c\u8fdb\u5236\u4f4d\u5373\u53ef\uff0cO\uff08logN\uff09</code></p> <p>Must keep the trees in the binomial queue sorted by height.</p> <p>\u76f8\u5e94\\(B_k\\) merge\u7684\u65f6\u5019\uff0c\u9700\u8981\u6ee1\u8db3heap\u4e0a\u5c0f\u4e0b\u5927\u7684\u8981\u6c42\u3002root\u5927\u7684\u4f5c\u4e3aroot\u5c0f\u7684\u5b50\u6811</p> <pre><code>// \u4e8c\u9879\u6811\u7684\u5408\u5e76\nBinTree MergeTrees(BinTree T1, BinTree T2)\n{\n    // merge equal size trees\n    // attach the larger one to the smaller one\n    if(T1-&gt;Element &gt; T2-&gt;Element)\n        return MergeTrees(T2, T1);\n    // T2 is larger, attach T2 to T1\n    T2-&gt;NextSibling = T1-&gt;LeftChild;\n    T1-&gt;LeftChild = T2;\n    return T1;\n}\n// \u4e8c\u9879\u961f\u5217\u7684\u5408\u5e76\nBinQueue Merge(BinQueue H1, BinQueue H2)\n{\n    BinTree T1, T2, Carry = NULL;\n    if(H1-&gt;currentsize + H2-&gt;currentsize &gt; 100)\n        cout &lt;&lt; \"Merge would exceed max tree capacity!\" &lt;&lt; endl;\n    H1-&gt;currentsize += H2-&gt;currentsize;\n    for(int i = 0, j = 1; j &lt;= H1-&gt;currentsize; i++, j *= 2)\n    {\n        T1 = H1-&gt;TheTrees[i];\n        T2 = H2-&gt;TheTrees[i];\n        switch(4 * !!Carry + 2 * !!T2 + !!T1)\n        {\n            // Carry T2 T1\n            case 0: // 000 no tree\n                break;\n            case 1: // 001 only T1\n                break;\n            case 2: // 010 only T2\n                H1-&gt;TheTrees[i] = T2;\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 3: // 011 T1 and T2\n                Carry = MergeTrees(T1, T2);\n                H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 4: // 100 only Carry\n                H1-&gt;TheTrees[i] = Carry;\n                Carry = NULL;\n                break;\n            case 5: // 101 Carry and T1;\n                Carry = MergeTrees(Carry, T1);\n                H1-&gt;TheTrees[i] = NULL;\n                break;\n            case 6: // 110 Carry and T2\n                Carry = MergeTrees(Carry, T2);\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 7: // 111 all three\n                H1-&gt;TheTrees[i] = Carry;\n                Carry = MergeTrees(T1, T2);\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n        }\n    }\n    return H1;\n}\n</code></pre> <ol> <li> <p>\u8fd9\u91cc\u4f7f\u7528<code>!!</code>\u7684\u76ee\u7684\u662f\u5c06\u6307\u9488<code>bool\u5316</code>\uff0c\u5982\u679cT1\u5b58\u5728\uff0c!!T1\u5c31\u7b49\u4e8e1\uff0c\u5982\u679cT2\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48!!T2\u5c31\u7b49\u4e8e0</p> </li> <li> <p>\u7136\u540e\u6211\u4eec\u5c31\u80fd\u7406\u89e3\\(4\\times !!Carry + 2\\times !!T2+!!T1\\) \u7684\u542b\u4e49\u4e86\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570\uff08\u5f53\u7136case \u7684    \u6807\u53f7\u8fd8\u662f\u5341\u8fdb\u5236\u7684\uff0c\u4f46\u6211\u4eec\u5fc3\u91cc\u8981\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6765\u5206\u6790\uff09\uff0c\u6700\u9ad8\u4f4d\u8868\u793a\u662f\u5426\u6709carry\uff0c\u5373<code>\u4e4b\u524d\u7684\u5408\u5e76\u662f\u5426\u5e26\u6765\u4e86\u8fdb\u4f4d\uff08\u4ece\u5806\u7684\u89d2\u5ea6\u770b\u4e5f\u5c31\u662f\u4e4b\u524d\u5408\u5e76\u51fa\u4e86\u4e00\u68f5\u65b0\u7684\u66f4\u9ad8\u7684\u4e8c\u9879\u6811\uff09</code>\uff0c\u7b2c\u4e8c\u4f4d\u4ee3\u8868\u7b2c\u4e8c\u4e2a\u5806H2\u662f\u5426\u6709\u9ad8\u5ea6\u4e3ai \u7684\u4e8c\u9879\u6811\uff0c\u6700\u540e\u4e00\u4f4d\u4ee3\u8868H1 \u662f\u5426\u6709\u9ad8\u5ea6\u4e3ai \u7684\u4e8c\u9879\u6811\u3002</p> </li> <li> <p>\u4e0d\u540ccase\u5bf9\u5e94\u7684\u60c5\u51b5</p> <ul> <li>000\uff1a\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a</li> <li>001\uff1a\\(T1\\)\u5b58\u5728\uff0c\u65e2\u7136\u8fd4\u56de\u7684\u5c31\u662f\\(H1\\)\uff0c\u6240\u4ee5\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a</li> <li>010\uff1a\\(T2\\)\u5b58\u5728\uff0c\u4f46\u662f\u7531\u4e8e\u8fd4\u56de\u7684\u662f\\(H1\\)\uff0c\u9700\u8981\u5c06\\(H2\\)\u4e2d\u7684\u6811\u8f6c\u79fb\u5230\\(H1\\)\u4e2d\u5bf9\u5e94\u7684\u6811\uff0c\u540c\u65f6\\(H2\\)\u5bf9\u5e94\u7684\u6811\u9700\u8981\u7f6e\u4e3aNULL</li> <li>011\uff1a\\(T1\\)\uff0c\\(T2\\)\u90fd\u5b58\u5728\uff0c\u6b64\u65f6\u4f1a\u4ea7\u751fcarry\uff0c\\(H1\\) \u548c \\(H2\\) \u5f53\u524d\u4f4d\u53d8\u4e3aNULL\uff0c\u8fdb\u4f4d\u7b49\u4e8e\u4e24\u4e2a\u5806\u8be5\u9ad8\u5ea6\u7684\u4e8c\u9879\u6811\u5408\u5e76\u540e\u7684\u7ed3\u679c</li> <li>100\uff1a\u4ec5\u4ec5carry\u5b58\u5728\uff0c\u7c7b\u6bd4010</li> <li>101\uff1a\\(H1\\) \u5f53\u524d\u4f4d\u53d8\u4e3aNULL\uff0c\u65b0\u7684carry \u7b49\u4e8e\\(T1\\) \u548c\u5f53\u524d\u7684carry \u5408\u5e76\u7684\u7ed3\u679c</li> <li>110\uff1a\\(H2\\) \u5f53\u524d\u4f4d\u53d8\u4e3aNULL\uff0c\u65b0\u7684carry \u7b49\u4e8e\\(T2\\) \u548c\u5f53\u524d\u7684carry \u5408\u5e76\u7684\u7ed3\u679c</li> <li>111\uff1a\u6b64\u8ba9\\(H1\\) \u5f53\u524d\u4f4d\u53d8\u4e3acarry\uff0c\u65b0\u7684carry \u7b49\u4e8e\\(T1\\) \u548c\\(T2 \\(\u5408\u5e76\u7684\u7ed3\u679c\uff0c\u6700\u540e\u7ed9\\)H2\\) \u5f53\u524d\u4f4d\u53d8\u4e3aNULL \u5373\u53ef\u3002</li> </ul> </li> </ol>"},{"location":"ADS/5.%20Binomial%20Queue/#523-insert","title":"5.2.3 Insert","text":"<p>\u770b\u4f5c\u662fmerge\u7684special case</p> <p>\u3010Example\u3011Insert 1, 2, 3, 4, 5, 6, 7 into an initially empty queue.</p> <ul> <li>1\uff0c2 \u5f62\u6210\u4e00\u4e2a\\(B_1\\)</li> <li>3\uff0c4\u5f62\u6210\u4e00\u4e2a\\(B_1\\)\uff0c\u4e0e\u524d\u9762\u76841\uff0c2 merge \u5f62\u6210\\(B_2\\)</li> <li>5\uff0c6\u5f62\u6210\u4e00\u4e2a\\(B_1\\)</li> <li>7\u5f62\u6210\u4e00\u4e2a\\(B_0\\)</li> </ul> <p></p> <p></p> <pre><code>BinQueue Insert(BinQueue H1, int x)\n{\n    BinQueue OneItem;\n    BinTree T;\n    OneItem = Initialize();\n    T = new BinNode;\n    if(T == NULL)\n        cout &lt;&lt; \"Out of space!\" &lt;&lt; endl;\n    T-&gt;Element = x;\n    T-&gt;LeftChild = T-&gt;NextSibling = NULL;\n    OneItem-&gt;TheTrees[0] = T;\n    OneItem-&gt;currentsize = 1;\n    return Merge(H1, OneItem);\n}\n</code></pre>"},{"location":"ADS/5.%20Binomial%20Queue/#524-deletemin","title":"5.2.4 DeleteMin","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(log N)\\)</p> <p>\u5728\u6839\u7ed3\u70b9\u627e\u5230\u6700\u5c0f\u503c\uff0c\u7136\u540e\u628a\u6700\u5c0f\u503c\u6240\u5728\u7684\u6811\u5355\u72ec\u62ff\u51fa\u5206\u88c2\u4e3a\u4e8c\u9879\u961f\u5217\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u65b0\u7684\u4e8c\u9879\u961f\u5217\u4e0e\u539f\u4e8c\u9879\u961f\u5217\u8fdb\u884c\u5408\u5e76\u3002\u6bcf\u4e00\u4e2a\u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)\u3002\u6545\u52a0\u8d77\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u4e3a\\(O(logN)\\)\u3002</p> <p></p> <p></p> <pre><code>int DeleteMin(BinQueue H)\n{\n    BinQueue DeletedQueue;\n    Position DeletedTree, OldRoot;\n    int MinItem = 1000000;\n    int i, j, MinTree;\n    // MinTree is the index of thr tree with the minimum item\n    if(Isempty(H))\n    {\n        cout &lt;&lt; \"Empty binomial queue!\" &lt;&lt; endl;\n        return -1;\n    }\n    // 1. find the tree with the minimum item\n    for(i = 0; i &lt; MaxTrees; i++)\n    {\n        if(H-&gt;TheTrees[i] &amp;&amp; H-&gt;TheTrees[i]-&gt;Element &lt; MinItem)\n        {\n            MinItem = H-&gt;TheTrees[i]-&gt;Element;\n            MinTree = i;\n        }\n    }\n    DeletedTree = H-&gt;TheTrees[MinTree];\n    // 2. remove the MinTree from H\n    H-&gt;TheTrees[MinTree] = NULL;\n    // 3. remove the MinItem from the MinTree\n    // and store the rest of the MinTree in DeletedQueue\n    OldRoot = DeletedTree;\n    DeletedTree = DeletedTree-&gt;LeftChild;\n    delete OldRoot;\n    DeletedQueue = Initialize();\n    // \u5bf9\u4e8e\u7d22\u5f15\u4e3ai\u7684\u6811\uff0c\u5176\u5305\u542b\u7684\u8282\u70b9\u6570\u4e3a2^i\n    DeletedQueue-&gt;currentsize = (2 ^ MinTree) - 1;\n    for(j = MinTree - 1; j &gt;= 0; j--)\n    {\n        DeletedQueue-&gt;TheTrees[j] = DeletedTree;\n        DeletedTree = DeletedTree-&gt;NextSibling;\n        DeletedQueue-&gt;TheTrees[j]-&gt;NextSibling = NULL;\n    }\n    H-&gt;currentsize -= DeletedQueue-&gt;currentsize + 1;\n    H = Merge(H, DeletedQueue);\n    return MinItem;\n}\n</code></pre>"},{"location":"ADS/5.%20Binomial%20Queue/#53-\u4e8c\u9879\u961f\u5217\u7684\u5b9e\u73b0","title":"5.3 \u4e8c\u9879\u961f\u5217\u7684\u5b9e\u73b0","text":"<p>\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u6a21\u578b\uff1f</p> <p>\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u5b69\u5b50\u6570\u91cf\u53ef\u80fd\u5927\u4e8e2\u4e2a</p> <p></p> <p>\u8981\u4ece\u6839\u7ed3\u70b912\u5f00\u59cb\u5feb\u901f\u904d\u5386\u4e09\u4e2a\u5b50\u6811\uff0821\uff0c24\uff0c23\uff09\uff0c\u8981\u7528\u201c\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5bf9\u5e9412-&gt;23-&gt;24-&gt;21</p> <p>\u56fe(b)\\(B_3\\)\u662f\u4e24\u68f5\\(B_2\\)\u7684\u5408\u5e76\u7ed3\u679c\uff0c\u4e3a\u4ec0\u4e48\u5408\u5e76\u4e4b\u540e\u9700\u8981\u6309\u7167\u5b50\u6811\u7684\u5927\u5c0f\uff08\u7ed3\u70b9\u6570\uff09\u964d\u5e8f\u6392\u5217\u5462\uff1f</p> <p>\u6839\u7ed3\u70b9\u4e3a12\u548c23\u7684\u4e24\u68f5\u6811\u5408\u5e76\u65f6\uff0c23\u4f1a\u6210\u4e3a12\u7684\u5b50\u6811\u3002\u6309\u7167\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u7684\u6a21\u578b\uff0c\u5e94\u8be5\u5c0623\u63d2\u5165\u5230\u5b50\u6811\u7684\u94fe\u8868\u3002</p> <p>\u5982\u679c\u6309\u7167\u5347\u5e8f\u7684\u8bdd\uff0c\u9700\u8981\u5148\u904d\u5386\u6240\u6709\u7684\u5b50\u7ed3\u70b9(21,24),\u624d\u80fd\u5c06\u6700\u5927\u5b50\u6811\\(B_2\\)\u52a0\u4e0a\uff0c\u591a\u51fa\u6765\u904d\u5386\u7684\u5f00\u652f\u3002</p> <pre><code>#include \"BinTree.h\"\n\nusing namespace std;\n\n// #define MaxTrees 10\n\n// typedef struct BinNode\n// {\n//     int Element;\n//     // \u5de6\u513f\u5b50\u53f3\u5144\u5f1f\n//     Position LeftChild;\n//     Position NextSibling;\n// }*BinTree, *Position;\n\n// typedef struct Collection\n// {\n//     // total number of nodes\n//     int currentsize;\n//     BinTree TheTrees[MaxTrees];\n// }*BinQueue;\n\n// int IsEmpty(BinQueue H);\n// BinQueue Initialize();\n// BinTree MergeTrees(BinTree T1, BinTree T2);\n// BinQueue Insert(BinQueue H1, int x);\n// BinQueue DeleteMin(BinQueue H);\n// void PrintQueue(BinQueue H);\n\n\nint Isempty(BinQueue H)\n{\n    return H-&gt;currentsize == 0 || H == NULL;\n}\n\nBinQueue Initialize()\n{\n    BinQueue H = new Collection;\n    if(H == NULL)\n        cout &lt;&lt; \"Out of space!\" &lt;&lt; endl;\n    H-&gt;currentsize = 0;\n    for(int i = 0; i &lt; MaxTrees; i++)\n        H-&gt;TheTrees[i] = NULL;\n    return H;\n}\n\nBinTree MergeTrees(BinTree T1, BinTree T2)\n{\n    // merge equal size trees\n    // attach the larger one to the smaller one\n    if(T1-&gt;Element &gt; T2-&gt;Element)\n        return MergeTrees(T2, T1);\n    // T2 is larger, attach T2 to T1\n    T2-&gt;NextSibling = T1-&gt;LeftChild;\n    T1-&gt;LeftChild = T2;\n    return T1;\n}\n\nBinQueue Merge(BinQueue H1, BinQueue H2)\n{\n    BinTree T1, T2, Carry = NULL;\n    if(H1-&gt;currentsize + H2-&gt;currentsize &gt; 100)\n        cout &lt;&lt; \"Merge would exceed max tree capacity!\" &lt;&lt; endl;\n    H1-&gt;currentsize += H2-&gt;currentsize;\n    for(int i = 0, j = 1; j &lt;= H1-&gt;currentsize; i++, j *= 2)\n    {\n        T1 = H1-&gt;TheTrees[i];\n        T2 = H2-&gt;TheTrees[i];\n        switch(4 * !!Carry + 2 * !!T2 + !!T1)\n        {\n            // Carry T2 T1\n            case 0: // 000 no tree\n                break;\n            case 1: // 001 only T1\n                break;\n            case 2: // 010 only T2\n                H1-&gt;TheTrees[i] = T2;\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 3: // 011 T1 and T2\n                Carry = MergeTrees(T1, T2);\n                H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 4: // 100 only Carry\n                H1-&gt;TheTrees[i] = Carry;\n                Carry = NULL;\n                break;\n            case 5: // 101 Carry and T1;\n                Carry = MergeTrees(Carry, T1);\n                H1-&gt;TheTrees[i] = NULL;\n                break;\n            case 6: // 110 Carry and T2\n                Carry = MergeTrees(Carry, T2);\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n            case 7: // 111 all three\n                H1-&gt;TheTrees[i] = Carry;\n                Carry = MergeTrees(T1, T2);\n                H2-&gt;TheTrees[i] = NULL;\n                break;\n        }\n    }\n    return H1;\n}\nBinQueue Insert(BinQueue H1, int x)\n{\n    BinQueue OneItem;\n    BinTree T;\n    OneItem = Initialize();\n    T = new BinNode;\n    if(T == NULL)\n        cout &lt;&lt; \"Out of space!\" &lt;&lt; endl;\n    T-&gt;Element = x;\n    T-&gt;LeftChild = T-&gt;NextSibling = NULL;\n    OneItem-&gt;TheTrees[0] = T;\n    OneItem-&gt;currentsize = 1;\n    return Merge(H1, OneItem);\n}\nint DeleteMin(BinQueue H)\n{\n    BinQueue DeletedQueue;\n    Position DeletedTree, OldRoot;\n    int MinItem = 1000000;\n    int i, j, MinTree;\n    // MinTree is the index of thr tree with the minimum item\n    if(Isempty(H))\n    {\n        cout &lt;&lt; \"Empty binomial queue!\" &lt;&lt; endl;\n        return -1;\n    }\n    // 1. find the tree with the minimum item\n    for(i = 0; i &lt; MaxTrees; i++)\n    {\n        if(H-&gt;TheTrees[i] &amp;&amp; H-&gt;TheTrees[i]-&gt;Element &lt; MinItem)\n        {\n            MinItem = H-&gt;TheTrees[i]-&gt;Element;\n            MinTree = i;\n        }\n    }\n    DeletedTree = H-&gt;TheTrees[MinTree];\n    // 2. remove the MinTree from H\n    H-&gt;TheTrees[MinTree] = NULL;\n    // 3. remove the MinItem from the MinTree\n    // and store the rest of the MinTree in DeletedQueue\n    OldRoot = DeletedTree;\n    DeletedTree = DeletedTree-&gt;LeftChild;\n    delete OldRoot;\n    DeletedQueue = Initialize();\n    // \u5bf9\u4e8e\u7d22\u5f15\u4e3ai\u7684\u6811\uff0c\u5176\u5305\u542b\u7684\u8282\u70b9\u6570\u4e3a2^i\n    DeletedQueue-&gt;currentsize = (2 ^ MinTree) - 1;\n    for(j = MinTree - 1; j &gt;= 0; j--)\n    {\n        DeletedQueue-&gt;TheTrees[j] = DeletedTree;\n        DeletedTree = DeletedTree-&gt;NextSibling;\n        DeletedQueue-&gt;TheTrees[j]-&gt;NextSibling = NULL;\n    }\n    H-&gt;currentsize -= DeletedQueue-&gt;currentsize + 1;\n    H = Merge(H, DeletedQueue);\n    return MinItem;\n}\nvoid PrintTree(BinTree T)\n{\n    // \u5173\u4e8e\u5de6\u513f\u5b50\u53f3\u5144\u5f1f\u7684\u904d\u5386\n    // \u4e00\u884c\u4e00\u884c\u7684\u8f93\u51fa\n    queue&lt;BinTree&gt; line1;\n    queue&lt;BinTree&gt; line2;\n    line1.push(T);\n    while(!line1.empty())\n    {\n        BinTree temp = line1.front();\n        line1.pop();\n        cout &lt;&lt; temp-&gt;Element &lt;&lt; \" \";\n        if(temp-&gt;LeftChild)\n            line2.push(temp-&gt;LeftChild);\n        while(temp-&gt;NextSibling)\n        {\n            cout &lt;&lt; temp-&gt;NextSibling-&gt;Element &lt;&lt; \" \";\n            if(temp-&gt;NextSibling-&gt;LeftChild)\n                line2.push(temp-&gt;NextSibling-&gt;LeftChild);\n            temp = temp-&gt;NextSibling;\n        }\n        if(line1.empty())\n        {\n            cout &lt;&lt; endl;\n            swap(line1, line2);\n        }\n    }\n}\nvoid PrintQueue(BinQueue H)\n{\n    for(int i = 0; i &lt; MaxTrees; i++)\n    {\n        if(H-&gt;TheTrees[i])\n        {\n            cout &lt;&lt; \"Tree \" &lt;&lt; i &lt;&lt; \": \"&lt;&lt; endl;\n            PrintTree(H-&gt;TheTrees[i]);\n        }\n    }\n    cout &lt;&lt; \"--------------------------\\n\";\n}\n\nint main()\n{\n    BinQueue H1 = Initialize();\n    H1 = Insert(H1, 12);\n    H1 = Insert(H1, 21);\n    H1 = Insert(H1, 24);\n    H1 = Insert(H1, 65);\n    H1 = Insert(H1, 23);\n    H1 = Insert(H1, 51);\n    H1 = Insert(H1, 24);\n    H1 = Insert(H1, 65);\n    H1 = Insert(H1, 14);\n    H1 = Insert(H1, 26);\n    H1 = Insert(H1, 16);\n    H1 = Insert(H1, 18);\n    H1 = Insert(H1, 13);\n    PrintQueue(H1);\n    int MinItem = DeleteMin(H1);\n    PrintQueue(H1);\n    cout &lt;&lt; \"MinItem: \" &lt;&lt; MinItem &lt;&lt; endl;\n}\n</code></pre>"},{"location":"ADS/5.%20Binomial%20Queue/#54-\u644a\u8fd8\u5206\u6790","title":"5.4 \u644a\u8fd8\u5206\u6790","text":"<p>A binomial queue of N elements can be built by N successive insertions in O(N) time.</p> <p>\u63d2\u5165\u6700\u574f\u7684\u60c5\u51b5\u662f\\(O(log N)\\),\u4f46\u662f\u574f\u64cd\u4f5c\u5e26\u6765\u8fdb\u4f4d\u7684\u540c\u65f6\uff0c\u540e\u7eed\u4f1a\u5e26\u6765\u5f88\u591a\u76840\uff0c\u4e5f\u5c31\u6ca1\u6709\u8fdb\u4f4d</p>"},{"location":"ADS/5.%20Binomial%20Queue/#541-\u805a\u5408\u6cd5","title":"5.4.1 \u805a\u5408\u6cd5","text":"<p>\u805a\u5408\u6cd5\u9700\u8981\u6bcf\u4e00\u6b65\u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u3002\u5173\u4e8e\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u4e0e\u4e8c\u8fdb\u5236\u7684\u52a0\u6cd5\u6709\u5bf9\u5e94\u5173\u7cfb\u3002\u5305\u542b\u52a0\u6cd5\u548c\u8fdb\u4f4d\uff0c\u5bf9\u5e94\u5c31\u662f\u63d2\u5165\u548cmerge\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u5bf9\u5e94\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u4ece\u7a7a\u6811\u8fde\u7eed\u63d2\u5165n\u4e2a\u9876\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n + \u8fdb\u4f4d\u7684\u6b21\u6570\u3002</p> <p>\u6700\u4f4e\u4f4d\u6bcf\u6b21\u52a01\u90fd\u4f1amerge(\u5bf9\u5e94\u5355\u7eaf\u7684\u63d2\u5165)\uff0c\u6b21\u4f4e\u4f4d\u6bcf\u4e24\u6b21\u63d2\u5165\u4f1amerge\uff08\u5bf9\u5e94\u8fdb\u4f4d\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8ba1\u7b97n\u6b21\u63d2\u5165\u9020\u6210\u7684merge\u6b21\u6570 $$ n + \\dfrac{n}{2} + \\dfrac{n}{4}+...+\\dfrac{n}{2^{logn +1}} $$ \u6839\u636e\u7b49\u6bd4\u6570\u5217\u7684\u6c42\u548c\uff0c\u663e\u7136\u4e0a\u8ff0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc72n\uff0c\u6240\u4ee5\u5355\u6b65\u64cd\u4f5c\u7684\u644a\u8fd8\u65f6\u95f4\u6210\u672c\u5c31\u662f\u5e38\u6570\u7ea7\u7684\u3002</p> <p></p> <p>\u6b64\u5904\u7684total link\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a</p> <p>\u6bcf\u4e24\u6b21\u53d1\u751f\u4e00\u6b21\\(B_0-&gt;B_1\\)\u7684link\uff0c\u6bcf\u56db\u6b21\u53d1\u751f\u4e00\u6b21\\(B_1-&gt;B_2\\)\u7684link\uff0c\u4f9d\u6b21\u7c7b\u63a8\\(N(\\dfrac{1}{2}+\\dfrac{1}{4}+\\dfrac{1}{8}+....)\\)</p>"},{"location":"ADS/5.%20Binomial%20Queue/#542-\u52bf\u80fd\u6cd5","title":"5.4.2 \u52bf\u80fd\u6cd5","text":"<p>\u5206\u6790\u5f97\u5230</p> <ul> <li> <p>link=1\uff0c\u4e0d\u4f1a\u9020\u6210\u4e8c\u9879\u6811\u7684\u589e\u52a0\uff08\\(B_0 \\rightarrow B_1\\)\uff09\u3002</p> </li> <li> <p>link=2\uff0c\u4f1a\u9020\u6210\u4e8c\u9879\u6811\u6570\u91cf\u51cf1(\\(B_0\\rightarrow B_1 \\rightarrow B_2\\)),\u539f\u5148\u7684\\(B_0,B_1\\)\u88ab\u8f6c\u5316\u4e3a\\(B_2\\)</p> </li> <li>\u4f9d\u6b21\u7c7b\u63a8\uff0clink=3\uff0c\u4f1a\u9020\u6210\u4e8c\u9879\u6811\u7684\u6570\u91cf\u51cf2</li> </ul> <p><code>\u6bcf\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3astep+link\uff0c\u5f97\u5230\u5982\u679c\u4e00\u6b21\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ak\uff0c\u90a3\u4e48\u4e8c\u9879\u961f\u5217\u4e2d\u7684\u4e8c\u9879\u6811\u5c06\u51cf\u5c11$\uff08k-2\uff09$</code></p> <p></p> <p>\u8bb0\\(c_i\\)\u8868\u793a\u5b9e\u9645\u4e0a\u6bcf\u4e00\u6b65\u63d2\u5165\u7684\u6210\u672c</p> <p>\u8bb0\\(\\Phi_i\\)\u8868\u793a\u5728\u7b2ci\u6b21\u63d2\u5165\u5b8c\u6210\u540e\uff0c\u4e8c\u9879\u961f\u5217\u4e2d\u4e8c\u9879\u6811\u7684\u6570\u91cf</p> <p>\u90a3\u4e48\u6bcf\u6b21\u7684\u644a\u8fd8\u6210\u672c\u5c31\u662f $$ \\widehat c_i = c_i + \\Phi_i - \\Phi_{i-1} = c_i + (2-c_i) = 2 $$</p>"},{"location":"ADS/5.%20Binomial%20Queue/#55-\u4e60\u9898\u96c6","title":"5.5 \u4e60\u9898\u96c6","text":"<ol> <li> <p>Delete the minimum number from the given binomial queues in the following figure.  Which one of the following statements must be FALSE?</p> <p></p> <ul> <li> <p>A. there are two binomial trees after deletion, which are \\(B_1\\) and \\(B_2\\)</p> </li> <li> <p>B. 11 and 15 can be the children of 4</p> </li> <li> <p><code>C. 29 can never be the root of any resulting binomial tree</code></p> </li> <li> <p>D. if 29 is a child of 4, then 15 must be the root of \\(B_1\\)</p> </li> </ul> <p>\u6b64\u5904\u8bf4\u660e\u8fdb\u4f4dcarry\u548cH1\uff0cH2\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\uff0c\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c</p> </li> <li> <p>Merge the two binomial queues in the following figure.  Which one of the following statements must be FALSE?</p> <p></p> <ul> <li> <p>A. there are two binomial trees after merging, which are \\(B_2\\) and \\(B_4\\)</p> </li> <li> <p>B. 13 and 15 are the children of 4</p> </li> <li> <p>C. if 23 is a child of 2, then 12 must be another child of 2</p> </li> <li> <p><code>D. if 4 is a child of 2, then 23 must be another child of 2</code></p> </li> </ul> </li> <li> <p>Inserting a number into a binomial heap with 15 nodes costs less time than inserting a number into a binomial heap with 19 nodes.</p> <p><code>False</code></p> <p>\\(15 = 1111_2, 19 = 10011_2\\)</p> <p>\u663e\u7136\u63d2\u5165\u523019\u4e2anode\u7684\u4e8c\u9879\u5806\u53d1\u751f\u7684\u8fdb\u4f4d\u6b21\u6570\u5c11</p> </li> <li> <p>To implement a binomial queue, the subtrees of a binomial tree are linked in increasing sizes.</p> <p><code>False</code></p> <p>\u6309\u7167\u5b50\u6811\u5927\u5c0f\uff08\u7ed3\u70b9\u6570\uff09\u964d\u5e8f\u6392\u5217</p> </li> <li> <p>The potential function Q of a binomial queue is the number of the trees. After merging two binomial queues \\(H1\\) with 12 nodes and \\(H2\\) with 13 nodes\uff0cwhat is the potential change \\(Q(H1+H2)\u2212(Q(H1)+Q(H2))\\) ?</p> \\[ 12 = 1100_2\\\\ 13 = 1101_2\\\\ 12 + 12 = 11001\\\\ \\Delta Q = 3 - 2 -3 = -2 \\] </li> <li> <p>Making N insertions into an initally empty binomial queue takes$ \u0398(NlogN)$ time in the worst case.     <code>False</code></p> <p>\u63d2\u5165\u7684\u6700\u574f\u60c5\u51b5\u662f\\(logN,\\) \u8fd9\u662f\u56e0\u4e3a\u9700\u8981\u4e00\u76f4\u8fdb\u4f4d\u4e0a\u53bb\u3002\u800cN\u7ec4\u6570\u636e\u4e0d\u53ef\u80fd\u6bcf\u63d2\u5165\u4e00\u4e2a\u5c31\u8fdb\u4f4d\uff0c\u56e0\u6b64\u662fO(N)</p> </li> <li> <p>After deleting number 14 from a binomial queue of 5 numbers { 12, 13, 14, 23, 24 }, which of the followings is impossible?     <code>A.the LeftChild link of the node 12 is NULL;</code></p> <p>B. the NextSibling link of the node 12 is NULL;</p> <p>C. the NextSibling link of node 13 may point to node 23;</p> <p>D. the LeftChild link of node 24 is NULL;</p> <p>\u4f18\u5148\u961f\u5217\u91cc\u9762\uff0c\u53ea\u6709\u4e0a\u4e0b\u7684\u5927\u5c0f\u9650\u5236\uff0c\u5de6\u53f3\u8c01\u5927\u8c01\u5c0f\u6ca1\u6709\u8981\u6c42\u3002\u56e0\u6b64\uff0c12\u4e00\u5b9a\u662f\u6839\uff0c24\u4e00\u5b9a\u662f\u6700\u4e0b\u9762\u7684\u90a3\u4e2a\uff0cA12\u4e00\u5b9a\u662f\u6709\u5b69\u5b50\u7684\uff0c\u9519\u3002</p> <p></p> </li> </ol>"},{"location":"ADS/6.%20backtracking/","title":"6. Backtracking","text":"<p> \u7ea6 1312 \u4e2a\u5b57  477 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p>"},{"location":"ADS/6.%20backtracking/#61-basic-idea","title":"6.1 basic idea","text":"<p>\u627e\u5230\u95ee\u9898\u7b54\u6848\u7684\u4e00\u4e2a\u53ef\u9760\u65b9\u6cd5\u662f\u5217\u51fa\u6240\u6709\u5019\u9009\u7b54\u6848\uff0c\u56de\u6eaf\u4f7f\u6211\u4eec\u80fd\u591f\u6d88\u9664\u5bf9\u5927\u91cf\u5019\u9009\u8005\u7684\u663e\u5f0f\u68c0\u67e5(\u526a\u679d\u64cd\u4f5c)\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u8bc1\u5728\u7b97\u6cd5\u8fd0\u884c\u5230\u7ec8\u6b62\u65f6\u4f1a\u627e\u5230\u7b54\u6848\u3002</p> <p>basic idea\uff1a\u56de\u6eaf\u7684\u5386\u7a0b</p> <p>\u751f\u6210\u89e3\uff0c\u5df2\u7ecf\u751f\u6210\u4e86\u524di\u4e2a\u89e3\\(((x_1,x_2,...,x_i)),(x_k\u2208S_k(\u89e3\u7a7a\u95f4))\\)</p> <p>\u8981\u6dfb\u52a0\u65b0\u5143\u7d20\\((x_{i+1}^{(1)}\u2208X_{i+1}(\u7b2ci\u4e2a\u89e3\u96c6))\\)</p> <p>\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u8981\u6c42,\u82e5\u6ee1\u8db3\u8981\u6c42\u5219\u751f\u6210\u89e3\\(((x_1,x_2,...,x_i,x_{i+1}))\\)</p> <p>\u82e5\u4e0d\u6ee1\u8db3\u5219\u627e\u53e6\u4e00\u4e2a\\((x_{i+1}),\u82e5\u6240\u6709\u7684(x_{i+1})\\)\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6,\u90a3\u4e48\u8fdb\u884c\u56de\u6eaf</p> <p>\u89e3\u53d8\u4e3a\\(((x_1,x_2,...,x_{i-1}))\\)\u5e76\u4e14\u6807\u8bb0\u5f53\u524d\u7684\\((x_i)\\)\u4e3a\u65e0\u6548\u89e3\u6362\u4e0b\u4e00\u4e2a\\((x_i),\\)\u4ee5\u6b64\u7c7b\u63a8</p> <p></p>"},{"location":"ADS/6.%20backtracking/#62-\u516b\u7687\u540e\u95ee\u9898","title":"6.2 \u516b\u7687\u540e\u95ee\u9898","text":"<ul> <li> <p>\u3010\u63cf\u8ff0\u3011\u5728\u68cb\u76d8\u4e2d\u627e\u5230\u516b\u4e2a\u4f4d\u7f6e\u653e\u7f6e\u7687\u540e\uff0c\u4f7f\u5f97\u5b83\u4eec\u90fd\u4e0d\u540c\u884c\u4e14\u4e0d\u540c\u5217\uff0c\u4e5f\u4e0d\u80fd\u540c\u65f6\u4f4d\u4e8e\u5bf9\u89d2\u7ebf\u4e0a</p> <p></p> <p>\\(Q_i\\) \u8868\u793a queue in the i th row</p> <p>\\(x_i\\) \u8868\u793a the column index in which \\(Q_i\\) is $$ solution = (x_1, x_2, x_3, ... x_8) = (4,6,8,2,7,1,3,5) $$</p> </li> </ul> <p>\u9650\u5236\u6761\u4ef6\uff1a</p> <ol> <li> <p>\\(S_i\\) = { 1,2,3,4,5,6,7,8 } for 1 &lt;=i &lt;= 8</p> </li> <li> <p>\\(x_i != x_j \\ if i \\ != j\\)</p> <p>\u4e0d\u80fd\u5728\u540c\u4e00\u884c\u548c\u540c\u4e00\u5217</p> <p>This implies that the solution must be a permutation of 1, 2, ... , 8. Thus the number of candidates in the solution space is reduced to 8!.</p> </li> <li> <p>\\((x_i - x_j) / (i - j) != |1|\\)</p> <p>\u4e0d\u80fd\u5728\u5bf9\u89d2\u7ebf\u548c\u53cd\u5bf9\u89d2\u7ebf\u4e0a</p> </li> </ol> <p>Method: \u4ee54\u4e2a\u7687\u540e\u4e3a\u4f8b</p> <p>step 1\uff1a \u5efa\u7acb\u4e00\u68f5game tree</p> <p></p> <p>Each path from the root to a leaf defines an element of the solution space.</p> <p>step 2\uff1a\u6267\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d20\uff0c\u6765\u68c0\u67e5\u8def\u5f84\u662f\u5426\u6b63\u786e</p> <ol> <li>\u5047\u8bbex1\u5728\u7b2c\u4e00\u5217\uff0c\u987a\u5e8f\u5411\u4e0b\uff0cx2 = 2\uff0c\u663e\u7136\u5728\u5bf9\u89d2\u7ebf\u4e0a\uff0c\u56de\u6eaf\u81f3x1 = 1</li> <li>\u540e\u7eed\u5411\u4e0b\uff0cx2 = 3\uff0c \u663e\u7136\u540e\u7eed\u4e0d\u7ba1x3\u662f\u5728\u7b2c\u4e8c\u5217\u8fd8\u662f\u7b2c\u56db\u5217\u90fd\u4f1a\u4e0ex2\u5728\u5bf9\u89d2\u7ebf\u4e0a\u3002\u56de\u6eaf\u81f3x1 = 1</li> <li>\u5411\u4e0b x2 =4\uff0c \u5982\u679c\u540e\u7eedx3 = 2\uff0c x4 =3,\u5728\u5bf9\u89d2\u7ebf\u4e0a\u3002\u5982\u679cx3 = 3\uff0cx3\u4f1a\u4e0ex2\u5728\u5bf9\u89d2\u7ebf\u4e0a\u3002</li> <li>x1 = 1\u6240\u6709\u7684\u60c5\u51b5\u5747\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ee7\u7eed\u5411\u4e0a\u56de\u6eaf\uff0c\u8f6c\u5316\u4e3ax1 = 2</li> </ol> <pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;cmath&gt;\n\nusing namespace std;\n\n// \u7528\u4e8e\u63a7\u5236\u7687\u540e\u7684\u6570\u91cf\uff0c\u68cb\u76d8\u7684\u89c4\u6a21\nconst int n = 8;\n\nbool Is_safe(vector&lt;int&gt; &amp;board, int row, int col)\n{\n    // check if there is a queen in the same column\n    // or in the same diagonal\n    // or in the same anti-diagonal\n    // row means the row we are going to put a queen\n    // col means the column we are going to put a queen\n    // \u6b64\u65f6\u9700\u8981\u7528\u5f53\u524d\u7684queue\u7684\u4f4d\u7f6e\u548c\u4e4b\u524d\u7684queue\u7684\u4f4d\u7f6e\u8fdb\u884c\u6bd4\u8f83\n    for(int i = 0; i &lt; row; i++)\n    {\n        if(board[i] == col || abs(board[i] - col) == abs(i - row))\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\nvoid SolveNQueens(int row, vector&lt;int&gt; &amp;board, vector&lt;vector&lt;int&gt;&gt; &amp;solutions)\n{\n    // row\u8868\u793a\u5f53\u524d\u8981\u653e\u7f6e\u7687\u540e\u7684\u884c\u6570\n    if(row == n)\n    {\n        // \u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a\u89e3\n        solutions.push_back(board);\n        return;\n    }\n    // \u6bcf\u4e00\u884c\u7684\u7687\u540e\u7684\u4f4d\u7f6e\u90fd\u662f\u4ece0\u5230n-1\n    // \u5224\u65ad\u5f53\u524d\u7684\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    for(int col = 0; col &lt; n; col++)\n    {\n        if(Is_safe(board, row, col))\n        {\n            board[row] = col;\n            SolveNQueens(row + 1, board, solutions);\n        }\n    }\n}\nint main()\n{\n    // \u521d\u59cb\u5316\u68cb\u76d8\uff0c-1\u8868\u793a\u6ca1\u6709\u7687\u540e\n    // board[i] = j \u8868\u793a\u5728(i, j)\u7684\u4f4d\u7f6e\u6709\u4e00\u4e2a\u7687\u540e\n    vector&lt;int&gt; board(n, -1);\n    // \u7528\u4e8e\u5b58\u50a8\u6240\u6709\u7684\u89e3\n    vector&lt;vector&lt;int&gt;&gt; solutions;\n    // \u6267\u884c\u56de\u6eaf\u7b97\u6cd5\n    SolveNQueens(0, board, solutions);\n    // \u8f93\u51fa\u6240\u6709\u7684\u89e3\n    for(auto solution : solutions)\n    {\n        for(auto pos: solution)\n        {\n            cout &lt;&lt; pos &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"Total solutions: \" &lt;&lt; solutions.size() &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"ADS/6.%20backtracking/#63-\u9ad8\u901f\u516c\u8def\u6536\u8d39\u95ee\u9898","title":"6.3 \u9ad8\u901f\u516c\u8def\u6536\u8d39\u95ee\u9898","text":"<ul> <li>\u3010\u63cf\u8ff0\u3011\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u627e\u5230n\u4e2a\u5730\u65b9\u5efa\u7acb\u52a0\u6cb9\u7ad9\uff0c\u5df2\u77e5\u5b83\u4eec\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6c42\u51fa\u6240\u6709\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\uff0c\u5047\u5b9a\u7b2c\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u5750\u6807\u662f0</li> </ul> <p>Given N points on the x-axis with coordinates \\(x1 &lt; x2 &lt; \u2026&lt; xN\\) . Assume that \\(x1 = 0\\). There are \\(N( N \u2013 1 ) / 2\\) distances between every pair of points.</p> <ul> <li> <p>\u3010Solution\u3011</p> <ol> <li>\u901a\u8fc7n(n-1)/2\u4e2a\u8ddd\u79bb\u7b97\u51fan</li> <li>0\u548c\u6700\u5927\u8ddd\u79bb\u8bf4\u660e\u90fd\u90fd\u6709\u52a0\u6cb9\u7ad9</li> <li>\u4eceD\u96c6\u5408\u4e2d\u627e\u6700\u5927\u7684\u8fdb\u884c\u6784\u5efa,\u627e\u4e86\u5c31\u4eceD\u4e2d\u5220\u9664\u8ddd\u79bb,\u5931\u8d25\u7684\u8bdd\u5c31\u56de\u5230\u4e0a\u4e00\u79cd\u60c5\u51b5.</li> <li>\u6bcf\u6b21\u68c0\u9a8c\u5206\u6210\u9760\u5de6\u8fb9\u548c\u9760\u53f3\u8fb9\u4e24\u4e2a\u60c5\u51b5</li> </ol> </li> </ul> <p></p> <ol> <li> <p>\u9996\u5148\u6839\u636e15\u4e2a\u8ddd\u79bb\uff0c\u7b97\u51fa\u4e00\u5171\u67096\u4e2a\u6536\u8d39\u7ad9</p> </li> <li> <p>\u8ba1\u7b97\u9996\u5c3e\u4e24\u4e2a\u6536\u8d39\u7ad9\u7684\u5750\u6807 \\(x1 = 0, x6 = 10\\)</p> </li> <li> <p>find the next largest distance and check</p> </li> </ol> <p>\u5bf9\u4e8e\u957f\u5ea68\uff0c\u4ec5\u53ef\u80fd\u51fa\u73b0\u5728\\(x1\\)\u5230\\(x5\\)\u6216\u8005\\(x2\\)\u5230\\(x6\\)</p> <ul> <li>\\(x5 - x1 = 8\\) \u8bf4\u660e\\(x5 = 8\\)</li> <li>\\(x6 - x2 = 8\\) \u8bf4\u660e\\(x2 = 2\\)</li> </ul> <p>\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u9009\u53d6\\(x5 =8\\)\uff0c \u540e\u7eed\u7684\u6700\u5927\u503c\u53d8\u4e3a7\uff0c\u4ec5\u53ef\u80fd\u51fa\u73b0\u5728\\(x1\\)\u5230\\(x4\\)\u6216\u8005\\(x2\\)\u5230\\(x6\\)</p> <ul> <li>\\(x4 - x1 = 7\\) \u8bf4\u660e \\(x4 = 7\\)</li> <li>\\(x6 - x2 = 7\\) \u8bf4\u660e$ x2 = 3$</li> </ul> <p>\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u9009\u53d6\\(x4 = 7\\)\uff0c\u540e\u7eed\u7684\u6700\u5927\u503c\u53d8\u4e3a6\uff0c\u5c3d\u53ef\u80fd\u51fa\u73b0\u5728\\(x1\\)\u5230\\(x3\\)\u548c\\(x2\\)\u5230\\(x6\\)</p> <ul> <li>\\(x3 - x1 = 6\\) \u8bf4\u660e\\(x3 = 6\\).\u4f46\u662f\\(x3\\)\u4e0e\\(x4\\)\u8ddd\u79bb\u4e3a1\uff0c\\(x4\\)\u4e0e\\(x5\\)\u8ddd\u79bb\u4e3a1\uff0c\u8ddd\u79bb\u8868\u4e2d\u6ca1\u6709\u4e24\u4e2a1\uff0c\u77db\u76fe</li> <li>\\(x6 - x2 = 6\\) \u8bf4\u660e$ x2 = 4\\(\u3002**\u4f46\u662f\\)x1\\(\u548c\\)x2\\(\u8ddd\u79bb\u4e3a4\uff0c\\)x2\\(\u4e0e\\)x5$\u8ddd\u79bb\u4e3a4\uff0c\u8ddd\u79bb\u8868\u4e2d\u6ca1\u6709\u4e24\u4e2a4\uff0c\u77db\u76fe**</li> </ul> <p><code>x4 = 7\u7684\u9053\u8def\u4e0d\u540c\uff0c\u56de\u6eaf\u5230x5 = 8\uff0c \u5411\u4e0b\u9009\u53d6\u53e6\u4e00\u6761\u9053\u8defx2 = 3</code></p> <p>\u540e\u7eed\u7684\u6700\u5927\u503c\u53d8\u4e3a6\uff0c\u5c3d\u53ef\u80fd\u51fa\u73b0\u5728\\(x1\\)\u5230\\(x4\\)\u548c\\(x3\\)\u5230\\(x6\\)\uff0c\u5f97\u5230\u4e24\u4e2a\u60c5\u51b5\\(x4 = 6\\)\u6216\u8005\\(x3 = 4\\)</p> <p>\u5bf9\u4e8e\\(x3 = 4\\),\\(x1\\)\u5230\\(x3\\)\u7684\u8ddd\u79bb\uff0c\\(x3\\)\u5230\\(x5\\)\u7684\u8ddd\u79bb\u90fd\u662f4\uff0c\u77db\u76fe</p> <p>\u53ea\u5269\u4e0b\\(x4 = 6\\)\uff0c\u540e\u7eed\u53ea\u53ef\u80fd\u51fa\u73b0 x3 = 5</p> <p>\u6700\u7ec8\u5f97\u5230\u7ed3\u679c\uff080\uff0c3\uff0c5\uff0c6\uff0c8\uff0c10\uff09</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\n#include&lt;set&gt;\n\nusing namespace std;    \n#define MAX 200\n\nint Get_num(int n)\n{\n    for(int i = 1; i &lt;= n; i++)\n    {\n        if(n == i* (i-1) / 2)\n        {\n            return i;\n        }\n    }\n    return -1;\n}\nbool Reconstruct1(vector&lt;int&gt; &amp;path, vector&lt;vector&lt;int&gt;&gt; &amp;solutions, multiset&lt;int&gt; &amp;distances, int n, int left, int right)\n{\n    // path\u662f\u5b58\u653e\u6536\u8d39\u7ad9\u4f4d\u7f6e\u7684\u6570\u7ec4\n    // path[1], path[2],...path[left - 1]\u5df2\u77e5\n    // path[right + 1], ... path[n]\u5df2\u77e5\n\n    bool Found = false;\n    // \u5148\u5224\u65addistances\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5219\u627e\u5230\u6700\u540e\u7684\u7ed3\u679c\n    if(distances.empty())\n    {\n        Found = true;\n        solutions.push_back(path);\n        return Found;\n    }\n    multiset&lt;int&gt;::iterator iter;\n    // \u5148\u627e\u5230\u76ee\u524ddistances\u4e2d\u7684\u6700\u5927\u503c\n    int max_distance = *distances.rbegin();\n    // \u9009\u62e9\u4e00\uff1apath[right] = max_distance\n    // \u6b64\u65f6max_distance \u662f \u6536\u8d39\u7ad9 path[0]\u548cpath[right]\u7684\u8ddd\u79bb\n    path[right] = max_distance;\n    int distance;\n    // \u8ba1\u7b97\u5f53\u524dright\u6536\u8d39\u7ad9\u4e0e\u5df2\u77e5\u6536\u8d39\u7ad9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    // \u5c06\u5b83\u4eec\u4ecemultiset distances \u4e2d\u5220\u9664\n    int i;\n    for(i = 1; i &lt; left; i++)\n    {\n        distance = path[right] - path[i];\n        iter = distances.find(distance);\n        if(iter != distances.end())\n        {\n            distances.erase(iter);\n        }\n        else\n        {\n            // \u6062\u590d\u539f\u72b6\uff0c\u5c06\u5df2\u7ecf\u5220\u9664\u7684\u91cd\u65b0\u63d2\u5165\n            for(int j = 1; j &lt; i; j++)\n            {\n                distances.insert(path[right] - path[j]);\n            }\n            Found = false;\n            break;\n        }\n    }\n    if(i == left)\n    {\n        for(i = right + 1; i &lt;= n; i++)\n        {\n            distance = path[i] - path[right];\n            iter = distances.find(distance);\n            if(iter != distances.end())\n            {\n                distances.erase(iter);\n            }\n            else\n            {\n                // \u6062\u590d\u539f\u72b6\uff0c\u5c06\u5df2\u7ecf\u5220\u9664\u7684\u91cd\u65b0\u63d2\u5165\n                for(int j = 1; j &lt; left; j++)\n                {\n                    distances.insert(path[right] - path[j]);\n                }\n                for(int j = right + 1; j &lt; i; j++)\n                {\n                    distances.insert(path[j] - path[right]);\n                }\n                Found = false;\n                break;\n            }\n        }\n        if(i == n + 1)\n        {\n            // \u8fdb\u5165\u4e0b\u4e00\u8f6e\u7684\u9012\u5f52\n            Found = Reconstruct1(path, solutions, distances, n, left, right - 1);\n            if(!Found)\n            {\n                for(int k = 1; k &lt; left; k++)\n                    distances.insert(path[right] - path[k]);\n                for(int k = right + 1; k &lt;= n; k++)\n                    distances.insert(path[k] - path[right]);\n            }\n            else\n                Found = true;\n        }\n    }\n    if(Found == false)\n    {\n        // \u9009\u62e9\u4e8c\uff1apath[n] - path[left] = max_distance\n        // path[left] = path[n] - max_distance\n        path[left] = path[n] - max_distance;\n        // \u5982\u4e0a\u5220\u9664\u65b0\u7684distance\n        for(i = 1; i &lt; left; i++)\n        {\n            iter = distances.find(path[left] - path[i]);\n            if(iter != distances.end())\n            {\n                distances.erase(iter);\n            }\n            else\n            {\n                for(int j = 1; j &lt; i; j++)\n                {\n                    distances.insert(path[left] - path[j]);\n                }\n                Found = false;\n                break;\n            }\n        }\n        if(i == left)\n        {\n            for(i = right + 1; i &lt;= n; i++)\n            {\n                iter = distances.find(path[i] - path[left]);\n                if(iter != distances.end())\n                {\n                    distances.erase(iter);\n                }\n                else\n                {\n                    for(int j = 1; j &lt; left; j++)\n                    {\n                        distances.insert(path[left] - path[j]);\n                    }\n                    for(int j = right + 1; j &lt; i; j++)\n                    {\n                        distances.insert(path[j] - path[left]);\n                    }\n                    Found = false;\n                    break;\n                }\n            }\n            if(i == n + 1)\n            {\n                Found = Reconstruct1(path, solutions, distances, n, left + 1, right);\n                if(!Found)\n                {\n                    for(int k = 1; k &lt; left; k++)\n                        distances.insert(path[left] - path[k]);\n                    for(int k = right + 1; k &lt;= n; k++)\n                        distances.insert(path[k] - path[left]);\n                }\n                else\n                    Found = true;\n            }\n        }\n    }\n\n    return Found;\n}\nbool Reconstruct2(vector&lt;int&gt; &amp;path, vector&lt;vector&lt;int&gt;&gt; &amp;solutions, multiset&lt;int&gt; &amp;distances, int n, int left, int right)\n{\n// path\u662f\u5b58\u653e\u6536\u8d39\u7ad9\u4f4d\u7f6e\u7684\u6570\u7ec4\n    // path[1], path[2],...path[left - 1]\u5df2\u77e5\n    // path[right + 1], ... path[n]\u5df2\u77e5\n\n    bool Found = false;\n    // \u5148\u5224\u65addistances\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5219\u627e\u5230\u6700\u540e\u7684\u7ed3\u679c\n    if(distances.empty())\n    {\n        Found = true;\n        solutions.push_back(path);\n        return Found;\n    }\n    multiset&lt;int&gt;::iterator iter;\n    // \u5148\u627e\u5230\u76ee\u524ddistances\u4e2d\u7684\u6700\u5927\u503c\n    int max_distance = *distances.rbegin();\n    int i;\n    // \u9009\u62e9\u4e8c\uff1apath[n] - path[left] = max_distance\n    // path[left] = path[n] - max_distance\n    path[left] = path[n] - max_distance;\n    // \u5982\u4e0a\u5220\u9664\u65b0\u7684distance\n    for(i = 1; i &lt; left; i++)\n    {\n        iter = distances.find(path[left] - path[i]);\n        if(iter != distances.end())\n        {\n            distances.erase(iter);\n        }\n        else\n        {\n            for(int j = 1; j &lt; i; j++)\n            {\n                distances.insert(path[left] - path[j]);\n            }\n            Found = false;\n            break;\n        }\n    }\n    if(i == left)\n    {\n        for(i = right + 1; i &lt;= n; i++)\n        {\n            iter = distances.find(path[i] - path[left]);\n            if(iter != distances.end())\n            {\n                distances.erase(iter);\n            }\n            else\n            {\n                for(int j = 1; j &lt; left; j++)\n                {\n                    distances.insert(path[left] - path[j]);\n                }\n                for(int j = right + 1; j &lt; i; j++)\n                {\n                    distances.insert(path[j] - path[left]);\n                }\n                Found = false;\n                break;\n            }\n        }\n        if(i == n + 1)\n        {\n            Found = Reconstruct1(path, solutions, distances, n, left + 1, right);\n            if(!Found)\n            {\n                for(int k = 1; k &lt; left; k++)\n                    distances.insert(path[left] - path[k]);\n                for(int k = right + 1; k &lt;= n; k++)\n                    distances.insert(path[k] - path[left]);\n            }\n            else\n                Found = true;\n        }\n    }\n\n    if(Found == false)\n    {\n        // \u9009\u62e9\u4e00\uff1apath[right] = max_distance\n        // \u6b64\u65f6max_distance \u662f \u6536\u8d39\u7ad9 path[0]\u548cpath[right]\u7684\u8ddd\u79bb\n        path[right] = max_distance;\n        int distance;\n        // \u8ba1\u7b97\u5f53\u524dright\u6536\u8d39\u7ad9\u4e0e\u5df2\u77e5\u6536\u8d39\u7ad9\u4e4b\u95f4\u7684\u8ddd\u79bb\n        // \u5c06\u5b83\u4eec\u4ecemultiset distances \u4e2d\u5220\u9664\n        int i;\n        for(i = 1; i &lt; left; i++)\n        {\n            distance = path[right] - path[i];\n            iter = distances.find(distance);\n            if(iter != distances.end())\n            {\n                distances.erase(iter);\n            }\n            else\n            {\n                // \u6062\u590d\u539f\u72b6\uff0c\u5c06\u5df2\u7ecf\u5220\u9664\u7684\u91cd\u65b0\u63d2\u5165\n                for(int j = 1; j &lt; i; j++)\n                {\n                    distances.insert(path[right] - path[j]);\n                }\n                Found = false;\n                break;\n            }\n        }\n        if(i == left)\n        {\n            for(i = right + 1; i &lt;= n; i++)\n            {\n                distance = path[i] - path[right];\n                iter = distances.find(distance);\n                if(iter != distances.end())\n                {\n                    distances.erase(iter);\n                }\n                else\n                {\n                    // \u6062\u590d\u539f\u72b6\uff0c\u5c06\u5df2\u7ecf\u5220\u9664\u7684\u91cd\u65b0\u63d2\u5165\n                    for(int j = 1; j &lt; left; j++)\n                    {\n                        distances.insert(path[right] - path[j]);\n                    }\n                    for(int j = right + 1; j &lt; i; j++)\n                    {\n                        distances.insert(path[j] - path[right]);\n                    }\n                    Found = false;\n                    break;\n                }\n            }\n            if(i == n + 1)\n            {\n                // \u8fdb\u5165\u4e0b\u4e00\u8f6e\u7684\u9012\u5f52\n                Found = Reconstruct1(path, solutions, distances, n, left, right - 1);\n                if(!Found)\n                {\n                    for(int k = 1; k &lt; left; k++)\n                        distances.insert(path[right] - path[k]);\n                    for(int k = right + 1; k &lt;= n; k++)\n                        distances.insert(path[k] - path[right]);\n                }\n                else\n                    Found = true;\n            }\n        }\n        // \u9009\u62e9\u4e8c\uff1apath[n] - path[left] = max_distance\n        // path[left] = path[n] - max_distance\n        path[left] = path[n] - max_distance;\n        // \u5982\u4e0a\u5220\u9664\u65b0\u7684distance\n        for(i = 1; i &lt; left; i++)\n        {\n            iter = distances.find(path[left] - path[i]);\n            if(iter != distances.end())\n            {\n                distances.erase(iter);\n            }\n            else\n            {\n                for(int j = 1; j &lt; i; j++)\n                {\n                    distances.insert(path[left] - path[j]);\n                }\n                Found = false;\n                break;\n            }\n        }\n        if(i == left)\n        {\n            for(i = right + 1; i &lt;= n; i++)\n            {\n                iter = distances.find(path[i] - path[left]);\n                if(iter != distances.end())\n                {\n                    distances.erase(iter);\n                }\n                else\n                {\n                    for(int j = 1; j &lt; left; j++)\n                    {\n                        distances.insert(path[left] - path[j]);\n                    }\n                    for(int j = right + 1; j &lt; i; j++)\n                    {\n                        distances.insert(path[j] - path[left]);\n                    }\n                    Found = false;\n                    break;\n                }\n            }\n            if(i == n + 1)\n            {\n                Found = Reconstruct1(path, solutions, distances, n, left + 1, right);\n                if(!Found)\n                {\n                    for(int k = 1; k &lt; left; k++)\n                        distances.insert(path[left] - path[k]);\n                    for(int k = right + 1; k &lt;= n; k++)\n                        distances.insert(path[k] - path[left]);\n                }\n                else\n                    Found = true;\n            }\n        }\n    }\n\n    return Found;\n}\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n    multiset&lt;int&gt; distances1;\n    multiset&lt;int&gt; distances2;\n    int x;\n    for(int i = 0; i &lt; n; i++)\n    {\n        cin &gt;&gt; x;\n        distances1.insert(x);\n        distances2.insert(x);\n    }\n    // \u5229\u7528distances\u7684\u6570\u91cf\u8ba1\u7b97\u6536\u8d39\u7ad9\u7684\u6570\u91cf\n    int num = Get_num(n);\n    vector&lt;int&gt; path1(num + 1, -1);\n    vector&lt;int&gt; path2(num + 1, -1);\n    vector&lt;vector&lt;int&gt;&gt; solutions;\n    path1[1] = 0;\n    path1[num] = *distances1.rbegin();\n    path2[1] = 0;\n    path2[num] = *distances2.rbegin();\n    distances1.erase(path1[num]);\n    distances2.erase(path2[num]);\n    Reconstruct1(path1, solutions, distances1, num, 2, num - 1);\n    Reconstruct2(path2, solutions, distances2, num, 2, num - 1);\n    for(int i = 0; i &lt; solutions.size(); i++)\n    {\n        for(int j = 1; j &lt;= num; j++)\n        {\n            cout &lt;&lt; solutions[i][j] &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"Total number of solutions : \" &lt;&lt; solutions.size() &lt;&lt; endl;\n\n}\n</code></pre> <p>\u56de\u6eaf\u7b97\u6cd5\u7684\u6a21\u677f</p> <p></p>"},{"location":"ADS/6.%20backtracking/#63-\u4e95\u5b57\u68cb","title":"6.3 \u4e95\u5b57\u68cb","text":"<ul> <li> <p>AI\u4e0b\u68cb\u95ee\u9898:\u9700\u8981\u63a8\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u5e76\u4e14\u9009\u62e9\u5f53\u524d\u80dc\u7387\u6700\u9ad8\u7684\u60c5\u51b5\u5f80\u4e0b\u8d70</p> </li> <li> <p>MinMax Strategy\u95ee\u9898(\u6700\u5927\u6700\u5c0f\u7b56\u7565):</p> </li> <li> <p>goodness\u51fd\u6570\\((f(P)=W_{AI}-W_{Human})\\)\uff0cW\u662f\u5f53\u524d\u60c5\u51b5\u4e0b\u67d0\u4e00\u65b9\u53ef\u80fd\u8d62\u7684\u6240\u6709\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u8003\u8651\u53e6\u4e00\u65b9\u540e\u9762\u4f1a\u600e\u4e48\u4e0b\uff0c\u53ea\u8981\u8ba1\u7b97\u81ea\u5df1\u5728\u5f53\u524d\u5c40\u52bf\u4e0b\u7684\u4efb\u4f55\u53ef\u4ee5\u8d62\u7684\u65b9\u6cd5.</p> </li> <li> <p>The human is trying to minimize the value of the position P, while the computer is trying to maximize it.</p> </li> </ul> <p></p> <p>X\u8868\u793a\u673a\u5668\u4e0b\u7684\u4f4d\u7f6e\uff0c O\u8868\u793a\u4eba\u4e0b\u7684\u4f4d\u7f6e</p> <p>\u6700\u5f00\u59cb\u6a21\u62df\u6700\u521d\u7684\u4e24\u6b65\uff0cAI\u5148\u624b\uff0c\u9009\u62e9\u5bf9\u81ea\u5df1\u6700\u6709\u5229\uff0c\u4e5f\u5c31\u662fmax\u7684\u60c5\u51b5</p> <p>\u673a\u5668\u4f1a\u6700\u5927\u5316\\(f(P)\\),\u6240\u4ee5\u7b2c\u4e00\u8f6e\u673a\u5668\u4f1a\u4e0b\u5728\u4e2d\u5fc3\u70b9</p> <p>\u7b2c\u4e8c\u8f6e\uff0c\u4eba\u4e3a\u4e86\u6700\u5c0f\u5316\\(f(P)\\),\u5c06\u4e0b\u5728\u89d2\u843d</p>"},{"location":"ADS/6.%20backtracking/#64-alpha-beta\u526a\u679d\u641c\u7d22","title":"6.4 \\(\\alpha \\beta\\)\u526a\u679d\u641c\u7d22","text":"<p>AI\u5728max\u5904\u7684\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u8003\u8651\u95ee\u53f7\u5904\u7684value\u3002</p> <p>\u56e0\u4e3a min\u5c42\u4f1a\u9009\u62e9\u5c0f\u4e8e\u7b49\u4e8e\u7684\u6570\u4f5c\u4e3a\u7ed3\u679c\uff0cmax\u5fc5\u7136\u4f1a\u9009\u62e9\u5927\u4e8e\u7b49\u4e8e44\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u6ca1\u5fc5\u8981\u8ba1\u7b97\u95ee\u53f7\u4e86</p> <p></p>"},{"location":"ADS/6.%20backtracking/#65-\u4e60\u9898\u96c6","title":"6.5 \u4e60\u9898\u96c6","text":"<ol> <li> <p>In the 4-queens problem,$ (x1, x2, x3, x4)$ correspond to the 4 queens\u2019 column indices. During backtracking, (1, 3, 4, ?) will be checked before (1, 4, 2, ?), and none of them has any solution in their branches.</p> <p><code>T</code></p> <p>\u9996\u5148\u68c0\u67e51\uff0c3\uff0c4\uff0c\u53d1\u73b0\u4e0d\u6ee1\u8db3\u3002\u7136\u540e\u68c0\u67e51\uff0c4\uff0c\u5f00\u5934\u76841\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\u2026\u3002\u9996\u5148\u4ece\u7b2c\u4e00\u884c\u5f80\u4e0b\u68c0\u67e5\uff0c\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u4e0d\u8fdb\u884c\u4e0b\u4e00\u884c\u7684\u68c0\u67e5\u3002</p> </li> </ol> <ol> <li> <p>In a Turnpike Reconstruction Problem, given distance set \\(D = { 2, 2, 4, 4, 6, 8 }\\),$ x1~x4 = ( 0, 2, 4, 8 )$ is the only solution provided that \\(x1 = 0.\\)     0\uff0c4\uff0c6\uff0c8\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u6309\u7167\u90a3\u4e2a\u7b97\u6cd5\uff1a\u9996\u5148\\(x4=8\\)</p> <p>\u7136\u540e\u627e\u51faD\u6700\u5927\u7684\u4e3a6\uff0c\u5c1d\u8bd5\\(x3=6\\)\uff0c\u53d1\u73b08-6\u5728D\u4e2d\u3002\u5c062\u4eceD\u4e2d\u5220\u9664</p> <p>\u7136\u540e\u627eD\u6700\u5927\u7684\u4e3a4\uff0c\u5c1d\u8bd5\\(x2=4\\)\uff0c\u53d1\u73b08-4=4\uff0c6-4=2\u5728D\u4e2d\uff0c\u5c062,4\u5220\u9664\u3002</p> <p>\u6700\u540eD\u4e3a\u7a7a\uff0c\u8bf4\u660e\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u6709\u4e00\u79cd\u89e3\u6cd5\uff0c\u6839\u636e\u955c\u50cf\u5c31\u5b58\u5728\u7b2c\u4e8c\u79cd\u89e3\u6cd5</p> </li> <li> <p>Given the following game tree, the red node will be pruned with \u03b1-\u03b2 pruning algorithm if and only if __.</p> <p></p> <p>\u526a\u679d\u53d1\u751f\u7684\u60c5\u51b5\uff1a\u5176\u5144\u5f1f\u8282\u70b9\u6bd4\u5b83\u7684\u8282\u70b9\u66f4\u4f18\u3002\u5b83\u7684\u53e6\u5916\u4e00\u4e2a\u5b50\u8282\u70b9\u88ab\u526a\u679d\u3002</p> <p>\u6b64\u65f6\uff0cmin\u9009\u62e9\u4e869\uff0c\u5219\u4e3a\u4e86\u6bd49\u66f4\u4f18\uff0cx\u5fc5\u987b\u5927\u4e8e9\uff0c\u624d\u80fd\u4f7f\u5f97\u4e2d\u95f4\u4e00\u4e2a\u8282\u70b9\u65e0\u8bba\u5982\u4f55\u5927\u4e8e9\uff0c\u5219Max\u4e0d\u4f1a\u9009\u62e9\u6700\u53f3\u8fb9\u8282\u70b9\u3002D</p> </li> <li> <p>In the Tic-tac-toe game, a \"goodness\" function of a position is defined as \\(f(P) = W_{computer} - W_{human}\\)where \\(W\\) is the number of potential wins at position \\(P\\).In the following figure, O represents the computer and X the human. What is the goodness of the position of the figure?</p> <p></p> <ul> <li> <p>A. -1</p> </li> <li> <p>B. 0</p> </li> <li> <p>C. 4</p> </li> <li> <p>D. 5</p> </li> </ul> <p>X\u53ef\u4ee5\u5355\u8d70\u4e00\u6b65\u5c31\u662f\u8d62\uff0cX\u8d70\u4e24\u6b65\u8d62\u7684\u65b9\u6cd5\u6709\u4e24\u79cd</p> <p>O\u8d70\u4e24\u6b65\u8d62\u7684\u65b9\u6cd5\u67093\u79cd</p> <p>3 - 3 = 0</p> </li> <li> <p>Given the following game tree, which node is the first one to be pruned with \u03b1-\u03b2 pruning algorithm?</p> <p></p> <ul> <li> <p>A. a</p> </li> <li> <p>B. b</p> </li> <li> <p><code>C. c</code></p> </li> <li> <p>D. d</p> </li> </ul> <p>\u641c\u7d22\u5230 b \u7b49\u4e8e 86 \u65f6\uff0ca\u5904\u7684\u503c\u4f1a\u5927\u4e8e86\uff0c\u800cmin\u5c42\u4f1a\u9009\u62e9\u5c0f\u4e8e\u7b49\u4e8e68\u7684\u7ed3\u70b9\uff0c\u6240\u4ee5c\u70b9\u4e0d\u9700\u8981\u518d\u68c0\u6d4b\u3002</p> <p>\u5373 \u03b2 \u526a\u679d\u3002</p> <p></p> <p></p> </li> </ol>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/","title":"7. Divide &amp; Conquer","text":"<p> \u7ea6 3636 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 18 \u5206\u949f</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#71-\u6982\u8ff0","title":"7.1 \u6982\u8ff0","text":"<p>\u5957\u7528 Wiki \u4e0a\u7684\u8bf4\u6cd5\uff0c\u5206\u6cbb\u6cd5(Divide-and-conquer algorithm)\u5c5e\u4e8e\u4e00\u79cd\u7b97\u6cd5\u8303\u578b\uff0c\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f<code>\u5c06\u4e00\u4e2a\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u76f8\u540c\u95ee\u9898\uff0c\u7136\u540e\u9012\u5f52\u5730\u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3</code>\uff0c\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u6848\u4f8b\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u3002</p> <p>\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u8bf4\u662f\u5206\u6cbb\u6cd5\u6700\u7ecf\u5178\u7684\u4f53\u73b0\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6709n\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u4e0d\u65ad\u5730\u5c06\u5b83\u4ece\u4e2d\u95f4\u5206\u5f00\u4e3a\u4e24\u4e2a\u5b50\u5e8f\u5217\uff0c\u6700\u7ec8\u5f62\u6210n\u4e2a\u5206\u522b\u53ea\u67091\u4e2a\u5143\u7d20\u7684\u5b50\u5e8f\u5217\u3002\u53ea\u67091\u4e2a\u5143\u7d20\u7684\u5b50\u5e8f\u5217\u81ea\u7136\u662f\u6709\u5e8f\u7684\uff0c\u7136\u540e\u518d\u5c06\u5b83\u4eec\u4e24\u4e24\u5408\u5e76\u8d77\u6765\uff0c\u5e76\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u5c06\u5b50\u5e8f\u5217\u6392\u5e8f\uff0c\u6700\u7ec8\u8fd4\u56de\u7684n\u4e2a\u5143\u7d20\u7684\u5408\u5e76\u5e8f\u5217\u5373\u4e3a\u6709\u5e8f\u3002\u5176\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <pre><code>void merge_sort(vector&lt;T&gt; a, int front, int end) {\n  if (front &gt;= end) return;\n  int mid = front + (end - front) / 2;\n  merge_sort(a, front, mid);\n  merge_sort(a, mid + 1, end);\n  merge(a, front, mid, end);\n}\n</code></pre>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#72-closet-points-problem","title":"7.2 Closet Points Problem","text":"<p>\u4e8c\u7ef4\u6700\u8fd1\u70b9\u95ee\u9898(Closet Points Problem)\uff0c\u6307\u7684\u662f\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684 n \u4e2a\u70b9\uff0c\u627e\u51fa\u5176\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u3002</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#721-\u6734\u7d20\u65b9\u6cd5","title":"7.2.1 \u6734\u7d20\u65b9\u6cd5","text":"<p>\u6700\u6734\u7d20\u7684\u505a\u6cd5\u5f53\u7136\u662f\u679a\u4e3e\u6240\u6709\u7684\u70b9\u5bf9\uff0c\u4e00\u5171\u9700\u8981 \\(C_{N}^{2} = {{N}\\choose{2}} = \\frac{N(N-1)}{2}\\) \u5373\u590d\u6742\u5ea6\u4e3a \\(O(N^2)\\)\u3002</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#722-\u5206\u6cbb\u65b9\u6cd5","title":"7.2.2 \u5206\u6cbb\u65b9\u6cd5","text":"<p>\u73b0\u5728\u6211\u4eec\u7c7b\u6bd4\u6700\u5927\u5b50\u5e8f\u5217\u548c\u95ee\u9898\u7684\u5206\u6cbb\u505a\u6cd5\u3002</p> <p></p> <p>\u6700\u5927\u5b50\u5e8f\u5217\u548c\u7684\u5206\u6cbb\u505a\u6cd5\"</p> <ol> <li> <p>\u5c06\u5e8f\u5217\u5206\u4e3a\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u5206\u522b\u6c42\u89e3\u6700\u5927\u5b50\u5e8f\u5217\u548c\uff1b</p> </li> <li> <p><code>\u6c42\u89e3\u8de8\u8d8a\u4e2d\u70b9\u7684\u6700\u5927\u5b50\u5e8f\u5217\u548c</code>\uff1b</p> </li> <li> <p>\u6bd4\u8f83\u4e09\u8005\u7684\u5927\u5c0f\uff0c\u53d6\u6700\u5927\u503c\uff1b</p> </li> </ol> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u5e73\u9762\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5373\u5982\u56fe\u4e2d\u7eff\u8272\u7ebf\u5c06\u70b9\u5bf9\u5212\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002</p> <p></p> <p>\u4e3a\u89e3\u51b3\u4e8c\u7ef4\u6700\u8fd1\u70b9\u95ee\u9898\uff0c\u6211\u4eec\u540c\u6837\u5206\u4e3a\u8fd9\u4e48\u4e09\u6b65\uff1a</p> <ol> <li>\u5c06\u70b9\u5bf9\u5206\u4e3a\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u5206\u522b\u6c42\u89e3\u6700\u8fd1\u70b9\u5bf9\uff1b</li> <li><code>\u5bfb\u627e\u8de8\u8d8a\u5206\u754c\u7ebf\u7684\u70b9\u5bf9\uff0c\u4ece\u4e2d\u5bfb\u627e\u6700\u8fd1\u70b9\u5bf9</code>\uff1b</li> <li>\u6bd4\u8f83\u4e09\u8005\u7684\u5927\u5c0f\uff0c\u53d6\u6700\u5c0f\u503c\uff1b</li> </ol> <p></p> <ol> <li> <p>\u5148\u8ba1\u7b97\u5de6\u53f3\u4e24\u90e8\u5206\u6700\u8fd1\u70b9\u5bf9\u7684\u8ddd\u79bb\uff0c\u8fdb\u884c\u6bd4\u8f83\u540e\uff0c\u9009\u62e9\u6700\u5c0f\u8ddd\u79bb\u4e2d\u8f83\u5c0f\u7684\u4e3a\\(\\delta\\)</p> </li> <li> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ec5\u9700\u8981\u5bfb\u627e\u8de8\u8d8a\u5206\u754c\u7ebf\u7684\u70b9\u5bf9\u4e2d\u6700\u5c0f\u8ddd\u79bb\u5c0f\u4e8e\\(\\delta\\)\u7684\u90e8\u5206\u3002</p> <ul> <li> <p>\u4e3a\u4e86\u51cf\u5c11\u6b65\u9aa4\u4e8c\u7684\u8ba1\u7b97\u91cf\uff0c\u6211\u4eec\u9700\u8981pass\u6389\u4e00\u4e9b\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\u70b9\u5bf9\u3002\u6b65\u9aa4\u4e8c\u4e2d\u88ab\u62ff\u51fa\u7684\u70b9\uff0c\u4e00\u5b9a\u4e00\u4e2a\u5728\u5206\u754c\u70b9\u5de6\u4fa7\uff0c\u4e00\u4e2a\u5728\u5206\u754c\u70b9\u53f3\u4fa7\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u5206\u754c\u7ebf\\(\\delta\\)\u4ee5\u5916\u7684\u70b9\uff0c\u4e0d\u53ef\u80fd\u5f62\u6210\u6700\u5c0f\u8ddd\u79bb\u5c0f\u4e8e\\(\\delta\\)(<code>\u6c34\u5e73\u8ddd\u79bb\u5c31\u5927\u4e8e\u03b4</code>)\u3002\u6240\u4ee5\u6211\u4eec\u4ec5\u8003\u8651\u8ddd\u79bb\u5206\u754c\u7ebf\\(\\delta\\)\u4ee5\u5185\u7684\u70b9\u3002</p> <p>\u5982\u56fe\uff0c\u73b0\u5728\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u6709\u843d\u5728\u4e24\u6761\u6df1\u7eff\u8272\u4e4b\u95f4\u7684\u70b9\u624d\u53ef\u80fd\u4f1a\u66f4\u65b0\u7b54\u6848\u3002</p> </li> <li> <p>\u521a\u521a\u662f\u5bf9x\u8f74\u4e0a\u7684\u8ddd\u79bb\u8fdb\u884c\u9650\u5236\uff0c\u540c\u7406\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728y\u8f74\u4e0a\u5bf9\u8ddd\u79bb\u8fdb\u884c\u9650\u5236</p> <p>\u5bf9\u4e8e\u9009\u5b9a\u70b9 \\(p_{l_i}\\)\uff0c\u5176\u6240\u6709\u53ef\u80fd\u5bfc\u81f4\u7b54\u6848\u66f4\u65b0\u7684\u70b9\u90fd\u88ab\u6846\u5b9a\u5728\u4e00\u4e2a \\(2\\delta \\times \\delta\\) \u7684\u77e9\u5f62\u4e2d\u3002</p> <p><code>\u4e3a\u4ec0\u4e48y\u65b9\u5411\u4e0a\u9650\u5236\u4ec5\u4ec5\u662f\u03b4\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u4ec5\u8003\u8651\u5f53\u524d\u6240\u5728\u7684\u70b9\uff0c\u4e0e\u4e0a\u9762\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u5207\u6362\u5230\u4e0b\u65b9\u7684\u70b9\u65f6\u5019\uff0c\u4e0d\u4f1a\u4e0e\u4e0a\u65b9\u7684\u70b9\u9020\u6210\u6700\u5c0f\u8ddd\u79bb\u7684\u91cd\u590d\u8ba1\u7b97\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u9632\u6b62\u70b9\u5bf9\u7684\u91cd\u590d</code></p> <p></p> </li> <li> <p>\u5728\u8fd9\u6837\u4e00\u4e2a\u533a\u57df\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u7ea6\u675f\u6240\u6709\u843d\u5728 \\(\\delta \\times \\delta\\) \u7684 L \u533a\u57df\u4e2d\u7684\u70b9\uff0c\u4e92\u76f8\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e\u7b49\u4e8e \\(\\delta\\)\uff0c\u5bf9 R \u533a\u57df\u4e2d\u7684\u70b9\u4e5f\u6709\u76f8\u540c\u7684\u7ea6\u675f\u3002</p> <p><code>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u5728\u5de6\u4fa7\u9009\u4e2d\u4e00\u4e2a\u70b9\uff08\u4e0d\u5728\u8fb9\u754c\uff09\u540e\uff0c\u5728 \u03b4 x \u03b4 \u7684 L \u533a\u57df\u4e2d\uff0c\u5de6\u4fa7\u8303\u56f4\u5185\u4e0d\u4f1a\u51fa\u73b0\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5de6\u8fb9\u70b9\u5bf9\u7684\u6700\u5c0f\u8ddd\u79bb\u5c31\u662f\u03b4</code></p> <p><code>\u5bf9\u4e8e\u5728\u8fb9\u754c\u4e0a\u7684\u70b9\uff0c\u663e\u7136\u4f4d\u4e8e\u56db\u4e2a\u89d2\u7684\u60c5\u51b5\uff0c\u9700\u8981\u8ba1\u7b97\u7684\u6b21\u6570\u6700\u591a\uff0c\u5bf9\u5e94worse case\uff0c\u6700\u6b63\u5e38\u7684case \u5c31\u662f\u5de6\u53f3\u5404\u4e00\u4e2a\u70b9</code></p> <p>worse case \u5bf9\u5e94\u5728\u6700\u7406\u60f3\u6700\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\u2014\u2014\u95ed\u533a\u95f4\u3001\u5141\u8bb8\u70b9\u91cd\u5408\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u77e9\u5f62\u6700\u591a\u4e5f\u53ea\u80fd\u653e\u516b\u4e2a\u70b9\uff08\u4e24\u8fb9\u5404\u56db\u4e2a)\uff1a\u672c\u8d28\u4e0a\u662f\u516d\u4e2a\u70b9\uff08\u53bb\u91cd\uff09</p> <p></p> </li> <li> <p>\u4e8e\u662f\u6211\u4eec\u80fd\u591f\u5f97\u5230\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9009\u5b9a\u7684 \\(p_{l_i}\\)\uff0c\u5bfb\u627e\u5176\u53ef\u80fd\u5bfc\u81f4\u7b54\u6848\u66f4\u65b0\u7684\u70b9\u7684\u590d\u6742\u5ea6\u90fd\u662f\u5e38\u6570\u7ea7\u7684\u3002</p> <p>\u800c\u679a\u4e3e\u8fd9\u4e9b\u201c\u9009\u5b9a\u70b9\u201d\uff0c\u4e5f\u5c31\u662f\u679a\u4e3e \\(p_{l_i}\\)\uff0c\u5176\u590d\u6742\u5ea6\uff08\u6491\u6b7b\uff09\u662f \\(O(N)\\)\u3002</p> </li> </ul> <p>\u4e8e\u662f\u6211\u4eec\u80fd\u5f97\u5230\u8fd9\u4e2a\u5206\u6cbb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u9012\u63a8\u516c\u5f0f\uff1a</p> </li> </ol> \\[ T(N) = \\underbrace{2\\; T(\\frac{N}{2})}_{\\text{Step 1. divide}} + \\underbrace{O(N)}_{\\text{Step 2. across}} = O(N\\log N) \\] <p></p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#73-\u590d\u6742\u5ea6\u5206\u6790","title":"7.3 \u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u5728\u5f00\u59cb\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u66f4\u4e00\u822c\u7684\uff0c\u6211\u4eec\u60f3\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5373\u6c42\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u9012\u63a8\u516c\u5f0f\u5f62\u5982\u4e0b\u5f0f\u7684\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> \\[ T(N) = aT(\\frac{N}{b}) + f(N) \\;\\;\\;\\; a,b \\in Z^+ \\] <p>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u6700\u8fd1\u70b9\u5bf9\u95ee\u9898\uff0c\u5c31\u662f \\(a = 2,\\; b = 2,\\; f(N) = O(N)\\) \u7684\u60c5\u51b5\u3002</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#731-\u4ee3\u6362\u6cd5","title":"7.3.1 \u4ee3\u6362\u6cd5","text":"<p>\u4ee3\u6362\u6cd5(substitution method)\u7684\u601d\u8def\u975e\u5e38\u76f4\u767d\uff0c\u9996\u5148\u6211\u4eec\u901a\u8fc7\u67d0\u4e9b\u624b\u6bb5\uff08\u6bd4\u5982\u5927\u773c\u89c2\u5bdf\u6cd5\ud83d\udc40\uff09\u6765\u5f97\u5230\u4e00\u4e2a\u9884\u8bbe\u7684\u7ed3\u679c\uff0c\u63a5\u4e0b\u6765\u901a\u8fc7\u4ee3\u5165\u3001\u5f52\u7eb3\u7684\u65b9\u6cd5\u6765\u8bc1\u660e\u8fd9\u4e2a\u7ed3\u679c\u3002</p> <p>\u6c42\u89e3\u590d\u6742\u5ea6\uff1a $$ T(N) = 2\\; T(\\frac{N}{2}) + N $$ guess\uff1a $$ T(N) = O(N\\log N) $$</p> <p>\u4ee3\u5165\uff1a</p> <ul> <li>\u5229\u7528\\(T(N) = O(NlogN)\\)\uff0c\u5bf9\u4e8e\u8db3\u591f\u5c0f\u7684 \\(m &lt; N\\)\uff0c\u6709\uff1a</li> </ul> \\[ T(\\frac{m}{2}) = O(\\frac{m}{2}\\log \\frac{m}{2}) \\leq c \\frac{m}{2}\\log \\frac{m}{2} \\] <ul> <li>\u5c06\u4e0a\u5f0f\u4ee3\u5165\uff1a</li> </ul> \\[ T(m) = 2\\; T(\\frac{m}{2}) + m \\] <ul> <li>\u5f97\uff1a</li> </ul> \\[ T(m) \\leq 2\\; c \\frac{m}{2}\\log \\frac{m}{2} + m =  cm(logm - log 2) + m \\leq c m \\log m \\ \\ \\ \\ \\ \\text{ for } c \\geq 1 \\] <p>\u5bf9\u4e8e\u8db3\u591f\u5c0f\u7684 \\(m = 2\\) \u5f0f\u5b50\u5c31\u53ef\u4ee5\u6210\u7acb\uff0c\u7531\u5f52\u7eb3\u6cd5\u5f97\u7ed3\u8bba\u6210\u7acb\u3002</p> \\[ \\begin{aligned} &amp;\u5047\u5982\u6211\u4eec\u5047\u8bbe\u9519\u8bef\uff0c\u8ba4\u4e3aT(N) = O(N)\\\\ &amp;\u5bf9\u4e8e\u8db3\u591f\u5c0f\u7684m&lt;N,\u6709T(\\dfrac{m}{2}) &lt;= c\\dfrac{m}{2}\\\\ &amp;T(m) = 2T(\\dfrac{m}{2})+ m = cm + m = O(m) ?????\\\\ &amp;\u611f\u89c9\u5f88\u5bf9\u52b2\uff0c\u8bf4\u4e0d\u4e0a\u54ea\u91cc\u6709\u9519\u8bef\\\\ &amp;\u5047\u8bbe\u6211\u4eec\u7ee7\u7eed\u8ba1\u7b97\\\\ &amp;T(m) = 2T(\\dfrac{m}{2})+ m \\\\ &amp;= 2(2T(\\dfrac{m}{4}) + \\frac{m}{2}) + m = 4T(\\dfrac{m}{4})+2m\\\\ &amp;= 4(2T(\\dfrac{m}{8})+\\dfrac{m}{4})+2m = 8T(\\frac{m}{8})+3m\\\\ &amp;= .....\\\\ &amp;= 2^kT(\\frac{m}{2^k})+km\\\\ &amp;= cm + mlog_2m = m(c+log_2m)\\\\ &amp; \u53d1\u73b0\u4e0d\u518d\u662fO(N) \\end{aligned} \\]"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#732-\u9012\u5f52\u6811\u6cd5","title":"7.3.2 \u9012\u5f52\u6811\u6cd5","text":"<p>\u9012\u5f52\u6811\u6cd5(recursion-tree method)\u7684\u601d\u8def\u662f\uff0c\u6211\u4eec\u901a\u8fc7\u753b\u51fa\u9012\u5f52\u6811\u6765\u5206\u6790\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c $$ a^{\\log_b N} = \\exp^{\\frac{\\ln N}{\\ln b} \\ln a} = \\exp^{\\frac{\\ln a}{\\ln b} \\ln N} = N^{\\log_b a} $$ \u5bf9\u4e8e\u4e00\u4e2a\u9012\u63a8\u5f0f\uff0c\u6211\u4eec\u5c06\u5b83\u4e0d\u65ad\u5c55\u5f00\u4ee5\u540e\uff0c\u5176\u5f62\u5f0f\u5927\u6982\u4f1a\u662f\u8fd9\u6837\uff1a</p> \\[ T(N) = ... =  \\underbrace{\\sum_{leaf_i}^{leaves}T(N_{leaf_i})}_{conquer} +  \\underbrace{\\sum_{node_i}^{non-leaf-nodes}f(N_{node_i})}_{combine} \\] <p>\u5176\u4e2d\uff0c\u7531\u4e8e\u672b\u7aef\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u4e00\u822c\u90fd\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u8ba4\u4e3a \\(T(N_{leaf_i})\\) \u90fd\u662f\u5e38\u6570\uff0c\u4e8e\u662f\u4e0a\u5f0f\u53c8\u53ef\u4ee5\u53d8\u5316\u4e3a\uff1a</p> \\[ T(N) = ... =  \\underbrace{c\\; N_{leaves}}_{conquer} +  \\underbrace{\\sum_{node_i}^{non-leaf-nodes}f(N_{node_i})}_{combine} \\] <p>\u5177\u4f53\u6765\u8bf4\u89e3\u91ca\u5176\u542b\u4e49\uff0ccombine \u90e8\u5206\u5c31\u662f\u5728\u6bcf\u4e00\u6b21\u201c\u5206\u6cbb\u201d\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5982\u5408\u5e76\u5f53\u524d\u7684\u5b50\u95ee\u9898\u5206\u6cbb\u540e\u7684\u7ed3\u679c\uff0c\u4f53\u73b0\u5728\u9012\u63a8\u5f0f\u7684 \\(f(N)\\) \u90e8\u5206\uff1b\u800c conquer \u90e8\u5206\u6307\u7684\u662f\u5f53\u201c\u5206\u6cbb\u201d\u7684\u201c\u6cbb\u201d\u5728\u201c\u5206\u201d\u7684\u672b\u7aef\u7684\u4f53\u73b0\uff0c\u5373\u5bf9\u4e8e\u8db3\u591f\u5c0f\u7684\u89c4\u6a21\u7684\u95ee\u9898\uff0c\u4e0d\u518d\u9700\u8981\u7ee7\u7eed\u201c\u5206\u201d\u7684\u65f6\u5019\uff0c\u5bf9\u5176\u5904\u7406\u7684\u5f00\u9500\u3002</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u60c5\u51b5\u4e0b \\(a = 3,\\; b = 4,\\; f(N) = \\Theta(N^2)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u5206\u4e3a \\(3\\) \u4e2a\u5b50\u95ee\u9898\uff0c\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u662f \\(\\frac{N}{4}\\)\uff0c\u800c\u5408\u5e76\u5f00\u9500\u4e3a \\(\\Theta(N^2)\\)\u3002</p> <p>\u6b64\u65f6\u7531\u4e8e\u5206\u6cbb\u7684\u7b56\u7565\u662f\u76f8\u5bf9\u5747\u5300\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u5f97\u5230\u7684\u662f\u4e00\u4e2a<code>\u5b8c\u7f8e\u4e09\u53c9\u6811(full binary tree)</code>\u3002</p> <p>\u663e\u7136\uff0c\u6811\u9ad8\u4e3a \\(\\log_4 N\\)\uff0c\u6839\u8bb0\u4e3a \\(0\\)\uff0c\u6bcf\u4e2a\u5206\u6cbb\u8282\u70b9\u7684 <code>combine \u5f00\u9500</code>\u5df2\u7ecf\u6807\u6ce8\u5728\u56fe\u7684\u8282\u70b9\u4f4d\u7f6e\uff0c<code>\u6a2a\u5411\u7bad\u5934\u6807\u8bb0\u7684\u662f\u5bf9\u8be5\u5c42\u6240\u6709\u8282\u70b9\u7684\u5f00\u9500\u7684\u6c42\u548c</code>\u3002</p> <p>\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u7b2c0\u5c42\u5bf9\u5e94\u7684\u7ed3\u70b9\u6570\u662f1\uff0c\u7b2c1\u5c42\u5bf9\u5e94\u7684\u7ed3\u70b9\u65703\uff0c\u7b2c2\u5c42\u5bf9\u5e94\u7684\u7ed3\u70b9\u6570\u4e3a\\(3^2 = 9\\),\u4f9d\u6b21\u7c7b\u63a8\uff0c\u7b2ci\u5c42\u7684\u7ed3\u70b9\u6570\\(3^i\\)</p> <p>\u7b2c0\u5c42\u7684\u7ed3\u70b9\u5408\u5e76\u5f00\u9500\u4e3a\\(cN^2\\), \u7b2c1\u5c42\u7684\u7ed3\u70b9\u5408\u5e76\u5f00\u9500\u4e3a\\(c(\\dfrac{N}{4})^2\\),\u4f9d\u6b21\u7c7b\u63a8\u7b2ci\u5c42\u7684\u5408\u5e76\u5f00\u9500\u4e3a\\(c(\\dfrac{N}{4^i})^2\\)</p> <p>\u5c06\u6240\u6709\u7684\u5408\u5e76\u5f00\u9500\u548c\u6700\u540e\u4e00\u5c42\u7684\u5e38\u6570\u5f00\u9500\u8ba1\u7b97\u5728\u4e00\u8d77</p> \\[ \\begin{aligned} T(N) &amp; = \\sum_{i=0}^{log_4N-1}3^i \\times c(\\dfrac{N}{4^i})^2 + 3^{log_4N}T(1)\\\\ &amp; = \\sum_{i=0}^{log_4N-1} (\\dfrac{3}{16})^i cN^2 + N^{log_43} \\times T(1)\\\\ &lt; &amp; = \\dfrac{1}{1-\\frac{3}{16}}cN^2 +  O(N^{log_4 3}) = O(N^2) \\end{aligned} \\]"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#733-\u4e3b\u65b9\u6cd5","title":"7.3.3 \u4e3b\u65b9\u6cd5","text":"<p>\u4e3b\u65b9\u6cd5(master method)\u4e4b\u6240\u4ee5\u53eb\u201c\u4e3b\u201d\uff0c\u662f\u56e0\u4e3a\u5b83\u5206\u6790\u7684\u662f combine \u548c conquer \u90e8\u5206\u5b70\u4e3a\u4e3b\u5bfc\u3002</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#\u5f62\u5f0f\u4e00","title":"\u5f62\u5f0f\u4e00","text":"<p>definition \"Form 1\"</p> <p>\u200b    \u5bf9\u4e8e\u5f62\u5982 \\(T(N)=aT(N/b)+f(N)\\) \u7684\u9012\u63a8\u5f0f\uff0c\u5176\u4e2d\\(a&gt;=1, b&gt;1\\)\uff1a</p> <ol> <li>\u82e5 \\(f(N)=O(N^{(\\log_b{a})-\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(N^{\\log_b{a}})\\)\uff1b</li> <li>\u82e5 \\(f(N)=\\Theta(N^{\\log_b{a}})\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(N^{\\log_b{a}}\\log{N})\\)\uff1b</li> <li>\u82e5 \\(f(N)=\\Omega(N^{(\\log_b{a})+\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\) \u4e14 \\(af(\\frac{N}{b})&lt;cf(N), \\text{ for } c&lt;1 \\text{ and } \\forall N &gt; N_0\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(f(N))\\)\uff1b</li> </ol> <p>\u60c5\u51b5\u4e09\u7684\u540e\u9762\u90a3\u4e2a\u6761\u4ef6\u53c8\u53eb regularity condition\u3002</p> <p>\u56de\u987e\u6211\u4eec\u5728\u524d\u9762\u8bf4\u7684\u90a3\u53e5\u8bdd\uff0c\u4e3b\u65b9\u6cd5(master method)\u4e4b\u6240\u4ee5\u53eb\u201c\u4e3b\u201d\uff0c<code>\u662f\u56e0\u4e3a\u5b83\u5206\u6790\u7684\u662f combine \u548c conquer \u90e8\u5206\u5b70\u4e3a\u4e3b\u5bfc</code>\uff0c\u89c2\u5bdf\u4e09\u79cd\u60c5\u51b5\u7684\u533a\u5206\u6761\u4ef6\u90fd\u662f\u6bd4\u8f83 \\(f(N)\\)\uff08\u6bcf\u4e00\u6b21\u7684 combine \u5f00\u9500\uff09 \u548c \\(N^{\\log_b{a}}\\)\uff08\u5373\u6c42\u548c\u5f0f\u4e2d\u7684 conquer \u7684\u5f00\u9500\uff09.</p> <p><code>\u4e3a\u4ec0\u4e48\u8981\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5462\uff1f\u4e14\u770b\u9012\u63a8\u6811\u5f97\u5230\u7684\u7ed3\u8bba\uff0c\u5206\u4e3a\u6240\u6709\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u5e38\u6570\u5f00\u9500\u548c\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u5408\u5e76\u5f00\u9500\uff0c\u5206\u522b\u5bf9\u5e94 cf(N) \u548c N^{log_b a}\uff0c\u89c2\u5bdf\u6bd4\u8f83\u5f97\u51fa\u54ea\u4e00\u4e2a\u5360\u4e3b\u5bfc</code></p> <p>\u5f53 \\(f(N)\\) \u8db3\u591f\u5c0f\u65f6\uff0c\u4ee5 conquer \u5f00\u9500\u4e3a\u4e3b\uff08i.e. case 1\uff09\uff1b\u5f53\u8db3\u591f\u5927\u65f6\uff0c\u4ee5 combine \u4e3a\u4e3b\uff08i.e. case 3\uff09\uff1b\u800c\u5176\u4e2d\u8fd8\u6709\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\uff08i.e. case 2\uff09\u3002</p> <ul> <li>\u3010eg1\u3011\\(a = b = 2,\\; f(N) = N\\)<ul> <li>\\(f(N) = N = \\Theta(N^{\\log_2{2}})\\)\uff0c\u9002\u7528\u4e8e\u60c5\u51b5 2</li> <li>\u56e0\u6b64\u5f97\u5230\u7ed3\u679c \\(T(N) = \\Theta(N \\log N)\\)</li> </ul> </li> <li>\u3010eg2\u3011\\(a = b = 2,\\; f(N) = N \\log N\\)<ul> <li>\\(f(N) = N \\log N\\)\uff0c\u867d\u7136 \\(N \\log N = \\Omega(N^{\\log_2{2}})\\)\uff0c\u4f46\u662f \\(N \\log N \\neq \\Omega(N^{(\\log_2{2}) + \\varepsilon})\\)\uff0c\u6240\u4ee5\u4e0d\u9002\u7528\u4e8e\u60c5\u51b5 3\uff1b</li> <li><code>\u867d\u7136\u4f60\u7684f(N)\u6bd4N^{log_b a}\u8981\u5927\uff0c\u4f46\u662f\u8fbe\u4e0d\u5230 $N \\log N \\neq \\Omega(N^{(\\log_2{2}) + \\varepsilon})$\u3002\u6240\u4ee5\u4e0d\u6ee1\u8db3\u6761\u4ef6</code></li> <li>\u5177\u4f53\u6765\u8bf4\uff0c\\(\\lim \\limits_{N\\to \\infty} \\frac{N \\log N}{N^{1+\\varepsilon}}=\\lim \\limits_{N\\to \\infty} \\frac{\\log N}{N^{\\varepsilon}} = 0 \\text{ for fixed } \\varepsilon &gt; 0\\)\uff1b         \u51fa\u4e86 \\(\\varepsilon\\) \u7684\u4e00\u5b9a\u4f5c\u7528\uff1b</li> </ul> </li> </ul>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#\u8bc1\u660e","title":"\u8bc1\u660e","text":"<p>proof \"proof for form 1\"</p> <p>\u5bf9\u4e8e\u5f62\u5982 \\(T(N)=aT(N/b)+f(N)\\) \u7684\u9012\u63a8\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u4f9d\u6b21\u8bc1\u660e\uff0c\u6b64\u5904\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u6811\u6cd5\u8fdb\u884c\u8bc1\u660e\u3002</p> <p></p> <p>section \"\u60c5\u51b5\u4e00\"</p> <p>\ud83c\udfaf \u76ee\u6807\uff1a\u82e5 \\(f(N)=O(N^{(\\log_b{a})-\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(N^{\\log_b{a}})\\)\uff1b</p> <p>\ud83e\udea7 \u8bc1\u660e\uff1a\u6211\u4eec\u9996\u5148\u9700\u8981\u7ed8\u5236\u51fa\u5bf9\u5e94\u7684\u9012\u5f52\u6811\uff0c\u6216\u8005\u641e\u6e05\u695a\u5c55\u5f00\u540e\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u61d2\u5f97\u753b\u56fe\u6240\u4ee5\u6211\u8fd9\u91cc\u91c7\u7528\u6587\u5b57\u53d9\u8ff0\u3002</p> <p>\u6811\u9ad8 \\(\\log_b{N}\\)\uff0c\u5171 \\(\\log_b{N} + 1\\) \u5c42\uff0c\u5219\u6709\uff1a</p> <ul> <li>\u7b2c \\(0\\) \u5c42\uff08\u6839\uff09\u4e00\u5171 \\(1\\) \u9879\uff0ccombine \u7684\u5f00\u9500\u4e3a \\(f(N)\\)\uff1b</li> <li>\u7b2c \\(1\\) \u5c42\u4e00\u5171 \\(a\\) \u9879\uff0ccombine \u7684\u5f00\u9500\u4e3a \\(a\\times f(\\frac{N}{b})\\)\uff1b</li> <li>\u7b2c \\(2\\) \u5c42\u4e00\u5171 \\(a^2\\) \u9879\uff0ccombine \u7684\u5f00\u9500\u4e3a \\(a^2 \\times f(\\frac{N}{b^2})\\)\uff1b</li> <li>......</li> <li>\u7b2c \\(j\\) \u5c42\u4e00\u5171 \\(a^j\\) \u9879\uff0ccombine \u7684\u5f00\u9500\u4e3a \\(a^j \\times f(\\frac{N}{b^j})\\)\uff1b</li> <li>......</li> <li>\u7b2c \\((\\log_b{N}) - 1\\) \u5c42\u4e00\u5171 \\(a^{(\\log_b{N}) - 1}\\) \u9879\uff0ccombine \u7684\u5f00\u9500\u4e3a \\(a^{(\\log_b{N}) - 1} \\times f(\\frac{N}{b^{(\\log_b{N}) - 1}})\\)\uff1b</li> <li>\u7b2c \\(\\log_b{N}\\) \u5c42\uff0c\u5373\u4e3a\u53f6\u5b50\u5c42\uff0c\u4e00\u5171 \\(a^{\\log_b{N}} = N^{\\log_b{a}}\\) \u9879\uff0cconquer \u7684\u5f00\u9500\u4e3a \\(N^{\\log_b{a}} \\times \\Theta(1) = \\Theta(N^{\\log_b{a}})\\)\uff1b</li> </ul> <p>\u5f97\u5230\u6c42\u548c\u5f0f\uff1a</p> \\[ T(N) = \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) \\] <p>\u800c\u6211\u4eec\u6709\u6761\u4ef6 \\(f(N)=O(N^{(\\log_b{a})-\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\)\uff0c\u5c06\u5b83\u4ee3\u5165\u5230\u4e0a\u5f0f\u4e2d\u5f97\u5230\uff1a</p> \\[ \\begin{aligned} T(N)  &amp;= \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j O\\left(\\left(\\frac{N}{b^j}\\right)^{(\\log_b{a})-\\varepsilon}\\right)\\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{(\\log_b{a}) - \\varepsilon}     \\times     \\sum_{j = 0}^{(\\log_b{N})-1} \\left(\\frac{a}{b^{(\\log_b{a})-\\varepsilon}}\\right)^j \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{(\\log_b{a}) - \\varepsilon}     \\times     \\sum_{j = 0}^{(\\log_b{N})-1} (b^{\\varepsilon})^j \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{(\\log_b{a}) - \\varepsilon}     \\times     \\frac{1\\times(1-(b^\\varepsilon)^{\\log_b{N}})}{1-b^\\varepsilon} \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{(\\log_b{a}) - \\varepsilon}     \\times     \\frac{N^\\varepsilon-1}{b^\\varepsilon-1} \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{(\\log_b{a}) - \\varepsilon}     \\times     N^\\varepsilon \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + O\\left(     N^{\\log_b{a}} \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) \\end{aligned} \\] <p>\u81f3\u6b64\uff0c\u60c5\u51b5\u4e00\u8bc1\u660e\u5b8c\u6bd5\u3002</p> <p>section \"\u60c5\u51b5\u4e8c\"</p> <p>\ud83c\udfaf \u76ee\u6807\uff1a\u82e5 \\(f(N)=\\Theta(N^{\\log_b{a}})\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(N^{\\log_b{a}}\\log{N})\\)\uff1b</p> <p>\ud83e\udea7 \u8bc1\u660e\uff1a\u524d\u9762\u7684\u90e8\u5206\u548c\u60c5\u51b5\u4e00\u7684\u7c7b\u4f3c\uff0c\u6211\u4eec\u901a\u8fc7\u76f8\u540c\u7684\u6b65\u9aa4\u5f97\u5230\u76f8\u540c\u7684\u6c42\u548c\u5f0f\uff1a</p> \\[ T(N) = \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) \\] <p>\u800c\u6211\u4eec\u6709\u6761\u4ef6 \\(f(N)=\\Theta(N^{\\log_b{a}})\\)\uff0c\u5c06\u5b83\u4ee3\u5165\u5230\u4e0a\u5f0f\u4e2d\u5f97\u5230\uff1a</p> \\[ \\begin{aligned} T(N) &amp;= \\Theta(N^{\\log_b{a}}) + \\sum_{j=0}^{(\\log_b{N})-1}a^j\\Theta\\left(\\left(\\frac{N}{b^j}\\right)^{\\log_b{a}}\\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + \\Theta\\left(     N^{\\log_b{a}} \\times     \\sum_{j=0}^{(\\log_b{N})-1}\\left(\\frac{a}{b^{\\log_b{a}}}\\right)^j \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}) + \\Theta\\left(     N^{\\log_b{a}} \\times     \\log_b{N} \\right) \\\\ &amp;= \\Theta(N^{\\log_b{a}}\\log{N}) \\end{aligned} \\] <p>\u81f3\u6b64\uff0c\u60c5\u51b5\u4e8c\u8bc1\u660e\u5b8c\u6bd5\u3002</p> <p>section \"\u60c5\u51b5\u4e09\"</p> <p>\ud83c\udfaf \u76ee\u6807\uff1a\u82e5 \\(f(N)=\\Omega(N^{(\\log_b{a})+\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\) \u4e14 \\(af(\\frac{N}{b})&lt;cf(N), \\text{ for } c&lt;1 \\text{ and } \\forall N &gt; N_0\\)\uff0c\u90a3\u4e48 \\(T(N)=\\Theta(f(N))\\)\uff1b</p> <p>\ud83e\udea7 \u8bc1\u660e\uff1a\u60c5\u51b5\u4e09\u7684\u8bc1\u660e\uff0c\u4ece\u6761\u4ef6\u7684\u53d8\u5316\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u548c\u524d\u9762\u7a0d\u8bb8\u6709\u4e9b\u4e0d\u540c\u4e86\u3002\u4e0d\u8fc7\u6c42\u548c\u5f0f\u7684\u5f97\u5230\u8fd8\u662f\u4e00\u6837\uff0c\u901a\u8fc7\u548c\u4e4b\u524d\u4e00\u6837\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u5f97\u5230\u6c42\u548c\u5f0f\uff1a</p> \\[ T(N) = \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) \\] <p>\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u548c\u4e4b\u524d\u4e0d\u540c\u3002\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u89c2\u5bdf\u4e0d\u7b49\u5f0f \\(af(\\frac{N}{b})&lt;cf(N)\\)\uff0c\u5728\u6211\u4eec\u7684\u6c42\u548c\u5f0f\u4e2d\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u6211\u4eec\u6709\u5927\u91cf\u7684\u5f62\u5982 \\(a^jf(\\frac{N}{b^j})\\) \u7684\u9879\uff0c\u800c\u8fd9\u4e9b\u9879\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u4e0a\u9762\u90a3\u4e2a\u4e0d\u7b49\u5f0f\u6765\u5b9e\u73b0\uff0c\u5373\uff1a</p> \\[ a^jf(\\frac{N}{b^j}) &lt; c\\times a^{j-1}f(\\frac{N}{b^{j-1}}) &lt; ... &lt; c^j f(N) \\] <p>\u5c06\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5e94\u7528\u4e8e\u6c42\u548c\u5f0f\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\uff1a</p> \\[ \\begin{aligned}     T(N)      &amp;&lt; \\Theta(N^{\\log_b{a}}) + \\sum_{j=0}^{(\\log_b{N})-1}c^j f(N) \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + f(N) \\sum_{j=0}^{(\\log_b{N})-1}c^j \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + f(N) \\times \\frac{{1-c^{\\log_b{N}}}}{1-c} \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + f(N) \\times \\frac{1-N^{\\log_b{c}}}{1-c} \\end{aligned} \\] <p>\u800c\u7531\u4e8e \\(c&lt;1\\)\uff0c\u6240\u4ee5 \\(\\log_b{c} &lt; 0\\)\uff1b\u800c \\(N &gt; 0\\)\uff0c\u800c\u4e14\u4e00\u822c\u975e\u5e38\u5927\uff0c\u6240\u4ee5 \\(N^{\\log_b{c}} \\in (0,1)\\)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u786e\u5b9a\u7684\u5e38\u6570 \\(c\\)\uff0c\u6211\u4eec\u6709 \\(\\frac{1-N^{\\log_b{c}}}{1-c} \\in \\left(0, \\frac{1}{1-c}\\right)\\)\uff1b</p> <p>\u56e0\u6b64\uff0c\u4e0a\u5f0f\u4fbf\u80fd\u6539\u53d8\u4e3a\uff1a</p> \\[ \\begin{aligned}     T(N)      &amp;&lt; \\Theta(N^{\\log_b{a}}) + f(N) \\times \\frac{1-N^{\\log_b{c}}}{1-c} \\\\     &amp;&lt; \\Theta(N^{\\log_b{a}}) + f(N) \\times \\frac{1}{1-c} \\end{aligned} \\] <p>\u5e76\u4e14\uff0c\u7531\u4e8e \\(f(N)=\\Omega(N^{(\\log_b{a})+\\varepsilon}), \\text{ for }\\varepsilon&gt;0\\)\uff0c\u6240\u4ee5\u6839\u636e\u7b26\u53f7\u5b9a\u4e49\u53ef\u4ee5\u5f97\u5230 \\(T(N) = O(f(N))\\)\u3002</p> <p>\u800c\u6211\u4eec\u77e5\u9053\uff0c\u8981\u8bc1\u660e \\(T(N) = \\Theta(f(N))\\) \u8fd8\u9700\u8981\u8bc1\u660e \\(T(N) = \\Omega(f(N))\\)\uff1a</p> \\[ \\begin{aligned} T(N) &amp;= \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) &amp;\\geq \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) &amp;\\geq f(N) \\end{aligned} \\] <p>\u7531\u6b64\u5f97\u5230 \\(T(N) = \\Omega(f(N))\\)\uff0c\u6700\u7ec8\u8bc1\u5f97 \\(T(N) = \\Theta(f(N))\\)\uff0c\u81f3\u6b64\uff0c\u60c5\u51b5\u4e09\u8bc1\u660e\u5b8c\u6bd5\u3002</p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#\u5f62\u5f0f\u4e8c","title":"\u5f62\u5f0f\u4e8c","text":"<p>definition \"Form 2\"</p> <p>\u5bf9\u4e8e\u5f62\u5982 \\(T(N) = aT(\\frac{N}{b}) + f(N)\\) \u7684\u9012\u63a8\u5f0f\uff1a</p> <ol> <li>\u82e5 \\(af(\\frac{N}{b}) = \\kappa f(N) \\text{ for fixed } \\kappa &lt; 1\\)\uff0c\u90a3\u4e48 \\(T(N) = \\Theta(f(N))\\)\uff1b</li> <li>\u82e5 \\(af(\\frac{N}{b}) = \\Kappa f(N) \\text{ for fixed } \\Kappa &gt; 1\\)\uff0c\u90a3\u4e48 \\(T(N) = \\Theta(N^{\\log_b{a}}) = \\Theta(a^{\\log_b{N}})\\)\uff08\u4e2a\u4eba\u611f\u89c9\u540e\u9762\u90a3\u4e2a\u5f0f\u5b50\u66f4\u65b9\u4fbf\u76f4\u89c2\u8bb0\u5fc6\uff09\uff1b</li> <li>\u82e5 \\(af(\\frac{N}{b}) = f(N)\\)\uff0c\u90a3\u4e48 \\(T(N) = \\Theta(f(N) \\log_b N)\\)\uff1b</li> </ol>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#\u8bc1\u660e_1","title":"\u8bc1\u660e","text":"<p>proof \"proof for form 2\"</p> <p>\u200b    \u5bf9\u4e8e\u5f62\u5982 \\(T(N)=aT(N/b)+f(N)\\) \u7684\u9012\u63a8\u5f0f\uff0c\u57fa\u4e8e\u7ebf\u6027\u5173\u7cfb\u7684\u5f62\u5f0f\u4e8c\u7684\u8bc1\u660e\u5b9e\u9645\u4e0a\u548c\u5f62\u5f0f\u4e00\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u8bc1\u660e\u975e\u5e38\u76f8\u50cf\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6709 \\(af(\\frac{N}{b}) = c f(N)\\)\uff0c\u53ea\u9700\u8981\u8ba8\u8bba \\(c\\) \u7684\u53d6\u503c\u8303\u56f4\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u7c7b\u4f3c\u4e8e\u5f62\u5f0f\u4e00\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u8fed\u4ee3\u8be5\u5173\u7cfb\u5f0f\uff0c\u5f97\u5230\u5173\u7cfb\uff1a</p> \\[ a^j f(\\frac{N}{b^j}) = c^j f(N) \\] <p>\u4e8e\u662f\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ \\begin{aligned}     T(N)     &amp;= \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} a^j f(\\frac{N}{b^j}) \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + \\sum_{j = 0}^{(\\log_b{N})-1} c^j f(N) \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + f(N) \\sum_{j = 0}^{(\\log_b{N})-1} c^j \\\\     &amp;= \\Theta(N^{\\log_b{a}}) + f(N) \\times \\frac{1-N^{\\log_b{c}}}{1-c} \\\\ \\end{aligned} \\] <p><code>\u63a5\u4e0b\u6765\uff0c\u53c8\u56de\u5230\u4e86f(N)\u4e0eN^{log_b a}\u6bd4\u5927\u5c0f\u7684\u73af\u8282\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u6709</code>\\(af(\\frac{N}{b}) = c f(N)\\) $$ c f(N) \\sim a f(\\frac{N}{b}) \\sim ... \\sim a^L f(\\frac{N}{b^L}) $$</p> <p>\u6211\u4eec\u5047\u8bbe \\(\\frac{N}{b^L}\\) \u8db3\u591f\u5c0f\uff08\u5373\u9012\u5f52\u5230\u6700\u672b\u7aef\uff0c\u53ea\u9700\u8981\u8fdb\u884c conquer \u7684\u65f6\u5019\uff09\uff0c\u5373 \\(\\frac{N}{b^L} = \\Theta(1)\\)\uff0c\u90a3\u4e48\u5c31\u6709 \\(L = \\Theta(\\log_b{N})\\)\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u6709\uff1a</p> \\[ f(N) \\sim \\Theta(a^{\\log_b{N}}) = \\Theta(N^{\\log_b{a}}) \\] <ul> <li>\u5f53 \\(c &lt; 1\\) \u65f6\uff0c\u5b9e\u9645\u4e0a\u6709 \\(f(N) &gt; af(\\frac{N}{b})\\)\uff1b\u5bf9\u5e94\u7684\\(f(N) &gt; N^{log _b a}\\)</li> <li>\u5f53 \\(c = 1\\) \u65f6\uff0c\u5b9e\u9645\u4e0a\u6709 \\(f(N) = af(\\frac{N}{b})\\)\uff1b\u5bf9\u5e94\u7684\\(f(N) = N^{log _b a}\\)</li> <li>\\(c &gt; 1\\) \u65f6\uff0c\u5b9e\u9645\u4e0a\u6709 \\(f(N) &lt; af(\\frac{N}{b})\\)\uff1b\u5bf9\u5e94\u7684\\(f(N) &lt; N^{log _b a}\\)</li> </ul>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#\u5f62\u5f0f\u4e09","title":"\u5f62\u5f0f\u4e09","text":"<p>definition \"Form 3\"</p> <p>\u200b    \u7b2c\u4e09\u79cd\u5f62\u5f0f\u662f\u5bf9\u4e8e \\((N)\\) \u7684\u7279\u522b\u5f62\u5f0f\uff0c\u5f53\u9012\u63a8\u5173\u7cfb\u6ee1\u8db3\uff1a\\</p> \\[ \\begin{aligned} &amp; T(N) = a T(\\frac{n}{b}) + \\Theta(N^k \\log^p{N}) &amp; \\text{Where } a \\geq 1,\\; b &gt; 1,\\; p \\geq 0 \\end{aligned} \\] <p>\u5176\u590d\u6742\u5ea6\u6709\u7ed3\u8bba\uff1a</p> \\[ T(N) = \\left\\{     \\begin{aligned}         &amp; O(N^{\\log_b{a}}) &amp; \\text{if } a &gt; b^{k} \\\\         &amp; O(N^k \\log^{p+1}{N}) &amp; \\text{if } a = b^{k} \\\\         &amp; O(N^k \\log^{p}{N}) &amp; \\text{if } a &lt; b^{k}     \\end{aligned} \\right. \\] <p>\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u5f0f\u5b50\u4e5f\u975e\u5e38\u597d\u8ba4\uff0c\u5c5e\u4e8e\u5f62\u5f0f\u4e8c\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u3002\u53ef\u4ee5\u5bf9\u7167\u7740\u770b\uff0c\u975e\u5e38\u5bb9\u6613\u770b\u51fa\u5173\u7cfb\u3002</p> <p>\u4f9d\u7136\u91c7\u7528\u9012\u63a8\u6811\u7684\u65b9\u6cd5</p> <p>\u7b2c i \u5c42\uff0c\u7ed3\u70b9\u6570 \\(a ^ i\\), \u6bcf\u4e2a\u7ed3\u70b9\u7684\u5408\u5e76\u5f00\u9500 \\(\\Theta ((\\dfrac{N}{b^i})^klog^p \\frac{N}{b^i}\\)</p> \\[ \\begin{aligned}  &amp;\\sum_{i=0}^{log_b N -1}\\Theta (a ^ i \\times (\\dfrac{N}{b^i})^klog^p \\frac{N}{b^i}) + N^{log_b a} \\\\  &amp; = \\sum_{i=0}^{log_b N -1}\\Theta (  (\\dfrac{a}{b^k}) ^ i \\times (N)^klog^p \\frac{N}{b^i}) + N^{log_b a} \\end{aligned} \\] <ul> <li>\u5f53 \\(a &gt; b^k\\)\u65f6\uff0c\\(N^{log_ba} &gt; N^k\\),\u663e\u7136\u662f\u540e\u9762\u5927</li> </ul> <p></p>"},{"location":"ADS/7.%20Divide%20%26%20Conquer/#74-\u4e60\u9898","title":"7.4 \u4e60\u9898","text":"<ol> <li> <p>\\(T(N) = 2T(\\sqrt N) + log N\\)     Which one of the following is the lowest upper bound of \\(T(n)\\) for the following recursion  \\(T(n) = 2T(\\sqrt{n}) + \\log n\\)?</p> <ul> <li> <p>A. \\(O(\\log n\\log \\log n)\\)</p> </li> <li> <p>B. \\(O(\\log^2 n)\\)</p> </li> <li> <p>C. \\(O(n\\log n)\\)</p> </li> <li> <p>D. \\(O(n^2)\\)</p> <ul> <li>\u5148\u91c7\u7528\u8fd8\u539f\u6cd5\uff0c\u4ee4\\(m = log N\\)\uff0c \u90a3\u4e48\u539f\u5f0f\u8f6c\u5316\u4e3a\\(T(2^m) = 2(T^{m/2})+m\\)</li> <li>\u518d\u4f7f\u7528\u6362\u5143\u6cd5\uff0c\u4ee4\\(S(m) = T(2^m)\\),\u90a3\u4e48\u539f\u5f0f\u8f6c\u5316\u4e3a\\(S(m) = 2S(m/2) + m\\)</li> <li><code>\u53d1\u73b0\u8fd9\u5c31\u662f\u9012\u5f52\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5f97\u5230</code>\\(S(m) = mlogm\\)</li> <li>\u8fd8\u539f\uff0c\u4ee4\\(2^m = N\\),\u5219 \\(m = log N\\),\u6700\u7ec8\\(T(N) = S(m) = logN log(logN)\\)</li> </ul> </li> </ul> </li> <li> <p></p> </li> <li> <p>When solving a problem with input size \\(N\\) by divide and conquer, if at each stage the problem is divided into 8 sub-problems of equal size \\(N/3\\), and the conquer step takes \\(O(N^2 logN)\\) to form the solution from the sub-solutions, then the overall time complexity is __.</p> <ul> <li> <p>A. \\(O(N^2 logN)\\)</p> </li> <li> <p>B. \\(O(N^2 log^2 N)\\)</p> </li> <li> <p>C. \\(O(N^3 logN)\\)</p> </li> <li> <p>D. \\(O(N^{log8/log3})\\)</p> </li> </ul> <p><code>\u8fd0\u7528\u5f62\u5f0f\u4e09\uff0ca = 8\uff0c b = 3, p = 1, k = 2, a &lt; b ^ k</code></p> <p>\u6700\u7ec8\u7b54\u6848\u662fA</p> </li> <li> <p>To solve a problem with input size \\(N\\) by divide and conquer algorithm, among the following methods, __ is the worst.</p> <ul> <li> <p>A. divide into 2 sub-problems of equal complexity \\(N/3\\) and conquer in \\(O(N)\\)</p> </li> <li> <p>B. divide into 2 sub-problems of equal complexity \\(N/3\\) and conquer in \\(O(NlogN)\\)</p> </li> <li> <p>C. divide into 3 sub-problems of equal complexity \\(N/2\\) and conquer in \\(O(N)\\)</p> </li> <li> <p>D. divide into 3 sub-problems of equal complexity \\(N/3\\) and conquer in \\(O(NlogN)\\)</p> </li> </ul> <p>A. \\(T(N) = 2T(N/3) + O(N), N^{log_3 2} &lt; N\\),\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(N) = O(N)\\)</p> <p>B.\\(T(N) = 2T(N/3) + O(NlogN),a = 2, b= 3, k = 1, p =1, a &lt; b^k\\),\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(N) = O(NlogN)\\)</p> <p>C.\\(T(N) = 3T(N/2)+O(N), N^{log_2 3 &gt; N}\\)\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T=O(N^{log_2 3)}\\)</p> <p>D.\\(T(N) = 3(T/3) + O(NlogN), a = 3, b= 3, k =1, p= 1, a = b^k\\),\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T=O(Nlog^2N)\\)</p> </li> <li> <p>3-way-mergesort : Suppose instead of dividing in two halves at each step of the mergesort, we divide into three one thirds, sort each part, and finally combine all of them using a three-way-merge.  What is the overall time complexity of this algorithm ?</p> <ul> <li> <p>A. \\(O(n(\\log^2 n))\\)</p> </li> <li> <p>B. \\(O(n^2 \\log n)\\)</p> </li> <li> <p>C. \\(O(n\\log n)\\)</p> </li> <li> <p>D. \\(O(n)\\)</p> </li> </ul> <p>\\(T(N) = 3T(N/3)+O(N), N^{log_3 3} = N\\),\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(NlogN)\\)</p> </li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/","title":"8. Dynamic Programming","text":"<p> \u7ea6 3231 \u4e2a\u5b57  149 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 18 \u5206\u949f</p>"},{"location":"ADS/8.%20Dynamic%20Programming/#71-\u52a8\u6001\u89c4\u5212\u7b80\u4ecb","title":"7.1. \u52a8\u6001\u89c4\u5212\u7b80\u4ecb","text":"<ol> <li> <p>\u52a8\u6001\u89c4\u5212\u7684\u5b9a\u4e49</p> <p>\u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff09\uff1a\u7b80\u79f0 DP\uff0c\u662f\u4e00\u79cd\u6c42\u89e3\u591a\u9636\u6bb5\u51b3\u7b56\u8fc7\u7a0b\u6700\u4f18\u5316\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u5728\u52a8\u6001\u89c4\u5212\u4e2d\uff0c\u901a\u8fc7\u628a\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u76f8\u5bf9\u7b80\u5355\u7684\u5b50\u95ee\u9898\uff0c\u5148\u6c42\u89e3\u5b50\u95ee\u9898\uff0c\u518d\u7531\u5b50\u95ee\u9898\u7684\u89e3\u800c\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3\u3002</p> </li> <li> <p>\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u601d\u60f3</p> <p>\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u601d\u60f3\uff1a</p> <ol> <li>\u628a\u300c\u539f\u95ee\u9898\u300d\u5206\u89e3\u4e3a\u300c\u82e5\u5e72\u4e2a\u91cd\u53e0\u7684\u5b50\u95ee\u9898\u300d\uff0c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u6c42\u89e3\u8fc7\u7a0b\u90fd\u6784\u6210\u4e00\u4e2a \u300c\u9636\u6bb5\u300d\u3002\u5728\u5b8c\u6210\u4e00\u4e2a\u9636\u6bb5\u7684\u8ba1\u7b97\u4e4b\u540e\uff0c\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u624d\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a\u9636\u6bb5\u7684\u8ba1\u7b97\u3002</li> <li>\u5728\u6c42\u89e3\u5b50\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6309\u7167\u300c\u81ea\u9876\u5411\u4e0b\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\u65b9\u6cd5\u300d\u6216\u8005\u300c\u81ea\u5e95\u5411\u4e0a\u7684\u9012\u63a8\u65b9\u6cd5\u300d\u6c42\u89e3\u51fa\u300c\u5b50\u95ee\u9898\u7684\u89e3\u300d\uff0c\u628a\u7ed3\u679c\u5b58\u50a8\u5728\u8868\u683c\u4e2d\uff0c\u5f53\u9700\u8981\u518d\u6b21\u6c42\u89e3\u6b64\u5b50\u95ee\u9898\u65f6\uff0c\u76f4\u63a5\u4ece\u8868\u683c\u4e2d\u67e5\u8be2\u8be5\u5b50\u95ee\u9898\u7684\u89e3\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5927\u91cf\u7684\u91cd\u590d\u8ba1\u7b97\u3002</li> </ol> <p>\u8fd9\u770b\u8d77\u6765\u5f88\u50cf\u662f\u5206\u6cbb\u7b97\u6cd5\uff0c\u4f46\u52a8\u6001\u89c4\u5212\u4e0e\u5206\u6cbb\u7b97\u6cd5\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff1a</p> <ol> <li>\u9002\u7528\u4e8e\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u7684\u95ee\u9898\uff0c\u5728\u5206\u89e3\u4e4b\u540e\u5f97\u5230\u7684\u5b50\u95ee\u9898\u5f80\u5f80\u662f\u76f8\u4e92\u8054\u7cfb\u7684\uff0c\u4f1a\u51fa\u73b0\u82e5\u5e72\u4e2a\u91cd\u53e0\u5b50\u95ee\u9898\u3002</li> <li><code>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u4f1a\u5c06\u8fd9\u4e9b\u91cd\u53e0\u5b50\u95ee\u9898\u7684\u89e3\u4fdd\u5b58\u5230\u8868\u683c\u91cc\uff0c\u4f9b\u968f\u540e\u7684\u8ba1\u7b97\u67e5\u8be2\u4f7f\u7528\uff0c\u4ece\u800c\u907f\u514d\u5927\u91cf\u7684\u91cd\u590d\u8ba1\u7b97\u3002</code></li> </ol> </li> <li> <p>\u52a8\u6001\u89c4\u5212\u7684\u7b80\u5355\u4f8b\u5b50</p> <p>\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a\u6570\u5217\u7531 \\(f(0) = 1\uff0cf(1) = 2\\) \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002</p> <p>\u901a\u8fc7\u516c\u5f0f \\(f(n) = f(n - 2) + f(n - 1)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u95ee\u9898 \\(f(n)\\) \u9012\u5f52\u5730\u5212\u5206\u4e3a \\(f(n - 2)\\) \u548c \\(f(n - 1)\\) \u8fd9\u4e24\u4e2a\u5b50\u95ee\u9898\u3002\u5176\u5bf9\u5e94\u7684\u9012\u5f52\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a\u5982\u679c\u4f7f\u7528\u4f20\u7edf\u9012\u5f52\u7b97\u6cd5\u8ba1\u7b97 \\(f(5)\\)\uff0c\u9700\u8981\u5148\u8ba1\u7b97 \\(f(3)\\) \u548c \\(f(4)\\)\uff0c\u800c\u5728\u8ba1\u7b97 \\(f(4)\\) \u65f6\u8fd8\u9700\u8981\u8ba1\u7b97 \\(f(3)\\)\uff0c\u8fd9\u6837 \\(f(3)\\) \u5c31\u8fdb\u884c\u4e86\u591a\u6b21\u8ba1\u7b97\u3002\u540c\u7406 \\(f(0)\\)\u3001\\(f(1)\\)\u3001\\(f(2)\\) \u90fd\u8fdb\u884c\u4e86\u591a\u6b21\u8ba1\u7b97\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u91cd\u590d\u8ba1\u7b97\u95ee\u9898\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u300c\u8868\u683c\u5904\u7406\u65b9\u6cd5\u300d\u6765\u5904\u7406\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u300c\u81ea\u5e95\u5411\u4e0a\u7684\u9012\u63a8\u65b9\u6cd5\u300d\u6c42\u89e3\u51fa\u5b50\u95ee\u9898 \\(f(n - 2)\\) \u548c \\(f(n - 1)\\) \u7684\u89e3\uff0c\u7136\u540e\u628a\u7ed3\u679c\u5b58\u50a8\u5728\u8868\u683c\u4e2d\uff0c\u4f9b\u968f\u540e\u7684\u8ba1\u7b97\u67e5\u8be2\u4f7f\u7528\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 \\(dp\\)\uff0c\u7528\u4e8e\u8bb0\u5f55\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\u7684\u503c\u3002</li> <li>\u521d\u59cb\u5316 \\(dp[0] = 0\uff0cdp[1] = 1\\)\u3002</li> <li>\u6839\u636e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u9012\u63a8\u516c\u5f0f \\(f(n) = f(n - 1) + f(n - 2)\\)\uff0c\u4ece \\(dp(2)\\) \u5f00\u59cb\u9012\u63a8\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u6bcf\u4e2a\u6570\uff0c\u76f4\u5230\u8ba1\u7b97\u51fa \\(dp(n)\\)\u3002</li> <li>\u6700\u540e\u8fd4\u56de \\(dp(n)\\) \u5373\u53ef\u5f97\u5230\u7b2c \\(n\\) \u9879\u6590\u6ce2\u90a3\u5951\u6570\u3002</li> </ol> <p>\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>int Fibonacci(int N)\n{\n    int i, Last, NextToLast, Answer;\n    if (N &lt;= 1)\n        return 1;\n    Last = NextToLast = 1;\n    /* F(0) = F(1) = 1 */\n    for (i = 2; i &lt;= N; i++)\n    {\n        Answer = Last + NextToLast;\n        /* F(i) = F(i-1) + F(i-2) */\n        NextToLast = Last;\n        Last = Answer;\n        /* update F(i-1) and F(i-2) */\n    } /* end-for */\n    return Answer;\n}\n</code></pre> <p>\u8fd9\u79cd\u4f7f\u7528\u7f13\u5b58\uff08\u54c8\u5e0c\u8868\u3001\u96c6\u5408\u6216\u6570\u7ec4\uff09\u4fdd\u5b58\u8ba1\u7b97\u7ed3\u679c\uff0c\u4ece\u800c\u907f\u514d\u5b50\u95ee\u9898\u91cd\u590d\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u300c\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u300d\u3002</p> </li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/#72-\u52a8\u6001\u89c4\u5212\u7684\u7279\u5f81","title":"7.2. \u52a8\u6001\u89c4\u5212\u7684\u7279\u5f81","text":"<p>\u7a76\u7adf\u4ec0\u4e48\u6837\u7684\u95ee\u9898\u624d\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u89e3\u51b3\u5462\uff1f</p> <p>\u9996\u5148\uff0c\u80fd\u591f\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u7279\u5f81\uff1a</p> <ol> <li>\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28</li> <li>\u91cd\u53e0\u5b50\u95ee\u9898\u6027\u8d28</li> <li>\u65e0\u540e\u6548\u6027</li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/#721-\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28","title":"7.2.1 \u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28","text":"<p>\u6700\u4f18\u5b50\u7ed3\u6784\uff1a\u6307\u7684\u662f\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5305\u542b\u5176\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u539f\u95ee\u9898 \\(S = \\lbrace a_1, a_2, a_3, a_4 \\rbrace\\)\uff0c\u5728 \\(a_1\\) \u6b65\u6211\u4eec\u9009\u51fa\u4e00\u4e2a\u5f53\u524d\u6700\u4f18\u89e3\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6c42\u89e3\u5b50\u95ee\u9898 \\(S*{\u5b50\u95ee\u9898} = \\lbrace a_2, a_3, a_4 \\rbrace\\)\u3002\u5982\u679c\u539f\u95ee\u9898 \\(S\\) \u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u7531\u300c\u7b2c \\(a_1\\) \u6b65\u5f97\u5230\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u300d\u548c\u300c \\(S*{\u5b50\u95ee\u9898}\\) \u7684\u6700\u4f18\u89e3\u300d\u6784\u6210\uff0c\u5219\u8bf4\u660e\u8be5\u95ee\u9898\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5305\u542b\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u5219\u8bf4\u660e\u8be5\u95ee\u9898\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002</p> <p></p>"},{"location":"ADS/8.%20Dynamic%20Programming/#722-\u91cd\u53e0\u5b50\u95ee\u9898\u6027\u8d28","title":"7.2.2 \u91cd\u53e0\u5b50\u95ee\u9898\u6027\u8d28","text":"<p>\u91cd\u53e0\u5b50\u95ee\u9898\u6027\u8d28\uff1a\u6307\u7684\u662f\u5728\u6c42\u89e3\u5b50\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5927\u91cf\u7684\u5b50\u95ee\u9898\u662f\u91cd\u590d\u7684\uff0c\u4e00\u4e2a\u5b50\u95ee\u9898\u5728\u4e0b\u4e00\u9636\u6bb5\u7684\u51b3\u7b56\u4e2d\u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u7528\u5230\u3002\u5982\u679c\u6709\u5927\u91cf\u91cd\u590d\u7684\u5b50\u95ee\u9898\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5bf9\u5176\u6c42\u89e3\u4e00\u6b21\uff0c\u7136\u540e\u7528\u8868\u683c\u5c06\u7ed3\u679c\u5b58\u50a8\u4e0b\u6765\uff0c\u4ee5\u540e\u4f7f\u7528\u65f6\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u6c42\u89e3\u3002</p> <p></p> <p>\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u7684\u300c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u300d\u4f8b\u5b50\u4e2d\uff0c\\(f(0)\\)\u3001\\(f(1)\\)\u3001\\(f(2)\\)\u3001\\(f(3)\\) \u90fd\u8fdb\u884c\u4e86\u591a\u6b21\u91cd\u590d\u8ba1\u7b97\u3002\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u5229\u7528\u4e86\u5b50\u95ee\u9898\u91cd\u53e0\u7684\u6027\u8d28\uff0c\u5728\u7b2c\u4e00\u6b21\u8ba1\u7b97 \\(f(0)\\)\u3001\\(f(1)\\)\u3001\\(f(2)\\)\u3001\\(f(3)\\) \u65f6\u5c31\u5c06\u5176\u7ed3\u679c\u5b58\u5165\u8868\u683c\uff0c\u5f53\u518d\u6b21\u4f7f\u7528\u65f6\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\uff0c\u65e0\u9700\u518d\u6b21\u6c42\u89e3\uff0c\u4ece\u800c\u63d0\u5347\u6548\u7387\u3002</p>"},{"location":"ADS/8.%20Dynamic%20Programming/#723-\u65e0\u540e\u6548\u6027","title":"7.2.3 \u65e0\u540e\u6548\u6027","text":"<p>\u65e0\u540e\u6548\u6027\uff1a\u6307\u7684\u662f\u5b50\u95ee\u9898\u7684\u89e3\uff08\u72b6\u6001\u503c\uff09\u53ea\u4e0e\u4e4b\u524d\u9636\u6bb5\u6709\u5173\uff0c\u800c\u4e0e\u540e\u9762\u9636\u6bb5\u65e0\u5173\u3002\u5f53\u524d\u9636\u6bb5\u7684\u82e5\u5e72\u72b6\u6001\u503c\u4e00\u65e6\u786e\u5b9a\uff0c\u5c31\u4e0d\u518d\u6539\u53d8\uff0c<code>\u4e0d\u4f1a\u518d\u53d7\u5230\u540e\u7eed\u9636\u6bb5\u51b3\u7b56\u7684\u5f71\u54cd\u3002</code></p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u67d0\u4e00\u4e2a\u5b50\u95ee\u9898\u7684\u6c42\u89e3\u7ed3\u679c\u786e\u5b9a\u4ee5\u540e\uff0c\u5c31\u4e0d\u4f1a\u518d\u88ab\u4fee\u6539\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0b\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u5e26\u6743\u56fe\uff0c\u6211\u4eec\u5728\u6c42\u89e3\u4ece \\(A\\) \u70b9\u5230 \\(F\\) \u70b9\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u65f6\uff0c\u5047\u8bbe\u5f53\u524d\u5df2\u77e5\u4ece \\(A\\) \u70b9\u5230 \\(D\\) \u70b9\u7684\u6700\u77ed\u8def\u5f84\uff08\\(2 + 7 = 11\\)\uff09\u3002\u90a3\u4e48\u65e0\u8bba\u4e4b\u540e\u7684\u8def\u5f84\u5982\u4f55\u9009\u62e9\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u524d\u4ece \\(A\\) \u70b9\u5230 \\(D\\) \u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\u8fd9\u5c31\u662f\u300c\u65e0\u540e\u6548\u6027\u300d\u3002</p> <p>\u800c\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u5177\u6709\u300c\u540e\u6548\u6027\u300d\uff0c\u5219\u53ef\u80fd\u9700\u8981\u5148\u5c06\u5176\u8f6c\u5316\u6216\u8005\u9006\u5411\u6c42\u89e3\u6765\u6d88\u9664\u540e\u6548\u6027\uff0c\u7136\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u3002</p> <p></p>"},{"location":"ADS/8.%20Dynamic%20Programming/#73-\u52a8\u6001\u89c4\u5212\u7684\u57fa\u672c\u601d\u8def","title":"7.3. \u52a8\u6001\u89c4\u5212\u7684\u57fa\u672c\u601d\u8def","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u5728\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u89e3\u51b3\u67d0\u4e9b\u6700\u4f18\u5316\u95ee\u9898\u65f6\uff0c\u53ef\u4ee5\u5c06\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\uff08\u65f6\u95f4\u987a\u5e8f\u3001\u7a7a\u95f4\u987a\u5e8f\u6216\u5176\u4ed6\u987a\u5e8f\uff09\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u4e92\u8054\u7cfb\u7684\u300c\u9636\u6bb5\u300d\u3002\u7136\u540e\u6309\u7167\u987a\u5e8f\u5bf9\u6bcf\u4e00\u4e2a\u9636\u6bb5\u505a\u51fa\u300c\u51b3\u7b56\u300d\uff0c\u8fd9\u4e2a\u51b3\u7b56\u65e2\u51b3\u5b9a\u4e86\u672c\u9636\u6bb5\u7684\u6548\u76ca\uff0c\u4e5f\u51b3\u5b9a\u4e86\u4e0b\u4e00\u9636\u6bb5\u7684\u521d\u59cb\u72b6\u6001\u3002\u4f9d\u6b21\u505a\u5b8c\u6bcf\u4e2a\u9636\u6bb5\u7684\u51b3\u7b56\u4e4b\u540e\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6574\u4e2a\u95ee\u9898\u7684\u51b3\u7b56\u5e8f\u5217\u3002</p> <p>\u8fd9\u6837\u5c31\u5c06\u4e00\u4e2a\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u4e86\u4e00\u7cfb\u5217\u7684\u5b50\u95ee\u9898\uff0c\u518d\u901a\u8fc7\u9010\u6b65\u6c42\u89e3\u4ece\u800c\u83b7\u5f97\u6700\u7ec8\u7ed3\u679c\u3002</p> <p></p> <p>\u8fd9\u79cd\u524d\u540e\u5173\u8054\u3001\u5177\u6709\u94fe\u72b6\u7ed3\u6784\u7684\u591a\u9636\u6bb5\u8fdb\u884c\u51b3\u7b56\u7684\u95ee\u9898\u4e5f\u53eb\u505a\u300c\u591a\u9636\u6bb5\u51b3\u7b56\u95ee\u9898\u300d\u3002</p> <p>\u901a\u5e38\u6211\u4eec\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u6765\u89e3\u51b3\u95ee\u9898\u7684\u57fa\u672c\u601d\u8def\u5982\u4e0b\uff1a</p> <ol> <li>\u5212\u5206\u9636\u6bb5\uff1a\u5c06\u539f\u95ee\u9898\u6309\u987a\u5e8f\uff08\u65f6\u95f4\u987a\u5e8f\u3001\u7a7a\u95f4\u987a\u5e8f\u6216\u5176\u4ed6\u987a\u5e8f\uff09\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u4e92\u8054\u7cfb\u7684\u300c\u9636\u6bb5\u300d\u3002\u5212\u5206\u540e\u7684\u9636\u6bb5\u2f00\u5b9a\u662f\u6709\u5e8f\u6216\u53ef\u6392\u5e8f\u7684\uff0c\u5426\u5219\u95ee\u9898\u2f46\u6cd5\u6c42\u89e3\u3002<ul> <li>\u8fd9\u91cc\u7684\u300c\u9636\u6bb5\u300d\u6307\u7684\u662f\u2f26\u95ee\u9898\u7684\u6c42\u89e3\u8fc7\u7a0b\u3002\u6bcf\u4e2a\u2f26\u95ee\u9898\u7684\u6c42\u89e3\u8fc7\u7a0b\u90fd\u6784\u6210\u2f00\u4e2a\u300c\u9636\u6bb5\u300d\uff0c\u5728\u5b8c\u6210\u524d\u2f00\u9636\u6bb5\u7684\u6c42\u89e3\u540e\u624d\u4f1a\u8fdb\u2f8f\u540e\u2f00\u9636\u6bb5\u7684\u6c42\u89e3\u3002</li> </ul> </li> <li>\u5b9a\u4e49\u72b6\u6001\uff1a\u5c06\u548c\u5b50\u95ee\u9898\u76f8\u5173\u7684\u67d0\u4e9b\u53d8\u91cf\uff08\u4f4d\u7f6e\u3001\u6570\u91cf\u3001\u4f53\u79ef\u3001\u7a7a\u95f4\u7b49\u7b49\uff09\u4f5c\u4e3a\u4e00\u4e2a\u300c\u72b6\u6001\u300d\u8868\u793a\u51fa\u6765\u3002\u72b6\u6001\u7684\u9009\u62e9\u8981\u6ee1\u2f9c\u2f46\u540e\u6548\u6027\u3002<ul> <li>\u4e00\u4e2a\u300c\u72b6\u6001\u300d\u5bf9\u5e94\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u6240\u8c13\u67d0\u4e2a\u300c\u72b6\u6001\u300d\u4e0b\u7684\u503c\uff0c\u6307\u7684\u5c31\u662f\u8fd9\u4e2a\u300c\u72b6\u6001\u300d\u6240\u5bf9\u5e94\u7684\u5b50\u95ee\u9898\u7684\u89e3\u3002</li> </ul> </li> <li>\u72b6\u6001\u8f6c\u79fb\uff1a\u6839\u636e\u300c\u4e0a\u4e00\u9636\u6bb5\u7684\u72b6\u6001\u300d\u548c\u300c\u8be5\u72b6\u6001\u4e0b\u6240\u80fd\u505a\u51fa\u7684\u51b3\u7b56\u300d\uff0c\u63a8\u5bfc\u51fa\u300c\u4e0b\u4e00\u9636\u6bb5\u7684\u72b6\u6001\u300d\u3002\u6216\u8005\u8bf4\u6839\u636e\u76f8\u90bb\u4e24\u4e2a\u9636\u6bb5\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u786e\u5b9a\u51b3\u7b56\uff0c\u7136\u540e\u63a8\u5bfc\u51fa\u72b6\u6001\u95f4\u7684\u76f8\u4e92\u8f6c\u79fb\u65b9\u5f0f\uff08\u5373\u300c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u300d\uff09\u3002</li> <li>\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u6761\u4ef6\uff1a\u6839\u636e\u95ee\u9898\u63cf\u8ff0\u3001\u72b6\u6001\u5b9a\u4e49\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u786e\u5b9a\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u6761\u4ef6\u3002</li> <li>\u6700\u7ec8\u7ed3\u679c\uff1a\u786e\u5b9a\u95ee\u9898\u7684\u6c42\u89e3\u76ee\u6807\uff0c\u7136\u540e\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u6c42\u89e3\u6bcf\u4e00\u4e2a\u9636\u6bb5\u7684\u95ee\u9898\u3002\u6700\u540e\u6839\u636e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u9012\u63a8\u7ed3\u679c\uff0c\u786e\u5b9a\u6700\u7ec8\u7ed3\u679c\u3002</li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/#74-\u52a8\u6001\u89c4\u5212\u7684\u5e94\u7528","title":"7.4. \u52a8\u6001\u89c4\u5212\u7684\u5e94\u7528","text":""},{"location":"ADS/8.%20Dynamic%20Programming/#741-ordering-matrix-multiplication","title":"7.4.1 Ordering Matrix Multiplication","text":"<p>\u4ee4\\(b_n\\)\u8868\u793a\u8ba1\u7b97\\(M_1 \\cdot M_2 \\cdots M_n\\)\u4e0d\u540c\u65b9\u6cd5\u7684\u6570\u91cf</p> <p>\u6211\u4eec\u80fd\u591f\u5c06\\(M_1 \\cdot M_2 \\cdots M_n\\)\u5206\u6210\u4e24\u90e8\u5206\uff0c\u8bb0\\(M_{ij} = M_i \\cdots M_j\\)</p> <p>\u90a3\u4e48\u53ea\u9700\u8981\u5728\u77e9\u9635\u5e8f\u5217\u4e2d\u5207\u4e00\u5200\uff0c\u5c31\u5f97\u5230\u4e24\u4e2a\u77e9\u9635\u5e8f\u5217</p> <p>\u6b64\u65f6\u5f97\u5230\\(b_n\\)\u7684\u9012\u63a8\u5173\u7cfb</p> \\[ b_n = \\sum_{i=1}^{n-1} b_i b_{n-i}, b_1 =1, b_2 = 1, b_3 = 2 \\] <p>\u63a5\u4e0b\u6765\u6b63\u5f0f\u8ba1\u7b97\\(M_1 \\cdot M_2 \\cdots M_n\\)\uff0c\\(M_i\\)\u662f\u4e00\u4e2a\\(r_{i-1}\\times r_i\\) \u7684\u77e9\u9635.  \u7528\\(m_{ij}\\)\u8868\u793a\u8ba1\u7b97\\(M_{ij}\\)\u7684\u7ed3\u679c</p> <p><code>\u6700\u540e\u8f6c\u5316\u4e3a Mil, Mlj, \u4ee5\u53ca\u4e24\u4e2a\u77e9\u9635\u7684\u76f8\u4e58</code></p> <p></p> <pre><code>// \u5229\u7528\u52a8\u6001\u89c4\u5212\uff0c\u5148\u8ba1\u7b97 m11,m22,....mNN\n// \u518d\u5411\u4e0a\u8ba1\u7b97 m12,m23,...,\u9010\u5c42\u5411\u4e0a\nint Optmatrix(vector&lt;int&gt; &amp;p, vector&lt;vector&lt;int&gt;&gt; &amp;m, int n)\n{\n    int i, j, k;\n    for(i = 1; i &lt;= n; i++) m[i][i] = 0;\n    // \u63a5\u4e0b\u6765\u4f9d\u6b21\u8ba1\u7b97m[i][j]\u7684\u6700\u5c0f\u503c\n    for(i = 1; i &lt;= n -1; i++)\n    {\n        // \u8ba1\u7b97m[i][j]\u7684\u6700\u5c0f\u503c\n        for(j = 1; j &lt;= n - i; j++)\n        {\n            int min = MAX;\n            for(k = j; k &lt;= j + i - 1; k++)\n            {\n                m[j][j+i] = m[j][k] + m[k+1][j+i] + p[j-1]*p[k]*p[j+i];\n                if(m[j][j+i] &lt; min) min = m[j][j+i];\n            }\n            m[j][j+i] = min;\n        }\n    }\n    return m[1][n];\n}\n</code></pre>"},{"location":"ADS/8.%20Dynamic%20Programming/#742-optimal-binary-search-tree","title":"7.4.2 Optimal Binary Search Tree","text":"<p>\\(T(N) = \\sum_{i =1}^N p_i(1+d_i)\\)</p> <p></p> <p>\u4f9d\u7136\u662f\u62c6\u5206\u6210\u4e24\u90e8\u5206</p> <p>\\(C_{ij} = p_k + cost(L) + cost(R) + weight(L) + weight(R)\\)</p> <p>\\(C_{ij} = p_k + C_{i,k-1}+C_{k+1,j} + W_{i.k-1} + W_{k+1,j} = C_{i,k-1} + C_{k+1,j} + W_{ij}\\)</p> <p><code>\u6b64\u5904\u6dfb\u52a0weight(L)\u548cweight(R)\u7684\u539f\u56e0\u662f\uff0cL\u548cR\u6210\u4e3a\u5b50\u6811\u4e4b\u540e\uff0c\u6240\u6709\u7684\u6df1\u5ea6\u90fd\u4f1a\u52a01\uff0c\u5229\u7528pi(1+di)\uff0c\u53ef\u77e5\u5b50\u6811\u6240\u6709\u7ed3\u70b9\u7684\u6743\u91cd\u9700\u8981\u7d2f\u52a0</code></p> <p></p> <p>\u4ece\u5e95\u5230\u9876\uff0c\u5148\u8ba1\u7b97\u957f\u5ea6\u4e3a1\u7684\u6700\u5c0f\u503c\uff0c\u5728\u5229\u7528\u957f\u5ea6\u4e3a1\u7684\u6700\u5c0f\u503c\uff0c\u8ba1\u7b97\u957f\u5ea6\u4e3a2\u7684\u6700\u5c0f\u503c</p> <p>\u7b2c\u4e00\u884c\u957f\u5ea6\u4e3a1\uff0c\u5c31\u662f\u672c\u8eab\u7684weight</p> <p>\u7b2c\u4e8c\u884c\u957f\u5ea6\u4e3a2\uff0c\\(min = (w_ij + min(w_i,w_j))\\)</p> <p>\u7b2c\u4e09\u884c\u957f\u5ea6\u4e3a3\uff0c\u4ee5break\u2026char\u4e3a\u4f8b</p> <ul> <li>break\u4e3a\u6839\u7ed3\u70b9\uff0cbreak-(case..char) = 0.6 + 0.56 = 1.16</li> <li>case\u4e3a\u6839\u7ed3\u70b9\uff0c break - case -char = 0.6 + 0.22 + 0.20 = 1.02</li> <li>char\u4e3a\u6839\u7ed3\u70b9\uff0c \uff08break..case) char = 0.6 + 0.58 = 1.18</li> </ul> <p>\u7b2c\u56db\u884c\u957f\u5ea6\u4e3a4\uff0c\u4ee5break\u2026do\u4e3a\u4f8b</p> <ul> <li>break\u4e3a\u6839\u7ed3\u70b9\uff0cbreak-(case \u2026 do) = 0.65 + 0.66 = 1.31</li> <li>case \u4e3a\u6839\u7ed3\u70b9\uff0c break-case-(char..do) = 0.65 + 0.22 + 0.30 = 1.17</li> <li>char \u4e3a\u6839\u7ed3\u70b9\uff0c (break..case) - char -do = 0.65 + 0.58 + 0.05 = 1.28</li> <li>do\u4e3a\u6839\u7ed3\u70b9\uff0c(break\u2026char) - do = 0.65 + 1.02 = 1.67</li> </ul> <pre><code>// Dynamic programming function to find the minimum cost  \ndouble DP(vector&lt;double&gt; &amp;weight, vector&lt;vector&lt;double&gt;&gt; &amp;cost, int n)  \n{  \n    int i, j, k;  \n    // Initializing the diagonal of the cost matrix  \n    for(i = 1; i &lt;= n; i++) cost[i][i] = weight[i];  \n\n    // Filling up the cost matrix using dynamic programming  \n    for(int len = 1; len &lt;= n-1; len++)  \n    {  \n        for(i = 1; i &lt;= n-len; i++)  \n        {  \n            j = i + len;  \n            double mincost = 1e9;  // Initializing mincost to a very large value  \n\n            // Checking for the base case when len = 1  \n            if(len == 1)  \n            {  \n                cost[i][j] = SumWeight(weight, i, j) + min(weight[i], weight[j]);  \n            }  \n            else  \n            {  \n                // Iterating through possible partitions and finding the minimum cost  \n                for(k = i; k &lt; j; k++)  \n                {  \n                    double temp = cost[i][k-1] + cost[k+1][j] + SumWeight(weight, i, j);  \n                    if(temp &lt; mincost) mincost = temp;  \n                }  \n                cost[i][j] = mincost;  // Assigning the minimum cost for this range  \n            }  \n        }  \n    }  \n    return cost[1][n];  // Returning the minimum cost for the entire range  \n}  \n</code></pre>"},{"location":"ADS/8.%20Dynamic%20Programming/#743-all-pairs-shortest-path","title":"7.4.3 All-Pairs Shortest Path","text":"<ol> <li> <p>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\uff08\u6267\u884cn\u6b21\uff09</p> </li> <li> <p>\u52a8\u6001\u89c4\u5212\uff08\u4e5f\u5c31\u662f\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5\uff09\u3002start from \\(D^{-1}\\),\u4f9d\u6b21\u8ba1\u7b97\u751f\u6210\\(D^0,D^1,....D^n\\)</p> </li> </ol> <p>\u80fd\u591f\u5b58\u5728\u8d1f\u8fb9\uff0c\u4f46\u662f\u4e0d\u80fd\u5b58\u5728\u8d1f\u73af</p> <pre><code>/* A[ ] contains the adjacency matrix with A[ i ][ i ] = 0 */\n/* D[ ] contains the values of the shortest path */\n/* N is the number of vertices */\n/* A negative cycle exists iff D[ i ][ i ] &lt; 0 */\nvoid AllPairs(TwoDimArray A, TwoDimArray D, int N)\n{\n    int i, j, k;\n    for (i = 0; i &lt; N; i++) /* Initialize D */\n        for (j = 0; j &lt; N; j++)\n            D[i][j] = A[i][j];\n    for (k = 0; k &lt; N; k++) /* add one vertex k into the path */\n        for (i = 0; i &lt; N; i++)\n            for (j = 0; j &lt; N; j++)\n                if (D[i][k] + D[k][j] &lt; D[i][j])\n                    /* Update shortest path */\n                    D[i][j] = D[i][k] + D[k][j];\n}\n</code></pre>"},{"location":"ADS/8.%20Dynamic%20Programming/#744-product-assembly","title":"7.4.4 Product Assembly","text":"<ol> <li> <p>\u66b4\u529b\u6cd5\u6c42\u89e3</p> <p></p> </li> <li> <p>\u52a8\u6001\u89c4\u5212</p> <p></p> <p>An optimal path to stage is based on an optimal path to stage\u20131</p> <p>\u5f53\u524d\u7684\u6700\u4f18\u89e3\uff0c\u4f9d\u8d56\u4e8e\u524d\u4e00\u6b65\u7684\u6700\u4f18\u89e3</p> <p>\u540c\u4e00\u6761\u4ea7\u54c1\u7ebf\u7ee7\u7eed\u6216\u8005\u4ece\u53e6\u5916\u4e00\u6761\u7ebf\u8fdb\u884c\u8f6c\u79fb</p> <p>O( N ) time + O( N ) space</p> <pre><code>f[0][0]=0; L[0][0]=0;\nf[1][0]=0; L[1][0]=0;\nfor(stage=1; stage&lt;=n; stage++){\n    for(line=0; line&lt;=1; line++){\n    f_stay = f[  line][stage-1] + t_process[  line][stage-1];\n    f_move = f[1-line][stage-1] + t_transit[1-line][stage-1];\n    if (f_stay&lt;f_move){\n        f[line][stage] = f_stay;\n        L[line][stage] = line;\n    }\n    else {\n        f[line][stage] = f_move;\n        L[line][stage] = 1-line;\n    }\n    }\n}\n</code></pre> </li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/#75-\u4e60\u9898\u96c6","title":"7.5 \u4e60\u9898\u96c6","text":"<ol> <li> <p>Rod-cutting Problem: Given a rod of total length \\(N\\) inches and a table of selling prices \\(P_L\\) for lengths \\(L = 1, 2, \\cdots , M\\).  You are asked to find the maximum revenue \\(R_N\\) obtainable by cutting up the rod and selling the pieces.  For example, based on the following table of prices, if we are to sell an 8-inch rod, the optimal solution is to cut it into two pieces of lengths 2 and 6, which produces revenue \\(R_8 = P_2 +P_6 = 5+17 = 22\\).  And if we are to sell a 3-inch rod, the best way is not to cut it at all.</p> <p></p> <p>Which one of the following statements is FALSE?</p> <ul> <li> <p>A. This problem can be solved by dynamic programming</p> </li> <li> <p>B. The time complexity of this algorithm is \\(O(N^2)\\)</p> </li> <li> <p>C. If \\(N\\le M\\), we have \\(R_N = \\max \\lbrace P_N , \\max_{1\\le i &lt; N} \\lbrace R_i + R_{N-i} \\rbrace \\rbrace\\)</p> </li> <li> <p>D. If \\(N&gt;M\\), we have \\(R_N = \\max_{1\\le i &lt; N} \\lbrace R_i + R_{N-M} \\rbrace\\)</p> </li> </ul> <p><code>B\uff1a</code></p> \\[ \\begin{aligned} &amp;R1 = P1\\\\ &amp;R2 = max\\{P2, R1 + P1\\}\\\\ &amp;R3 = max\\{P3, P2 + R1,  P1 + R2\\}\\\\ &amp;....\\\\ &amp;\u8ba1\u7b97R_n\u9700\u8981 1 + 2 + 3 + 4 + ... + n \u6b65 \\end{aligned} \\] <p><code>D:</code>\\(R_N = max_{1&lt;= i &lt; N}\\{R_i + R_{N - i} \\}\\)</p> </li> <li> <p>In dynamic programming, we derive a recurrence relation for the solution to one subproblem in terms of solutions to other subproblems. To turn this relation into a bottom up dynamic programming algorithm, we need an order to fill in the solution cells in a table, such that all needed subproblems are solved before solving a subproblem. Among the following relations, which one is impossible to be computed?</p> <ul> <li> <p>A. \\(A(i, j) = min (A(i-1,j), A(i,j-1), A(i-1,j-1))\\)</p> </li> <li> <p>B. \\(A(i, j) = F(A(min\\{i, j\\} - 1, min\\{i, j\\} - 1), A(max\\{i, j\\} - 1, max\\{i, j\\} -1))\\)</p> </li> <li> <p>C. \\(A(i, j) = F(A(i, j -1), A(i - 1, j - 1), A(i - 1, j + 1))\\)</p> </li> <li> <p>D. \\(A(i,j) = F(A(i-2, j-2), A(i+2,j+2))\\)</p> </li> </ul> <p><code>\u8981\u5b9e\u73b0\u52a8\u6001\u89c4\u5212\uff0c\u8bb2\u7a76\u4e00\u4e2a\u5148\u6765\u540e\u5230\uff0c\u663e\u7136D\u7684\u8ba1\u7b97\u987a\u5e8f\u6709\u8bef</code></p> <p>\u5bf9\u4e8eC\uff0c\u53ef\u4ee5 for i in 0 to n: for j in 0 to n \u5148\u8ba1\u7b97\uff08i - 1\uff0c \uff09\u6240\u6709\u7684\u7ec4\u5408\uff0c\u8fd9\u6837 \uff08i - 1\uff0c j + 1\uff09\u7684\u7ec4\u5408\u4e5f\u5c31\u63d0\u524d\u8ba1\u7b97\u4e86</p> </li> <li> <p>Given a recurrence equation \\(f_{i,j,k} =f_{i,j+1,k}+\\min_{0 \\le l \\le k}\\{f_{i-1,j,l}+w_{j,l}\\}\\). To solve this equation in an iterative way, we cannot fill up a table as follows:</p> <ul> <li> <p>A. for k in 0 to n: for i in 0 to n: for j in n to 0</p> </li> <li> <p>B. for i in 0 to n: for j in 0 to n: for k in 0 to n</p> </li> <li> <p>C. for i in 0 to n: for j in n to 0: for k in n to 0</p> </li> <li> <p>D. for i in 0 to n: for j in n to 0: for k in 0 to n</p> </li> </ul> <p>j \u4e0d\u80fd\u589e\u5e8f\u7b97\uff0c\u56e0\u4e3a \\(f_{i,j,k}\\) \u4f9d\u8d56\u4e8e \\(f_{i,j+1,k}\\)\u3002</p> </li> <li> <p>If a problem can be solved by dynamic programming, it must be solved in polynomial time. <code>F</code></p> <p>0-1\u80cc\u5305\u95ee\u9898\u53ef\u4ee5\u7528DP\u89e3\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e0d\u662f\u591a\u9879\u5f0f\u7684, \u539f\u56e0\u662f\u8f93\u5165\u7684\u6570\u636e\u4e0d\u662f\u591a\u9879\u5f0f\u7684</p> </li> </ol>"},{"location":"ADS/8.%20Dynamic%20Programming/#\u80cc\u5305\u95ee\u9898","title":"\u80cc\u5305\u95ee\u9898","text":"<ol> <li> <p>\u80cc\u5305\u95ee\u9898\u7684\u80cc\u666f\uff1a</p> <p>\u7ed9\u5b9a\u80cc\u5305\u7684\u627f\u91cdW, \u4e00\u5806\u7269\u54c1\u7684\u91cd\u91cfweight[]\u548c\u4ef7\u503cvalue[],\u6c42\u80cc\u5305\u80fd\u88c5\u5165\u7269\u54c1\u7684\u6700\u5927\u603bvalue</p> </li> <li> <p>\u80cc\u5305\u95ee\u9898\u7684\u89e3\u6cd5\uff1a</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4dp</p> <p>\u5176\u4e2d $dp[i] [j] $\u8868\u793a\uff1a\u4ece\u524d i \u4ef6\u7269\u54c1\u4e2d\u627e\u51fa\u4e00\u4e9b\u653e\u5165\u80cc\u5305\uff0c\u5728\u603b\u91cd\u4e0d\u8d85\u8fc7\u627f\u91cdW\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u8fbe\u5230\u7684\u6700\u5927value\u3002</p> <p>\u7b2c i \u4ef6\u7269\u54c1\u91cd\u91cf\u4e3a weight[i]\uff0c\u4ef7\u503c\u4e3a value[i]\uff0c\u6839\u636e\u7b2c i \u4ef6\u7269\u54c1\u662f\u5426\u6dfb\u52a0\u5230\u80cc\u5305\u4e2d\uff0c\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <ul> <li>\u7b2c i \u4ef6\u7269\u54c1\u7684\u91cd\u91cf\u8d85\u8fc7\u80cc\u5305\u627f\u91cd\uff0c\u5373 weight[i] &gt; j\u3002\u6b64\u65f6\u5c31\u7b97\u62ff\u51fa\u80cc\u5305\u4e2d\u7684\u6240\u6709\u7269\u54c1\u4e5f\u65e0\u6cd5\u653e\u4e0b\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u88ab\u653e\u5165\u80cc\u5305\uff0c\u56e0\u6b64\u6709\uff1a<code>dp[i][j] = dp[i-1][j]</code></li> <li>\u7b2c i \u4ef6\u7269\u54c1\u53ef\u4ee5\u6dfb\u52a0\u5230\u80cc\u5305\u4e2d\uff08\u53ef\u80fd\u62ff\u51fa\u4e00\u4e9b\u5df2\u6709\u7269\u54c1\uff09\u3002\u6b64\u65f6\u4e5f\u53ef\u4ee5\u6709\u653e\u5165\u4e0e\u4e0d\u653e\u5165\u4e24\u79cd\u60c5\u51b5\uff0c\u5e94\u53d6value\u66f4\u5927\u7684\u90a3\u79cd\u3002<ul> <li>\u82e5\u4e0d\u653e\u5165\uff0c\u6709\uff1a<code>dp[i][j] = dp[i-1][j]</code></li> <li>\u82e5\u653e\u5165\uff0c\u60c5\u51b5\u53d8\u4e3a\u4ece\u67d0\u4e2a\u72b6\u6001\u4e0b\u52a0\u5165\u7b2ci\u4ef6\u7269\u54c1\u5e76\u8fbe\u5230dp[i][j]\u7ed3\u679c\uff0c\u53ef\u77e5\u524d\u4e00\u72b6\u6001\u65f6\u7684\u80cc\u5305\u627f\u91cd\u5e94\u4e3a j-weight[i]\u3002\u56e0\u6b64\u6709\uff1a<code>dp[i][j] = dp[i-1][ j-weight[i] ] + value[i]</code>\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5f97\u5230\u9012\u63a8\u5f0f\uff1a</p> </li> </ol> <pre><code>dp[i][j] = max(dp[i-1][j], dp[i-1][j-weight[i]] + value[i])\n</code></pre> <pre><code>```cpp\nint dp[W];\nmemset(dp, 0, sizeof(dp));\nfor(int i = 0; i &lt; n; i++)\n{\n    for(int j =  W; j &gt;= 1; j--)\n    {\n        if(j &gt;= weight[i])\n        {\n            dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\n        }\n    }\n}\nreturn dp[W];\n```\n</code></pre> <p>For problem <code>i</code>, Bob will need <code>time[i]</code> to solve it and obtains the corresponding <code>score[i]</code>, or he may choose not to solve it at all. Bob will be happy when he obtains a total score no less than <code>happy_score</code>. You are supposed to find the minimum time needed for Bob to be happy. The function <code>need_time</code> must return the minimum time, or <code>-1</code> if it is impossible for Bob to obtain a score no less than <code>happy_score</code>.</p> <p>Format of function:</p> <pre><code>int need_time(const int time[], const int score[], int happy_score, int n);\n</code></pre> <p>Here <code>n</code> (1\u2264<code>n</code>\u2264 <code>MAXN</code>) is the number of problems;</p> <p><code>happy_score</code> (1\u2264 <code>happy_score</code> \u2264 <code>MAXS</code>) is the minimum score for Bob to be happy;</p> <p><code>time[]</code> is the array to store <code>time[i]</code> (1\u2264<code>time[i]</code>\u2264100) which is the time to solve problem <code>i</code>;</p> <p><code>score[]</code> is the array to store <code>score[i]</code> (1\u2264<code>score[i]</code>\u2264100) which is the score Bob gets for solving problem <code>i</code>.</p> <p>PTA\u7684\u9898\u76ee\u8981\u6c42\u662f\uff1a</p> <p>1.\u5f00\u5fc3\u503c\u603b\u548c &gt;= happy_score 2.\u6240\u82b1\u65f6\u95f4\u603b\u548c\u6700\u5c11</p> <p>\u4e0a\u8ff0\u7684\u80cc\u5305\u95ee\u9898\u4e0d\u518d\u9002\u7528\u6070\u597d\u662f\u5176\u53cd\u9762</p> <p><code>\u4ece\u9006\u5411\u601d\u7ef4\u51fa\u53d1\uff1a\u8981\u6c42score\u603b\u548c\u5c0f\u4e8e sum_score - happy_score,\u5e76\u4e14\u603btime\u6700\u5927\uff0c\u7b26\u5408\u80cc\u5305\u7684\u5047\u8bbe.\u6700\u540e\u53ea\u9700\u8981\u7528sum_time-\u9006\u5411\u65f6\u95f4\u7684\u6700\u5927\u503c\u5373\u53ef\u5f97\u5230\u6b63\u5411\u7684\u6700\u5c0f\u65f6\u95f4</code></p> <pre><code>int need_time(const int time[], const int score[], int happy_score, int n)\n{\n    // \u80cc\u5305\u95ee\u9898\n    int sum_score = 0;\n    int sum_time = 0;\n    for (int i = 0; i &lt; n; i++)\n    {\n        sum_score += score[i];\n        sum_time += time[i];\n    }\n    if(sum_score &lt; happy_score) return -1;\n\n    // \u6211\u4eec\u8981\u8ba1\u7b97\uff0c\u4e0d\u8fbe\u5230happy_score\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u9700\u8981\u591a\u5c11\u65f6\u95f4\n    // \u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u603b\u65f6\u95f4\u51cf\u53bb\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5c31\u662f\u6700\u5c11\u65f6\u95f4\n    int dp[sum_score];\n    memset(dp, 0, sizeof(dp));\n    for(int i = 0; i &lt; n; i++)\n    {\n        for(int j = sum_score - happy_score; j &gt;= score[i]; j--)\n        {\n            dp[j] = dp[j] &gt; dp[j - score[i]] + time[i] ? dp[j] : dp[j - score[i]] + time[i];\n        }\n    }\n    return sum_time - dp[sum_score - happy_score];\n}\n</code></pre>"},{"location":"ADS/9.%20Greedy%20Algorithms/","title":"9. Greedy Algorithms","text":"<p> \u7ea6 5093 \u4e2a\u5b57  13 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 26 \u5206\u949f</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#91-introduction","title":"9.1 Introduction","text":"<p>Optimization Problems\uff1a</p> <p>Given a set of constraints and an optimization function.  Solutions that satisfy the constrains are called feasible solutions.  A feasible solution for which the optimization function has the best possible value is called an optimal solution.</p> <p>\u7ed9\u5b9a\u4e00\u7ec4\u7ea6\u675f\u548c\u4e00\u4e2a\u4f18\u5316\u51fd\u6570\u3002 \u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684\u89e3\u79f0\u4e3a\u53ef\u884c\u89e3\u3002 \u4f18\u5316\u51fd\u6570\u5177\u6709\u6700\u4f73\u53ef\u80fd\u503c\u7684\u53ef\u884c\u89e3\u79f0\u4e3a\u6700\u4f18\u89e3\u3002</p> <p>Greedy Method\uff1a</p> <p>Make the best decision at each stage, under some greedy criterion.  A decision made in one stage is not changed in a later stage, so each decision should assure feasibility.</p> <p>\u5728\u67d0\u4e2a\u8d2a\u5fc3\u51c6\u5219\u4e0b\uff0c\u5728\u6bcf\u4e2a\u9636\u6bb5\u505a\u51fa\u6700\u4f73\u51b3\u5b9a\u3002 \u5728\u4e00\u4e2a\u9636\u6bb5\u505a\u51fa\u7684\u51b3\u5b9a\u5728\u4ee5\u540e\u7684\u9636\u6bb5\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u6bcf\u4e2a\u51b3\u5b9a\u90fd\u5e94\u786e\u4fdd\u53ef\u884c\u6027\u3002</p> <p><code>\u6ce8\u610f\uff1a</code> \u8d2a\u5a6a\u7b97\u6cd5\u4ec5\u5728\u5c40\u90e8\u6700\u4f18\u503c\u7b49\u4e8e\u5168\u5c40\u6700\u4f18\u503c\u65f6\u624d\u6709\u6548\u3002\u8d2a\u5a6a\u7b97\u6cd5\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6700\u4f18\u89e3\u3002 \u4f46\u662f\uff0c\u5b83\u901a\u5e38\u751f\u6210\u7684\u89e3\u5728\u503c\uff08\u542f\u53d1\u5f0f\uff09\u4e0a\u975e\u5e38\u63a5\u8fd1\u6700\u4f18\u3002</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#911-elements-of-the-greedy-stratege","title":"9.1.1 Elements of the Greedy Stratege","text":"<ol> <li> <p>Cast the optimization problem as one in which we make a choice and are left with one subproblem to solve.</p> <p>\u5c06\u4f18\u5316\u95ee\u9898\u8f6c\u6362\u4e3a:\u6211\u4eec\u505a\u51fa\u8d2a\u5fc3\u9009\u62e9\u540e\uff0c\u5269\u4f59\u4e00\u4e2a\u5b50\u95ee\u9898\u9700\u8981\u89e3\u51b3\u3002</p> </li> <li> <p>Prove that there is always an optimal solution to the original problem that makes the greedy choice, so that the greedy choice is always safe.</p> <p>\u8bc1\u660e\u505a\u51fa\u8d2a\u5fc3\u9009\u62e9\u540e\uff0c\u539f\u95ee\u9898\u603b\u662f\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u603b\u662f\u5b89\u5168\u7684</p> </li> <li> <p>Demonstrate optimal substructure by showing that, having made the greedy choice, what remains is a subproblem with the property that if we combine an optimal solution to the subproblem with the greedy choice we have made, we arrive at an optimal solution to the original problem. </p> <p>\u8bc1\u660e\u505a\u51fa\u8d2a\u5fc3\u9009\u62e9\u540e\uff0c<code>\u5269\u4f59\u7684\u5b50\u95ee\u9898\u6ee1\u8db3\u6027\u8d28\uff1a\u5176\u6700\u4f18\u89e3\u4e0e\u8d2a\u5fc3\u9009\u62e9\u7ec4\u5408\u5373\u53ef\u5f97\u5230\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3</code>\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6700\u4f18\u5b50\u7ed3\u6784\u3002</p> </li> </ol> <p>\u80fd\u7528\u8d2a\u5fc3\u7b97\u6cd5\u89e3\u51b3\u5148\u7528\u8d2a\u5fc3\u89e3\u51b3\uff0c\u4e0d\u80fd\u518d\u7528dp</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#912-\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u548c\u6700\u4f18\u5b50\u7ed3\u6784","title":"9.1.2 \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u548c\u6700\u4f18\u5b50\u7ed3\u6784","text":"<p>\u5bf9\u4e8e\u5927\u90e8\u5206\u95ee\u9898\u8d2a\u5fc3\u7b97\u6cd5\u7684\u8bc1\u660e\u800c\u8a00\uff0c\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u548c\u6700\u4f18\u5b50\u7ed3\u6784\u662f\u4e24\u4e2a\u5173\u952e\u8981\u7d20</p> <ol> <li> <p>\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\uff1a(<code>\u8d2a\u5fc3\u9009\u62e9\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u7684\u4e00\u90e8\u5206</code>)\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u505a\u51fa\u5c40\u90e8\u6700\u4f18\uff08\u8d2a\u5fc3\uff09\u9009\u62e9\u6765\u6784\u9020\u5168\u5c40\u6700\u4f18\u89e3\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u8fdb\u884c\u9009\u62e9\u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u505a\u51fa\u5728\u5f53\u524d\u95ee\u9898\u4e2d\u770b\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c\u4e0d\u5fc5\u8003\u8651\u5b50\u95ee\u9898\u7684\u89e3\u3002</p> <ul> <li>\u8fd9\u4e5f\u662f\u8d2a\u5fc3\u7b97\u6cd5\u4e0e\u52a8\u6001\u89c4\u5212\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u5728\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u9009\u62e9\uff0c\u4f46\u9009\u62e9\u901a\u5e38\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u89e3\u3002</li> <li>\u4f46\u5728\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u603b\u662f\u505a\u51fa\u5f53\u65f6\u770b\u6765\u6700\u4f73\u7684\u9009\u62e9\uff0c\u7136\u540e\u6c42\u89e3\u5269\u4e0b\u7684\u552f\u4e00\u7684\u5b50\u95ee\u9898\u3002\u8d2a\u5fc3\u7b97\u6cd5\u8fdb\u884c\u9009\u62e9\u65f6\u53ef\u80fd\u4f9d\u8d56\u4e4b\u524d\u505a\u51fa\u7684\u9009\u62e9\uff0c\u4f46\u4e0d\u4f9d\u8d56\u4efb\u4f55\u5c06\u6765\u7684\u9009\u62e9\u6216\u662f\u5b50\u95ee\u9898\u7684\u89e3\u3002</li> </ul> <p>\u901a\u8fc7\u5bf9\u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406\u6216\u8005\u4f7f\u7528\u9002\u5408\u7684\u6570\u636e\u7ed3\u6784\uff08\u901a\u5e38\u662f\u4f18\u5148\u961f\u5217\uff09\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u4f7f\u8d2a\u5fc3\u9009\u62e9\u66f4\u5feb\u901f\u3002\u5728\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u4e2d\uff0c\u5047\u5b9a\u6211\u4eec\u5df2\u7ecf\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u5355\u8c03\u9012\u589e\u987a\u5e8f\u6392\u597d\u5e8f\uff0c\u5219\u5bf9\u6bcf\u4e2a\u6d3b\u52a8\u53ea\u9700\u5904\u7406\u4e00\u6b21\u3002</p> </li> <li> <p>\u6700\u4f18\u5b50\u7ed3\u6784\uff1a\uff08<code>\u7528\u8d2a\u5fc3\u7b56\u7565\u9009\u62e9$a_1$\u4e4b\u540e\u5f97\u5230\u5b50\u95ee\u9898$S_1$,\u90a3\u4e48$a_1$\u548c\u5b50\u95ee\u9898$S_1$\u7684\u6700\u4f18\u89e3\u5408\u5e76\u4e00\u5b9a\u80fd\u591f\u5f97\u5230\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3</code>\uff09\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5305\u542b\u5176\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p> </li> </ol> <p>\u5982\u524d\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u6240\u8ff0\uff0c\u901a\u8fc7\u5bf9\u539f\u95ee\u9898\u5e94\u7528\u4e00\u6b21\u8d2a\u5fc3\u9009\u62e9\u5373\u53ef\u5f97\u5230\u5b50\u95ee\u9898\uff0c\u90a3\u4e48\u6700\u4f18\u5b50\u7ed3\u6784\u7684\u5de5\u4f5c\u5c31\u662f\u8bba\u8bc1\uff1a\u5c06\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4e0e\u8d2a\u5fc3\u9009\u62e9\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u786e\u80fd\u751f\u6210\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u9690\u542b\u5730\u5bf9\u5b50\u95ee\u9898\u4f7f\u7528\u4e86\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u8bc1\u660e\u4e86\u5728\u6bcf\u4e2a\u6b65\u9aa4\u5bf9\u5b50\u95ee\u9898\u8fdb\u884c\u8d2a\u5fc3\u9009\u62e9\uff0c\u4e00\u6b65\u4e00\u6b65\u63a8\u8fdb\u5c31\u4f1a\u751f\u6210\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#92-activity-selection-problem","title":"9.2 Activity Selection Problem","text":"<p>definition \"Activity Selection Problem\"</p> <p>Given a set of activities\\(S = { a_1, a_2, ..., a_n }\\) that wish to use a resouce (e.g. a classroom).  </p> <p>Activities\\(a_i\\) and\\(a_j\\) are compatible if\\(s_i \\geq f_j\\) or\\(s_j \\geq f_i\\) (i.e. their time intervals do not overlap).</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6d3b\u52a8\u96c6\u5408\\(S = {a1, a2, . . . , an}\\)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6d3b\u52a8\\(ai\\)\u90fd\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\\(si\\)\u548c\u7ed3\u675f\u65f6\u95f4\\(fi\\)\uff0c\u4e14\\(0 \u2264 s_i &lt; f_i &lt; \u221e\\)\u3002(Each\\(a_i\\) takes place during a time interval\\([s_i, f_i)\\).)\u5982\u679c\u6d3b\u52a8\\(a_i\\) \u548c\\(a_j\\)\u6ee1\u8db3\\(f_i \u2a7d s_j\\)\u6216\u8005\\(f_j \u2a7d s_i\\)\uff0c\u5219\u79f0\u6d3b\u52a8\\(a_i\\)\u548c\\(a_j\\) \u662f\u517c\u5bb9\u7684\uff08\u5373\u4e8c\u8005\u65f6\u95f4\u4e0d\u4f1a\u91cd\u5408\uff09\u3002\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684\u517c\u5bb9\u6d3b\u52a8\u5b50\u96c6\u3002</p> <p>Goal: Select a maximum-size subset of mutually compatible activities.</p> <p>Assume\\(f_1\\geq f_2 \\geq ... \\geq f_n\\).</p> <p>\u62bd\u8c61\u6765\u8bf4\u5c31\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684\u5bc6\u94fa\u95ee\u9898\u3002\u7ed9\u5b9a\u65f6\u95f4\u7ebf\u4e0a\u7684\u82e5\u5e72\u533a\u95f4\\([s_i, f_i)\\)\uff0c\u6c42\u51fa\u6700\u591a\u80fd\u4e0d\u91cd\u53e0\u5730\u5728\u8fd9\u4e2a\u65f6\u95f4\u7ebf\u4e0a\u653e\u7f6e\u591a\u5c11\u4e2a\u533a\u95f4\u3002\u9898\u76ee\u989d\u5916\u4fdd\u8bc1\u4e86\u8f93\u5165\u6570\u636e\u662f\u6839\u636e\\(f_i\\) \u6709\u5e8f\u7684</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#921-\u52a8\u6001\u89c4\u5212","title":"9.2.1 \u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\uff1a</p> <ol> <li> <p>\u8bbe\\(S_{ij}\\)\u8868\u793a\u6d3b\u52a8\\(a_i,a_j\\)\u4e4b\u95f4\u7684\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u96c6\u5408\uff08\u5f00\u59cb\u65f6\u95f4\u5728\\(a_i\\)\u7ed3\u675f\u4e4b\u540e\uff0c\u7ed3\u675f\u65f6\u95f4\u5728\\(a_{j}\\)\u5f00\u59cb\u4e4b\u524d\uff09\uff0c\u5176\u5927\u5c0f\u8bb0\u4e3a\\(c_{ij}\\)</p> <p>$$   c_{ij} = max{c_{ik} + c_{kj} + 1 | f_i&lt;= s_k &lt; f_k &lt;= s_j}  $$</p> <p><code>\u6b64\u5904\u7684\u52a01\u662f\u56e0\u4e3a\uff0c\u9700\u8981\u989d\u5916\u6dfb\u52a0a_k,c_{ik}\u8868\u793a\u7684\u662fa_k\u5f00\u59cb\u4e4b\u524d\uff0cc_{kj}\u8868\u793a\u7684\u662fa_k\u5f00\u59cb\u4e4b\u540e\uff0c\u7a7a\u4f59\u51fa\u4e00\u4e2aa_k</code></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a</p> <ul> <li>\u5148\u8ba1\u7b97\u95f4\u9694k=1\uff0c\\(c_{i,i+1} = 0\\) \u2014\u2014\\(N - 1\\)</li> <li>\u518d\u8ba1\u7b97\u95f4\u9694k=2\uff0c\\(c_{i,i+2}\\) \u2014\u2014\\(\uff08k - 1)*(N - k)\\)</li> </ul> <p>$$   \\begin{aligned}   &amp;\\sum_{k=2}^{N-1} (k-1)\\times (N-k) = (N-2)+2 \\times (N-3)+...+ (N-2) \\times 1= N \\times \\sum_{k=2}^{N-1} (k-1) - \\sum_{k=2}^{N-1} k\\times (k-1) \\   \\end{aligned}  $$</p> <p>\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N^2)\\)\u3002</p> </li> <li> <p>\u80cc\u5305\u95ee\u9898\u601d\u8def\uff1a</p> <p>\u8bbe\\(Si\\)\u8868\u793a\u6d3b\u52a8\\(a1, a2, . . . , ai\\)\u7684\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u96c6\u5408\uff0c\u5176\u5927\u5c0f\u8bb0\u4e3a\\(ci\\)(\u6d3b\u52a8\\(a_i\\)\u7ed3\u675f\u4e4b\u524d)\uff0c\u90a3\u4e48\u6211\u4eec\u6709</p> <p>$$   c_i = max{c_{i-1}, c_{k(i)}+1}  $$</p> <p>\u5206\u4e3a\u4e24\u4e2a\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <ul> <li>\u6d3b\u52a8\\(a_i\\)\u4e0d\u653e\uff0c\\(c_i = c_{i-1}\\)</li> <li>\u6d3b\u52a8\\(a_i\\)\u653e\u7f6e\uff0c\u4f46\u662f\u5f97\u53d6\u51fa\u4e00\u4e9b\u6d3b\u52a8.\u5176\u4e2d\\(k(i)\\) \u8868\u793a\u5728\\(1 \u2a7d k \u2a7d i\\)\u4e2d\uff0c\\(f_k \u2a7d s_i\\) \u4e14\\(c_k\\)\u6700\u5927\u7684\\(k\\)\uff0c\u5373\u4e0d\u4e0eai \u51b2\u7a81\u7684\u6700\u665a\u7ed3\u675f\u7684\u6d3b\u52a8\u3002\u4e8e\u662f\\(c_i = c_{k(i)} +1\\)</li> </ul> <p>\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N^2)\\)\u3002</p> </li> <li> <p></p> <p><code>\u5bf9\u4e8e\u5e26\u6743\u91cd\u95ee\u9898\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u6c42\u5f97\u6700\u4f18\u89e3,\u4f46\u662f\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u4f9d\u7136\u6210\u7acb</code></p> </li> </ol>"},{"location":"ADS/9.%20Greedy%20Algorithms/#922-\u8d2a\u5fc3\u7b97\u6cd5","title":"9.2.2 \u8d2a\u5fc3\u7b97\u6cd5","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\uff1a<code>\u4e00\u4e2a\u53ef\u80fd\u6b63\u786e\u7684\u8d2a\u5fc3\u7b56\u7565\u4e3a\u4ece\u524d\u5230\u540e\u6bcf\u6b21\u9009\u62e9\u4e0d\u51b2\u7a81\u7684\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8</code></p> <ol> <li> <p>\u8d2a\u5fc3\u7b97\u6cd5\u4e00\uff1a\u54ea\u95e8\u8bfe\u5148\u5f00\u59cb\u6211\u5148\u9009\u54ea\u95e8\u8bfe\uff0c\u4f46\u662f\u663e\u7136\u4e0d\u5bf9\u3002</p> <p>\u53cd\u4f8b\uff1a\u5f00\u59cb\u6700\u65e9\u7ed3\u675f\u6700\u665a</p> <p></p> </li> <li> <p>\u8d2a\u5fc3\u7b97\u6cd5\u4e8c\uff1a\u6bcf\u6b21\u90fd\u9009\u533a\u95f4\u957f\u5ea6\u6700\u5c11\u7684\uff0c\u867d\u7136\u770b\u8d77\u6765\u80fd\u8ba9\u5b83\u201c\u76f8\u5bf9\u6bd4\u8f83\u591a\u201d\uff0c\u4f46\u662f\u663e\u7136\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u7ed3\u679c\u7684\u6700\u4f18\u6027</p> <p></p> </li> <li> <p>\u8d2a\u5fc3\u7b97\u6cd5\u4e09\uff1a\u9009\u62e9\u91cd\u53e0\u6700\u5c11\u7684</p> <p></p> </li> <li> <p>\u8d2a\u5fc3\u7b97\u6cd5\u56db\uff1a\u9009\u62e9\u6700\u65e9\u7ed3\u675f\u7684</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u5148\u6765\u9a8c\u8bc1\u8fd9\u4e00\u7b56\u7565\u7684\u6b63\u786e\u6027</p> <p>\u4ee4\\(S_k = \\{a_i \\in S | s_i &gt;= f_k\\}\\),\\(S_k\\)\u8868\u793a\u5728\\(a_k\\)\u7ed3\u675f\u540e\u5f00\u59cb\u7684\u4efb\u52a1\u3002\u5f53\u6211\u4eec\u505a\u51fa\u8d2a\u5fc3\u9009\u62e9\uff0c\u9009\u62e9\\(a_1\\)\u540e\uff0c\u5269\u4e0b\u7684\u6211\u4eec\u53ea\u9700\u8981\u6c42\u89e3S1\u8fd9\u4e00\u5b50\u95ee\u9898\u3002</p> <p>\u5982\u679c\\(a_1\\)\u786e\u5b9e\u5728\u6700\u4f18\u89e3\u4e2d\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\u663e\u7136\u662f\u7531\u6d3b\u52a8\\(a_1\\)\u548c\u5b50\u95ee\u9898\\(S_1\\)\u7684\u6700\u4f18\u89e3\u6784\u6210\u3002\uff08<code>\u8fd9\u4e00\u70b9\u79f0\u4e4b\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6700\u4f18\u5b50\u7ed3\u6784</code>\uff09\u3002\u4e4b\u540e\u5b50\u95ee\u9898\\(S_1\\)\u6211\u4eec\u53c8\u53ef\u4ee5\u6309\u7167\u8d2a\u5fc3\u7b56\u7565\u9009\u62e9\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u80fd\u591f\u5f97\u5230\u5168\u90e8\u7684\u89e3\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u8d2a\u5fc3\u9009\u62e9\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\u662f\u5426\u662f\u6700\u4f18\u89e3\u7684\u4e00\u90e8\u5206\uff1f</p> <p>\u3010<code>\u5b9a\u7406\uff1a\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u7684\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28</code>\u3011 \u8003\u8651\u4efb\u4f55\u975e\u7a7a\u5b50\u95ee\u9898\\(S_k\\)\uff0c\u5e76\u8bbe\\(a_m\\) \u662f\\(S_k\\) \u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\u3002 \u7136\u540e\\(a_m\\)\u5305\u542b\u5728\\(S_k\\)\u7684\u76f8\u4e92\u517c\u5bb9\u6d3b\u52a8\u7684\u4e00\u4e9b\u6700\u5927\u5927\u5c0f\u7684\u5b50\u96c6\u4e2d\u3002</p> <p></p> <ul> <li>\u4ee4\\(A_k\\)\u662f\\(S_k\\)\u7684\u4e00\u4e2a\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u5b50\u96c6\uff0c\u4e14\\(a_{ef}\\)\u662f\\(A_k\\)\u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\u3002</li> <li>\u5982\u679c\\(a_m = a_{ef}\\),\u4e0a\u8ff0\u5b9a\u7406\u76f4\u63a5\u6210\u7acb\uff0c\u6b64\u65f6\\(S_k\\)\u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\\(a_m\\)\u5df2\u7ecf\u5305\u542b\u5728\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u5b50\u96c6\\(A_k\\)\u4e2d</li> <li>\u5982\u679c\\(a_m != a_{ef}\\),\u5219\u7528\\(a_m\\)\u66ff\u4ee3\\(a_{ef}\\),\u56e0\u4e3a\\(a_m\\)\u662f\\(S_k\\)\u4e2d\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u8bf4\u660e\\(a_m\\)\u7684\u7ed3\u675f\u65f6\u95f4\u6bd4\\(a_{ef}\\)\u7684\u7ed3\u675f\u65f6\u95f4\u8fd8\u65e9\uff0c\u4e5f\u5c31\u662f\u5f97\u5230\u7684\u65b0\u7684\u6700\u4f18\u89e3\\(A_{k'}\\),\u4e5f\u662f\\(S_k\\)\u7684\u4e00\u4e2a\u6700\u5927\u517c\u5bb9\u6d3b\u52a8\u5b50\u96c6\u3002</li> </ul> <p>\u4e0a\u8ff0\u7684\u601d\u60f3\u662f\uff1a\u201c\u4ea4\u6362\u53c2\u6570\u6cd5\u201d\uff0c\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u9009\u62e9\uff0c\u5176\u4e2d\u67d0\u4e2a\u5143\u7d20\u53ef\u80fd\u4e0d\u5728\u6211\u4eec\u7684\u8d2a\u5fc3\u9009\u62e9\u4e2d\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362\u8d2a\u5fc3\u9009\u62e9\u548c\u6700\u4f18\u9009\u62e9\u7684\u5143\u7d20\u6765\u6784\u9020\u4e00\u4e2a\u4e0d\u53ef\u80fd\u53d8\u5dee\u7684\u89e3\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u8bf4\u660e\u8d2a\u5fc3\u9009\u62e9\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u662f\u6700\u4f18\u9009\u62e9\u7684\u4e00\u79cd</p> <p>\u3010<code>\u5b9a\u7406\uff1a\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u7684\u6700\u4f18\u5b50\u7ed3\u6784</code>\u3011\u5728\u6d3b\u52a8\u9009\u62e9\u95ee\u9898\u4e2d\uff0c\u7528\u8d2a\u5fc3\u7b56\u7565\u9009\u62e9\\(a_1\\)\u4e4b\u540e\u5f97\u5230\u5b50\u95ee\u9898\\(S_1\\),\u90a3\u4e48\\(a_1\\)\u548c\u5b50\u95ee\u9898\\(S_1\\)\u7684\u6700\u4f18\u89e3\u5408\u5e76\u4e00\u5b9a\u80fd\u591f\u5f97\u5230\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3</p> <p><code>\u53cd\u8bc1\u6cd5\uff1a</code>\u5047\u8bbe\\(a_1\\)\u548c\u5b50\u95ee\u9898\\(S_1\\)\u7684\u6700\u4f18\u89e3\\(C_1\\)\u5408\u5e76\u5f97\u5230\u7684\u89e3\\(\\(C\\)\\)\u4e0d\u662f\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3</p> <ul> <li>\u5148\u5047\u8bbe\\(C'\\)\u662f\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\\(|C'| &gt; |C|\\)\u3002</li> <li>\u6839\u636e\u8d2a\u5fc3\u9009\u62e9\u7684\u6027\u8d28\uff0c\\(a_1\\)\u7684\u7ed3\u675f\u65f6\u95f4\u80af\u5b9a\u6bd4\\(C'\\)\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7ed3\u675f\u65f6\u95f4\u65e9\uff0c\u6240\u4ee5\u6211\u4eec\u7528\\(a_1\\)\u66ff\u6362\u6389\\(C'\\)\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4e0d\u4f1a\u4f7f\u7ed3\u679c\u53d8\u5dee\uff0c\\(|C''| = |C'| &gt; |C|\\)</li> <li>\u63a5\u4e0b\u6765\u6211\u4eec\u53bb\u9664\\(C''\\)\u4e2d\u7684\\(a_1\\),\u5f97\u5230\u5b50\u95ee\u9898\\(S_1\\)\u7684\u4e00\u4e2a\u89e3\\(C_1''\\),\u7531\u4e8e\\(|C''| &gt; |C|\\),\u6240\u4ee5\\(|C_1''| &gt; |C_1|\\),\u8fd9\u4e0e\\(C_1\\)\u662f\u5b50\u95ee\u9898\\(S_1\\)\u7684\u6700\u4f18\u89e3\u77db\u76fe</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\u5982\u679c\u7ed3\u675f\u65f6\u95f4\u5df2\u7ecf\u5b8c\u6210\u6392\u5e8f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u904d\u5386\u4e00\u904d\u6240\u6709\u6d3b\u52a8\uff0c\u5c31\u80fd\u5728\\(O(N)\\)\u7684\u65f6\u95f4\u5185\u627e\u5230\u6700\u4f18\u89e3\u3002\u6ca1\u6709\u6392\u5e8f\uff0c\u5c31\u5148\u4ee5\\(O(NlogN)\\)\u7684\u65f6\u95f4\u5b8c\u6210\u6392\u5e8f\uff0c\u6700\u540e\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\\(O(NlogN)\\)</p> <p><code>\u7efc\u4e0a\uff1a</code></p> <p>\u6211\u4eec\u9996\u5148\u6839\u636e\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u627e\u5230\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\\(a_1\\)\uff0c\u6839\u636e\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u53ef\u77e5\uff0c\u5b83\u548c\\(S_1\\)\u7684\u6700\u4f18\u89e3\u4e00\u8d77\u53ef\u4ee5\u5f62\u6210\u5168\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u7136\u540e\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u53d8\u6210\u4e86\u627e\\(S_1\\) \u7684\u6700\u4f18\u89e3\u3002\u91cd\u590d\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\uff0c\u6211\u4eec\u8981\u627e\u5230\\(S_1\\) \u4e2d\u6700\u65e9\u7ed3\u675f\u7684\\(a_{i1}\\) \u4f5c\u4e3a\u8d2a\u5fc3\u9009\u62e9\uff0c\u8fd9\u6837\u6839\u636e\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\\(S_1\\) \u7684\u6700\u4f18\u89e3\u53c8\u53ef\u4ee5\u8868\u8fbe\u4e3a\\(a_{i1}\\)\u548c\u5269\u4f59\u5b50\u95ee\u9898\\(S_{i1}\\) \u7684\u6700\u4f18\u89e3\u7684\u7ec4\u5408\uff0c\u7136\u540e\u6211\u4eec\u627e\\(S_{i1}\\) \u7684\u6700\u4f18\u89e3\uff0c\u7528\u8d2a\u5fc3\u9009\u62e9\u7136\u540e\u5f97\u5230\u5269\u4f59\u5b50\u95ee\u9898...... \u4ee5\u6b64\u7c7b\u63a8\uff0c\u5229\u7528\u5f52\u7eb3\u6cd5\u5373\u53ef\u5f97\u5230\uff0c\u76f4\u5230\u5b50\u95ee\u9898\u4e3a\u7a7a\u65f6\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002</p> </li> </ol> <p>\u3010<code>\u53d8\u4f531\uff1a\u52a0\u6743\u6d3b\u52a8\u9009\u62e9\u95ee\u9898</code>\u3011\u6bcf\u4e00\u4e2a\u6d3b\u52a8\u90fd\u6709\u4e00\u4e2a\u6743\u91cd\\(w_i\\),\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u6700\u5927\u6743\u91cd\u7684\u517c\u5bb9\u6d3b\u52a8\u96c6\u5408\u3002\u6b64\u65f6\u4e0a\u8ff0\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5931\u6548\uff0c\u4e0d\u518d\u662f\u5e0c\u671b\u5305\u542b\u7684\u6d3b\u52a8\u8d8a\u591a\u8d8a\u597d\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u5e26\u6743\u91cd\u7684\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3\u3002</p> <p>\u3010<code>\u53d8\u4f532\uff1a\u533a\u95f4\u8c03\u5ea6\u95ee\u9898</code>\u3011\u95ee\u9898\u4e0d\u518d\u662f\u6700\u5927\u5316\u517c\u5bb9\u96c6\u5408\u7684\u5927\u5c0f\u6216\u8005\u6743\u91cd\uff0c\u800c\u662f\u8f6c\u5316\u4e3a\uff1a\u6bcf\u4e00\u4e2a\u6d3b\u52a8\u90fd\u9700\u8981\u6559\u5e08\u8fdb\u884c\u4e3e\u529e\uff0c\u8003\u8651\u5c06\u6240\u6709\u7684\u6d3b\u52a8\u5206\u914d\u5230\u6700\u5c11\u7684\u6559\u5ba4\uff0c\u4e14\u6bcf\u4e2a\u6559\u5ba4\u7684\u6d3b\u52a8\u4e0d\u51b2\u7a81\u3002</p> <p>\u601d\u8def\u662f\uff1a\u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u8bbe\u7f6e\u6559\u5ba4\u7684\u521d\u59cb\u6570\u91cf\u4e3a1\uff0c\u4ece\u524d\u5f80\u540e\u904d\u5386\uff0c\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6d3b\u52a8\uff0c\u5148\u770b\u5f53\u524d\u6559\u5ba4\u6709\u65e0\u7a7a\u4f59\uff0c\u5982\u679c\u5168\u90e8\u90fd\u51b2\u7a81\u5c31\u65b0\u5f00\u4e00\u4e2a\u6559\u5ba4\u3002</p> <p>\u7b80\u5316\u540e\uff1a\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u5728\u67d0\u4e00\u65f6\u6bb5\u6d3b\u52a8\u51b2\u7a81\u7684\u6700\u5927\u6570\u91cf\u3002\u5047\u8bbe\u6700\u591a\u51fa\u73b03\u4e2a\u6d3b\u52a8\u540c\u65f6\u8fdb\u884c\uff0c\u6700\u591a\u5206\u914d3\u4e2a\u6559\u5ba4\u3002\u56e0\u4e3a\u53ea\u6709\u5728\u5168\u90e8\u51b2\u7a81\u65f6\u624d\u80fd\u65b0\u5f00\u4e00\u4e2a\u6559\u5ba4\uff0c\u6240\u4ee5\u5206\u914d\u7b2c\u56db\u4e2a\u6559\u5ba4\u610f\u5473\u7740\u524d\u4e09\u4e2a\u6559\u5ba4\u90fd\u6709\u6d3b\u52a8\uff0c\u6709\u56db\u4e2a\u6d3b\u52a8\u540c\u65f6\u8fdb\u884c\uff0c\u4e0e\u524d\u63d0\u77db\u76fe</p> <p></p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#93-\u8c03\u5ea6\u95ee\u9898","title":"9.3 \u8c03\u5ea6\u95ee\u9898","text":"<p>\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6709\\(n\\) \u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\\(i\\)\u90fd\u6709\u4e00\u4e2a\u6b63\u7684\u5b8c\u6210\u9700\u8981\u7684\u65f6\u95f4\\(l_i\\)\u548c\u4e00\u4e2a\u6743\u91cd\\(w_i\\)\u3002\u5047\u5b9a\u6211\u4eec\u53ea\u80fd\u6309\u4e00\u5b9a\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\uff0c\u4e0d\u80fd\u5e76\u884c\u3002</p> <p>\u8bb0\\(\\sigma\\)\u4e3a\u4e00\u79cd\u8c03\u5ea6\u65b9\u6cd5\uff0c\u5728\u8c03\u5ea6\\(\\sigma\\)\u4e2d\uff0c\u4efb\u52a1\\(i\\)\u7684\u5b8c\u6210\u65f6\u95f4\u4e3a\\(C_i(\\sigma)\\),\u8868\u793a\u4efb\u52a1\\(i\\)\u4e4b\u524d\u7684\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u4e4b\u548c\u52a0\u4e0a\u4efb\u52a1\\(i\\)\u672c\u8eab\u7684\u5b8c\u6210\u65f6\u95f4<code>\u8981\u6c42\uff1a\u6700\u5c0f\u5316\u52a0\u6743\u5b8c\u6210\u65f6\u95f4\u4e4b\u548c</code> $$ T = min \\sum_{i = 1} ^ n w_i C_i(\\sigma) $$ \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6709\u4e09\u4e2a\u4efb\u52a1\uff0c\\(l_1 = 1\uff0cl_2 = 2\uff0cl_3 = 3\uff0cw_1 = 3\uff0cw_2 = 2\uff0cw_3 = 1\\)\u3002\u5982\u679c\u6211\u4eec\u628a\u7b2c\u4e00\u4e2a\u4efb\u52a1\u653e\u5728\u6700\u524d\uff0c\u7b2c\u4e8c\u4e2a\u653e\u5728\u5176\u6b21\uff0c\u7b2c\u4e09\u4e2a\u653e\u5728\u6700\u540e\uff0c\u90a3\u4e48\u4e09\u4e2a\u4efb\u52a1\u7684\u5b8c\u6210\u65f6\u95f4\u5c31\u662f1\u30013\u30016\uff0c\u56e0\u6b64\u52a0\u6743\u65f6\u95f4\u548c\u4e3a\\(3 \u00d7 1 + 2 \u00d7 3 + 1 \u00d7 6 = 15\\)\u3002\u5982\u679c\u8bfb\u8005\u68c0\u67e5\u5168\u90e8\u7684\u516d\u79cd\u6392\u5e8f\uff0c\u8fd9\u7684\u786e\u662f\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002</p> <p>\u5047\u5982\u6240\u6709\u7684\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u90fd\u76f8\u7b49\uff0c\u4e3a\u4e86\u4f7f\u52a0\u6743\u5b8c\u6210\u65f6\u95f4\u6700\u5c0f\uff0c\u663e\u7136\u8981\u5c06<code>\u6743\u91cd\u6700\u5927\u65f6\u95f4\u6700\u77ed</code>\u7684\u4efb\u52a1\u653e\u5728\u524d\u9762\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u7684\u8d2a\u5fc3\u7b56\u7565\uff1a</p> <ul> <li>\u8ba1\u7b97\u6bcf\u4e2a\u4efb\u52a1i\u7684\\(w_i - l_i\\),\u6309\u7167\u5927\u5c0f\u964d\u5e8f\u8c03\u5ea6\u4efb\u52a1</li> <li>\u8ba1\u7b97\u6bcf\u4e2a\u4efb\u52a1i\u7684\\(\\dfrac{w_i}{l_i}\\),\u6309\u7167\u5927\u5c0f\u964d\u5e8f\u8c03\u5ea6\u4efb\u52a1</li> </ul> <p>\u968f\u4fbf\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u770b\u770b\u54ea\u4e2a\u65b9\u6cd5\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\u6709\u4e24\u4e2a\u4efb\u52a1\uff0c\\(l_1 = 5, l_2 = 2, w_1= 3, w_2 = 1\\)</p> <ul> <li>\u6309\u7167\u7b2c\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\u8fdb\u884c\u8ba1\u7b97\uff0c\u5148\u6267\u884c\u4efb\u52a12\uff0c\u518d\u6267\u884c\u4efb\u52a11\uff0c\u603b\u65f6\u95f4\u4e3a\\(2 + 3 * 7 = 23\\)</li> <li>\u6309\u7167\u7b2c\u4e8c\u4e2a\u8d2a\u5fc3\u7b56\u7565\u8fdb\u884c\u8ba1\u7b97\uff0c\u5148\u6267\u884c\u4efb\u52a11\uff0c\u518d\u6267\u884c\u4efb\u52a12\uff0c\u603b\u65f6\u95f4\u4e3a\\(3 * 5 + 7 = 22\\)</li> </ul> <p>\u53d1\u73b0\u8fd8\u662f\u8d2a\u5fc3\u7b56\u75652\u66f4\u80dc\u4e00\u7b79</p> <p>\u3010<code>\u5b9a\u7406\uff1a\u8c03\u5ea6\u95ee\u9898\u7684\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28</code>\u3011\u4ee4\\(i\\)\u662f\u5f53\u524d\\(w_i / l_i\\)\u6700\u5927\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u5c06\u4efb\u52a1\\(i\\)\u6392\u5728\u9996\u4f4d\u7684\u6700\u4f18\u8c03\u5ea6\u65b9\u5f0f</p> <p>\u8bc1\u660e\uff1a\u4f9d\u7136\u662f\u201c\u4ea4\u6362\u53c2\u6570\u6cd5\u201d\uff0c\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u89e3C\uff0c\u5982\u679c\u5b83\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\\(i\\)\uff0c\u90a3\u4e48\u5b9a\u7406\u6210\u7acb\u3002\u5982\u679c\u5b83\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\\(j\\)\uff0c\u4e14\\(i != j\\),\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u4efb\u52a1\\(i\\)\u5f80\u524d\u79fb\u52a8\uff0c\u76f4\u5230\u7b2c\u4e00\u4f4d\u3002</p> <p>\u73b0\u5047\u8bbe\uff0c\u539f\u5148\u7684\u6700\u4f18\u89e3C\u4e2d\u4efb\u52a1\\(j\\)\u662f\u7b2c\u4e00\u4f4d\uff0c\u4efb\u52a1\\(i\\)\u662f\u7b2c\u4e8c\u4f4d\uff0c\u6700\u4f18\u89e3\\(C'\\)\u4e2d\u4efb\u52a1i\u662f\u7b2c\u4e00\u4f4d\uff0c\u4efb\u52a1j\u662f\u7b2c\u4e8c\u4f4d\u3002</p> <p><code>\u4e3a\u4ec0\u4e48\u4ec5\u4ec5\u8003\u8651\u7b2c\u4e00\u4f4d\u548c\u7b2c\u4e8c\u4f4d\u4ea4\u6362\u5462\uff1f\u5047\u5982j\uff0ci\u7684\u524d\u9762\u6709n\u4e2a\u4efb\u52a1\uff0c\u663e\u7136\u524dn\u4e2a\u4efb\u52a1\u7684\u52a0\u6743\u5b8c\u6210\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5bf9\u4e8e\u4efb\u52a1i\u548c\u4efb\u52a1j\uff0c\u65e0\u975e\u662f\u9700\u8981\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a\u5e38\u6570\uff08\u524dn\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u603b\u548c\uff09\u00d7\u6743\u91cd\uff0c\u53d1\u73b0\u6700\u7ec8\u76f8\u51cf\u7684\u65f6\u5019\u80fd\u591f\u6d88\u53bb</code></p> \\[ \\begin{aligned} &amp; t_1 = w_j \\times l_j + w_i \\times (l_j + l _i) \\\\ &amp; t_2 = w_i \\times l_i + w_j \\times (l_i + l_j) \\\\ &amp; \\Delta t = t_1 - t_2 = w_i \\times  l_j - w_j \\times l_i \\\\ &amp; \\dfrac{w_i}{l_i} &gt;= \\dfrac{w_j}{l_j}  \\rightarrow w_i \\times l_j &gt;= w_j \\times l_i \\rightarrow \\Delta t &gt;= 0 \\end{aligned} \\] <p>\u6545\u628a\\(i\\)\u5f80\u524d\u6362\uff0c\u52a0\u6743\u65f6\u95f4\u548c\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u5927\uff0c\u6545\u4ecd\u7136\u4fdd\u8bc1\u6700\u4f18\u89e3\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u65ad\u628a\\(i\\)\u5f80\u524d\u6362\uff0c\u76f4\u5230\u5b83\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u8bc1\u660e\u4e86\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u3002</p> <p>\u3010<code>\u5b9a\u7406\uff1a\u8c03\u5ea6\u95ee\u9898\u7684\u6700\u4f18\u5b50\u7ed3\u6784</code>\u3011\u5728\u8c03\u5ea6\u95ee\u9898S\u4e2d\uff0c\u6211\u4eec\u7528\u8d2a\u5fc3\u7b56\u7565\u9996\u5148\u9009\u62e9\u5177\u6709\u6700\u5927\\(w_i / l_i\\)\u7684\u4efb\u52a1\\(i\\) , \u4efb\u52a1\\(i\\)\u548c\u5269\u4f59\u5b50\u95ee\u9898\\(S_1\\)\uff08\u9664\u4efb\u52a1i\u5916\u4efb\u52a1\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6700\u5c0f\u5316\u52a0\u6743\u5b8c\u6210\u65f6\u95f4\u4e4b\u548c\u7684\u89e3\uff09\u7684\u6700\u4f18\u89e3\\(C_1\\)\u4e00\u8d77\u6784\u6210\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3\\(C\\)\u3002</p> <p>\u4f9d\u7136\u662f\u91c7\u7528\u53cd\u8bc1\u6cd5\uff1a</p> <p>\u5982\u679cC\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4e00\u5b9a\u5b58\u5728\u6700\u4f18\u89e3\\(C'\\),\u5b83\u5bf9\u5e94\u7684\u52a0\u6743\u5b8c\u6210\u65f6\u95f4\u4e4b\u548c\\(T' &lt; T\\)</p> <p>\u6839\u636e\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\uff0c\u5982\u679c\u628a\\(C'\\)\u4e2d\u7684\\(i\\) \u4e0d\u65ad\u901a\u8fc7\u76f8\u90bb\u4ea4\u6362\u6362\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u60c5\u51b5\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u5dee\uff0c\u56e0\u6b64\u8fd8\u662f\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u5c06\u8fd9\u4e00\u65b0\u7684\u6700\u4f18\u89e3\u8bb0\u4e3a\\(C''\\)\u3002\u4e8e\u662f\\(C''\\) \u5728\u9009\u62e9\u4e86\\(i\\) \u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u9009\u62e9\u5b9e\u9645\u4e0a\u4e5f\u662f\\(S1\\) \u7684\u4e00\u4e2a\u89e3\uff0c\u7531\u4e8e\\(T'' &lt;= T' &lt; T\\)\uff0c\u8fd9\u8868\u660e\\(C''\\) \u4e2d\u5bf9\u5e94\u7684\\(S1\\) \u7684\u89e3\u5fc5\u5b9a\u6bd4\\(C1\\) \u66f4\u597d\uff0c\u4f46\u6211\u4eec\u77e5\u9053\\(C1\\)\u662f\u6700\u4f18\u89e3\uff0c\u56e0\u6b64\u5f97\u5230\u77db\u76fe\u3002\u6240\u4ee5\\(C1\\) \u548c\\(i\\)\u4e00\u8d77\u4e00\u5b9a\u6784\u6210\u4e86\u539f\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3C\u3002</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#94-huffman-codes","title":"9.4 Huffman Codes","text":"<p>Huffman Codes\u2014\u2014for file compression</p> <p>\u3016Example\u3017 Suppose our text is a string of length 1000 that comprises the characters  a, u, x, and z.  Then it will take   8000  bits to store the string as 1000 one-byte characters.</p> <p>\u200b    We may encode the symbols as a = 00, u = 01, x = 10, z  = 11.   For example, aaaxuaxz is encoded as 0000001001001011.  Then the space taken by the string with length 1000 will be  2000 bits + space for code table. </p> <p>/ log C bits are needed in a standard encoding where C is the size of the character set /</p> <p>\u73b0\u5728\u5c06\u9891\u7387\u8003\u8651\u5728\u5185\uff1a</p> <p>In string  aaaxuaxz ,   f(a) = 4,  f(u) = 1,  f(x) = 2,  f(z) = 1.</p> <p>The size of the coded string can be reduced using variable-length codes, for example, a = 0, u = 110, x = 10, z  = 111.\\(\\rightarrow 00010110010111\\)</p> <p></p> <p><code>\u9632\u6b62\u51fa\u73b0\u6b67\u4e49\uff0c\u4e5f\u5c31\u662f\u9632\u6b62\u51fa\u73b0\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u7684\u524d\u7f00</code></p> <pre><code>void Huffman ( PriorityQueue  heap[ ],  int  C )\n{   consider the C characters as C single node binary trees,\n     and initialize them into a min heap;\n     for ( i = 1; i &lt; C; i++ ) { \n        create a new node;\n        /* be greedy here */\n        delete root from min heap and attach it to left_child of node;\n        delete root from min heap and attach it to right_child of node;\n        weight of node = sum of weights of its children;\n        /* weight of a tree = sum of the frequencies of its leaves */\n        insert node into min heap;\n   }\n}\n</code></pre> <p>\u7b97\u6cd5\u601d\u8def\u662f\uff1a</p> <ol> <li>\u4ece\u6839\u636e\u9891\u7387\u5efa\u7acb\u7684\u6700\u5c0f\u5806\u4e2d\u53d6\u51fa\u5e76\u5220\u9664root\uff0c\u4f5c\u4e3a\u65b0node\u7684\u5de6\u513f\u5b50</li> <li>\u4ece\u6700\u5c0f\u5806\u4e2d\u53d6\u51fa\u5e76\u5220\u9664root\uff0c\u4f5c\u4e3a\u65b0node\u7684\u53f3\u513f\u5b50</li> <li>\u65b0node\u7684weight\u5c31\u662f\u4e24\u4e2a\u513f\u5b50\u7684weight\u4e4b\u548c</li> <li>\u6700\u540e\u5c06\u65b0\u7684node\u63d2\u5165\u5230\u6700\u5c0f\u5806\u4e2d</li> </ol> <p>\u5c06C\u4e2acharacter\uff0c\u4e0d\u65ad\u5730\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u9700\u8981\u6267\u884cC-1\u6b21</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T = O(ClogC)\\)</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>1. \u9891\u7387\u6700\u4f4e\u7684\u4e24\u4f4d\u7f16\u7801\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u4e0d\u540c</p> <p>2. \u9891\u7387\u6700\u9ad8\u7684\u653e\u5728\u6839\u7ed3\u70b9\u9644\u8fd1\uff08\u9ad8\u4f4d\uff09</p> <p></p> <p>\u3010<code>\u5b9a\u7406\uff1a\u8d2a\u5a6a\u9009\u62e9\u6027\u8d28</code>\u3011\\(C\\) \u4e3a\u4e00\u4e2a\u5b57\u6bcd\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\\(c \u2208 C\\)\u90fd\u6709\u4e00\u4e2a\u9891\u7387\\(c.freq\\)\u3002\u4ee4\\(x\\)\u548c\\(y\\)\u662fC \u4e2d\u9891\u7387\u6700\u4f4e\u7684\u4e24\u4e2a\u5b57\u7b26\u3002\u90a3\u4e48\u5b58\u5728C \u7684\u4e00\u4e2a<code>\u6700\u4f18\u524d\u7f00\u7801</code>\uff0cx \u548cy \u7684\u7801\u5b57\u957f\u5ea6\u76f8\u540c\uff0c\u4e14\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u540c\u3002</p> <p>\u9891\u7387\u6700\u4f4e\u7684character\\(x,y\\)\u7684\u7f16\u7801\u957f\u5ea6\u76f8\u540c\uff0c\u4e14\u5177\u6709\u76f8\u540c\u524d\u7f00\uff0c\u8fd9\u4e2a\u7f16\u7801\u65b9\u5f0f\u4e00\u5b9a\u6700\u4f18\u89e3</p> <p>\u6211\u4eec\u7684\u601d\u8def\u662f\uff1a\u4ee4\\(T\\)\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7801\u5bf9\u5e94\u7684\u7f16\u7801\u6811\uff0c\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u5f97\u5230\u53e6\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7801\u7684\u7f16\u7801\u6811\\(T'\\),\u4f7f\u5f97\u5728\u65b0\u6811\u4e2d\uff0cx\u548cy\u662f\u6df1\u5ea6\u6700\u5927\u7684\u53f6\u7ed3\u70b9\uff0c\u4e14\u4e3a\u5144\u5f1f\u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740x\u548cy\u7684\u7f16\u7801\u5177\u6709\u76f8\u540c\u957f\u5ea6\uff0c\u4e14\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u4e0d\u540c\u3002</p> <p>\u7ecf\u9a8c\u8bc1\uff0c\u663e\u7136\\(Cost(T') &lt;= Cost(T)\\),\u65b0\u7684\u6811\u7684\u4ee3\u4ef7\u5c0f\u4e8e\u7b49\u4e8e\u539f\u6765\u7684\u6811\uff0c\u5f97\u5230\u65b0\u7684\u6700\u4f18\u89e3</p> <p></p> <p>\u3010<code>\u5b9a\u7406\uff1a\u6700\u4f18\u5b50\u7ed3\u6784</code>\u3011\\(C\\) \u4e3a\u4e00\u4e2a\u5b57\u6bcd\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b57\u7b26\\(c \u2208 C\\) \u90fd\u6709\u4e00\u4e2a\u9891\u7387\\(c.freq\\)\u3002\u4ee4\\(x\\)\u548c\\(y\\)\u8868\u793a\\(C\\) \u4e2d\u9891\u7387\u6700\u4f4e\u7684\u4e24\u4e2a\u5b57\u7b26\u3002\u4ee4\\(C'\\) \u4e3a\\(C\\) \u53bb\u6389\u5b57\u7b26\\(x\\)\u548c\\(y\\)\uff0c\u52a0\u5165\u4e00\u4e2a\u65b0\u5b57\u7b26\\(z\\)\u540e\u7684\u5b57\u6bcd\u8868\u3002\u6211\u4eec\u7ed9\\(C'\\)\u4e5f\u5b9a\u4e49\u9891\u7387\u96c6\u5408\uff0c\u4e0d\u540c\u4e4b\u5904\u53ea\u662f\\(z.freq = x.freq + y.freq\\)\u3002\u4ee4\\(T'\\) \u4e3a\\(C'\\)\u7684\u4efb\u610f\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\\(T'\\)\u4e2d\u53f6\u7ed3\u70b9\\(z\\) \u66ff\u6362\u4e3a\u4e00\u4e2a\u4ee5\\(x\\)\u548c\\(y\\) \u4e3a\u5b69\u5b50\u7684\u5185\u90e8\u7ed3\u70b9\u5f97\u5230\u4e00\u4e2a\\(C\\)\u7684\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7801\u6811\\(T\\)\u3002</p> <p>\u5982\u679c\u4e0a\u9762\u8fd9\u4e00\u547d\u9898\u6b63\u786e\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\\(x\\) \u548c\\(y\\) \u5f97\u5230\\(z\\)\u4e4b\u540e\uff0c\u6309\u7167\u6ca1\u6709\\(x\\) \u548c\\(y\\)\uff0c\u53ea\u6709\\(z\\)\u7684\u5b50\u95ee\u9898\u7ee7\u7eed\u63a8\u8fdb\u6211\u4eec\u7684\u8d2a\u5fc3\u7b97\u6cd5\u53ef\u4ee5\u5f97\u5230\\(T'\\) \u8fd9\u4e00\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u5b83\u548c\u5408\u5e76\\(x\\) \u548c\\(y\\) \u5f97\u5230\\(z\\) \u8fd9\u4e00\u524d\u9762\u5df2\u7ecf\u9a8c\u8bc1\u6b63\u786e\u6027\u7684\u8d2a\u5fc3\u9009\u62e9\u4e00\u8d77\uff0c\u5c31\u6784\u6210\u4e86\u6574\u4f53\u7684\u6700\u4f18\u89e3\u3002</p> <p><code>\u53cd\u8bc1\u6cd5\uff1a</code>\u8bb0\\(Cost(T)\\)\u4e3a\u6811T\u7684\u4ee3\u4ef7\uff0c\u5373\u6240\u6709\u5b57\u6bcd\u7684\u7f16\u7801\u957f\u5ea6\u4e4b\u548c\u3002</p> <p>\\(T'\\)\u662f\u7531\\(T\\)\u5220\u9664\\(x\uff0cy\\)\u7ed3\u70b9\uff0c\u66ff\u6362\u4e3a\\(z\\)\u7ed3\u70b9\u5f97\u5230\u7684\uff0c\u5176\u4e2d\\(z.freq = x.freq + y.freq\\),\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5c06\\(x,y\\)\u7684\u7f16\u7801\u957f\u5ea6\u51cf\u4e00\uff0c\u6811\u7684\u6df1\u5ea6-1\uff0c\u6240\u4ee5\\(Cost(T') = Cost(T) - x.freq -y.freq\\)\u3002</p> <p>\u73b0\u5728\u5047\u8bbe\\(T\\)\u4e0d\u662fC\u7684\u6700\u4f18\u524d\u7f00\u7f16\u7801\u6811\uff0c\u5b58\u5728\u6811\\(T''\\)\u4f7f\u5f97\\(Cost(T'') &lt; Cost(T)\\),\u5bf9\\(T''\\)\u540c\u6837\u8fdb\u884c\u5220\u9664\\(x,y\\)\u7ed3\u70b9\uff0c\u66ff\u6362\u4e3a\\(z\\)\u7ed3\u70b9\u7684\u64cd\u4f5c\u5f97\u5230\u65b0\u7684\u6811\\(T'''\\)</p> \\[ \\begin{aligned} &amp;Cost(T''') = Cost(T'') - x.freq - y.freq &lt; Cost(T) - x.freq - y.freq\\\\ &amp;Cost(T') = Cost(T) - x.freq - y.freq\\\\ &amp;\\Rightarrow Cost(T''') &lt; Cost(T') \\end{aligned} \\] <p>\u8fd9\u4e0e\\(T'\\)\u662f\\(C'\\)\u7684\u6700\u4f18\u524d\u7f00\u7f16\u7801\u6811\u77db\u76fe\uff0c\u6240\u4ee5\\(T\\)\u4e00\u5b9a\u662f\\(C\\)\u7684\u6700\u4f18\u524d\u7f00\u7f16\u7801\u6811\u3002</p>"},{"location":"ADS/9.%20Greedy%20Algorithms/#95-\u4e60\u9898\u96c6","title":"9.5 \u4e60\u9898\u96c6","text":"<ol> <li> <p>Greedy algorithm works only if the local optimum is equal to the global optimum.</p> <p><code>T\uff0c\u53ea\u6709\u5728\u5c40\u90e8\u89e3\u548c\u5168\u5c40\u89e3\u76f8\u7b49\u7684\u65f6\u5019\u53ef\u4ee5\u7528</code></p> </li> <li> <p>In a greedy algorithm, a decision made in one stage is not changed in a later stage.</p> <p><code>T\uff0c\u505a\u51fa\u9009\u62e9\u540e\u4e0d\u4f1a\u6539\u53d8</code></p> </li> <li> <p>Let\\(C\\) be an alphabet in which each character\\(c\\) in\\(C\\) has frequency\\(c.freq\\).  If the size of\\(C\\) is\\(n\\),  the length of the optimal prefix code for any character\\(c\\) is not greater than\\(n-1\\).   </p> <p><code>T\uff0c \u6700\u957f\u60c5\u51b5\u4e5f\u5c31\u662fskew tree\uff0c\u6700\u540e\u4e00\u5c42\u5fc5\u6709\u4e24\u4e2a\u7ed3\u70b9</code></p> </li> <li> <p>\u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u6700\u4f18\u7684\u524d\u7f00\u7801\u3002\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u96c6\u53ca\u5176\u5b57\u7b26\u9891\u7387\uff0c\u5176\u54c8\u592b\u66fc\u7f16\u7801\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u7684\u54c8\u592b\u66fc\u7801\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002</p> <p><code>F, \u54c8\u592b\u66fc\u5b57\u7b26\u7684\u9891\u7387\u76f8\u540c\u65f6\u6bcf\u4e2a\u5b57\u7b26\u7684\u7801\u957f\u4e0d\u662f\u786e\u5b9a\u7684\u3002</code></p> </li> <li> <p>Consider the problem of making change for\\(n\\) cents using the fewest number of coins. Assume that each coin's value is an integer.The coins of the lowest denomination\uff08\u9762\u989d\uff09 is the cent.</p> <p>(I) Suppose that the available coins are quarters (25 cents), dimes (10 cents), nickels (5 cents), and pennies (1 cent). The greedy algorithm always yields an optimal solution.</p> <p>(II) Suppose that the available coins are in the denominations that are powers of c, that is, the denominations are\\(c^0\\),\\(c^1\\), ...,\\(c^k\\) for some integers\\(c&gt;1\\) and\\(k&gt;=1\\). The greedy algorithm always yields an optimal solution.</p> <p>(III) Given any set of\\(k\\) different coin denominations which includes a penny (1 cent) so that there is a solution for every value of\\(n\\), greedy algorithm always yields an optimal solution.</p> <p>Which of the following is correct?</p> <ul> <li> <p>A. Statement (I) is false.</p> </li> <li> <p>B. Statement (II) is false.</p> </li> <li> <p><code>C. Statement (III) is false.</code></p> </li> <li> <p>D. All of the three statements are correct.</p> </li> </ul> <p>c. Let the coin denominations be\\(\\{1, 3, 4\\}\\), and the value to make change for be\\(6\\). The greedy solution would result in the collection of coins\\(\\{1, 1, 4\\}\\) but the optimal solution would be\\(\\{3, 3\\}\\).**</p> </li> <li> <p>Consider the problem of making change for\\(n\\) cents using the fewest number of coins. Assume that each coin's value is an integer.</p> <p>a. Describe a greedy algorithm to make change consisting of quarters, dimes, nickels, and pennies. Prove that your algorithm yields an optimal solution.</p> <p>b. Suppose that the available coins are in the denominations that are powers of\\(c\\), i.e., the denominations are\\(c^0, c^1, \\ldots, c^k\\) for some integers\\(c &gt; 1\\) and\\(k \\ge 1\\). Show that the greedy algorithm always yields an optimal solution.</p> <p>c. Give a set of coin denominations for which the greedy algorithm does not yield an optimal solution. Your set should include a penny so that there is a solution for every value of\\(n\\).</p> <p>d. Give an\\(O(nk)\\)-time algorithm that makes change for any set of\\(k\\) different coin denominations, assuming that one of the coins is a penny.</p> <p>a. Always give the highest denomination coin that you can without going over. Then, repeat this process until the amount of remaining change drops to\\(0\\).</p> <p>b. Given an optimal solution\\((x_0, x_1, \\dots, x_k)\\) where\\(x_i\\) indicates the number of coins of denomination\\(c_i\\) . We will first show that we must have\\(x_i &lt; c\\) for every\\(i &lt; k\\). Suppose that we had some\\(x_i \\ge c\\), then, we could decrease\\(x_i\\) by\\(c\\) and increase\\(x_{i + 1}\\) by\\(1\\). This collection of coins has the same value and has\\(c \u2212 1\\) fewer coins, so the original solution must of been non-optimal. This configuration of coins is exactly the same as you would get if you kept greedily picking the largest coin possible. This is because to get a total value of\\(V\\), you would pick\\(x_k = \\lfloor V c^{\u2212k} \\rfloor\\) and for\\(i &lt; k\\),\\(x_i\\lfloor (V\\mod c^{i + 1})c^{-i} \\rfloor\\). This is the only solution that satisfies the property that there aren't more than\\(c\\) of any but the largest denomination because the coin amounts are a base\\(c\\) representation of\\(V\\mod c^k\\).</p> <p>c. Let the coin denominations be\\(\\{1, 3, 4\\}\\), and the value to make change for be\\(6\\). The greedy solution would result in the collection of coins\\(\\{1, 1, 4\\}\\) but the optimal solution would be\\(\\{3, 3\\}\\).</p> <p>d. See algorithm\\(\\text{MAKE-CHANGE}(S, v)\\) which does a dynamic programming solution. Since the first forloop runs\\(n\\) times, and the inner for loop runs\\(k\\) times, and the later while loop runs at most\\(n\\) times, the total running time is\\(O(nk)\\).</p> </li> </ol>"},{"location":"ADS/9.%20Greedy%20Algorithms/#951-huffman","title":"9.5.1 Huffman","text":"<p>\u5224\u65ad\u9898</p> <ol> <li>Given a Huffman tree for N (\u22652) characters, all with different weights. The weight of any non-leaf node must be no less than the weight of any node on the next lower level.       T\uff0c\u975e\u53f6\u5b50\u7ed3\u70b9\u7684weight\u662f\u5b83\u7684\u513f\u5b50\u7684weight\u4e4b\u548c</li> </ol> <p>\u9009\u62e9\u9898</p> <ol> <li> <p>\u5b9a\u4e0d\u5c0f\u4e8e\u4e0b\u4e00\u5c42\u4efb\u4e00\u7ed3\u70b9\u7684\u6743\u503c       <code>D    \u8be5\u6811\u4e00\u5b9a\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811</code></p> </li> <li> <p>Given a piece of text which consists of characters {a, b, c, d}, with the frequencies of occurrence being {4, 2, 5, 1}, respectively. How many bits are saved by Huffman code comparing to the equal-length code?       <pre><code>   12\n   /  \\   \n   5(0) 7\n      / \\\n      3   4(11)\n      /\\\n   1(100)  2(101)\n</code></pre></p> <p>\u8ba1\u7b97\u7684\u662f\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u4e4b\u5dee\uff1a\\(12 \\times 2 - 4 \\times 2 - 3 \\times 3 - 5 \\times 1 = 24 - 22 = 2\\)</p> </li> <li> <p>\u54c8\u592b\u66fc\u6811\u662fn\u4e2a\u5e26\u6743\u53f6\u5b50\u7ed3\u70b9\u6784\u6210\u7684\u6240\u6709\u4e8c\u53c9\u6811\u4e2d\uff08\uff09\u6700\u5c0f\u7684\u4e8c\u53c9\u6811\u3002</p> <p>A.    \u6743\u503c</p> <p>B.    \u9ad8\u5ea6</p> <p><code>C. \u5e26\u6743\u8def\u5f84\u957f\u5ea6(weight * \u7f16\u7801\u6570)</code></p> <p>D.    \u5ea6</p> </li> <li> <p>\u5173\u4e8eHuffamn\u6811\uff0c\u5982\u4e0b\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09</p> <p>A. \u591a\u4e8e1\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684Huffman\u6811\u4e2d\u4e0d\u5b58\u5728\u5ea6\u4e3a1\u7684\u7ed3\u70b9</p> <p>B. Huffman\u6811\u4e2d\uff0c\u4efb\u610f\u8c03\u6574\u7ed3\u70b9\u5de6\u53f3\u5b69\u5b50\u7684\u987a\u5e8f\uff0c\u4e0d\u5f71\u54cd\u5e26\u6743\u8def\u5f84\u957f\u5ea6</p> <p><code>C. Huffamn\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u5927</code></p> <p>D.    Huffman\u6811\u4e2d\uff0c\u6743\u503c\u8d8a\u5927\u7684\u53f6\u5b50\u7ed3\u70b9\u79bb\u6839\u7ed3\u70b9\u8d8a\u8fd1</p> </li> <li> <p>\u8bbe\u7ed9\u5b9a\u6743\u503c\u603b\u6570\u6709n \u4e2a,\u5176\u54c8\u592b\u66fc\u6811\u7684\u7ed3\u70b9\u603b\u6570\u4e3a(\\(2n - 1\\))</p> </li> <li> <p>\u8bbe\u54c8\u592b\u66fc\u6811\u4e2d\u6709199\u4e2a\u7ed3\u70b9\uff0c\u5219\u8be5\u54c8\u592b\u66fc\u6811\u4e2d\u6709\uff08100\uff09\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002</p> </li> <li> <p>\u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u4e2d\u76844\u4e2a\u5b57\u7b26(a, b, c, d)\u3002\u8bbea\u548cb\u5177\u6709\u6700\u4f4e\u7684\u51fa\u73b0\u9891\u7387\u3002\u4e0b\u5217\u54ea\u7ec4\u7f16\u7801\u662f\u8fd9\u6bb5\u6587\u672c\u53ef\u80fd\u7684\u54c8\u592b\u66fc\u7f16\u7801\uff1f</p> <p><code>A. a: 000, b:001, c:01, d:1</code></p> <p>B.    a: 000, b:001, c:01, d:11</p> <p>C.    a: 000, b:001, c:10, d:1</p> <p>D.    a: 010, b:001, c:01, d:1</p> </li> <li> <p>\u7ed9\u5b9a\u4e00\u6bb5\u6587\u672c\u4e2d\u7684 4 \u4e2a\u5b57\u7b26 (u,v,w,x) \u53ca\u5176\u51fa\u73b0\u9891\u7387 (fu ,fv ,fw ,fx )\u3002\u82e5\u5bf9\u5e94\u7684\u54c8\u592b\u66fc\u7f16\u7801\u4e3a u: 00, v: 010, w: 011, x: 1\uff0c\u5219\u4e0b\u5217\u54ea\u7ec4\u9891\u7387\u53ef\u80fd\u5bf9\u5e94 (fu ,fv ,fw ,fx )\uff1f</p> <p>A.    15, 23, 16, 45</p> <p><code>B. 30, 21, 12, 33</code></p> <p>C.    41, 12, 20, 32</p> <p>D.    55, 22, 18, 46</p> </li> </ol>"},{"location":"CO/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1","text":"<p> \u7ea6 54 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0  </p> <ul> <li>\u6559\u6750: Computer Organization and Design The Hardware Software Interface [RISC-V Edition] </li> <li>\u8001\u5e08: \u5218\u6d77\u98ce/TA: \u90ed\u5bb6\u8c6a \u79e6\u5609\u4fca</li> </ul>"},{"location":"CO/1.%20Introduce/","title":"1. Introduce","text":"<p> \u7ea6 1419 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <ul> <li>\u51af\u00b7\u504c\u4f0a\u66fc\u67b6\u6784</li> <li>\u8ba1\u7b97\u4e0e\u5b58\u50a8\u5206\u79bb</li> <li>\u6570\u636e\u548c\u6307\u4ee4\u653e\u5728\u540c\u4e00\u4e2a\u5b58\u50a8\u5668</li> </ul> <p></p> <p></p>"},{"location":"CO/1.%20Introduce/#11-eight-great-ideas","title":"1.1 Eight Great Ideas","text":"<ul> <li> <p>Design for <code>Moore\u2019s Law</code> \uff08\u8bbe\u8ba1\u7d27\u8ddf\u6469\u5c14\u5b9a\u5f8b\uff09</p> <ul> <li>Moore's Law: Integrated circuit resources double every 18-24 months.   \u6469\u5c14\u5b9a\u5f8b\uff1a\u96c6\u6210\u7535\u8def\u8d44\u6e90\u6bcf18-24\u4e2a\u6708\u7ffb\u4e00\u756a\u3002</li> <li>Design for where it will be when finishes rather than design for where it starts.   \u8bbe\u8ba1\u5b8c\u6210\u65f6\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002</li> </ul> </li> <li> <p>Use <code>Abstraction</code> to Simplify Design (\u91c7\u7528<code>\u62bd\u8c61</code>\u7b80\u5316\u8bbe\u8ba1)</p> <ul> <li>\u5c42\u6b21\u5316\u3001\u6a21\u5757\u5316\u7684\u8bbe\u8ba1</li> </ul> <p></p> <ul> <li><code>Instruction set architecture</code>---- the interface between hardware and lowest-level software ISA \u8fde\u63a5\u786c\u4ef6\u4e0e\u5e95\u5c42\u8f6f\u4ef6</li> </ul> </li> <li> <p>Make the <code>Common Case Fast</code> (\u52a0\u901f\u5927\u6982\u7387\u4e8b\u4ef6)</p> </li> <li> <p>Performance via <code>Parallelism</code> (\u901a\u8fc7\u5e76\u884c\u63d0\u9ad8\u6027\u80fd)</p> </li> <li> <p>Performance via <code>Pipelining</code> (\u901a\u8fc7\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6027\u80fd)</p> <ul> <li>\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c\u6bcf\u4e2a\u6d41\u7a0b\u540c\u65f6\u8fdb\u884c\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u4e00\u4e2a\u6d41\u7a0b\u5de5\u4f5c\u7684\u5bf9\u8c61\u662f\u65f6\u95f4\u4e0a\u76f8\u90bb\u7684\u82e5\u5e72\u4ea7\u54c1\uff1b</li> <li>\u76f8\u6bd4\u4e8e\u7b49\u4e00\u4e2a\u4ea7\u54c1\u5b8c\u5168\u751f\u4ea7\u5b8c\u518d\u5f00\u59cb\u4e0b\u4e00\u4e2a\u4ea7\u54c1\u7684\u751f\u4ea7\uff0c\u4f1a\u5feb\u5f88\u591a\uff1b</li> <li>\u5e0c\u671b\u6bcf\u4e00\u4e2a\u6d41\u7a0b\u7684\u65f6\u95f4\u662f\u76f8\u5bf9\u5747\u5300\u7684\uff1b</li> </ul> </li> <li> <p>Performance via <code>Prediction</code>(\u901a\u8fc7\u9884\u6d4b\u63d0\u9ad8\u6027\u80fd)</p> <ul> <li>\u4f8b\u5982\u5148\u5f53\u4f5c <code>if()</code> \u6761\u4ef6\u6210\u7acb\uff0c\u6267\u884c\u5b8c\u5185\u90e8\u5185\u5bb9\uff0c\u5982\u679c\u540e\u6765\u53d1\u73b0\u786e\u5b9e\u6210\u7acb\uff0c\u90a3\u4e48\u76f4\u63a5 apply\uff0c\u5426\u5219\u5c31\u518d\u91cd\u65b0\u6b63\u5e38\u505a\uff1b</li> <li>\u8fd9\u4e48\u505a\u5c31\u597d\u5728\uff08\u53c8\u6216\u8005\u8bf4\u53ea\u6709\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u9884\u6d4b\uff09\uff0c\u9884\u6d4b\u6210\u529f\u4e86\u5c31\u52a0\u901f\u4e86\uff0c\u9884\u6d4b\u5931\u8d25\u4e86\u7ea0\u6b63\u7684\u6210\u672c\u4e5f\u4e0d\u9ad8\uff1b</li> </ul> </li> <li> <p>Hierarchy of Memories (\u5b58\u50a8\u5668\u5c42\u6b21)</p> <ul> <li>Disk / Tape -&gt; Main Memory(DRAM) -&gt; L2-Cache(SRAM) -&gt; L1-Cache(On-Chip) -&gt; Registers   <code>\u5bb9\u91cf\u4ece\u5de6\u5230\u53f3\uff0c\u4f9d\u6b21\u51cf\u5c0f\uff1b\u901f\u5ea6\u4ece\u5de6\u5230\u53f3\uff0c\u4f9d\u6b21\u589e\u5927</code></li> </ul> </li> <li> <p>Dependability via Redundancy (\u901a\u8fc7\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027)</p> <ul> <li>\u7c7b\u4f3c\u4e8e\u5361\u8f66\u7684\u591a\u4e2a\u8f6e\u80ce\uff0c\u4e00\u4e2a\u6a21\u5757 down \u4e86\u4ee5\u540e\u4e0d\u4f1a\u5267\u70c8\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf\uff1b</li> </ul> </li> </ul>"},{"location":"CO/1.%20Introduce/#12-below-your-program","title":"1.2 Below Your Program","text":"<ul> <li>Application software \uff1a aimed at users</li> <li>System software : aimed at programming.<ul> <li>\u5305\u542b\uff1a Operation System\uff1bCompiler\uff1bAssembler</li> </ul> </li> </ul>"},{"location":"CO/1.%20Introduce/#13-computer-language","title":"1.3 Computer Language","text":"<ul> <li> <p>Machine language \u673a\u5668\u8bed\u8a00</p> <ul> <li> <p>Binary numbers express machine instructions </p> <p>ex. 1000110010100000 means to add two numbers</p> </li> </ul> </li> <li> <p>Assembly language \u6c47\u7f16\u8bed\u8a00</p> <ul> <li> <p>Symbolic notations       </p> <p>ex.    add A, B</p> </li> <li> <p>The assembler translates them into machine instruction</p> <p><code>\u6c47\u7f16\u5668\u5c06\u6c47\u7f16\u8bed\u8a00\u7ffb\u8bd1\u4e3a\u673a\u5668\u8bed\u8a00</code></p> </li> </ul> </li> <li> <p>High-level programming language \u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00</p> <ul> <li> <p>Notations more closer to the natural language  ex.  A + B</p> </li> <li> <p>The compiler translates them into assembly language  statements</p> <p><code>\u7f16\u8bd1\u5668\u5c06\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u8bed\u8a00</code></p> </li> </ul> </li> </ul> <p></p>"},{"location":"CO/1.%20Introduce/#14-computer-organization-and-hardware-system","title":"1.4 Computer Organization and Hardware System","text":"<p>The five classic components of a computer: \u8ba1\u7b97\u673a\u7684\u4e94\u4e2a\u7ecf\u5178\u7ec4\u4ef6\uff1a</p> <ul> <li>input;</li> <li>output;</li> <li>memory(DRAM);<ul> <li>\u7a0b\u5e8f\u3001\u6570\u636e\u5b58\u50a8\u7684\u5730\u65b9\uff0c\u4e5f\u662f\u7a0b\u5e8f\u201c\u8fd0\u884c\u7684\u4f4d\u7f6e\u201d\uff1b</li> <li>cache memory (SRAM): buffer for the DRAM memory;</li> </ul> </li> <li>datapath<ul> <li>\u8d1f\u8d23\u5b9e\u9645\u7684\u6570\u636e\u5904\u7406\uff1b</li> </ul> </li> <li>control<ul> <li>\u8d1f\u8d23\u6307\u6325\u63a7\u5236\u5982\u4f55\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u7ed9\u51fa\u63a7\u5236\u4fe1\u53f7\uff1b</li> </ul> </li> </ul> <p><code>processor / (central processor unit)CPU = datapath + control</code></p> <p>\u5904\u7406\u5668/\uff08\u4e2d\u592e\u5904\u7406\u5668\u5355\u5143\uff09CPU = \u6570\u636e\u8def\u5f84 + \u63a7\u5236</p>"},{"location":"CO/1.%20Introduce/#16-performance","title":"1.6 Performance","text":""},{"location":"CO/1.%20Introduce/#161-execution-time","title":"1.6.1 Execution Time","text":"<ol> <li> <p>Response time &amp;&amp; Throughout</p> <ul> <li> <p><code>Response time / execution time</code>: how long it takes to do a task</p> <p>\u54cd\u5e94\u65f6\u95f4\uff1a \u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4\uff08\u4e2a\u4eba\uff09</p> </li> <li> <p>Throughout\uff1a total work done per unit time</p> <p>\u541e\u5410\u91cf\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u4efb\u52a1\u6570\u91cf\uff08\u670d\u52a1\u5668\uff09</p> </li> </ul> </li> </ol> <p>Replacing the processor with a faster version? <code>\u6539\u53d8response time \u548c throughout</code></p> <p>Adding more processors ? <code>\u53ea\u6539\u53d8throughout</code></p> <ol> <li> <p>\u5b9a\u4e49\\(performance = \\dfrac{1}{Execution \\ time}\\)</p> <p>X is  n  times  faster  than  Y</p> <p>$$       \\dfrac{{Performance}_x}{{performance}_y} = \\dfrac{{execution  time}_y}{{execution  time}_x} = n\\   $$</p> <p>\\(\u4e5f\u5c31\u662f\u8bf4x\u7684\u8fd0\u884c\u65f6\u95f4\u662fy\u7684\\dfrac{1}{n}\\)</p> </li> <li> <p>\u5173\u4e8e Execution Time</p> <ul> <li> <p>Elapsed time </p> <p>\u5305\u542b Processing\uff0cI/O\uff0c OS overhead\uff0c idle time</p> </li> <li> <p>CPU time</p> </li> </ul> </li> </ol>"},{"location":"CO/1.%20Introduce/#162-cpu-clocking","title":"1.6.2 CPU Clocking","text":"<ul> <li> <p>Clock period: duration of a clock cycle </p> <p>\\(eg:250ps = 0.25ns = 250 \\times 10^{-12}s\\)</p> </li> <li> <p>Clock frequency (rate): cycles per second</p> <p>\\(eg:4.0GHz = 4000MHz = 4.0 \\times 10^9Hz\\)</p> </li> </ul> \\[ \\begin{aligned} CPU \\ Time &amp;= CPU \\ Clock \\ Cycles \\times Clock \\ Cycle \\ Time \\\\ &amp;= \\dfrac{CPU \\ Clock \\ Cycles}{Clock \\ Rate} \\end{aligned} \\] <p></p> <p>Practice:</p> <p>Computer A: 2 GHz clock, 10s CPU time</p> <p>Designing Computer B :</p> <ul> <li> <p>Aim for 6 s CPU time ; </p> </li> <li> <p>Can do faster clock, but causes 1.2 \u00d7 clock cycle</p> </li> </ul> <p>How fast must Computer B clock be?</p> \\[ \\begin{aligned} &amp;{Clock \\ Cycle}_A = \\dfrac{CPU \\ Time}{CPU \\ Clock \\ Time } = CPU \\ Time  \\times CPU \\ Rate = 2 \\times 10 ^{10}\\\\ &amp;{Clock \\ Cycle}_B = 1.2 \\times {Clock \\ Cycle}_A = 2.4 \\times 10^{10}\\\\ &amp;Clock \\ Rate_B = \\dfrac{  Clock \\ Cycle_B}{CPU \\ Time_B }  = 4GHz  \\end{aligned} \\] <ul> <li> <p>\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u5468\u671f\u6570(Average cycles per instruction)\u53c8\u7f29\u5199\u4e3a CPI\u3002</p> <p>\u7531CPU\u7684\u786c\u4ef6\u51b3\u5b9a\uff0c\u4e0d\u540c\u7684\u6307\u4ee4\u6709\u4e0d\u540c\u7684CPI $$ CPU  Time  =  Instruction  count \\times CPI \\times Clock  cycle  time $$ </p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p>Performance depends on</p> <ul> <li>Algorithm: affects <code>IC(\u6307\u4ee4\u6761\u6570)</code>, possibly CPI</li> <li>Programming language: affects IC, CPI</li> <li>Compiler: affects IC, CPI</li> <li>Instruction set architecture \uff1a IC\uff0cCPI\uff0cT_c(\\(\\dfrac{Seconds}{ClockCycle}\\))</li> </ul>"},{"location":"CO/1.%20Introduce/#17-incredible-performance-improvement","title":"1.7 Incredible performance improvement","text":"<ol> <li> <p>Power Wall</p> <p>\\(Power = Capactive \\ load \\times {Voltage}^2 \\times Frequency\\)</p> <p>\u9891\u7387          \u8d1f\u8f7d\u7535\u5bb9                \u7535\u538b                  \u9891\u7387</p> <p></p> <p>\u4e3b\u9891\u63d0\u9ad8\u4e86\u5f88\u591a\uff0c\u4f46\u529f\u8017\u5e76\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u591a\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u964d\u4f4e\u4e86\u5de5\u4f5c\u7535\u538b (5V-1V)</p> <p></p> <p>\u7535\u538b\u4e0d\u80fd\u4e00\u5473\u4e0b\u964d\uff0c\u4f1a\u9020\u6210\u7535\u6d41\u8fc7\u5927\uff0c\u5f15\u53d1\u529f\u8017\u6d6a\u8d39</p> </li> <li> <p>Memory Wall</p> <p>Memory \u7684\u6027\u80fd\u589e\u957f\u4e0d\u5982 CPU \u7684\u6027\u80fd\u589e\u957f\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u8bfb\u5199\u5185\u5b58\u4e86\uff0c\u5f71\u54cd\u6574\u4f53\u6027\u80fd</p> </li> <li> <p>ITP Wall\uff08\u6307\u4ee4\u96c6\u5e76\u884c\uff09</p> <p>refers to increasing difficulty to find enough parallelism in the instructions stream of a single process to keep higher performance processor cores busy.</p> <p>\u5f88\u96be\u5728\u5355\u4e2a\u8fdb\u7a0b\u7684\u6307\u4ee4\u6d41\u4e2d\u627e\u5230\u8db3\u591f\u7684\u5e76\u884c\u5ea6\uff0c\u4ee5\u4fdd\u6301\u66f4\u9ad8\u6027\u80fd\u7684\u5904\u7406\u5668\u5185\u6838\u7e41\u5fd9\u3002</p> <p>\\(ITP \\rightarrow TLP \\ and DLP\\)</p> <p><code>\u4ece\u6307\u4ee4\u96c6\u6210\u5230\u7ebf\u7a0b\u96c6\u6210+\u6570\u636e\u96c6\u6210</code></p> </li> </ol>"},{"location":"CO/1.%20Introduce/#18-multiprocessors-\u591a\u6838","title":"1.8 Multiprocessors \u591a\u6838","text":"<ul> <li> <p>Amdahl's Law: Improve an aspect of a computer and expecting improvement in overall performance.</p> <p>\u963f\u59c6\u8fbe\u5c14\u5b9a\u5f8b\uff1a\u6539\u8fdb\u8ba1\u7b97\u673a\u7684\u67d0\u4e2a\u65b9\u9762\uff0c\u5e76\u671f\u671b\u6574\u4f53\u6027\u80fd\u5f97\u5230\u6539\u5584\u3002 \u5b9e\u9645\u4e0a, \\(T_{improve} = \\dfrac{T_{affected}}{improvement \\ factor} + T_{unaffected}\\)</p> <p>e.g.** \u5bf9\u67d0\u4e00\u65b9\u9762\u4f18\u5316 90%, \u5e76\u4e0d\u80fd\u4f7f CPU \u6574\u4f53\u6027\u80fd\u4f18\u5316 90%. Corollary: make the common case fast. \u63a8\u8bba\uff1a\u4f7f\u5e38\u89c1\u60c5\u51b5\u5feb\u901f\u3002**</p> </li> <li> <p>Low Power Not at Idle.</p> <p>\u4f4e\u529f\u8017\uff0c\u4e0d\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002 \u673a\u5668\u5728\u6ca1\u6709\u5de5\u4f5c\u65f6\u4e5f\u6709\u529f\u8017\u635f\u5931\u3002</p> </li> <li> <p>MIPS as a Performance Metric</p> <p>MIPS \u4f5c\u4e3a\u6027\u80fd\u6307\u6807,\u4e0d\u540c\u7684 ISA \u4e4b\u95f4\u4e0d\u80fd\u4ec5\u51ed MIPS \u6bd4\u8f83\u3002</p> <ul> <li> <p><code>MIPS: Millions of Instructions Per Second</code></p> <p>MIPS\uff1a\u6bcf\u79d2\u6570\u767e\u4e07\u6761\u6307\u4ee4</p> \\[ \\begin{aligned} MIPS &amp;= \\dfrac{Instruction \\ count}{Execution time \\times 10^6} \\\\ &amp;=\\dfrac{Instruction \\ count}{CPI \\times Instruction \\ count \\times cycle \\ clock\\ time \\times 10^6}\\\\ &amp;= \\dfrac{clock \\ rate}{CPI \\times 10^6} \\end{aligned} \\] </li> </ul> <p>\u552f\u4e00\u7684\u6027\u80fd\u6807\u51c6\u662fCPU Time,\u4e0d\u540c\u7684 ISA \u4e4b\u95f4\u4e0d\u80fd\u4ec5\u51ed MIPS \u6bd4\u8f83\u3002</p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/","title":"2. Instructions: Language of the Computer","text":"<p> \u7ea6 5184 \u4e2a\u5b57  66 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 27 \u5206\u949f</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#21-introduction","title":"2.1 Introduction","text":"<p>Abstract</p> <ul> <li> <p>Language of the machine</p> <ul> <li>Instructions (Statement)</li> <li>Instruction Set (Syntax)</li> </ul> </li> <li> <p>Design goal</p> <ul> <li> <p>Maximize performance  </p> <p>\u540c\u6837\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b\u6027\u80fd\u5927</p> </li> <li> <p>Minimize cost  </p> <p>\u540c\u6837\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u6210\u672c\u4f4e</p> </li> <li> <p>Reduce design time </p> <p>\u6307\u4ee4\u96c6\u7b80\u5355\uff0c\u6613\u4e8e\u7406\u89e3</p> </li> </ul> </li> <li> <p>\u6211\u4eec\u4f7f\u7528\u7684\u662f RISC-V \u67b6\u6784</p> </li> </ul> <p>Instruction Characteristics</p> <p>\u6307\u4ee4\u96c6\u57fa\u672c\u7684\u7ed3\u6784\uff1aOperation \u64cd\u4f5c; Operand \u64cd\u4f5c\u6570</p> <ul> <li>\u4e0d\u540c\u6307\u4ee4\u96c6\uff0c\u6307\u4ee4\u7684\u7f16\u7801\u53ef\u4ee5\u4e0d\u540c\u3002\u5982 000 \u8868\u793a\u52a0\u6cd5\uff0c\u8fd9\u4e5f\u53eb\u6307\u4ee4\u7684 Encoding.  </li> <li>\u64cd\u4f5c\u6570\u4f4d\u5bbd\u53ef\u4ee5\u4e0d\u540c\uff0c\u53ef\u4ee5\u662f\u7acb\u5373\u6570/\u5bc4\u5b58\u5668/\u5185\u5b58\u3002 </li> </ul> <p>\u901a\u7528\u5b58\u50a8\u5668\uff1a</p> <ul> <li>register-register</li> <li>memory-register</li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#22-operation","title":"2.2 Operation","text":"<ul> <li> <p>Every computer must be able to perform arithmetic.    </p> <ul> <li>Only one operation per instruction  </li> <li>Exactly 3 variables e.g. <code>add a, b, c</code> \u5373 \\(a\\leftarrow b+c\\)     \u6ce8\u610f\u7ed3\u679c\u653e\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6613\u4e8e\u89e3\u7801  </li> </ul> </li> <li> <p>Design Principle 1 - Simplicity favors regularity.  \uff08\u7b80\u5355\u6e90\u81ea\u89c4\u6574\uff0c\u6307\u4ee4\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570\uff09</p> <ul> <li> <p>C code   <pre><code>   f = (g + h) - (i + j);\n</code></pre></p> </li> <li> <p>RISC-V code   <pre><code>add t0, g, h\nadd t1, i, j\nsub f, t0, t1\n</code></pre></p> </li> </ul> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#23-operands-of-the-computer-hardware","title":"2.3 Operands of the Computer Hardware","text":""},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#231-register-operands","title":"2.3.1 Register Operands","text":"<ul> <li> <p>Arithmetic instructions use register operands.</p> </li> <li> <p>RISC-V has a \\(32\\times 64\\)-bit register file</p> <ul> <li>Use for frequently accessed data</li> <li><code>32-bit data is called a **word**. 64-bit is called a double word.</code></li> <li>we call them <code>x0</code> to <code>x31</code></li> </ul> </li> <li> <p>Design Principle 2 - Smaller is faster. </p> <p>\u5bc4\u5b58\u5668\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff0c\u591a\u4e86\u4e4b\u540e\u8bbf\u95ee\u6162\u3002 </p> Name Register Name Usage Preserved on call? x0 0 The constant value 0 n.a. x1(ra) 1 Return address(link register) yes x2(sp) 2 Stack pointer yes x3(gp) 3 Global pointer yes x4(tp) 4 Thread pointer yes x5-x7 5-7 Temporaries no x8-x9 8-9 Saved yes x10-x17 10-17 Arguments/results no x18-x27 18-27 Saved yes x28-x31 28-31 Temporaries no <p>\"\u4e3a\u4ec0\u4e48\u5bc4\u5b58\u5668 <code>x0</code> \u4e00\u76f4\u4e3a 0 ? \" </p> <p>Make the common fast. \u56e0\u4e3a\u7ecf\u5e38\u6709 0 \u53c2\u4e0e\u8ba1\u7b97\uff0c\u5c06\u5176\u5b58\u5728\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u3002</p> <p>preserved on call \u8868\u793a\u5728\u4f7f\u7528\u4e4b\u524d\u9700\u8981\u4fdd\u5b58\u539f\u5148\u6570\u503c</p> <p>x8-x9 saved:\u7528\u4e4b\u524d\u6709\u6570\u636e\uff0c\u9700\u8981\u5148\u5c06\u6570\u636e\u5b58\u5165stack\uff0c\u8fd0\u7b97\u7ed3\u675f\u4e4b\u540e\uff0c\u6062\u590d\u539f\u5148\u7684\u6570\u636e</p> <p>x10-x17 argument/result\uff1a\u4f20\u9012\u7ed3\u679c</p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#232-memory-operands","title":"2.3.2 Memory Operands","text":"<ul> <li> <p>Data transfer instructions</p> <ul> <li><code>Load</code>: Load values from memory to register; load doubleword(ld)</li> <li><code>Store</code>: Store result from register to memory; store doubleword(sd)</li> </ul> <p><code>\u53ea\u6709load\u548cstore\u6307\u4ee4\u80fd\u591f\u8bbf\u95ee\u5185\u5b58</code></p> </li> <li> <p>Memory is byte addressed.   \u5b57\u8282\u5bfb\u5740</p> <p>RISC-V architecture \u7684\u5730\u5740\u662f 64 \u4f4d\u7684\uff0c\u5730\u5740\u4e3a\u5b57\u8282\u5730\u5740\uff0c\u56e0\u6b64\u603b\u5171\u53ef\u4ee5\u5bfb\u5740 $2^{64} $\u4e2a\u5b57\u8282\uff0c\u5373 \\(2^{61}\\) \u4e2a double word </p> </li> <li> <p>RISC-V is Little Endian </p> <p>Example \"Little vs Big Endian\"</p> <ul> <li>\u5c0f\u7aef\uff1a\u6570\u636e\u7684\u9ad8\u5b57\u8282\uff08most significant bit\uff09\u5b58\u653e\u5728\u9ad8\u5730\u5740\uff1b\u6570\u636e\u7684\u4f4e\u5b57\u8282(least significant bit)\u5b58\u653e\u5728\u4f4e\u5730\u5740</li> <li>\u5927\u7aef\u76f8\u53cd   </li> </ul> <p>eg: 32\u4f4d\u673a\u5668\u4e0a\u5b58\u653e 0x12345678 \uff0c\u5927\u5c0f\u7aef\u6a21\u5f0f\u5b58\u50a8\u5982\u4e0b\uff1a</p> <p> </p> </li> <li> <p>RISC-V dose not require words to be aligned in memory </p> <p><code>RISC-V \u4e0d\u8981\u6c42\u5185\u5b58\u5bf9\u9f50</code></p> <ul> <li>words align: \u4e00\u4e2a\u5b57\u662f 4 \u5b57\u8282\uff0c\u6211\u4eec\u8981\u6c42\u5b57\u7684\u8d77\u59cb\u5730\u5740\u4e00\u5b9a\u8981\u662f 4 \u7684\u500d\u6570\u3002</li> </ul> <p>\"Memory Alignment\"  \u7b2c\u4e00\u4e2a\u662f\u5bf9\u9f50\u7684\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u5bf9\u9f50\u7684\u3002</p> <ul> <li>\u4e0d\u5bf9\u9f50\u7684\u597d\u5904\u662f\u7701\u7a7a\u95f4, \u7f3a\u70b9\u662f\u6709\u7684\u53d8\u91cf\u65e0\u6cd5\u4e00\u6b21\u6027\u53d6\u51fa</li> </ul> </li> </ul> <p>Example \"Memory Operand Example\"</p> <p>A[12] = h + A[8];</p> <p>(\u9ed8\u8ba4\u6570\u7ec4\u662f\u53cc\u5b57\u7684, h in <code>x21</code>, base address of A in <code>x22</code>)  </p> <p>\u7ffb\u8bd1\u4e3a RISC-V \u4ee3\u7801\u5f97\u5230</p> <pre><code>ld x9, 64(x22)          // temporary register x9 get A[8]\nadd x9, x21, x9\nsd x9, 96(x22)          // store\n</code></pre> <p>\u5730\u5740\u662f\u4ee5 byte \u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5\u8981\u504f\u79fb \\(8\\times 8=64\\) bytes.  </p> <p><code>load</code> \u548c <code>store</code> \u662f\u552f\u4e8c\u53ef\u4ee5\u8bbf\u95ee\u5b58\u50a8\u5668\u7684\u6307\u4ee4\u3002 </p> <p></p> <p>\u5148\u8ba1\u7b97\u504f\u79fb\u91cf\uff0c\\(8 \\times i\\), \u53ef\u4ee5\u5bf9\\(i\\)\u76f4\u63a5\u5de6\u79fb\u4e09\u4f4d</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#233-registers-vs-memory","title":"2.3.3 Registers vs. Memory","text":"<ul> <li> <p>Registers are faster to access than memory  \u5bc4\u5b58\u5668\u66f4\u5feb</p> </li> <li> <p>Operating on memory data requires loads and stores   </p> <p>\u5bf9\u5185\u5b58\u7684\u64cd\u4f5c\u9700\u8981store\u548cload\u6307\u4ee4\uff08\uff09\u552f\u4e8c\u80fd\u591f\u8bbf\u95ee\u5185\u5b58</p> </li> <li> <p>Compiler must use registers for variables as much as possible  </p> <p>\u7f16\u8bd1\u5668\u5c3d\u91cf\u4f7f\u7528\u5bc4\u5b58\u5668\u5b58\u53d8\u91cf\u3002\u53ea\u6709\u5728\u5bc4\u5b58\u5668\u4e0d\u591f\u7528\u65f6\uff0c\u624d\u4f1a\u628a\u4e0d\u592a\u7528\u7684\u503c\u653e\u56de\u5185\u5b58\u3002  </p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#234-constant-or-immediate-operands","title":"2.3.4 Constant or Immediate Operands","text":"<p>Immediate: Other method for adding constant  </p> <ul> <li> <p>Avoids the load instruction  </p> </li> <li> <p>Offer versions of the instruction   </p> <p>e.g. <code>addi x22, x22, 4</code> </p> </li> <li> <p><code>Design Principle 3 - Make the common case fast.</code> </p> </li> <li> <p>\u4e3a\u4ec0\u4e48\u5185\u5b58\u662f \\(2^{61}\\) \u4e2a doublewords?  </p> <p>\u53ef\u4ee5\u8868\u793a\u7684\u5730\u5740\u6709\u8fd9\u4e48\u591a\uff0c\u56e0\u4e3a\u6211\u4eec\u4ee5 64 \u4f4d\u5bc4\u5b58\u5668\u4e3a\u57fa\u5740\uff0c\u53ef\u4ee5\u8868\u793a\u7684\u53cc\u5b57\u5c31\u662f \\(2^{64}/2^3=2^{61}\\) (\u8fd9\u91cc \\(2^3\\) \u8868\u793a 8 \u4e2a\u5b57\u8282\uff0c\u5373\u53cc\u5b57). \u5373\u6211\u4eec\u7684 <code>load</code> \u6307\u4ee4\u53ef\u4ee5\u8bbf\u95ee\u7684\u8303\u56f4\u6709\u8fd9\u4e48\u5927\u3002   </p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#24-signed-and-unsigned-number","title":"2.4 Signed and Unsigned Number","text":""},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#25-representing-instructions-in-the-computer","title":"2.5 Representing Instructions in the Computer","text":"<ul> <li> <p>All information in computer consists of binary bits.</p> </li> <li> <p>Instructions are encoded in binary  called machine code (\u673a\u5668\u7801) </p> </li> <li> <p>Mapping registers into numbers  </p> <p>0 for register <code>x0</code>, 31 for register <code>x31</code>. e.t.c. </p> </li> <li> <p>RISC-V instructions   </p> <p>32 \u4f4d\u6307\u4ee4\u7f16\u7801\u3002\u6240\u6709\u6307\u4ee4\u90fd\u662f\u89c4\u5219\u5316\u7684\uff0c\u5373\u4e00\u90e8\u5206\u662f opcode, \u4e00\u90e8\u5206\u662f operands \u7b49\u7b49\u3002  </p> <p></p> <p><code>\u4ece\u53f3\u5f80\u5de6\u4f9d\u6b21\u662f\uff1a opcode rd fun3 rs1 rs2 fun7</code></p> <p>\u5bc4\u5b58\u5668\u4ece\u53f3\u5f80\u5de6\u770b 9 -&gt; 20 -&gt; 21</p> </li> </ul> <p>\"Summary of RISC-V architecture\"</p> <p> </p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#251-r-format","title":"2.5.1 R-format","text":"<ul> <li>opcode: operaion code</li> <li>rd: destination register number</li> <li>funct3: 3-bit function code(additional opcode)   **   <code>\u4f8b\u5982\uff0c\u6211\u4eec\u52a0\u6cd5\u51cf\u6cd5\u53ef\u4ee5\u505a\u6210\u4e00\u4e2a opcode, \u7136\u540e\u5229\u7528 funct3 \u8fdb\u884c\u9009\u62e9\u3002</code>**</li> <li>rs1/rs2: the first/second source register number</li> <li>funct7: 7-bit function code(additional opcode)  </li> </ul> <p>All instructions in RISC-V have the same length  </p> <p>Design Principle 4 - Good design demands good compromises</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#252-i-format","title":"2.5.2 I-format","text":"<ul> <li> <p>Immediate arithmetic and load instructions e.g. <code>addi</code>, <code>ld</code> </p> </li> <li> <p>rs1: source or base address register number</p> </li> <li> <p>immediate: constant operand, or offset added to base address </p> <p>\u5c06 rs2, funct7 \u5408\u5e76\u4e86\uff0c\u5f97\u5230 12 \u4f4d\u7acb\u5373\u6570</p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#253-s-format","title":"2.5.3 S-format","text":"<ul> <li> <p>rs1: base address register number</p> </li> <li> <p>rs2: source opearand register number</p> </li> </ul> <p><code>\u8fd9\u8fb9\u7279\u522b\u6ce8\u610f\u4e00\u4e0b\u57fa\u5740\u5bc4\u5b58\u5668\u548c\u6e90\u5bc4\u5b58\u5668\u7684\u4f4d\u7f6e\uff0c\u4ece\u53f3\u5f80\u5de6\uff1aopcode\uff0c\u57fa\u5740\u5bc4\u5b58\u5668\uff0c\u6e90\u5bc4\u5b58\u5668</code></p> <p></p> <ul> <li> <p>immediate:  Split so that rs1 and rs2 fields always in the same place.  </p> </li> <li> <p>\u4e0d\u518d\u9700\u8981rd\uff0crd\u88abimm[4:0]\u53d6\u4ee3\uff0c\u524d\u8005\u4e3aimm[11:5] \u4e3a7 bits</p> <p>\\(S\\_imm = {{20{inst[31]}}, inst[31:25], inst[11:7]}\\)</p> </li> </ul> <p></p> <pre><code>A[30] = h + A[30] + 1\nh \u5728 x21\nbase address of A is x10\n\nld      x9, 240(x10)    // temporary reg x9 gets A[30]\nadd     x9, x21,x9      // temporary reg x9 gets h + A[30]\naddi    x9, x9, 1       // temporary reg x9 gets h + A[30] + 1\nsd      x9, 240(x10)    // stores h + A[30] + 1 back into A[30]\n</code></pre> <p></p> <p>\\(240 = 7 \\times 32 + 16 = 0000111 \\_ 10000_2\\)</p> <p>Stored-Program</p> <p></p> <ul> <li> <p>Instructions represented in binary, like data.  </p> </li> <li> <p>Instructions and data stored in memory.  </p> <p>\u6307\u4ee4\u548c\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d</p> </li> <li> <p>Programs can operate on programs. e.g. compiplers, linkers. </p> <p>\u7a0b\u5e8f\u53ef\u4ee5\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u7f16\u8bd1\u5668\u3001\u94fe\u63a5\u5668\u3002</p> </li> <li> <p>Binary compatibility allows compiled programs to work on different computers</p> <p>\u4e8c\u8fdb\u5236\u517c\u5bb9\u6027\u5141\u8bb8\u7f16\u8bd1\u7684\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a\u5de5\u4f5c</p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#26-logical-operations","title":"2.6 Logical Operations","text":"<p>\u903b\u8f91\u79fb\u4f4d\u4e0d\u7ba1\u7b26\u53f7\u4f4d\uff0c\u5168\u90e8\u6dfb\u52a00.\u7b97\u6570\u79fb\u4f4d\u6dfb\u52a0\u7b26\u53f7\u4f4d</p> Operation C Java RISC-V Shift left &lt;&lt; &lt;&lt; <code>slli</code> Shift right &gt;&gt; &gt;&gt;&gt; <code>srli</code> Bit-by-bit AND &amp; &amp; <code>and, andi</code> Bit-by-bit OR | | <code>or, ori</code> Bit-by-bit XOR ^ ^ <code>xor, xori</code> Bit-by-bit NOT ~ ~ - <p>bitwise NOT \u8981\u7528\u5f02\u6216\u5b9e\u73b0\uff08\u4e0e\u5168 F \u5f02\u6216\uff09 </p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#261-shift","title":"2.6.1 Shift","text":"<ul> <li> <p>I \u578b\u6307\u4ee4\uff08immediate\uff09</p> </li> <li> <p>\u4e3a\u4ec0\u4e48\u8fd8\u6709 <code>funct6</code>     \uff1f</p> <p>\u5bc4\u5b58\u5668\u672c\u8eab\u4e5f\u5c3164\u4f4d\uff0c\u4e0d\u9700\u8981\u79fb\u4f4d\u8d85\u8fc764\u6b21\uff0c\u6240\u4ee56bit\u5c31\u80fd\u5b9e\u73b0\\(2^6-1 = 63\\)\u6b21\u79fb\u4f4d\u64cd\u4f5c\uff0c\u79fb\u52a864\u4f4d\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u7f6e\u4e3a0</p> </li> <li> <p>\u5de6\u79fb i \u4f4d\u76f8\u5f53\u4e8e\u4e58 \\(2^i\\), \u53f3\u79fb i \u4f4d\u76f8\u5f53\u4e8e\u9664 \\(2^i\\). </p> </li> </ul> <p>\u5bf9\u4e8esll\uff0c <code>sll rd\uff0c rs1\uff0c rs2</code>\uff0c\u79fb\u52a8\u7684\u4f4d\u6570\u5b58\u653e\u5728rs2\uff0c\u88ab\u79fb\u52a8\u7684\u6570\u5b58\u653e\u5728rs1\uff0c\u7ed3\u679c\u5b58\u653e\u5728rd</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#262-and","title":"2.6.2 AND","text":"<p>Select some bits, clear others to 0</p> <p>It is bit-by-bit (bitwise-AND)</p> <ul> <li>Result=1 : both bits of the operands are 1</li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#263-or","title":"2.6.3 OR","text":"<p>Set some bits to 1, leave others unchanged</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#264-xor","title":"2.6.4 XOR","text":"<p>Set some bits to 1, leave others unchanged</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#27-instructions-for-making-decisions","title":"2.7 Instructions for making decisions","text":""},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#271-branc-instructions","title":"2.7.1 Branc instructions","text":"<ul> <li> <p><code>beq reg1, reg2, Label</code> </p> <p>\u76f8\u7b49\u5219\u8df3\u8f6c</p> </li> <li> <p><code>bne reg1, reg2, Label</code> </p> <p>\u4e0d\u76f8\u7b49\u5219\u8df3\u8f6c</p> </li> </ul> <p> </p> <p>sd      x9, 240(x10)    // stores h + A[30] + 1 back into A[30]</p> <p>store \u7684\u7acb\u5373\u6570\u662f\u4f5c\u4e3a\u6570\u636e\u7684\u5730\u5740, beq \u7684\u7acb\u5373\u6570\u662f\u4f5c\u4e3a\u8fd0\u7b97\u7684\u5730\u5740\uff08\u52a0\u5230 PC \u4e0a\uff09\u56e0\u6b64\u4e8c\u8005\u7684\u6307\u4ee4\u7c7b\u578b\u4e0d\u540c\u3002</p> <p>\u8df3\u8f6c\u7684\u8303\u56f4\u6709\u9650\u5236\uff0c\u56e0\u4e3a\u7acb\u5373\u6570\u53ea\u6709 12 \u4f4d\u3002\uff08PC \u76f8\u5bf9\u5bfb\u5740\uff0c\u4ee5\u5f53\u524d\u7a0b\u5e8f\u4f4d\u7f6e\u4e3a\u57fa\u51c6\u524d\u540e\u8df3\uff09 </p> <p> </p> <p>i \u5b58\u653e\u5728 x22\uff0c k \u5b58\u653e\u5728 x24\uff0c save{]\u6570\u7ec4\u57fa\u5730\u5740\u5b58\u653e\u5728 x25</p> <p><code>add x10, x10, x25</code>\u8ba1\u7b97\u7684\u662f\u6570\u7ec4\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd8\u4e0d\u662f\u6570\u7ec4\u5143\u7d20\u7684\u503c</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981<code>load\u6307\u4ee4</code>\u5c06\u503c\u53d6\u51fa\u6765\u653e\u7f6e\u5728<code>\u4e34\u65f6\u5bc4\u5b58\u5668x9</code>\u4e2d</p> <p></p> <p><code>blt: branch less than</code></p> <p><code>bge: branch greater  equal</code></p> <ul> <li> <p><code>blt rs1, rs2, L1</code> </p> <p>\u82e5 <code>rs1&lt;rs2</code> \u5219\u8df3\u5230 L1</p> </li> <li> <p><code>bge rs1, rs2, L1</code> </p> <p>\u82e5 <code>rs1&gt;=rs2</code> \u5219\u8df3\u5230 L1</p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#272-slt-instruction","title":"2.7.2 slt instruction","text":"<p>set on if less than. </p> <p><code>slt x2, x3, x4 # x2=1 if x3 &lt; x4</code> </p> <p>R \u578b\u6307\u4ee4</p> <p> </p> <p>\u53ef\u4ee5\u7528 slt + bne \u5b9e\u73b0 blt\u7684\u529f\u80fd</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#273-signed-vs-unsigned","title":"2.7.3 Signed vs. Unsigned","text":"<p>\u9ed8\u8ba4\u662f\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83  </p> <ul> <li>Signed comparison: <code>blt</code>, <code>bge</code></li> <li>Unsigned comparison: <code>bltu</code>, <code>bgeu</code></li> </ul> <p><code>set on less than immediate</code></p> <p>slti \uff1aSet on less than immediate</p> <p>sltiu \uff1aSet on less than unsigned immediate</p> <p>\u4e0e\u7acb\u5373\u6570immediate\u8fdb\u884c\u6bd4\u8f83</p> <p></p> <p>\u8fb9\u754c\u68c0\u67e5\uff1a</p> <p>\u5173\u4e8e\u4f7f\u7528bgeu\u540c\u65f6\u5b9e\u73b0 x20&gt;=x11 &amp; x20 &lt; 0</p> <ul> <li> <p><code>bgeu x20, x21, IndexOutofBound</code>\u6839\u636e\u9898\u76ee\u7684\u8981\u6c42\uff0c\\(x20 &lt; 0  \\ \\&amp; \\ x20 &gt;= x11\\)\u8bf4\u660e\\(x11,x20\\)\u90fd\u662f\u8d1f\u6570\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u6bd4\u8f83\uff0c\u5b8c\u5168\u53ef\u4ee5\u8f6c\u5316\u4e3a\u65e0\u7b26\u53f7\u6570</p> </li> <li> <p>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6570111\u2026.111\u6700\u5927\uff0c\u8f6c\u5316\u4e3a\u6709\u7b26\u53f7\u6570\u4e5f\u662f\u6700\u5927</p> <p>\u65e0\u7b26\u53f7\u6570\u4ece100000\u5f00\u59cb\u9012\u589e\uff0c\u6709\u7b26\u53f7\u6570\u4e5f\u662f\u4ece100000\u5f00\u59cb\u9012\u589e</p> <p><code>\u8fd9\u4e5f\u5c31\u8bf4\u660e\u65e0\u7b26\u53f7\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u53ef\u4ee5\u8fc1\u79fb\u5230\u6709\u7b26\u53f7\u6570</code></p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#274-caseswitch","title":"2.7.4 Case/Switch","text":"<p> <p></p> <p>\\(x_6\\) \u662f\u8df3\u8f6c\u8868\u7684\u57fa\u5730\u5740\uff0c\\(x_7\\leftarrow x_6+8*k\\) </p> <p>\\(x7\\)\u5b58\u653e\u7684\u662f\u5177\u4f53\u8df3\u8f6c\u7684\u6307\u4ee4\u5757\u7684\u5730\u5740</p> <p><code>jalr x1, 0(x7)</code>   I \u578b\u6307\u4ee4 \u628a\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740 PC+4<code>\u653e\u5165</code>x1<code>\u5bc4\u5b58\u5668\uff0c\u968f\u540e\u8df3\u5411</code>[x7] + 0<code>\u7684\u5730\u65b9\u3002</code> </p> <p>\u6267\u884c\u5b8cjalr\u4e4b\u540e\uff0c\u80fd\u591f\u6839\u636e x1\u4fdd\u5b58\u7684PC+4\u8fd4\u56de\u5230\u4e3b\u7a0b\u5e8f</p> <p>\u8fd9\u91cc\u6211\u4eec <code>jalr x0, 0(x1)</code> \u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u6539\u53d8 <code>x0</code>\u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u7528\u4f5c\u5360\u4f4d\uff0c\u5e76\u6ca1\u6709\u5b9e\u9645\u5b58\u50a8\u8fd4\u56de\u5730\u5740\u3002</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#28-supporting-procedures-in-computer-hardware","title":"2.8 Supporting Procedures in Computer Hardware","text":"<p>Procedure/function --- be used to structure programs  </p> <p>\u4e3a\u4e86\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u3002\u6613\u4e8e\u7406\u89e3\uff0c\u53ef\u4ee5\u590d\u7528\u3002</p> <p>\u8c03\u7528\u51fd\u6570\u7684\u6b65\u9aa4</p> <ol> <li> <p>Place Parameters in a place where the procedure can access them (in registers <code>x10~x17</code>)  </p> <p>\u5c06\u53c2\u6570\u653e\u5728\u8fc7\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u7684\u4f4d\u7f6e\uff08\u5728\u5bc4 <code>x10~x17</code> \u5b58\u5668\u4e2d\uff09</p> </li> <li> <p>Transfer control to the procedure  </p> <p>\u5c06\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u5b50\u7a0b\u5e8f\u4e0a</p> </li> <li> <p>Acquire the storage resources needed for the procedure</p> <p>\u83b7\u53d6\u8fc7\u7a0b\u6240\u9700\u7684\u5b58\u50a8\u8d44\u6e90</p> </li> <li> <p>Perform the desired task</p> </li> <li> <p>Place the result value in a place where the calling program can access it  </p> <p>\u5c06\u7ed3\u679c\u503c\u653e\u5728\u8c03\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u5b83\u7684\u4f4d\u7f6e <code>x10~x17</code></p> </li> <li> <p>Return control to the point of origin (address in <code>x1</code>)</p> <p>\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u5230\u539f\u5148\u7684\u4e3b\u7a0b\u5e8f\uff08\u5730\u5740\u5728 <code>x1</code> \uff09</p> </li> </ol>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#281-procedure-call-instructions","title":"2.8.1 Procedure Call Instructions","text":"<ul> <li> <p>Procedure call: jump and link </p> <p><code>jal x1, ProcedureLabel</code></p> <ul> <li> <p>Address of following instruction put in <code>x1</code></p> <p>\u5c06\u4e0b\u4e00\u6761\u6307\u4ee4\u5b58\u653e\u5230x1\uff0c\u4e5f\u5c31\u662fPC+4</p> </li> <li> <p>Jumps to target address</p> </li> </ul> </li> <li> <p>Procedure return: jump and link register  </p> <p><code>jalr x0, 0(x1)</code></p> <ul> <li> <p>Like jal, but jumps to <code>0 + address in x1</code></p> <p>\u50cf jal \u4e00\u6837\uff0c\u4f46\u8df3\u5230 <code>0 + address in x1</code></p> </li> <li> <p>Use <code>x0</code> as rd (<code>x0</code> cannot be changed)</p> <p>x0\u5728\u6b64\u5904\u76f8\u5f53\u4e8e\u5360\u4f4d\u7b26\uff0c\u5e76\u4e0d\u80fd\u53d1\u751f\u66f4\u6539</p> </li> <li> <p>Can also be used for computed jump</p> </li> </ul> </li> </ul> <p>\u4e0d\u80fd\u7528 <code>jal</code> \u8df3\u56de\u6765\uff0c\u8df3\u8fdb\u51fd\u6570\u7684\u5730\u5740\u7684\u662f\u56fa\u5b9a\u7684, Label \u4e00\u5b9a\u3002\u4f46\u662f\u8df3\u56de\u6765\u7684\u5730\u5740\u4e0d\u4e00\u5b9a\uff0c\u8981\u7528 <code>x1</code> \u5b58\u50a8\u624d\u80fd\u8df3\u56de\u3002  </p> <p>jal \u548c jalr\u7684\u533a\u522b\u5728\u4e8e\uff1a</p> <p>\u6709\u6ca1\u6709\u4f7f\u7528\u5bc4\u5b58\u5668\u6765\u534f\u52a9\u8df3\u8f6c\u5230procedural\u3002\u4e14\u4e24\u8005\u8df3\u8f6c\u7684\u8303\u56f4\u4e0d\u540c\uff0c\u524d\u8005\u4f9d\u9760\u7acb\u5373\u6570imm\uff0c\u540e\u8005\u4f9d\u9760\u5bc4\u5b58\u5668\u548cimm\u8c03\u6574\u5927\u5c0f</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#282-using-more-registers","title":"2.8.2 Using More Registers","text":"<ul> <li> <p>Registers for procedure calling</p> <ul> <li> <p><code>x10~x17</code>(<code>a0~a7</code>): eight argument registers to pass parameters or return values  </p> <p>8 \u4e2a\u53c2\u6570\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4f20\u9012\u53c2\u6570\u6216\u8fd4\u56de\u503c\uff08\u8fdb\u5165\u51fd\u6570\u65f6\uff0c\u4f20\u53c2\uff1b\u51fd\u6570\u7ed3\u675f\uff0c\u8fd4\u56de\u7ed3\u679c\uff09</p> </li> <li> <p><code>x1</code>: one return address register to return to origin point  </p> <p>\u4e00\u4e2a\u8fd4\u56de\u5730\u5740\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u8fd4\u56de\u539f\u5148\u7684\u4e3b\u7a0b\u5e8f</p> </li> </ul> </li> <li> <p>Stack\uff1aIdeal data structure for spilling registers</p> <ul> <li>Push, pop</li> <li>Stack pointer (<code>sp</code>): <code>x2</code> \u6307\u5411\u6808\u9876\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u6709\u6548\u6570\u636e\u6240\u5728\u7684\u4f4d\u7f6e</li> </ul> </li> <li> <p>Stack grow from higher address to lower address  </p> <p>\u5806\u6808\u4ece\u8f83\u9ad8\u5730\u5740\u589e\u957f\u5230\u8f83\u4f4e\u5730\u5740</p> <ul> <li>Push: <code>sp = sp - 8</code>\u5411\u4e0b\u79fb</li> <li>Pop: <code>sp = sp + 8</code>  \u5411\u4e0a\u79fb</li> </ul> <p> </p> </li> <li> <p>\u8fdb\u884c\u6808\u6307\u9488\u51cf24\uff0c\u76f8\u5f53\u4e8epush\u4e09\u6b21</p> </li> <li>\u6267\u884c\u5b8c\u6210\u76ee\u6807\u64cd\u4f5c\u4e4b\u540e\uff0c\u6309\u7167\u955c\u50cf\u987a\u5e8f\uff0c\u4f9d\u6b21\u6062\u590dx20\uff0cx6\uff0cx5.\u6700\u540e\u6062\u590d\u6808\u6307\u9488</li> <li>\u8df3\u8f6c\u56de\u4e3b\u7a0b\u5e8f</li> </ul> Name Register Name Usage Preserved or call? x0(zero) 0 The constant value 0 n.a. x1(ra) 1 Return address(link register) yes x2(sp) 2 Stack pointer yes x3(gp) 3 Global pointer yes x4(tp) 4 Thread pointer yes x5-x7(t0-t2) 5-7 Temporaries no x8(s0/fp) 8 Saved/frame pointer yes x9(s1) 9 Saved yes x10-x17(a0-a7) 10-17 Arguments/results no x18-x27(s2-s11) 18-27 Saved yes x28-x31(t3-t6) 28-31 Temporaries no PC - Auipc(Add Upper Immediate to PC) yes <ul> <li> <p><code>t0~t6</code> \u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u4e0d\u9700\u8981\u5728\u51fd\u6570\u4e2d\u4fdd\u5b58 </p> </li> <li> <p><code>s0~s11</code> saved registers  </p> </li> </ul> <p>\u6807\u6709 Preserved \u8868\u660e\u6211\u4eec\u9700\u8981\u5728\u51fd\u6570\u5f00\u59cb\u65f6\u4fdd\u5b58\u8be5\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5e76\u5728\u79bb\u5f00\u51fd\u6570\u524d\u6062\u590d\u5bc4\u5b58\u5668\u7684\u503c\u3002 </p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#283-nested-procedure","title":"2.8.3 Nested Procedure","text":"<p>non-leaf procedure \uff1a\u5728procedure\u4e2d\u8c03\u7528procedure</p> <p>eg: nested procedure \u9012\u5f52</p> <p></p> <p></p> <p></p> <ol> <li> <p>\u5148\u5bf9\u6808\u6307\u9488\u8fdb\u884c\u64cd\u4f5c\uff0cpush\u4e24\u4e2a\u6570\uff0csp -16\uff0c\u4e00\u4e2a\u662f\u8fd4\u56de\u7684\u5730\u5740x1\uff0c\u4e00\u4e2a\u662f\u53c2\u6570n</p> </li> <li> <p>\u6267\u884cx5 = x10 - 1 = n - 1\u64cd\u4f5c\u4e4b\u540e\uff0c\u8981\u5224\u65adn\u662f\u5426\u5c0f\u4e8e1\uff0c\u53cd\u8fc7\u6765\u53ea\u9700\u8981\u5224\u65adx5\u662f\u5426\u5927\u4e8e\u7b49\u4e8e0</p> </li> <li> <p>\u5982\u679cx5 = 0\u7684\u8bdd\uff0c\u6b64\u65f6n=1\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de1\uff0c\u6062\u590d\u6808\u6307\u9488\uff0c\u8df3\u8f6c\u56de\u4e3b\u7a0b\u5e8f\u3002</p> <p>\u5426\u5219\uff0c\u8fdb\u5165\u9012\u5f52\u8c03\u7528</p> </li> </ol> <p>\u5bf9\u4e8e\u9012\u5f52\u7a0b\u5e8fL1\uff1a</p> <ol> <li>\u5148\u8ba1\u7b97 x10 = x10 - 1,\u5982\u6b64\u4fbf\u80fd\u591f\u8ba1\u7b97fact(n-1)</li> <li>\u8ba1\u7b97\u5b8c\u6210\u540e\uff0c\u7531\u4e8e\u539f\u5148\u7684n\u503c\u901a\u8fc7x10\u88ab\u538b\u5165\u6808\u4e2d\uff0c\u6211\u4eec\u5148\u7528x6\u627f\u63a5fact(n-1),\u518d\u5229\u7528x10\u53d6\u51fan\uff0c\u6700\u540e\u8ba1\u7b97n * frac(n-1)</li> <li>\u6700\u540e\u8df3\u8f6c\u56de\u5230\u4e3b\u7a0b\u5e8f</li> </ol> <p>\u5728\u8fc7\u7a0b\u8c03\u7528\u4e2d\u4fdd\u7559\u5185\u5bb9\uff1a\u5bc4\u5b58\u5668\uff08saved\uff09\u3001\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\uff08 sp \uff09\u3001\u8fd4\u56de\u5730\u5740\u5bc4\u5b58\u5668\uff08 x1 \uff09\uff0c\u5806\u6808\u6307\u9488\u4e0a\u65b9\u7684\u5806\u6808</p> <p>\u5728\u8fc7\u7a0b\u8c03\u7528\u4e2d\u672a\u4fdd\u7559\u5185\u5bb9\uff0c\u4e34\u65f6\u5bc4\u5b58\u5668\u3001\u53c2\u6570\u5bc4\u5b58\u5668\uff08x10~x17\uff09\u3001\u8fd4\u56de\u503c\u5bc4\u5b58\u5668\uff08 x10 ~ x17\uff09\uff0c\u5806\u6808\u6307\u9488\u4e0b\u65b9</p> <p></p> <p>Local Data on the Stack</p> <p></p> <p><code>Procedure frame and frame pointer ( x8 or fp )</code></p> <p><code>Global pointer ( x3 or gp )</code></p> <p>\u4e00\u65e6\u8c03\u7528procedure\uff0cfp\u5c31\u4f1a\u51fa\u73b0\u5f53\u524dprocedure\u7684\u6808\u9876(<code>\u4ee5fp\u4e3a\u57fa\u51c6\u76f8\u5bf9\u5bfb\u5740</code>)</p> <p>\u5728\u8fc7\u7a0b\u8c03\u7528\u4e2d\u7528\u5230\u7684\u6307\u9488\uff08\u4f8b\u5982\u5b58\u653e\u8fc7\u7a0b\u7684\u6570\u7ec4\uff09\u53cc\u91cd\u4f5c\u7528\uff0csp\u4e0d\u505c\u7684push\u548cpop\uff0cfp\u4ec5\u4ec5\u5728\u9700\u8981\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u53d8\u91cf\u65f6\u79fb\u52a8\uff08\u4ee5fp\u4e3a\u57fa\u5740\uff0c\u76f8\u5bf9\u8bbf\u95ee\uff09</p> <p></p> <p>\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u7684\u7a0b\u5e8f\u7ed3\u679c</p> <ul> <li>text: \u7a0b\u5e8f\u4ee3\u7801</li> <li>\u6808\uff1a\u81ea\u52a8\u5206\u914d\uff0c\u4ece\u4e0a\u5f80\u4e0b</li> <li>\u5806heap\uff1a\u52a8\u6001\u5206\u914d\uff0c\u4ece\u4e0b\u5f80\u4e0a</li> </ul> <p></p> <p></p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#29-communicating-with-people","title":"2.9 Communicating with People","text":"<ul> <li> <p>Byte-encoded character sets  </p> <p>e.g. ASCII, Latin-1</p> </li> <li> <p>Unicode: 32-bit character set  </p> <p>e.g. UTF-8, UTF-16 </p> <p>\u7f16\u7801\u4e2d\u6709\u4e0d\u540c\u957f\u5ea6\u7684\u6570\u636e\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u6709\u4e0d\u540c\u957f\u5ea6\u7684 load \u548c store.  </p> </li> <li> <p>Load byte/halfword/word: <code>Sign extend</code> to 64 bits in rd    </p> </li> </ul> <p>\u52a0\u8f7d\u5b57\u8282/\u534a\u5b57/\u5b57\uff1a\u7b26\u53f7\u6269\u5c55\u5230 rd \u4e2d\u7684 64 \u4f4d</p> <pre><code>* `lb rd, offset(rs1)`\n* `lh rd, offset(rs1)`\n* `lw rd, offset(rs1)` \n* `ld rd, offset(rs1)`\n</code></pre> <p>\u200b                          </p> <p>\u540c\u6837\u662f\u53d6 A[4] \u7684\u503c\uff0c\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b offset \u4e0d\u540c\u3002<code>char</code> \u4e3a 4, <code>short int</code> \u4e3a 8, <code>int</code> \u4e3a 16. </p> <ul> <li> <p>Load byte/halfword/word unsigned: <code>0 extend</code> to 64 bits in rd</p> <p>\u52a0\u8f7d\u5b57\u8282/\u534a\u5b57/\u5b57\u65e0\u7b26\u53f7\uff1a0 \u6269\u5c55\u5230 rd \u4e2d\u7684 64 \u4f4d</p> <ul> <li><code>lbu rd, offset(rs1)</code></li> <li><code>lhu rd, offset(rs1)</code></li> <li><code>lwu rd, offset(rs1)</code></li> </ul> </li> <li> <p>Store byte/halfword/word: Store rightmost 8/16/32 bits  </p> <p>\u5b58\u50a8\u5b57\u8282/\u534a\u5b57/\u5b57\uff1a\u5b58\u50a8\u6700\u53f3\u8fb9\u7684 8/16/32 \u4f4d</p> <ul> <li> <p><code>sb rs2, offset(rs1)</code></p> </li> <li> <p><code>sh rs2, offset(rs1)</code></p> </li> <li> <p><code>sw rs2, offset(rs1)</code>   \u5b58\u50a8\u5c31\u4e0d\u9700\u8981\u8003\u8651\u6269\u5145\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u505a\u8fd0\u7b97\uff0c\u53ea\u662f\u628a\u5bf9\u5e94\u90e8\u5206\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u3002</p> <p>offset \u53ef\u4ee5\u662f 3. \u56e0\u4e3a RISC-V \u662f\u53ef\u4ee5\u4e0d\u5bf9\u9f50\u7684\u3002\uff08\u5b9e\u9645\u4e0a sh offset \u4e00\u822c\u662f 2 \u7684\u500d\u6570, sw \u662f 4 \u7684\u500d\u6570\uff09  </p> </li> </ul> </li> </ul> <p>\u5b57\u7b26\u4e32</p> <p> </p> <p>i \u4e0d\u5e94\u8be5\u5206\u914d\u7ed9 s19, \u5206\u914d\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u5c31\u53ef\u4ee5\u4e0d\u7528\u5806\u6808\u4fdd\u5b58 s19 \u4e86\u3002  </p> <p>\u5bf9\u4e8e\u4e00\u4e2a leaf procedure(\u4e0d\u518d\u8c03\u7528\u5176\u4ed6 procedure) \u7f16\u8bd1\u5668\u8981\u5c3d\u53ef\u80fd\u7528\u5b8c\u6240\u6709\u7684\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u518d\u53bb\u7528\u5176\u4ed6\u7684\u5bc4\u5b58\u5668\u3002  </p> <p>\u4e3a\u4ec0\u4e48\u5f3a\u8c03 leaf procedure? - \u56e0\u4e3a\u5bf9\u4e8e\u975e leaf \u7684\u51fd\u6570\uff0c\u53ef\u80fd\u4e34\u65f6\u53d8\u91cf\u4f1a\u88ab\u8c03\u7528\u540e\u7684\u51fd\u6570\u6539\u53d8\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u7ee7\u7eed\u7528\u4e86\u3002</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#210-risc-v-addressing-for-32-bit-immediate-and-addresses","title":"2.10 RISC-V Addressing for 32-Bit Immediate and Addresses","text":""},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#2101-wide-bit-immediate-addressing","title":"2.10.1 Wide Bit Immediate addressing","text":"<p>\u5982\u4f55\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u4efb\u610f\u7684\u7acb\u5373\u6570\u3002</p> <p><code>lui rd, constant</code> \u53ef\u4ee5\u628a 20 \u4f4d\u7684\u5e38\u6570\u653e\u5230\u5bc4\u5b58\u5668\u4e2d\u3002(U-type)</p> <p>\u6ce8\u610f\u8fd9\u91cc\uff0c\u6211\u4eec\u4f1a\u628a\u7acb\u5373\u6570\u653e\u5165\u5bc4\u5b58\u5668rd\u7684 [31:12] \u4f4d\uff0c\u4f4e\u4f4d\u4f1a\u586b\u5145\u4e3a 0. </p> <p>Example \"Loading a 32-bit constant\"</p> <p> </p> <p>\u6211\u4eec\u6700\u7ec8\u60f3\u653e\u5165\u5bc4\u5b58\u5668\u7684\u503c\u662f 32 \u4f4d\u5e38\u6570 <code>0x003D0</code>. \u5148\u5229\u7528 <code>lui</code> \u5c06\u9ad8 20 \u4f4d 976 \u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff0c\u968f\u540e\u5229\u7528\u52a0\u6cd5\u6307\u4ee4\u52a0\u4e0a \u4f4e 12 \u4f4d\uff0c\u5373 2304.  </p> <p>\u4f46\u662f\u6b64\u5904\u5b58\u5728\u95ee\u9898\uff0c addi\u5b58\u5728\u7b26\u53f7\u6269\u5145\uff0c\u5bf9\u4e8e\u8d1f\u6570\u4f1a\u524d\u7f6e\u52a01\uff0c\u5bfc\u81f4\u52a0\u6cd5\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c</p> <p>\u53ef\u4ee5\u4f7f\u7528OR\u6216\u8005XOR\uff0c\u524d\u9762\u586b\u51450       ori s3, s3, 2304</p> <p>\u6216\u8005\u65b0\u7684\u65b9\u6cd5:</p> <p>\u5728\u5df2\u77e5\u52a0\u4e00\u4e2a\u8d1f\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u4e00\u4e2a\u6570\u6765\u5bf9\u51b2addi\u65f6\u7684FFFFF\u2026, \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728lui\u64cd\u4f5c\u7684\u65f6\u5019\u989d\u5916\u52a0\u4e0a\u4e00\u4e2a1\uff0c\u6b64\u65f6 00001000+FFFFF000 = 1_0000_0000,\u4e5f\u5c31\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u4e86</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#2102-branch-addressing","title":"2.10.2 Branch Addressing","text":"<p>SB-type</p> <p>func3\u7528\u4e8e\u533a\u5206\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u6761\u4ef6</p> <ul> <li> <p>PC-relative addressing  </p> <p>\\(Target\\ address = PC + Branch\\ offset = PC + immediate \\times 2\\) </p> <p><code>\u7531\u4e8e\u6b64\u5904\u6ca1\u6709imm[0],\u9ed8\u8ba4\u6700\u4f4e\u4f4d\u4e3a0\uff0c\u6240\u4ee5offset = immediate x 2,\u76f8\u5f53\u4e8e\u5411\u5de6\u79fb\u52a8\u4e00\u4f4d</code></p> </li> </ul> <p>\u8df3\u8f6c\u7684\u8303\u56f4\uff1a 12bit -&gt; \\(+-2^{12}\\)byte   \u7406\u89e3\u4e3a\u6709\u7b26\u53f7\u6570\uff0c\u7b2c\u4e00\u4f4d\u7b26\u53f7\u4f4d\uff0c\u540e\u7eed12\u4f4d\u8868\u793a\u8303\u56f4\\(2^{12}\\)</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#2103-jump-addressing","title":"2.10.3 Jump Addressing","text":"<p>UJ-type(\u53ea\u6709 <code>jal</code> \u6307\u4ee4)\uff0cJalr\u6307\u4ee4\u662fI\u578b\u6307\u4ee4 </p> <p><code>\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c \u5b58\u5728imm[20]\u4f5c\u4e3a\u7b26\u53f7\u4f4d\uff0cimm[0]\u4e0d\u5b58\u5728\uff0c\u9ed8\u8ba4\u4e3a0</code></p> <p>20-bit immediate for larger range, \u4f4e\u4f4d\u9ed8\u8ba4\u8865 0, \u6545\u5b9e\u9645\u8868\u793a\u7acb\u5373\u6570\u4e3a [20:0] \u5171 21 \u4f4d\u3002 </p> <p>\\(Target\\ address = PC + Branch\\ offset = PC + immediate \\times 2\\) </p> <p>imm[20] \u8868\u793a\u7b26\u53f7\u4f4d \uff0c\u8df3\u8f6c\u8303\u56f4\uff1a \\(20bits -&gt;2^{20}bytes = 1M\\) </p> <p>\u8df3\u8f6c\u8303\u56f4\u6700\u5927\u7684\u662f Jalr\uff0c\uff08jalr x1, 0(x5)), \u5728\u5bc4\u5b58\u5668x5\u4e2d\u5b58\u653e\u5730\u5740\u3002I\u578b\u6307\u4ee4 </p> <p>RISC-V \u76f4\u63a5\u7528 PC \u7b97 offset, \u800c\u975e PC+4. </p> <p><code>\u89c2\u8d4f\u4e0a\u8868\uff0c\u4f1a\u53d1\u73b0rd/offset\u90e8\u5206\u662f01100\uff0c\u6b64\u5904\u5927\u6709\u7384\u673a\uff0c\u5206\u522b\u5bf9\u5e94imm[4:1], imm[11]</code></p> <p>bne\u6307\u4ee4\u7684offset \u662f 0 0 000000 0110_0, \u4e5f\u5c31\u662f 6 * 2 = 12</p> <p>beq\u6307\u4ee4\u7684offset \u662f 1 1 111111 0110_0, \u4e5f\u5c31\u662f -10 * 2 = -20</p> <p></p> <ul> <li>All RISC-V instructions are 4 bytes long RISC-V \u6307\u4ee4\u53604\u4e2a\u5b57\u8282</li> <li> <p>PC-relative addressing refers to the number of halfwords \u91c7\u7528PC\u76f8\u5bf9\u5bfb\u5740</p> <p>While branch target is far away  </p> </li> <li> <p>Inserts an unconditional jump to target  </p> <p>\u65e0\u6761\u4ef6\u8df3\u8f6c\u8bed\u53e5 jal \u80fd\u6bd4 branch\u8bed\u53e5 \u8df3\u8f6c\u7684\u8303\u56f4\u66f4\u5e7f,jal\u7684imm\u670920\u4f4d</p> <p>Invert the condition so that the branch decides whether to skip the jump.  </p> </li> </ul> <p>Example \"Branching far away\"</p> <p></p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#2104-risc-v-addressing-summary","title":"2.10.4 RISC-V Addressing Summary","text":"<p>\u5bfb\u5740\u65b9\u5f0f\u662f\u6307\u4ee4\u96c6\u7684\u6838\u5fc3\u533a\u522b\u3002</p> <ul> <li>\u7acb\u5373\u6570\u5bfb\u5740 <code>addi x5, x6, 4</code></li> <li>\u5bc4\u5b58\u5668\u5bfb\u5740 <code>add x5, x6, x7</code></li> <li>\u57fa\u5740\u5bfb\u5740 <code>ld x5,100(x6)</code></li> <li>PC \u76f8\u5bf9\u5bfb\u5740 <code>beq x5,x6,L1</code></li> </ul> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u628a\u673a\u5668\u7801\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u6307\u4ee4\u3002</p> <ul> <li> <p>opcode  </p> <p>\u5148\u770b opcode, \u786e\u5b9a\u662f\u54ea\u7c7b\u6307\u4ee4\uff0c\u968f\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u5177\u4f53\u5212\u5206\u4e86\u3002</p> </li> <li> <p>fun3\u548cfun7</p> <p>\u518d\u770bfun3\u548cfun7\uff0c\u51b3\u5b9a\u5177\u4f53\u7684\u6307\u4ee4\u804c\u80fd</p> <p> </p> </li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#211-synchronization-in-risc-v","title":"2.11 Synchronization in RISC-V","text":"<ul> <li> <p>Two processors sharing an area of memory \u4e24\u4e2a\u5904\u7406\u5668\u5171\u4eab\u4e00\u4e2a\u5185\u5b58\u533a\u57df</p> <ul> <li>P1 writes, then P2 reads P1\u5199\u5165\uff0c\u7136\u540eP2\u8bfb\u53d6</li> <li>Data race if P1 and P2 don\u2019t synchronize \u5982\u679c P1 \u548c P2 \u4e0d\u540c\u6b65\uff0c\u5219\u53d1\u751f\u6570\u636e\u4e89\u7528<ul> <li>Result depends of order of accesses \u7ed3\u679c\u53d6\u51b3\u4e8e\u8bbf\u95ee\u987a\u5e8f</li> </ul> </li> </ul> </li> <li> <p>Hardware support required</p> <ul> <li><code>Atomic read/write memory operation \u539f\u5b50\u8bfb/\u5199\u5185\u5b58\u64cd\u4f5c</code></li> <li>No other access to the location allowed between the read and    write \u8bfb\u548c\u5199\u4e4b\u95f4\u4e0d\u5141\u8bb8\u5bf9\u8be5\u4f4d\u7f6e\u8fdb\u884c\u5176\u4ed6\u8bbf\u95ee</li> </ul> </li> <li> <p>Could be a single instruction</p> <ul> <li> <p>e.g. atomic swap* of register \u2194 memory</p> <p>\u5bc4\u5b58\u5668\u2194\u5b58\u50a8\u5668\u7684\u539f\u5b50\u4ea4\u6362*</p> </li> <li> <p>Or an atomic pair of instructions</p> <p>\u6216\u4e00\u5bf9\u539f\u5b50\u6307\u4ee4</p> </li> </ul> </li> </ul> <p></p> <p>Load reserved: <code>lr.d rd,(rs1)</code> </p> <p>\u628a\u5730\u5740 rs1 \u7684\u503c\u653e\u5230\u5bc4\u5b58\u5668 rd \u4e2d</p> <p>Store conditional: <code>sc.d rd,(rs1),rs2</code></p> <p>\u628a\u5bc4\u5b58\u5668 rs2 \u7684\u503c\u653e\u5165\u5730\u5740 rs1.  \u5982\u679c\u6210\u529f\u90a3\u4e48 rd \u91cc\u9762\u662f 0. \u5982\u679c\u4e0a\u6761\u6307\u4ee4 load \u540e\uff0c\u8fd9\u4e2a\u5730\u65b9\u7684\u503c\u88ab\u6539\u53d8\u4e86\uff0c\u90a3\u4e48\u5c31\u5931\u8d25\u4e86\uff0c\u8fd4\u56de 0. </p> <p>Example \"atomic swap\"</p> <p> </p> <ul> <li> <p>\u5c06x20\u5bf9\u5e94\u5730\u5740\u7684\u503c\u5b58\u5165x10\uff0cx10 = memory[x20]</p> </li> <li> <p>\u5c06x23\u7684\u503c\u653e\u5230x20\u5bf9\u5e94\u7684\u5730\u5740\uff0c x11\u8868\u793a\u72b6\u6001\u662f\u5426store\u6210\u679c\uff0cmemory[x20] = x23</p> </li> <li> <p>\u5982\u679cx11 \u7b49\u4e8e 0\uff0c \u8bf4\u660e\u6b64\u65f6 store \u6210\u529f\uff0c \u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5\uff0cx23 = x10</p> <p><code>\u603b\u4f53\u5b9e\u73b0\uff0cmemory[x20]\u4e0ex23\u503c\u7684\u4ea4\u6362</code></p> </li> <li> <p>\u5982\u679cx11 \u4e0d\u7b49\u4e8e0\uff0c \u5219\u8fd9\u4e2a\u5730\u65b9\u7684\u503c\u53d1\u751f\u4e86\u66f4\u6539\uff0c\u91cd\u65b0\u8fd4\u56delr.d</p> </li> </ul> <p>Example \"lock\"</p> <p> </p> <ul> <li>\u7b2c\u4e00\u6b65\u5b9e\u73b0 \\(x12 = x0 + 1 = 1\\)</li> <li>x10 = memory[x20]</li> <li>\u5224\u65ad x10 \u662f\u5426\u4e3a0\uff0c\u5982\u679c\u4e0d\u4e3a0\uff0c\u8868\u793a\u5f53\u524dmemory[x20]\u5904\u5b58\u653e\u7740\u6570\u636e\uff0c\u6709\u9501\u7684\u5b58\u5728\uff0c\u4e0d\u80fdstore</li> <li>\u5982\u679cx10 = 0\uff0c\u8868\u793a\u5f53\u524d\u7684\u9501\u662ffree\u7684\u72b6\u6001\uff0c\u80fd\u591f\u8fdb\u884cstore\uff0c x12 = memory[x20],\u7528x11\u8868\u793astore\u7684\u72b6\u6001</li> <li>\u5982\u679cx11 = 0\u8868\u793astore\u5931\u8d25\uff0c\u91cd\u65b0\u4f1aagain\u3002\u5982\u679cx11 = 1\u8868\u793astore\u6210\u529f</li> <li>\u89e3\u9501\u53ea\u9700\u8981x20\u5bf9\u5e94\u5730\u5740\u5b58\u653e\u7684\u6570\u636e\u4e3a0</li> </ul> <p>\u5730\u5740 x20 \u653e\u7684\u662f\u9501\uff0c\u5982\u679c\u9501\u4e3a 0, \u8bf4\u660e\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b58\u5165\u6570\u636e\uff0c\u5219\u6211\u4eec\u83b7\u5f97\u9501\u968f\u540e\u5b58\u5165\uff0c\u5e76\u91ca\u653e\u9501\uff08\u5c06\u9501\u7684\u503c\u7f6e\u4e3a0\uff09\u3002\u5426\u5219\u9700\u8981\u7b49\u9501\u91ca\u653e\u4e86\u624d\u80fd\u5b58\u3002</p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#212-translating-and-starting-a-program","title":"2.12 Translating and starting a program","text":"<p>Linker \u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u5e93\u51fd\u6570\uff0c\u591a\u6587\u4ef6\u7f16\u7a0b</p> <p>Producing an Object Module</p> <p>Provides information for building a complete program from the pieces(Header).  </p> <ul> <li>Text segment: translated instructions</li> <li>Static data segment: data allocated for the life of the program</li> <li>Relocation info: for contents that depend on absolute location of loaded program</li> <li>Symbol table: global definitions and external refs</li> <li>Debug info: for associating with source cod</li> </ul> <p>Link</p> <p>Object modules(including library routine) \\(\\rightarrow\\) executable program</p> <ul> <li>Place code and data modules symbolically in memory</li> <li>Determine the addresses of data and instruction labels</li> <li>Patch both the internal and external references (Address of invoke)</li> </ul> <p>Loading a Program</p> <p>Load from image file on disk into memory</p> <ol> <li>Read header to determine segment sizes</li> <li>Create virtual address space</li> <li>Copy text and initialized data into memory    Or set page table entries so they can be faulted in</li> <li>Set up arguments on stack</li> <li>Initialize registers (including sp, fp, gp)</li> <li>Jump to startup routine    Copies arguments to x10, \u2026 and calls main    pWhen main returns, do exit syscall</li> </ol> <p>Dynamic Linking</p> <p>Only link/load library procedure when it is called.  </p> <p>\u9759\u6001\u94fe\u63a5\u5df2\u7ecf\u7f16\u5165\u6587\u4ef6\u4e86\uff0c\u52a8\u6001\u94fe\u63a5\u662f\u5728\u8fd0\u884c\u65f6\u94fe\u63a5\uff0c\u53ef\u4ee5\u7528\u5230\u6700\u65b0\u7684\u4ee3\u7801 </p> <ul> <li>Requires procedure code to be relocatable</li> <li>Avoids image bloat caused by static linking of all    (transitively) referenced libraries</li> <li>Automatically picks up new library versions \u81ea\u52a8\u83b7\u53d6\u65b0\u7684\u5e93\u7248\u672c</li> </ul>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#213--a-c-sort-example-to-put-it-all-together","title":"2.13  A C Sort Example To Put it All Together","text":"<pre><code>void swap(long long v[], size_t k)\n{\n    long long temp;\n    temp = v[k];\n    v[k] = v[k+1];\n    v[k+1] = temp;\n}\n</code></pre> <p>\u8f6c\u6362\u6210RISC-V\u6307\u4ee4</p> <pre><code>// register alloction for swap\n// v\u2014\u2014x10\uff0ck\u2014\u2014x11\uff0ctemp\u2014\u2014x5\nswap:   slli x6, x11, 3     // x6 = k * 8\n        add  x6, x10, x6        // x6 = v + (k * 8) \u662f v[k]\u7684\u5730\u5740\n        ld   x5, 0(x6)      // x5 = v[k]\n        ld   x7, 8(x6)      // x7 = v[k+1]\n        sd   x7, 0(x6)      // \u5c06v[k+1]\u4fdd\u5b58\u5230x6\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662fv[k] = v[k+1]\n        sd   x5, 8(x6)      // \u5c06v[k]\u4fdd\u5b58\u5230x6+8\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662fv[k+1] = v[k]\n        jalr x0, 0(x1)      // return to calling routine\n</code></pre> <p> <pre><code># v - x10   n-x11   i-x19   j-x20\n# saving registers\nsort:\n    addi    sp, sp, -40\n    sd      x1, 32(sp)          # return address\n    sd      x22, 24(sp)\n    sd      x21, 16(sp)\n    sd      x20, 8(sp)\n    sd      x19, 0(sp)\n\n# procedure body\n    mv      x21, x10            # x21 = x10 = v\n    mv      x22, x11            # x22 = x11 = n\n# outer loop\n    li      x19, 0              # x19 = i = 0\nfor1test:\n    bge     x19, x22, exit1     # i \u4e0e n \u8fdb\u884c\u6bd4\u8f83\n# inner loop\n    addi    x20, x19, -1        # j = i - 1\nfor2test:\n    blt     x20, x0, exit2      # j \u4e0e 0 \u8fdb\u884c\u6bd4\u8f83\n    slli    x5, x20, 3          # x5 = j * 8\n    add     x5, x21, x5         # x5 = v + j * 8 \u4e5f\u5c31\u662fv[j]\u7684\u5730\u5740\n    ld      x6, 0(x5)           # x6 = v[j]\n    ld      x7, 8(x5)           # x6 = v[j+1]\n    blt     x6, x7, exit2       # \u5982\u679cv[j] &lt; v[j+1],\u8bf4\u660ev[j+1]\u4e4b\u524d\u90fd\u6709\u5e8f\n    # v[j] &gt; v[j+1]\n    mv      x10,x21             # x10 = x21 = v\n    mv      x11,x20             # x11 = x20 = j\n    jal     x1, swap    \n    # inner loop\n    addi x20, x20, -1           # j = j -1\n    j for2test                  # \u8fd4\u56de\u5230\u5faa\u73af2 for2test\n\nexit2:\n    addi    x19, x19, 1         # i = i + 1\n    j       for1test            # \u8fd4\u56de\u5230\u5faa\u73af1 for1test\n\nexit1:\n    ld      x19, 0(sp)\n    ld      x20, 8(sp)\n    ld      x21, 16(sp)\n    ld      x22, 24(sp)\n    ld      x1, 32(sp)\n    addi    sp, sp, 40  \n    jalr    x0, 0(x1)           # return to calli\n</code></pre></p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#214-arrays-versus-pointers","title":"2.14 Arrays versus Pointers","text":"<p>\u6307\u9488\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u4f46\u662f\u6570\u7ec4\u9996\u5730\u5740\u4e0d\u80fd\u6539\u53d8\uff0c\u56e0\u6b64\u7ffb\u8bd1\u6210\u6c47\u7f16\u7684\u7ed3\u679c\u4e5f\u6709\u6240\u4e0d\u540c\u3002</p> <p>Example \"Clearing an Array\"   </p> <p>\u4e0a\u8ff0\u4ee3\u7801\u7684\u5b9e\u73b0\u8981\u6c42size &gt;= 1,\u56e0\u4e3a\u90fd\u662f\u5148\u8fdb\u884c\u8fd0\u7b97\uff0c\u518d\u8fdb\u884c\u8fb9\u754c\u68c0\u67e5</p> <p>\u904d\u5386\u6570\u7ec4\u5143\u7d20\u2014\u2014\u7d22\u5f15\uff08\u7d22\u5f15+1\uff09\u6216\u8005\u6307\u9488\uff08\u5730\u5740+8\uff09</p> <p><code>\u53ef\u4ee5\u770b\u5230\u6307\u9488\u8fd0\u7b97\u7684\u6548\u7387\u66f4\u9ad8</code></p>"},{"location":"CO/2.%20Instructions%20Language%20of%20the%20Computer/#215-summary","title":"2.15 Summary","text":"<p>\u5bfb\u5740\u65b9\u5f0f\u662f\u6307\u4ee4\u96c6\u7684\u6838\u5fc3\u533a\u522b\u3002</p> <ul> <li>\u7acb\u5373\u6570\u5bfb\u5740 <code>addi x5, x6, 4</code></li> <li>\u5bc4\u5b58\u5668\u5bfb\u5740 <code>add x5, x6, x7</code></li> <li>\u57fa\u5740\u5bfb\u5740 <code>ld x5,100(x6)</code></li> <li>PC \u76f8\u5bf9\u5bfb\u5740 <code>beq x5,x6,L1</code></li> </ul> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/","title":"3. Arithmetic for Computer","text":"<p> \u7ea6 6162 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 31 \u5206\u949f</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#31-introduction","title":"3.1 Introduction","text":"<ol> <li> <p>Computer words are composed of bits; </p> <ul> <li> <p>there are 32 bits/word or 64 bits/word in RISC-V</p> </li> <li> <p><code>Contains four bytes for 32bits word</code></p> <p>\u4e00\u4e2a\u5b57 word 32 bits</p> </li> </ul> </li> <li> <p>Simplified to contain only in course:</p> <ul> <li> <p>memory-reference instructions:  lw, sw(<code>load word \\ store word</code>)\uff0cld\uff0csd\uff08load double  store double\uff09,lh, sh\uff08load half   store half\uff09</p> </li> <li> <p>arithmetic-logical instructions:  add, sub, and, or, xor, slt(<code>set less than\u6bd4\u8f83 slt x1 x2 x3: x1 = (x2 &lt; x3) ? 1 : 0</code>)...</p> </li> <li> <p>control flow instructions(\u8df3\u8f6c):  beq\uff08\u5982\u679cequal\u8df3\u8f6c\u5230\u2026\u2026branch\uff09, bne\uff08not equal\uff09, jal\uff08jump and link\uff09</p> <p>\u4ee5\u4e0a\u5747\u9700\u8981ALU\uff0c\u8ba1\u7b97\u5185\u5b58\u5730\u5740\uff0c\u8fdb\u884c\u6761\u4ef6\u5224\u65ad</p> </li> </ul> </li> <li> <p>Generic Implementation:</p> <ul> <li> <p>use the program counter (PC) to supply instruction address </p> <p><code>PC program counter \u50a8\u5b58\u6307\u4ee4\u7684\u5730\u5740</code></p> </li> <li> <p>get the instruction from memory <code>\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u6307\u4ee4</code></p> </li> <li> <p>read registers</p> </li> <li> <p>use the instruction to decide exactly what to do</p> </li> </ul> </li> <li> <p>All instructions use the ALU after reading the registers</p> </li> </ol> <p>\u5bf9\u4e8ebinary integer \\(1001_2\\)</p> <ul> <li>unsigned : \\(1001_2 = 9_{10}\\)</li> <li>signed : \\(1001_2 = -1_{10}(\u539f\u7801) = -6_{10}(1's \\ compliment) = -7_{10}(2's \\ compliment)\\) </li> </ul>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#32-signed-and-unsigned-numbers-representations","title":"3.2 Signed and Unsigned Numbers Representations","text":"<ul> <li> <p>Sign and magnitude</p> <p></p> <ul> <li> <p>\u8865\u7801 2's Complement</p> <p>\u6269\u5145\u4f4d\u6570\uff0c\u5de6\u4fa7\u8865\u7b26\u53f7\u4f4d\u5373\u53ef</p> <p>only one representation for 0</p> <p>one more negative number than positive number \\([-2^{n-1},2^{n-1}-1]\\)</p> <p></p> </li> <li> <p>\u53cd\u7801 1's Complement</p> </li> <li> <p>\u539f\u7801 sign magnitude</p> <p>\u9996\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c\u540e\u7eed\u6309\u71672\u7684\u5e42\u8fdb\u884c\u8ba1\u7b97</p> </li> </ul> </li> </ul> <p>\u8865\u5145 Two\u2018s Biased notation</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5de6\u4fa7\u4e3a32\u4f4d\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\uff0c\u5982\u679c\u770b\u4f5c\u65e0\u7b26\u53f7\u6570\uff0c\u5219\u5de6\u4fa7\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684\u3002\u4f46\u662f\u53f3\u4fa7\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6574\u6570\u786e\u5b9e\u5206\u6bb5\u9012\u589e\u3002</p> <p>\u5047\u8bbe\u539f\u5148 n = 4</p> <p>\u4e3a\u6b64\u5f15\u5165\u79fb\u7801\uff0c\u5728\u5de6\u4fa7\u52a0\u4e0a\\(2^{4}\\),\u4e5f\u5c31\u662f\u5728\u539f\u5148\u7b26\u53f7\u4f4d\u7684\u5730\u65b9+1\uff0c\u6b64\u65f6\u53d8\u4e3a</p> \\[ \\begin{aligned} &amp;0000_2 = 0 &amp;0001_2 = 1 &amp;\\cdots &amp;0111_2 = 7\\\\ &amp;1000_2 = -8 &amp;1001_2 = -7 &amp;\\cdots &amp;1111_2 = -1\\\\ &amp;\u5de6\u4fa7\u52a0\u4e0a2^4\\\\ &amp;10000_2 = 0 &amp;10001_2 = 1 &amp;\\cdots &amp;10111_2 = 7\\\\ &amp;01000_2 = -8 &amp;01001_2 = -7 &amp;\\cdots &amp;01111_2 = -1\\\\ \\end{aligned} \\] <p>\\([X]_b = 2^n + X\\)\u4ece2\u8fdb\u5236\u8865\u7801\u5230\u79fb\u7801\uff0c\u53ea\u9700\u7b26\u53f7\u4f4d\u6269\u5145\u4e00\u4f4d\uff0c\u518d\u7ffb\u8f6c\u7b26\u53f7\u4f4d\u5373\u53ef\u3002</p> <p><code>\u73b0\u57280\u8868\u793a\u8d1f\u6570\uff0c1\u8868\u793a\u6b63\u6570</code></p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#33-arithmetic","title":"3.3 Arithmetic","text":""},{"location":"CO/3.%20Arithmetic%20for%20Computer/#331-addition--and-substraction","title":"3.3.1 Addition  and Substraction","text":"<ul> <li> <p>Addition</p> </li> <li> <p>Substraction  </p> </li> <li> <p>Overflow detection: \\(C_n \\oplus C_{n-1}\\)</p> </li> </ul> \\[ \\begin{aligned} &amp;unsigned \\ representation\\\\ &amp;1111 \\ 1111  \\ (255)_{10}\\\\ + &amp;1111 \\ 1010  \\ (250)_{10}\\\\ = 1 \\ &amp;1111 \\ 1001 \\ (249)_{10}\\\\ &amp;2's \\ compliment\\\\ &amp;1000 \\ 0001 \\ (-127)_{10} \\\\ +&amp;1111 \\ 1110 \\ (-2)_{10} \\\\ = 1 \\ &amp;0111 \\ 1111 \\ (127)_{10}\\\\ \\end{aligned} \\] <p>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6570\uff0c\u770b\u8fdb\u4f4d\u662f\u5426\u4ea7\u751f\u5373\u53ef\uff1b\\(n\\)\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u770b\\(C_n\\)</p> <p>\u5bf9\u4e8e\u6709\u7b26\u53f7\u6570\uff0c\u770b\\(C_n \\oplus C_{n-1}\\)</p> <p><code>\u5bf9\u4e8e\u6709\u7b26\u53f7\u6570\u7684\u8fdb\u4f4d\uff0c\u5bf9\u4e8e\u5df2\u77e5operandA\uff0cB\u7b26\u53f7\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528Result[n]^Result[n-1]\u6765\u5224\u65ad\u3002\u5982\u679cA\uff0cB\u7684\u7b26\u53f7\u672a\u77e5\uff0c\u5219\u91c7\u7528\u8fdb\u4f4d\u5224\u65ad\uff0c\u5224\u65adC_n ^ C_{n-1}</code></p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#332-logical-operations","title":"3.3.2. Logical operations","text":"<ol> <li> <p>Logical shift operations\uff08<code>\u7a7a\u4f59\u7684\u4f4d\u7f6e\u8865\u51450</code>\uff09</p> <p><code>sll x1 x2 x3</code></p> <p><code>slli x1 x2 imm</code></p> <p></p> </li> <li> <p>AND-&gt;bit-wise AND between registers</p> <p><code>and R1, R2, R3</code></p> </li> <li> <p>OR-&gt;bit-wise OR between registers</p> <p><code>or R1, R2, R3</code></p> </li> </ol>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#34-construct-an-alu","title":"3.4 Construct an ALU","text":"<p>\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002\u4f17\u6240\u5468\u77e5\uff0c\u51cf\u6cd5\u5c31\u662f\u52a0\u4e0a\u76f8\u53cd\u6570\u3002\u6240\u4ee5\u8fd9\u4e2a\u4e16\u754c\u4e0a\u4e0d\u5b58\u5728\u51cf\u6cd5\u3002</p> <p>Overflow\u3002\u786c\u4ef6\u89c4\u6a21\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u8fd0\u7b97\u7ed3\u679c\u8d85\u8fc7\u8fd9\u4e2a\u9650\u5236\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002</p> <p><code>\u5bf9\u4e8e\u6709\u7b26\u53f7\u52a0\u6cd5\uff0c\u5f53\u6b63\u6570\u548c\u6b63\u6570\u76f8\u52a0\u5f97\u5230\u8d1f\u6570\uff0c\u6216\u8005\u8d1f\u6570\u548c\u8d1f\u6570\u76f8\u52a0\u5f97\u5230\u6b63\u6570\u65f6\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002</code></p> <p><code>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u52a0\u6cd5\uff0c\u5982\u679c\u7ed3\u679c\u5c0f\u4e8e\u4e8c\u8005\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u5224\u5b9a\u6ea2\u51fa\u3002\u56e0\u4e3a\u65e0\u7b26\u53f7\u6570\u5f97\u5230\u7684\u4e00\u5b9a\u90fd\u662f\u6b63\u6570</code></p> <ul> <li>\u5173\u4e8e Overflow\uff0c\u786c\u4ef6\u5c42\u9762\u9700\u8981\u80fd\u68c0\u6d4b\u6ea2\u51fa\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6307\u4ee4\u7684\u5730\u5740\u5b58\u50a8\u5230\u4e00\u4e2a\u7279\u522b\u7684\u5bc4\u5b58\u5668 EPC \u91cc\uff0c\u7136\u540e\u8df3\u8f6c\u5230 OS \u4e2d\u4e13\u95e8\u7684\u7a0b\u5e8f\u4e2d\u6765\u5904\u7406\u8fd9\u4e2a\u6ea2\u51fa\uff08\u5f02\u5e38\u5904\u7406\uff09\uff1b</li> </ul> <p>ALU, Arithmetic Logic Unit\uff0c\u7b97\u672f\u903b\u8f91\u5355\u5143\uff0c\u6267\u884c\u4e00\u4e9b\u7b97\u672f\u8fd0\u7b97\u6216\u8005\u903b\u8f91\u8fd0\u7b97\u3002</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#341--1-bit-alu","title":"3.4.1  1-bit ALU","text":"<p>\uff08\u4e0b\u9762\u8fd9\u90e8\u5206\u5185\u5bb9\u5728\u8bfe\u672c\u9644\u5f55 A.5 \u5f00\u59cb\u7684\u5730\u65b9\uff09</p> <p>\u6211\u4eec\u5148\u8003\u8651 1 bit ALU \u7684\u6784\u9020\u3002\u6211\u4eec\u5b66\u4e60\u8fc7 1 bit Full Adder \u7684\u6784\u9020\uff1a</p> <p> $$ S = X \\oplus Y \\oplus Cin\\ COUT = XY + Cin(X+Y) = XY + Cin X + Cin Y $$ \u4e0a\u5de6\u56fe\u662f\u5168\u52a0\u5668\u7684\u5177\u4f53\u6784\u9020\uff0c\u53f3\u56fe\u662f\u6211\u4eec\u5c06\u5176\u8fdb\u884c\u5c01\u88c5\u540e\u7684\u8868\u793a\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u7ed3\u5408\u4e00\u4e2a mux\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u652f\u6301\u4e0e\u3001\u6216\u4ee5\u53ca\u52a0\u6cd5\u8fd0\u7b97\u7684 1 bit ALU\uff1a</p> <p></p> <p>\u5176\u4e2d <code>Operation</code> \u662f\u7528\u6765\u6307\u660e mux \u91c7\u53d6\u54ea\u4e2a\u7ed3\u679c\u7684\u4fe1\u53f7\uff0c\u503c\u4e3a 00 01 10 \u5206\u522b\u5bf9\u5e94\u4e0e\u3001\u6216\u3001\u52a0\u6cd5\u8fd0\u7b97\u3002</p> <p></p> <p>32\u4f4d\u7684\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0c\u901f\u5ea6\u6162</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#342-\u52a0\u4e0a\u51cf\u6cd5\u548c-nor","title":"3.4.2 \u52a0\u4e0a\u51cf\u6cd5\u548c NOR\uff01****","text":"<p>\u51cf\u6cd5\u8fd0\u7b97\u600e\u4e48\u529e\u5462\uff1f\u4f17\u6240\u5468\u77e5\uff0c\u7531\u4e8e\u8865\u7801\u6709 \\(x + \\bar x = 111\\dots111_2 = -1\\)\uff0c\u56e0\u6b64 \\(-x = \\bar x + 1\\)\uff0c\u6240\u4ee5 \\(a - b = a + (-b) = a + \\bar b + 1\\)\u3002\u636e\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u7684\u7ed3\u6784\uff1a</p> <p></p> <p>\u5176\u4e2d <code>Binvert</code> \u7528\u6765\u6307\u660e\u662f\u5426\u9700\u8981\u5c06\u7ed3\u679c\u53d6\u53cd\uff1b\u5728\u8ba1\u7b97\u51cf\u6cd5\u65f6\uff0c\u6211\u4eec\u5c06 <code>Binvert</code> \u8bbe\u4e3a <code>1</code> \uff0c\u7136\u540e\u5c06 <code>CarryIn</code> \u4e5f\u8bbe\u4e3a <code>1</code> \uff0c <code>Operation</code> \u8bbe\u4e3a <code>2</code> \uff0c\u8fd9\u6837\u6211\u4eec\u7684\u7ed3\u679c\u5c31\u662f \\(a + \\bar b + 1\\)\u3002</p> <p><code>NOR</code> \u8fd0\u7b97\uff1a <code>a NOR b = NOT(a OR b) = (NOT a) AND (NOT b)</code> \uff0c\u56e0\u6b64 <code>NOR</code> \u8fd0\u7b97\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a</p> <p></p> <p>\u5728\u8ba1\u7b97NOR\u65f6\uff0c\u5c06<code>Ainvert,Binvert</code>\u8bbe\u4e3a1\uff0c<code>Operation</code>\u8bbe\u4e3a0</p> <p>\u4e0a\u53f3\u56fe\u662f\u6211\u4eec\u76ee\u524d\u7684 1 bit ALU \u7684\u62bd\u8c61\u7ed3\u6784\u3002</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#343-\u52a0\u4e0acomparison","title":"3.4.3 \u52a0\u4e0acomparison","text":"<p>\u73b0\u5728\u8865\u5145\u6bd4\u8f83\u529f\u80fdcomparison</p> <p></p> <p><code>slt rd,rs,rt</code></p> <ul> <li> <p>If rs &lt; rt, rd = 1, else rd = 0</p> </li> <li> <p>\u5bf9\u4e8erd\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2abit\uff08bit[0]\uff09\u5176\u4ed6\u7684bit\u90fd\u662f0</p> </li> <li> <p>\u5982\u4f55\u5224\u65ad<code>rs &lt; rt\uff1f</code>\uff0c\u91c7\u7528<code>substraction</code>,\u5229\u7528\u7b26\u53f7\u4f4d\u8fdb\u884c\u5224\u65ad</p> </li> <li> <p>\u6700\u540e\u8f93\u5165\u7684Less\uff0c\u53d6\u7684\u5c31\u662frd\u5bc4\u5b58\u5668\u7684LSB\uff08least significant bit \uff09</p> </li> </ul>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#344-\u52a0\u4e0aoverflow","title":"3.4.4 \u52a0\u4e0aoverflow","text":"<p>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \u7b26\u53f7\u4f4d1\u4f4d\uff0c\u6307\u65708\u4f4d\uff0c frac23\u4f4d</p> <p>0x7F800000 = 0b 0111_1111_1000_0000\u2026.0</p> <p>\u9996\u5148\u662f\u6b63\u6570\uff0c\u6307\u6570\u90e8\u5206\u662f11111111\uff0c \u5bf9\u5e94\u6b63\u65e0\u7a77\\(+\\inf\\)</p> <p>\u5bf9\u4e8e-1\u7684\u8868\u793a\u65b9\u6cd5\uff1a \\(-1 \\times 1.0 \\times 2^0\\)</p> <p>\u7b26\u53f7\u4f4d\u4e3a1\uff0cfrac\u5168\u4e3a0\uff0c\u6307\u6570\u90e8\u5206=127 = 01111111</p> <p>1 01111111 00000\u2026.0 = 0xBF800000</p> <p>\u5f15\u5165\u6a21\u5757overflow detection\uff0c<code>Set is most significant bit \uff0c\u4e5f\u5c31\u662fbit[n-1]</code></p> <p><code>carry out \u662f bit[n]</code></p> <p>\\(overflow =carry \\ in \\oplus carry \\ out\\) </p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#345-\u4e32\u8054\u5f97\u5230-64-bit-alu","title":"3.4.5 \u4e32\u8054\u5f97\u5230 64-bit ALU\uff01","text":"<p>\u6709\u4e86 1 bit \u7684 ALU\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u51fa RISC-V \u6240\u9700\u7684 64 bits \u7684 ALU \u4e86\uff1a</p> <p></p> <p>\u6ce8\u610f\u4e00\u4e0b\u6b64\u5904\uff1aSet \u8fde\u63a5\u4f5c\u4e3aLess\u7684\u8f93\u5165\u3002\u672c\u8d28\u4e0a\u662f\u56e0\u4e3a\uff0c\u6267\u884c\u51cf\u6cd5\u8ba1\u7b97\u540e\uff0c\u5982\u679crs  &lt; rt\uff0c\u6b64\u65f6a - b \u8ba1\u7b97\u5f97\u5230\u7684\u7ed3\u679c \u7b26\u53f7\u4f4d\u80af\u5b9a\u4e3a1\uff0c\u5bf9\u5e94Less = 1\uff0c\u6ee1\u8db3 a &lt; b</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e 64 \u4f4d\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001AND, OR, NOR \u8fd0\u7b97\uff0c\u8fd9\u6837\u7684 64 \u4f4d ALU \u90fd\u53ef\u4ee5\u5b8c\u6210\u3002</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u9762\u9664\u4e86\u6211\u4eec\u719f\u6089\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u591a\u4e86 <code>Less</code> ,  <code>Set</code> \u548c <code>Overflow</code> \u8fd9\u4e9b\u4f4d\u3002\u5b83\u4eec\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\u5462\uff1f</p> <p>\u9996\u5148 <code>Overflow</code> \u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u5b83\u7528\u6765\u8868\u793a\u52a0\u6cd5\u6216\u51cf\u6cd5\u6709\u6ca1\u6709\u51fa\u73b0\u6ea2\u51fa\u7684\u73b0\u8c61\uff1b\u663e\u7136\u8fd9\u4e2a\u5224\u65ad\u53ea\u9700\u8981\u5728 ALU63\uff0c\u5373 Most Significant Bit \u624d\u9700\u8981\u8fdb\u884c\u3002\u5bb9\u6613\u8bc1\u660e\uff0c\u5982\u679c \\(C_{in} \\oplus C_{out} = 1\\)\uff0c\u90a3\u4e48\u5b58\u5728\u6ea2\u51fa\uff1b\u56e0\u6b64 ALU63 \u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684 XOR \u95e8\u5373\u53ef\u5b8c\u6210\u8fd9\u4e00\u5224\u65ad\u3002</p> <p>Tip: \u8fd9\u91cc\u63d0\u5230\u7684 \\(C_{in}\\) \u548c \\(C_{out}\\) \u6307\u7684\u90fd\u662f\u6700\u540e\u4e00\u4e2a ALU \u7684 carry in \u548c carry out\u3002</p> <p>\u7b80\u5355\u505a\u89e3\u91ca\uff0c\u9996\u5148\uff0c\u6700\u540e\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d\u3002\\(C_{in} \\oplus C_{out} = 1\\) \u610f\u5473\u7740\u5176\u4e2d\u4e00\u4e2a\u662f 1\uff0c\u53e6\u5916\u4e00\u4e2a\u662f 0\uff1b</p> <ul> <li>\u5047\u8bbe \\(C_{in} = 1, \\, C_{out} = 0\\)\uff0c\u5219\u610f\u5473\u7740 \\(a_{63}\\) \u548c \\(b_{63}\\) \u90fd\u4e3a 0\uff0c\u5373\u4e24\u4e2a operand \u90fd\u662f\u6b63\u6570\uff0c\u6b64\u65f6\u7531\u4e8e \\(C_{in} = 1\\)\uff0c\u6240\u4ee5 \\(res_{63}=1\\) \u5373\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u4e24\u6b63\u6570\u76f8\u52a0\u5f97\u5230\u8d1f\u6570\uff0c\u53d1\u751f overflow\uff1b</li> <li>\u5047\u8bbe \\(C_{in} = 0, \\, C_{out} = 1\\)\uff0c\u5219\u610f\u5473\u7740 \\(a_{63}\\) \u548c \\(b_{63}\\) \u90fd\u4e3a 1\uff0c\u5373\u4e24\u4e2a operand \u90fd\u662f\u8d1f\u6570\uff0c\u6b64\u65f6\u7531\u4e8e \\(C_{out} = 1\\)\uff0c\u6240\u4ee5 \\(res_{63}=0\\) \u5373\u7ed3\u679c\u662f\u6b63\u6570\uff0c\u4e24\u8d1f\u6570\u76f8\u52a0\u5f97\u5230\u6b63\u6570\uff0c\u53d1\u751f overflow\uff1b</li> </ul> <p><code>Less</code> \u548c <code>Set</code> \u5171\u540c\u4f7f\u7528\uff0c\u662f\u4e3a\u4e86\u5b9e\u73b0 <code>slt rd, rs1, rs2</code> \u8fd9\u4e2a\u64cd\u4f5c\uff08\u5373\u5b9e\u73b0\u6bd4\u8f83\u64cd\u4f5c\uff09\uff08SLT \u5373 Set Less Than\uff09\u7684\u3002</p> <p>\u8fd9\u4e2a\u64cd\u4f5c\u7684\u542b\u4e49\u662f\uff0c\u5982\u679c <code>rs1 &lt; rs2</code> \uff0c\u90a3\u4e48\u5c06 <code>rd</code> \u7f6e\u4e3a <code>1</code> \uff0c\u5426\u5219\u7f6e\u4e3a <code>0</code> \u3002\u5982\u4f55\u8fdb\u884c\u8fd9\u4e00\u5224\u65ad\u5462\uff1f\u5f88\u7b80\u5355\uff0c<code>rs1 &lt; rs2</code> \u5373 <code>rs1 - rs2 &lt; 0</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c <code>rs1 - rs2</code> \u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u662f <code>1</code> \uff0c\u90a3\u4e48\u5c31\u8bf4\u660e <code>rs1 &lt; rs2</code> \u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e <code>slt</code> \u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97 <code>rs1 - rs2</code>\uff0c\u800c\u540e\u5c06 ALU63 \u4e2d\u52a0\u6cd5\u5668\u7684\u7ed3\u679c\uff08\u5373\u6700\u7ec8\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\uff09\u8d4b\u503c\u7ed9 <code>Result[0]</code> \uff0c\u5373\u8fd0\u7b97\u7ed3\u679c\u7684 Least Significant Bit\uff0c\u800c\u5c06\u5176\u4ed6\u4f4d\u7684\u7ed3\u679c <code>Result[63:1]</code> \u90fd\u8bbe\u6210 0\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210 <code>slt</code> \u64cd\u4f5c\u4e86\u3002</p> <p>\u56e0\u4e3a\u5728\u6bd4\u8f83\u64cd\u4f5c\u4e2d\uff0c\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u5c31\u662fLess\uff0c\u6240\u4ee5\u4e0a\u56fe\u4e2d\uff0c\u9664\u4e86 ALU0 \u7684 <code>Less</code> \u6765\u81ea ALU63 \u7684 <code>Set</code> \u5916\uff0c\u5176\u4ed6 ALU \u7684 <code>Less</code> \u90fd\u662f <code>0</code> \u3002</p> <p>\u7ed3\u5408\u4e0a\u8ff0\u8ba8\u8bba\uff0c\u4e0a\u56fe\u4e2d ALU0 ~ ALU62 \u7684\u7ed3\u6784\u5982\u4e0b\u7b2c\u4e00\u5f20\u56fe\u6240\u793a\uff0cALU63 \u7684\u7ed3\u6784\u5982\u4e0b\u7b2c\u4e8c\u5f20\u56fe\u6240\u793a\uff1a\uff08\u6ea2\u51fa\u4ec5\u9700\u5728\u6700\u540e\u4e00\u4e2aALU\u8fdb\u884c\u8ba1\u7b97\uff09</p> <p></p> <p></p> <p>\uff08\u6ce8\uff1a\u7b2c\u4e8c\u5f20\u56fe\u4e2d\u7684 Overflow Detection \u88ab\u590d\u6742\u5316\u4e86\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7 <code>CarryIn</code> \u548c <code>CarryOut</code> \u7684\u5f02\u6216\\(\\oplus\\)\u5b8c\u6210\u7684\u3002\uff09</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c <code>Operation</code> \u589e\u52a0\u4e86 <code>3</code> \u7684\u53d6\u503c\uff0c\u8fd9\u4e2a\u53d6\u503c\u8868\u793a\u8fdb\u884c <code>slt</code> \u64cd\u4f5c\u3002</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#346-\u4f18\u5316--zero-detector","title":"3.4.6 \u4f18\u5316 + zero detector\uff01","text":"<p>\u4e4b\u524d\u6211\u4eec\u4e5f\u8ba8\u8bba\u8fc7\uff0c\u5982\u679c\u505a\u51cf\u6cd5\u6216\u8005 <code>slt</code> \u7684\u8bdd\uff0c\u9700\u8981\u5c06 <code>Binvert</code> \u548c ALU0 \u7684 <code>CarryIn</code> \u8bbe\u6210 <code>1</code> \uff0c\u5982\u679c\u662f\u52a0\u6cd5\u7684\u8bdd\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u90fd\u662f <code>0</code> \uff1b\u5176\u4ed6\u8fd0\u7b97\u7528\u4e0d\u5230\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u3002\u56e0\u6b64\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u59cb\u7ec8\u53d6\u503c\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u79f0\u4e4b\u4e3a <code>Bnegate\u66ff\u4ee3\u539f\u6709\u7684Binvert\u548cCarryIn</code> \u3002</p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u6709 <code>beq</code> \uff0c <code>bne</code> \u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u7ed3\u5408 Common case fast \u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u6211\u4eec\u5c06\u5224\u65ad\u7ed3\u679c\u662f\u5426\u4e3a 0 \u7684\u529f\u80fd\u4e5f\u76f4\u63a5\u52a0\u5230 ALU \u91cc\u3002</p> <p></p> <p>\u7ed3\u5408\u4e0a\u8ff0\u4e24\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u5f62\u6210\u4e86\u6700\u7ec8\u7684 64-bit ALU\uff01</p> <p></p> <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a ALU\uff0c\u6211\u4eec\u9700\u8981 4 bits \u7684 control lines\uff0c\u5206\u522b\u662f <code>Ainvert</code> ,  <code>Bnegate</code> \u548c <code>Operation</code> (2 bits)\u3002ALU \u7684\u7b26\u53f7\u548c control lines \u7684\u542b\u4e49\u5982\u4e0b\uff1a</p> <p></p> <p>\u5bf9\u4e8eNOR\uff0cA NOR B = NOT\uff08A OR B\uff09 = \uff08NOT A\uff09 AND \uff08NOT B\uff09\uff0c\u6240\u4ee5\u9700\u8981\u5bf9A\u548cB\u90fd\u53d6\u53cd\uff0c\u5728\u6267\u884cAND\u64cd\u4f5c</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#35-\u52a0\u901f\u52a0\u6cd5\u5668","title":"3.5 \u52a0\u901f\u52a0\u6cd5\u5668","text":"<p>\u4e0a\u9762\u7684 64 \u4f4d\u52a0\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7 1 \u4f4d\u52a0\u6cd5\u5668\u4e32\u8054\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u52bf\u5fc5\u9700\u8981\u7b49\u5f85\u524d\u4e00\u4e2a\u52a0\u6cd5\u5668\u7b97\u51fa\u7ed3\u679c\u540e\u624d\u80fd\u7b97\u540e\u4e00\u4e2a\u7684\u3002\u8fd9\u79cd\u591a\u4f4d\u52a0\u6cd5\u5668\u7684\u5b9e\u73b0\u79f0\u4e3a\u884c\u6ce2\u52a0\u6cd5\u5668 Ripple Carry Adder, RCA\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6162\u3002</p> <p> $$ S_i = A_i \\oplus B_i \\oplus C_i\\ C_{i+1} = A_i B_i + C_i(A_i+B_i) $$</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u52a0\u901f\u5462\uff1f</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#351-carry-lookahead-adder-cla","title":"3.5.1 Carry Lookahead Adder, CLA","text":"<p>\u8bfe\u672c\u6307\u51fa\uff0c<code>RCA(ripple carry adder)</code> \u7f13\u6162\u7684\u91cd\u8981\u539f\u56e0\u662f\u540e\u4e00\u4e2a adder \u9700\u8981\u7b49\u524d\u4e00\u4e2a adder \u7684 carry \u7ed3\u679c\uff1b\u4f46\u6211\u4eec\u4e0d\u59a8\u8ba8\u8bba\u51fa\u73b0 carry \u7684\u53ef\u80fd\u3002\u7b2c\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u90fd\u662f 1\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a \u751f\u6210 \u4e00\u4e2a carry\uff1b\u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff0c\u5982\u679c \\(a\\) \u548c \\(b\\) \u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u662f 1\uff0c\u90a3\u4e48\u5982\u679c\u4f20\u5165\u7684 carry \u662f 1\uff0c\u5219\u8fd9\u91cc\u4e5f\u4f1a carry\uff0c\u5373 carry \u88ab \u4f20\u64ad \u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\\(c_{out} = a \\cdot b + (a + b)\\cdot c_{in}\\)\u3002\u6211\u4eec\u8bb0 generate \\(g = a\\cdot b\\)\uff0cpropagate \\(p = a + b\\)\uff0c\u5219\u6709 \\(c_{out} = g + p \\cdot c_{in}\\)\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\u4e00\u4e2a\u5168\u52a0\u5668\uff1a</p> <p>\u8fdb\u4f4d\u7684\u751f\u6210\u4e0e\u4f20\u64ad\uff1a</p> <p>generate = a &amp; b                propagate = (a | b) </p> <p>\\(C_{out} = g + p * C_{in}\\)</p> <p></p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u5bfc\u51fa\u5982\u4e0b\u5173\u7cfb\uff08\u53ef\u4ee5\u5f62\u8c61\u7406\u89e3\u6bcf\u4e00\u4e2a\u7b49\u5f0f\u7684\u6bcf\u4e00\u4e2a term \u7684\u6765\u6e90\uff09\uff1a</p> \\[ \\begin{aligned} c_1 &amp;= g_0 + p_0 \\cdot c_0\\\\ c_2 &amp;= g_1 + p_1 \\cdot c_1\\\\ &amp;= g_1 + p_1 \\cdot (g_0 + p_0 \\cdot c_0)\\\\ &amp;= g_1 + p_1 \\cdot g_0 + p_1 \\cdot p_0 \\cdot c_0\\\\ c_3 &amp;= g_2 + p_2 \\cdot c_2 = g_2 + p_2 \\cdot g_1 + p_2 \\cdot p_1 \\cdot g_0 + p_2 \\cdot p_1 \\cdot p_0 \\cdot c_0 \\end{aligned} \\] <p></p> <p>\u5229\u7528\u8fd9\u4e2a\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u8fd9\u6837\u4e00\u4e2a\u56db\u4f4d\u52a0\u6cd5\u5668\uff1a</p> <p></p> <p>\u4e0a\u9762\u7684 PFA, Partial Fully Adder\uff0c\u5c31\u662f\u524d\u9762\u6211\u4eec\u6784\u9020\u7684\u65b0\u5168\u52a0\u5668\u7684\u4e00\u90e8\u5206\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u901f\u52a0\u6cd5\u7684\u8fd0\u7b97\uff1b\u4f46\u662f\u6ce8\u610f\u5230\u8d8a\u5230\u9ad8\u4f4d\uff0c\u95e8\u7684 fan-in \u5c31\u8d8a\u5927\uff0c\u56e0\u6b64\u4e0d\u80fd\u4e00\u76f4\u589e\u52a0\u7684\u3002\u6240\u4ee5\u5bf9\u4e8e\u66f4\u591a\u4f4d\u6570\u7684\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u8fd9\u6837\u6784\u6210\u7684 4-bit CLA(Carry Look-ahead Adder) \u518d\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4e32\u8d77\u6765\uff01</p> <p>group generate(\\(G_{0-3}\\)), group propagate(\\(P_{0-3}\\))</p> \\[ \\begin{aligned} &amp;G_{0-3} = G_3 + P_3G_2 + P_3P_2G_1+P_3P_2P_1G_0\\\\ &amp;P_{0-3} = P_3P_2P_1P_0\\\\ &amp;C_4 = G_{0-3} + P_{0-3}C_0 \\end{aligned} \\] <p></p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#352-carry-skip-adder","title":"3.5.2 Carry Skip Adder","text":""},{"location":"CO/3.%20Arithmetic%20for%20Computer/#353-carry-select-adder-csa","title":"3.5.3 Carry Select Adder, CSA","text":"<p>\u4f53\u73b0\u4e86 \u9884\u6d4b / \u5197\u4f59 \u7684\u601d\u60f3\u3002</p> <p>\u8fd9\u4e2a\u601d\u8def\u5176\u5b9e\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u628a\u8f93\u5165 carry \u4e3a 0 \u6216\u8005 1 \u7684\u60c5\u51b5\u90fd\u7b97\u4e00\u904d\uff0c\u7136\u540e\u6839\u636e\u5b9e\u9645\u7684\u60c5\u51b5\u4ece\u4e2d\u9009\u51fa\u6b63\u786e\u7684\u90a3\u79cd\u5c31\u597d\u4e86\uff1a</p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#36-\u4e58\u6cd5","title":"3.6 \u4e58\u6cd5","text":"<p><code>Multiplicand \u88ab\u4e58\u6570  Multiplier \u4e58\u6570</code></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#361-version1","title":"3.6.1 version1","text":"<ul> <li>\u5927\u81f4\u539f\u7406</li> </ul> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u6240\u8c13\u7684\u4e58\u6cd5\u5b9e\u9645\u4e0a\u662f\u6839\u636e Multiplier \u7684 0/1 \u6765\u9009\u62e9\u662f\u5426\u8981\u5c06 Multiplicand \u7684\u5bf9\u5e94\u4f4d\u79fb\u7ed3\u679c\u52a0\u5230 Product \u4e0a\u3002</p> <p>64 bits \u4e58\u6cd5\u5668\u7684\u786c\u4ef6\u5b9e\u73b0\u5927\u81f4\u5982\u4e0b\uff1a</p> <p></p> <p>\u7b80\u5355\u505a\u89e3\u91ca\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Multiplier \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff08<code>control test</code>\uff09\uff1a<ol> <li>\u5982\u679c\u662f(<code>write = 1</code>)\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u91cc(<code>128-bit ALU</code>)\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> </ol> </li> <li>\u5c06 Multiplier \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff08\u8fd9\u662f\u4e3a\u4e86\u4e0d\u65ad\u62ff\u51fa\u6bcf\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5728\u679a\u4e3e Multiplier \u7684\u6bcf\u4e00\u4f4d\uff09\uff0c\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u5de6\u79fb\u4e00\u4f4d\uff08\u5bf9\u5e94\u4e8e\u548c Multiplier \u7684\u7b2c\u51e0\u4f4d\u4e58\u5f97\u5230\u7684\u4f4d\u79fb\uff0c\u5177\u4f53\u53c2\u8003\u4e0a\u9762\u7684\u94fe\u63a5\u5185\u5bb9\uff09\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#362-version2","title":"3.6.2 version2","text":"<p>\u4e0d\u518d\u79fb\u52a8\u88ab\u4e58\u6570multiplicand</p> <p>\u76f8\u53cd\u79fb\u52a8product</p> <p>ALU \u7f29\u51cf\u4e3a64 bits</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0cversion1 \u4e2d\u505a\u4e86\u5927\u91cf\u7684 128 \u4f4d\u52a0\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u88ab\u52a0\u8fc7\u53bb\u7684 Multiplicand \u6709\u6548\u5185\u5bb9\u53ea\u6709 64 \u4f4d\u3002version2 \u6b63\u662f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p></p> <p>\u5b83\u5c06 Multiplicand \u5bc4\u5b58\u5668\u6362\u4e3a\u4e86 64 \u4f4d\uff0c\u800c\u5c06\u4f4d\u79fb\u64cd\u4f5c\u8f6c\u79fb\u5230\u4e86 Product \u5bc4\u5b58\u5668\u4e2d\u8fdb\u884c\u3002\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c64 \u4f4d\u52a0\u6cd5\u53ea\u5f71\u54cd Product \u5bc4\u5b58\u5668\u5de6\u4fa7\u7684 64 \u4f4d\uff0c\u800c\u4e4b\u540e\u7684\u53f3\u79fb\u64cd\u4f5c\u5219\u662f 128 \u4f4d\u3002\u8fd9\u6837\uff0c\u867d\u7136\u6700\u4f4e\u4f4d\u7684\u7ed3\u679c\u4e00\u5f00\u59cb\u4f1a\u88ab\u653e\u5728 Product \u5bc4\u5b58\u5668\u7684\u7b2c 65 \u4f4d\u91cc\uff0c\u4f46\u662f\u5728\u7ecf\u8fc7 64 \u6b21\u53f3\u79fb\u4e4b\u540e\uff0c\u5b83\u5c31\u51fa\u73b0\u5728\u7b2c\u4e00\u4f4d\u4e86\u3002\u4e8e\u662f\uff0c\u6240\u6709\u7684 128 \u4f4d\u52a0\u6cd5\u90fd\u88ab 64 \u4f4d\u52a0\u6cd5\u66ff\u4ee3\uff0c\u5b9e\u73b0\u4e86\u52a0\u901f\u3002</p> <p>\u5176\u6d41\u7a0b\u5927\u6982\u662f\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Multiplier \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff1a<ol> <li>\u5982\u679c\u662f\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u91cc\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> </ol> </li> <li>\u5c06 Multiplier \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff0c\u5c06 Product \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#363-version3","title":"3.6.3 version3","text":"<p>\u5728version2\u7684\u57fa\u7840\u4e0a\uff0c\u53d1\u73b0multiplier\u6bcf\u56de\u5408\u9700\u8981\u53f3\u79fb\u4e00\u4f4d\uff0c\u540c\u65f6product\u4e5f\u9700\u8981\u53f3\u79fb\u4e00\u4f4d\u3002\u4f46\u662fmultiplier\u6bcf\u6b21\u79fb\u4f4d\u4e4b\u540e\uff0c\u5de6\u4fa7\u4f1a\u591a\u4e00\u4e2a\u65e0\u7528\u7684bit\uff0c\u540c\u65f6product\u79fb\u4f4d\u540e\u4e00\u4e2a\u65e0\u7528\u7684bit\u5c06\u88ab\u4e22\u5f03\u3002<code>\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u628amultiplier\u653e\u5728product\u7684\u53f3\u8fb9\u534a\u5462\uff1f</code></p> <p>V3 \u6b63\u662f\u6293\u4f4f\u4e86\u8fd9\u4e2a\u70b9\uff0c\u76f4\u63a5\u5c06 Multiplier \u5b58\u5728\u4e86 Product \u7684\u4f4e 64 \u4f4d\u4e2d\u3002\u5f53\u6211\u4eec\u4ece\u4e2d\u53d6\u51fa\u6700\u4f4e\u4f4d\u5e76\u7ecf\u8fc7\u4e00\u6b21\u5224\u65ad\u540e\uff0c\u8fd9\u4e00\u4f4d\u5c31\u4e0d\u91cd\u8981\u4e86\uff0c\u800c\u6070\u597d Product \u9700\u8981\u53f3\u79fb\uff0c\u5c31\u5c06\u8fd9\u4e00\u4f4d\u6d88\u9664\uff0c\u65b9\u4fbf\u6211\u4eec\u4e0b\u4e00\u6b21\u4ece\u6700\u4f4e\u4f4d\u62ff\u51fa\u4e0b\u4e00\u4e2a\u6bd4\u7279\uff01</p> <p>\u90a3\u4e48\u8fd9\u4e48\u505a\u7684\u597d\u5904\u5728\u54ea\u91cc\u5462\uff1f\u9996\u5148\uff0c\u5c11\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u8282\u7701\u4e86\u7a7a\u95f4\uff1b\u5176\u6b21\uff0c\u539f\u672c\u9700\u8981 Multiplier \u5bc4\u5b58\u5668\u548c Product \u5bc4\u5b58\u5668\u90fd\u505a\u53f3\u79fb\uff0c\u73b0\u5728\u53ea\u9700\u8981 Product \u5bc4\u5b58\u5668\u53f3\u79fb\u5373\u53ef\uff0c\u51cf\u5c11\u4e86\u4e00\u4e2a 64 \u4f4d\u53f3\u79fb\u64cd\u4f5c\u3002</p> <p></p> <p>product \u7684 \u53f3\u534a\u8fb9\u5b58\u653emultiplier</p> <p>\u5176\u6d41\u7a0b\u5927\u6982\u662f\uff0c\u4e00\u5171\u8fdb\u884c 64 \u6b21\uff1a</p> <ol> <li>\u5224\u65ad Product \u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u4f4d\u662f\u5426\u662f 1\uff1a<ol> <li>\u5982\u679c\u662f\uff0c\u5219\u5c06 Multiplicand \u5bc4\u5b58\u5668\u7684\u503c\u52a0\u5230 Product \u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\u91cc\uff1b</li> <li>\u5982\u679c\u5426\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b</li> </ol> </li> <li>\u5c06 Product \u5bc4\u5b58\u5668\u7684\u503c\u53f3\u79fb\u4e00\u4f4d\uff1b</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#364-\u6709\u7b26\u53f7\u4e58\u6cd5","title":"3.6.4 \u6709\u7b26\u53f7\u4e58\u6cd5","text":"<p>\u4e58\u6709\u7b26\u53f7\u6570\u4e3b\u8981\u662f\u8f6c\u5316\u4e3a\u4e58\u65e0\u7b26\u53f7\u6570\u6765\u505a\u3002</p> <ol> <li>\u9996\u5148\u5b58\u50a8\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u65e0\u7b26\u53f7\u6570\uff08<code>MSB = 0</code>\uff09\u3002</li> <li>\u63a5\u4e0b\u6765\u5bf9\u4e24\u4e2a\u65e0\u7b26\u53f7\u6570\u505a\u65e0\u7b26\u53f7\u4e58\u6cd5\uff0c</li> <li>\u6700\u540e\u6839\u636e\u4e4b\u524d\u5b58\u50a8\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7\u5e76\u8f6c\u5316\u4e3a\u6709\u7b26\u53f7\u6570\u3002<code>\u5982\u679c\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u7ed3\u679c\u7b26\u53f7\u4f4d=0\uff0c\u5426\u5219\uff0c\u7ed3\u679c\u7b26\u53f7\u4f4d=1</code></li> </ol> <p>\u4e00\u79cd\u6539\u8fdb\u7684\u4e58\u6cd5\u65b9\u6cd5\u662f Booth's Algorithm\u3002</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#365-booths-algorithm","title":"3.6.5 Booth's Algorithm\u3002","text":"<ul> <li>Booth's Algorithm\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5dee\u5206\u7b97\u6cd5\uff09</li> </ul> <p>\u5728\u6211\u770b\u6765\uff0cBooth's Algorithm \u7684\u4e3b\u8981\u601d\u60f3\u5728\u4e8e\uff0c\u51cf\u5c11\u4e58\u6570\u4e2d\u201c<code>1</code>\u201d\u7684\u6570\u91cf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u539f\u5148\u7684\u4e58\u6cd5\u7b56\u7565\u4e2d\uff0c\u6bcf\u5f53\u4e58\u6570\u4e2d\u6709\u4e00\u4f4d <code>1</code> \u65f6\uff0c\u90fd\u4f1a\u9700\u8981\u4e00\u4e2a\u52a0\u6cd5\uff08\u5c06\u4f4d\u79fb\u540e\u7684\u88ab\u4e58\u6570\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\uff09\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u4e58\u6570\u4e2d\u6709\u8f83\u957f\u7684\u4e00\u4e32 <code>1</code> \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u6570\u5b57\u51cf\u4e00\u4e2a\u5c0f\u6570\uff0c\u5982\uff1a<code>00111100 = 01000000 - 00000100</code>\uff0c\u6b64\u65f6 4 \u4e2a <code>1</code> \u53d8\u4e3a 2 \u4e2a <code>1</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u505a\u52a0\u6cd5\u7684\u6b21\u6570\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 xyx \u8bf4\u6709\u70b9\u50cf\u5dee\u5206\u4e86\u3002</p> <p>\u589e\u52a0\u79fb\u4f4d\u7684\u6b21\u6570\uff0c\u51cf\u5c11\u52a0\u51cf\u8fd0\u7b97\u7684\u6b21\u6570</p> <p></p> <p>\u90a3\u4e48\u5728\u5b9e\u9645\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cBooth's Algorithm \u4e3b\u8981\u9075\u5faa\u4e24\u4f4d\u6bd4\u7279\u7684\u6a21\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p></p> <p></p> <p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u5f20\u56fe\u7684\u7406\u89e3\uff0c\u7a0d\u5fae\u505a\u4e00\u4e9b\u89e3\u91ca\u3002\u5b83\u5b9e\u9645\u4e0a\u7684\u8868\u793a\u662f\u632a\u7528\u4e86 Version3 \u7684\u4e58\u6cd5\u5668\u3002product \u4e00\u5217\u4ee3\u8868\u7684\u662f product \u5bc4\u5b58\u5668\uff0c\u5de6\u4e00\u534a\u4e00\u5f00\u59cb\u7f6e 0\uff0c\u53f3\u4e00\u534a\u4e00\u5f00\u59cb\u5b58\u653e\u7684\u662f\u4e58\u6570\uff0c\u800c\u4e0a\u9762\u63d0\u5230\u7684\u5c06\u88ab\u4e58\u6570\u52a0\u51cf\u7d2f\u8ba1\u5230\u7ed3\u679c\u4e2d\u7684\u64cd\u4f5c\uff0c\u4e5f\u662f\u5bf9\u4e8e\u5de6\u534a\u90e8\u5206\u6765\u8bf4\u7684\uff08\u6362\u53e5\u8bdd\u6765\u8bf4\u5c31\u662f\u7528 Version \u505a Booth's\uff09\u3002\u9700\u8981\u63d0\u9192\u7684\u662f\uff0c\u5728 Booth's Algorithm \u4e2d\uff0c\u4e24\u4f4d\u8bc6\u522b\u662f\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u7684\uff0c\u6b64\u65f6\u7b2c\u4e00\u4f4d\u4f5c\u4e3a\u4e24\u4f4d\u4e2d\u7684\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4e3a 0\uff0c\u800c\u540e\u5728\u4e0b\u4e00\u8f6e\u4e2d\u7b2c\u4e00\u4f4d\u4f5c\u4e3a\u4f4e\u4f4d\uff0c\u7b2c\u4e8c\u4f4d\u4f5c\u4e3a\u9ad8\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u6709\u610f\u601d\u7684\u4e8b\u51fa\u73b0\u4e86\uff0cBooth's Algorithm \u4e5f\u80fd\u5e94\u7528\u4e8e\u8d1f\u6570\u3002</p> <p>\u4ed4\u7ec6\u60f3\u60f3\u5c31\u4f1a\u53d1\u73b0\u5176\u5b9e\u5f88\u5408\u7406\uff0c\u5bf9\u4e8e\u6b63\u6570\uff0c\u5176\u6700\u9ad8\u4f4d\u4e00\u5b9a\u662f <code>0</code>\uff0c\u56e0\u6b64\u4e0d\u7ba1\u600e\u4e48\u6837\u5b83\u6700\u7ec8\u90fd\u4f1a\u5339\u914d\u5230\u4e00\u4e2a <code>01</code> \u7684\u6a21\u5f0f\uff0c\u6765\u7ed9\u4e00\u4e2a <code>1111..</code> \u6536\u5c3e\u3002\u4f46\u662f\u8d1f\u6570\u4e0d\u7136\uff0c\u8d1f\u6570\u7684\u6700\u9ad8\u4f4d\u662f <code>1</code>\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5b83\u6700\u7ec8\u4e0d\u4f1a\u6267\u884c\u6240\u8c13\u7684 <code>01</code> \u5bf9\u5e94\u7684\u52a0\u6cd5\u64cd\u4f5c\u6765\u7ed9 <code>111...</code> \u6536\u5c3e\u3002\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u5b83\u597d\u50cf\u201c\u4e8f\u201d\u4e86\u4e00\u4e2a\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u3002\uff08\u5177\u4f53\u7684\u4e3a\u4ec0\u4e48\u6211\u6765\u4e0d\u53ca\u7ec6\u60f3\u4e86\uff0c\u4f46\u662f\u53ea\u7ba1\u4e0a\u7406\u89e3\u8fd9\u4e2a\u201c\u4e8f\u201d\u5f88\u5408\u7406.\uff09</p> <p>Faster Multiplication</p> <p>Uses multiple adders</p> <p>\u76f8\u5f53\u4e8e64 \u4e2a 64 bits\u7684\u6570\u76f8\u52a0</p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#37-\u9664\u6cd5","title":"3.7 \u9664\u6cd5","text":""},{"location":"CO/3.%20Arithmetic%20for%20Computer/#371-version1","title":"3.7.1 version1","text":"<p><code>divisor\uff08\u9664\u6570\uff09 \u5728divisor\u5bc4\u5b58\u5668\u7684\u5de6\u4fa7\uff0cdividend\uff08\u88ab\u9664\u6570\uff09\u4f4d\u4e8eRemainder\u5bc4\u5b58\u5668\u7684\u53f3\u4fa7</code></p> <ol> <li>\u7528Remainder \u51cf\u53bb Divisor \u9664\u6570<ul> <li>\u5982\u679c\u4f59\u6570\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u5f53\u524d\u7684\u9664\u6570\u592a\u5927\u3002\u9700\u8981\u5148\u590d\u539f\uff0c\u4f59\u6570\u52a0\u56de\u9664\u6570\u3002\u518d\u5bf9\u5546\u8fdb\u884c\u5de6\u79fb\uff0c\u4ee4Q0=0</li> <li>\u5982\u679c\u4f59\u6570\u5927\u4e8e0\uff0c\u8bf4\u660e\u5f53\u597d\u3002\u6b64\u65f6\u5148\u5c06\u5546\u8fdb\u884c\u5de6\u79fb\uff0c\u518d\u5c06Q0\u8bbe\u4e3a1</li> </ul> </li> <li>\u9664\u6570\u7f29\u5c0f\u53f3\u79fb</li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 65 \uff08n+1\uff09\u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b</li> </ol> <p>\u601d\u8003\u4e00\u4e0b\uff1a\u4e3a\u4ec0\u4e48\u9700\u8981\u6267\u884c65\u6b21\uff1f</p> <p>\u56e0\u4e3a\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u7684\u65f6\u5019\uff0cremainder\u7684\u5de6\u534a\u8fb9\u5168\u4e3a0\uff0c\u4f46\u662fdevisor\u7684\u6570\u5168\u5728\u5de6\u534a\u8fb9\uff0c\u6240\u4ee5\u6beb\u65e0\u7591\u95ee\uff0c\u7b2c\u4e00\u6b21\u7684\u6267\u884c\u5f97\u5230\u7684\u5546\u662f0.</p> <p>\u6211\u4eec\u5047\u8bbe\u9664\u6570\u662f0\uff0c\u88ab\u9664\u6570\u662f111\u2026.11\uff0c\u90a3\u4e48\u4ece\u7b2c\u4e00\u8f6e\u6267\u884c\u7ed3\u675f\u540e\uff0c\u9664\u6570\u5df2\u7ecf\u53d1\u751f\u8fc7\u53f3\u79fb\uff0c\u6b64\u65f6\u7684\u9664\u6570\u53d8\u4e3a0\uff0c\u6240\u4ee5\u540e\u7eed\u768464\u6b21\u6267\u884c\u5f97\u5230\u7684\u5546\u90fd\u662f1\uff0c\u6700\u5f00\u59cb\u7684\u55460\uff0c\u4e5f\u88ab\u53f3\u79fb\u51fa\u5bc4\u5b58\u5668\uff0c\u7b26\u5408\u7ed3\u679c\u3002</p> <p>\\(7 \\div 2 = 00000111 \\div 0010\\)</p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#372-version2","title":"3.7.2 version2","text":"<p>\u9664\u6570\u548cALU\u7684\u5bbd\u5ea6\u51cf\u534a\uff1b</p> <p>\u5546\u5bc4\u5b58\u5668\u4e0d\u518d\u9700\u8981\u3002</p> <p><code>\u9664\u6570\u4e0d\u518d\u79fb\u52a8\uff0c\u4f59\u6570\u5bc4\u5b58\u5668\u79fb\u52a8\uff0c\u5546\u8865\u5728\u4f59\u6570\u5bc4\u5b58\u5668\u7684\u53f3\u4fa7</code></p> <p>\u4f59\u6570\u5bc4\u5b58\u5668\u5de6\u79fb\u4e00\u4f4d</p> <ol> <li>\u7528\u4f59\u6570\u5bc4\u5b58\u5668\u7684\u5de6\u534a\u8fb9\u51cf\u53bb\u9664\u6570\uff0c\u7ed3\u679c\u4fdd\u7559\u5728\u5de6\u534a\u8fb9<ul> <li>\u5982\u679c\u5c0f\u4e8e0\uff0c\u52a0\u56de\u9664\u6570\uff0c\u6062\u590d\u539f\u6570\u3002\u5de6\u79fb\u4e00\u4f4d\u4f59\u6570\u5bc4\u5b58\u5668\uff0c\u53f3\u4fa7\u8865\u4e0a0</li> <li>\u5982\u679c\u5927\u4e8e0\uff0c\u4f59\u6570\u5bc4\u5b58\u5668\u5de6\u79fb\uff0c\u53f3\u4fa7\u88651</li> </ul> </li> <li>\u5224\u65ad\u662f\u5426\u505a\u6ee1 64 \u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u7ec8\u6b62\uff1b<code>\u7ec8\u6b62\u65f6\u4f59\u6570\u5bc4\u5b58\u5668\u7684\u5de6\u534a\u8fb9\u53f3\u79fb1\u4f4d\uff08\u5f97\u5230\u4f59\u6570\uff09</code></li> </ol> <p>\u6b64\u5904\u6267\u884c64\u6b21\u4e0e\u4e0a\u65b9\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u7b2c\u4e00\u8f6e\u5f00\u59cb\u4e4b\u524d\u7684\u64cd\u4f5c\u662f\u5de6\u79fbremainder\u3002</p> <p>\u6240\u4ee5\uff0c\u7b2c\u4e00\u8f6e\uff0cremainder\u5728\u5de6\u79fb\u4e4b\u540e\uff0c\u53ef\u80fd\u4f1a\u4f7f\u5f97\u5de6\u534a\u8fb9\u5927\u4e8edivisor\u7684\u60c5\u51b5\uff08\u9664\u6570\u662f0\u7684\u60c5\u51b5\uff09\uff0c\u6240\u4ee5\u5546\u662f\u4e0d\u786e\u5b9a\u7684\u3002</p> <p>\u572864\u8f6e\u64cd\u4f5c\u6267\u884c\u4e4b\u540e\uff0c\u663e\u7136\u4f59\u6570\u5bc4\u5b58\u5668\u7684\u5de6\u79fb\u6267\u884c\u4e8665\u6b21\uff0c\u5546\u548c\u4f59\u6570\u4e4b\u95f4\u95f4\u9694\u7740\u7b2c\u4e00\u6b21\u5de6\u79fb\u5e26\u6765\u76840\uff0c\u6240\u4ee5\u5168\u90e8\u6267\u884c\u4e4b\u540e\uff0c\u9700\u8981\u5bf9\u4f59\u6570\u5bc4\u5b58\u5668\u8fdb\u884c\u53f3\u79fb\u64cd\u4f5c</p> <p></p> <p></p> <p><code>\u4f59\u6570\u7684\u7b26\u53f7\u548c\u88ab\u51cf\u6570\u4fdd\u6301\u4e00\u81f4</code></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#38-\u6d6e\u70b9\u8fd0\u7b97","title":"3.8 \u6d6e\u70b9\u8fd0\u7b97","text":"<p>\u5927\u90e8\u5206\u5904\u7406\u5668\u53ef\u80fd\u672c\u8eab\u5e76\u4e0d\u652f\u6301\u6d6e\u70b9\u8fd0\u7b97\uff0c\u53ea\u4e0d\u8fc7\u5728\u8f6f\u4ef6\u5c42\u9762\u53ef\u4ee5\u5c06\u6d6e\u70b9\u8fd0\u7b97\u8f6c\u6362\u4e3a\u6574\u6570\u8fd0\u7b97\u3002</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#381-ieee-754-\u6d6e\u70b9\u8868\u793a","title":"3.8.1 IEEE 754 \u6d6e\u70b9\u8868\u793a","text":"<p>\u6211\u4eec\u5c06\u5c0f\u6570\u70b9\u5de6\u8fb9\u53ea\u6709 1 \u4f4d\u6570\u5b57\u7684\u8868\u793a\u6570\u7684\u65b9\u6cd5\u79f0\u4e3a \u79d1\u5b66\u8bb0\u6570\u6cd5, scientific notation\uff0c\u800c\u5982\u679c\u5c0f\u6570\u70b9\u5de6\u8fb9\u7684\u6570\u5b57\u4e0d\u662f 0\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u7684\u8868\u793a\u662f\u4e00\u4e2a \u89c4\u683c\u5316\u6570, normalized number\u3002\u79d1\u5b66\u8bb0\u6570\u6cd5\u80fd\u7528\u6765\u8868\u793a\u5341\u8fdb\u5236\u6570\uff0c\u5f53\u7136\u4e5f\u80fd\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u3002</p> <p>normalized \u4e0e not normalized \u7684\u533a\u522b\u5728\u4e8e\u6709\u65e0\u524d\u5bfc0\uff0c\u4e14\u5c0f\u6570\u70b9\u524d\u53ea\u80fd\u6709\u4e00\u4f4d</p> \\[ \\begin{aligned} &amp;-2.24 \\times 10^{45} \u2014\u2014normalized\\\\ &amp;0.002 \\times 10^{-4}\u2014\u2014 not \\ normalized \\\\ &amp;1101.01101 \u2014\u2014not \\ normorlized\\\\ &amp;1.10101101 \\times 10^3 \u2014\u2014normalized \\end{aligned} \\] <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u79cd\u6d6e\u70b9\u6570\u6807\u51c6\uff1a\u6211\u4eec\u5c06<code>\u6d6e\u70b9\u6570\u8868\u793a\u4e3a $(-1)^S \\times F \\times 2^E$ \u7684\u5f62\u5f0f</code>\uff0c\u8fd9\u91cc\u7684 \\(F \\times 2^E\\) \u662f\u4e00\u4e2a\u89c4\u683c\u5316\u6570\uff0c\u800c \\((-1)^S\\) \u7528\u6765\u8868\u793a\u7b26\u53f7\u4f4d\uff1a\\(S\\) \u4e3a 0 \u8bf4\u660e\u8be5\u6d6e\u70b9\u6570\u4e3a\u6b63\u6570\uff0c\u4e3a 1 \u5219\u4e3a\u8d1f\u6570\uff1b\\(F\\) \u548c \\(E\\) \u4e5f\u7528\u82e5\u5e72 bits \u8868\u793a\uff0c\u5206\u522b\u8868\u793a\u5c3e\u6570\u548c\u6307\u6570\uff0c\u6211\u4eec\u7a0d\u540e\u8ba8\u8bba\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u5176\u8868\u793a\u4e3a \\(1.\\text{xxxxx}_2\\times 2^{\\text{yyyy}}\\) \u7684\u5f62\u5f0f\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u901a\u8fc7\u8fd9\u79cd\u8868\u8fbe\u5f62\u5f0f\u8868\u793a 0\uff08\u4e3a\u4ec0\u4e48\u5c0f\u6570\u70b9\u5de6\u8fb9\u662f 1 \u5462\uff1f\u56e0\u4e3a\u4e8c\u8fdb\u5236\u53ea\u6709 0 \u548c 1\uff0c\u800c\u89c4\u683c\u5316\u8981\u6c42\u5c0f\u6570\u70b9\u5de6\u8fb9\u4e0d\u80fd\u4e3a 0\uff09\u3002\u6211\u4eec\u901a\u8fc7\u79d1\u5b66\u8bb0\u6570\u6cd5\u8c03\u6574\u4e86\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u4f7f\u5176\u6ee1\u8db3\u89c4\u683c\u5316\u7684\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u79f0\u8fd9\u79cd\u6570\u7684\u8868\u793a\u65b9\u6cd5\u4e3a \u6d6e\u70b9, floating point\u3002</p> <p>\u5c0f\u6570\u70b9\u7684\u82f1\u6587\u662f decimal point\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u4e0d\u518d\u662f decimal \u7684\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8d77\u4e2a\u65b0\u540d\u5b57\uff1a\u4e8c\u8fdb\u5236\u5c0f\u6570\u70b9, binary point\u3002</p> <p>IEEE 754 \u89c4\u5b9a\u4e86\u4e24\u79cd\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5206\u522b\u662f single precision \u548c double precision\uff08\u5206\u522b\u5bf9\u5e94 C \u8bed\u8a00\u4e2d\u7684 <code>float</code> \u548c <code>double</code> \uff09\uff0cRISC-V \u8fd9\u4e24\u79cd\u90fd\u652f\u6301\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cfraction \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u5c31\u8d8a\u9ad8\uff1b\u800c exponent \u7684\u4f4d\u6570\u8d8a\u591a\uff0c\u6d6e\u70b9\u6570\u80fd\u4fdd\u5b58\u7684\u8303\u56f4\u5c31\u8d8a\u5927\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e \\((-1)^S \\times F \\times 2^E\\)\uff0c\\(S\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u6cd5\u662f\u663e\u7136\u7684\uff0c\u4ec5\u9700\u8981\u4e00\u4e2a bit \u5c31\u597d\u4e86\u3002\u90a3\u4e48 \\(F\\) \u548c \\(E\\) \u600e\u4e48\u8868\u793a\u5462\uff1f\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\\(F\\) \u5c31\u662f \\(1.\\text{.xxxxx}_2\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u4e2a 1 \u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64 \\(F\\) \u53ea\u9700\u8981\u4fdd\u5b58 \\(\\text{.xxxxx}\\) \u7684\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\uff08\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5b83\u7684\u6743\u91cd\u4ece\u5de6\u5230\u53f3\u5206\u522b\u662f \\(2^{-1}, 2^{-2}, ...\\)\uff09\uff01\u90a3\u4e48 \\(E\\) \u600e\u4e48\u529e\u5462\uff1f\u6ce8\u610f\u5230\u8fd9\u4e2a\u6307\u6570\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u662f\u6b63\u6574\u6570\u3001\u8d1f\u6574\u6570\u6216 0\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u504f\u79fb\uff0c\u5bf9\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 127\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u504f\u79fb 1023\uff08\u521a\u597d\u662f\u8868\u793a\u8303\u56f4\u7684\u4e00\u534a\uff01\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4fdd\u5b58\u7684  <code>exponent</code>  \u5176\u5b9e\u662f \\(E + bias\\) \u7684\u4e8c\u8fdb\u5236\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a\u8868\u793a\uff0c\u5176\u503c\u662f\uff1a</p> \\[(-1)^S\\cdot (1 + \\text{fraction}) \\cdot 2 ^ {\\text{exponent} - \\text{bias}}\\] <p>exponent \u8868\u793a\u8303\u56f4\u662f\\(1 - 254\\), 0 \u548c 255\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u6570\u636e</p> <p>\\(Normalize \\ significand: 1.0 \u2264 |significand| &lt; 2.0\\)</p> <p>\\(min:1.0000\\cdots0; max:1.111\\cdots11 \\approx 2\\)</p> <p>\u8bfe\u672c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p>\u5355\u7cbe\u5ea6\u5b9e\u6570\u548c\u53cc\u7cbe\u5ea6\u5b9e\u6570   \u7edd\u5bf9\u503c  \u7684\u8303\u56f4</p> \\[ \\begin{aligned} &amp;smallest: Exponent :0000\\_0001\\\\ &amp;Fraction:000\\cdots000 \\rightarrow significand = 1.0 \\rightarrow +-1.0 \\times 2^{-126}\\\\ \\end{aligned} \\] \\[ \\begin{aligned} &amp;largest: Exponent:1111\\_1110\\\\ &amp;Fraction:111\\cdots111 \\rightarrow significand \\approx 2.0 \\rightarrow +-2.0 \\times 2^{127} \\end{aligned} \\] <ul> <li>Overflow: The number is too big to be represented <ul> <li>\u6b63\u4e0a\u6ea2</li> <li>\u8d1f\u4e0a\u6ea2</li> </ul> </li> <li>Underflow: The number is too small to be represented</li> </ul> <p>\u5355\u7cbe\u5ea6\u5b9e\u6570\u548c\u53cc\u7cbe\u5ea6\u5b9e\u6570\u7684\u7cbe\u5ea6</p> <p><code>\u6839\u636efraction\u7684\u4f4d\u6570\u786e\u5b9a\u7cbe\u5ea6</code></p> <p></p> <p>\u5c0f\u6570\u70b9\u540e7\u4f4d\u548c\u5c0f\u6570\u70b9\u540e16\u4f4d</p> <p>\u806a\u660e\u7684\u5c0f\u670b\u53cb\u53ef\u80fd\u4f1a\u95ee\uff0c0 \u5e94\u8be5\u600e\u4e48\u4fdd\u5b58\u5462\uff1f\u6bd5\u7adf 0 \u6ca1\u6709\u524d\u5bfc 1\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u7279\u6b8a\u60c5\u5f62\uff0cIEEE 754 \u6709\u7279\u522b\u89c4\u5b9a\uff0c\u7528\u7279\u6b8a\u7684\u503c\u4fdd\u5b58\u5b83\u4eec\uff1a</p> <p></p> <p>\u5728\u4e0a\u8868\u4e2d\uff1a</p> <ul> <li> <p>\u7b2c 1 \u6761\u8868\u793a 0\uff1b<code>Exponent = 0 , Fraction = 0</code></p> </li> <li> <p>\u7b2c 2 \u6761\u8868\u793a\u975e\u89c4\u683c\u5316\u6570\uff08denormalized number\uff09\uff0c\u8fd9\u79cd\u6570\u4e3b\u8981\u662f\u4e3a\u4e86\u7528\u6765\u8868\u793a\u4e00\u4e9b\u5f88\u5c0f\u7684\u6570\uff0c\u5b83\u7684\u53d6\u503c\u4e3a \\((-1)^S\\cdot (\\mathbf{0} + \\text{fraction}) \\cdot 2 ^ { \\text{1- bias}}\\)\uff1b\u4f46\u662f\u5e76\u975e\u6240\u6709\u673a\u5668\u90fd\u652f\u6301\u8fd9\u79cd\u8868\u793a\uff0c\u6709\u7684\u673a\u5668\u4f1a\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a exception\u3002\u6211\u4eec\u4e0d\u8003\u8651\u975e\u89c4\u683c\u6570\u7684\u5b58\u5728\uff1b</p> <p>\u89c4\u683c\u5316\u80fd\u8868\u793a\u7684\u6700\u5c0f\u6570\u662f\\(2^{-126}\\),\u975e\u89c4\u683c\u5316\u80fd\u8868\u793a\u7684\u66f4\u5c0f</p> <p>\\(max: 0.111\\cdots11 \\times 2^{-126} = 2^{-126}\\)</p> <p>\\(min: 0.000\\cdots01 \\times 2^{-126} = 2^{-23} \\times 2^{-126} = 2 ^{-149}\\)</p> <p>\u5bf9\u4e8e\u53cc\u7cbe\u5ea6\u5b9e\u6570\u540c\u7406</p> </li> <li> <p>\u7b2c 3 \u6761\u8868\u793a\u6b63\u5e38\u7684\u6d6e\u70b9\u6570\uff1b</p> </li> <li> <p>\u7b2c 4 \u6761\u8868\u793a\u65e0\u7a77\u5927\u6216\u8005\u65e0\u7a77\u5c0f\uff0c\u51fa\u73b0\u5728 exponent overflow \u6216\u8005\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e2d\u975e 0 \u6570\u9664\u4ee5 0 \u7684\u60c5\u51b5\uff1b</p> </li> <li> <p>\u7b2c 5 \u6761\u8868\u793a\u975e\u6570\uff08NaN\uff09\uff0c\u51fa\u73b0\u5728 0/0, inf / inf, inf - inf, inf * 0 \u7684\u60c5\u51b5</p> </li> </ul> <p>\uff08\u5982\u679c\u6570\u5b57\u8fc7\u5927\u4e0d\u80fd\u8868\u793a\uff0c\u5373 overflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a inf\uff1b\u5982\u679c\u6570\u5b57\u8fc7\u5c0f\u4e0d\u80fd\u8868\u793a\uff0c\u5373 underflow\uff0c\u5219\u7ed3\u679c\u7f6e\u4e3a 0\u3002\uff09</p> <p>\u8fd9\u4e24\u79cd\u8868\u793a\u6cd5\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u5206\u522b\u662f\u591a\u5c11\u5462\uff1f</p> <ul> <li> <p>\u8303\u56f4</p> <ul> <li>\u80fd\u8868\u793a\u503c\u7684 \u7edd\u5bf9\u503c \u7684\u8303\u56f4\u662f \\(1.0_2 \\times 2^{1-\\text{bias}} \\sim 1.11\\dots 11_2 \\times 2^{11\\dots 11_2-1-\\text{bias}}\\)\uff0c\u5373 \\(1\\times 2^{1 - \\text{bias}}\\sim(2 - 2^\\text{-Fra\\#})\\times 2^{(2^\\text{Exp\\#} - 1) - 1 - \\text{bias}}\\)\uff0c\u5176\u4e2d <code>Fra#</code> \u548c <code>Exp#</code> \u5206\u522b\u8868\u793a fraction \u548c exponent \u7684\u4f4d\u6570\uff1b</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-126}\\sim \\pm(2 - 2^{-23}) \\times 2^{127}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(\\pm 1\\times 2^{-1022}\\sim \\pm(2 - 2^{-52}) \\times 2^{1023}\\)</li> </ul> </li> <li> <p>\u7cbe\u5ea6</p> <ul> <li>\\(2^ \\text{-Fra\\#}\\)</li> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-23}\\)</li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff1a\\(2^{-52}\\)</li> </ul> </li> </ul> <p>\u6709\u65f6\u5019\u9898\u76ee\u91cc\u4f1a\u51fa\u4e0d\u540c\u7684\u6d6e\u70b9\u6570\u8868\u793a\u6cd5\uff0c\u8ba9\u4f60\u6bd4\u8f83\u7cbe\u5ea6\uff0c\u6b64\u65f6\u4e00\u822c\u6307\u7684\u662f\uff0cfraction + exponent \u603b\u4f4d\u6570\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0cfraction \u66f4\u591a\u7684\u4e00\u822c\u66f4\u7cbe\u786e\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u7cbe\u5ea6\u66f4\u503e\u5411\u4e8e\u201c\u80fd\u8868\u793a\u66f4\u591a\u7684\u5c0f\u6570\u4f4d\u201d\u3002</p> <p></p> <p>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \u7b26\u53f7\u4f4d1\u4f4d\uff0c\u6307\u65708\u4f4d\uff0c frac23\u4f4d</p> <p>0x7F800000 = 0b 0111_1111_1000_0000\u2026.0</p> <p>\u9996\u5148\u662f\u6b63\u6570\uff0c\u6307\u6570\u90e8\u5206\u662f11111111\uff0c \u5bf9\u5e94\u6b63\u65e0\u7a77\\(+\\inf\\)</p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#382-\u6d6e\u70b9\u52a0\u6cd5","title":"3.8.2 \u6d6e\u70b9\u52a0\u6cd5","text":"<p>\u4ee5 \\(1.000_2\\times2^{-1}-1.110_2\\times2^{-2}\\) \u4e3a\u4f8b\uff0c \u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u6cd5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li>Alignment: \u6307\u6570\u5bf9\u9f50\uff0c\u5c06\u5c0f\u6307\u6570\u5bf9\u9f50\u5230\u5927\u6307\u6570\uff1a\\(-1.110_2\\times2^{-2} = -0.111\\times2^{-1}\\)<ol> <li>\u4e3a\u4ec0\u4e48\u662f<code>\u5c0f\u5bf9\u5927</code>\uff1f\u9996\u5148\uff0c\u5c0f\u5bf9\u5927\u7684\u8fc7\u7a0b\u662f\u5728\u5c0f\u6307\u6570\u7684 fraction \u524d\u8865 <code>0</code>\uff0c\u53ef\u80fd\u5bfc\u81f4\u672b\u5c3e\u6570\u636e\u4e22\u5931\uff1b\u5927\u5bf9\u5c0f\u7684\u8fc7\u7a0b\u662f\u5728\u5927\u6307\u6570\u7684 fraction \u540e\u8865 <code>0</code>\uff0c\u53ef\u80fd\u5bfc\u81f4\u524d\u9762\u7684\u6570\u636e\u4e22\u5931\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4fdd\u6301\u7684\u7cbe\u786e\u4f4d\u6570\u662f\u6709\u9650\u7684\uff0c\u800c\u5728\u8feb\u4e0d\u5f97\u5df2\u4e22\u53bb\u7cbe\u5ea6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8ba9\u5c0f\u7684\u90a3\u4e2a\u6570\u7684\u672b\u51e0\u4f4d\u88ab\u4e22\u6389\u7684\u4ee3\u4ef7\u6bd4\u5927\u7684\u524d\u51e0\u4f4d\u4e22\u5931\u8981\u5c0f\u592a\u591a\u4e86\uff1b</li> </ol> </li> <li>Addiction Fraction \u90e8\u5206\u76f8\u52a0\u51cf\uff1a\\(1.000-0.111=0.001\\)</li> <li>Normalization: \u5c06\u7ed3\u679c\u89c4\u683c\u5316\uff1a\\(0.001\\times2^{-1}=1.000\\times2^{-4}\\)\uff1b\u540c\u65f6\u9700\u8981\u68c0\u67e5\u662f\u5426\u51fa\u73b0 overflow \u6216\u8005 underflow\uff0c\u5982\u679c\u51fa\u73b0\u5219\u89e6\u53d1 Exception</li> <li>Rounding: \u5c06 Fraction \u90e8\u5206\u820d\u5165\u5230\u6b63\u786e\u4f4d\u6570\uff1b\u820d\u5165\u7ed3\u679c\u53ef\u80fd\u8fd8\u9700\u8981\u89c4\u683c\u5316\uff0c\u6b64\u65f6\u56de\u5230\u6b65\u9aa4 3 \u7ee7\u7eed\u8fd0\u884c</li> </ol> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#383-\u6d6e\u70b9\u4e58\u6cd5","title":"3.8.3 \u6d6e\u70b9\u4e58\u6cd5","text":"<p>\u5206\u522b\u5904\u7406\u7b26\u53f7\u4f4d\u3001exponent \u548c fraction\uff1a</p> <ul> <li>\u5c06\u4e24\u4e2a Exponent \u76f8\u52a0\u5e76 \u51cf\u53bb\u4e00\u4e2a bias\uff0c\u56e0\u4e3a bias \u52a0\u4e86 2 \u6b21</li> <li>\u5c06\u4e24\u4e2a (1 + Fraction) \u76f8\u4e58\uff0c\u5e76\u5c06\u5176\u89c4\u683c\u5316\uff1b\u6b64\u65f6\u540c\u6837\u8981\u8003\u8651 overflow \u548c underflow\uff1b\u7136\u540e\u820d\u5165\uff0c\u5982\u679c\u8fd8\u9700\u8981\u89c4\u683c\u5316\u5219\u91cd\u590d\u6267\u884c</li> <li>\u6839\u636e\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7</li> </ul> <p></p> <p></p>"},{"location":"CO/3.%20Arithmetic%20for%20Computer/#384-\u7cbe\u786e\u7b97\u672f","title":"3.8.4 \u7cbe\u786e\u7b97\u672f","text":"<p>IEEE 754 \u89c4\u5b9a\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u820d\u5165\u63a7\u5236\uff0c\u7528\u6765\u4fdd\u8bc1\u820d\u5165\u7684\u7cbe\u786e\u6027\u3002</p> <p>Round modes</p> <ul> <li><code>guard</code> / <code>round</code> / <code>sticky</code></li> </ul> <p>down: \u53d8\u5c0f  up\uff1a\u53d8\u5927   0\uff1a\u62b9\u53bb\u5c0f\u6570\u5373\u53ef\uff0c\u5f800\u9760        nearest even\uff1a\u6700\u8fd1\u7684\u5076\u6570</p> <p></p> <p><code>Round to nearest even \u53ea\u5bf9 0.5 \u6709\u6548\uff0c\u522b\u7684\u90fd\u548c\u56db\u820d\u4e94\u5165\u4e00\u6837</code></p> <p>\u4e00\u822c\u7684\u6d6e\u70b9\u6570\u540e\u9762\u8fd8\u4f1a\u6709 2 bits\uff0c\u5206\u522b\u79f0\u4e3a guard \u548c round\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u8ba1\u7b97\u7ed3\u679c\u7684\u820d\u5165\u66f4\u52a0\u7684\u7cbe\u786e\uff1a </p> <p></p> <p></p> <p>\u4e8b\u5b9e\u4e0a\u52a0\u6cd5\u53ea\u9700\u8981\u7528\u5230 guard\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u524d\u5bfc 0\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u5de6\u79fb\uff0c\u8fd9\u65f6\u5019 round bit \u5c31\u6210\u4e86\u6709\u6548\u4f4d\uff0c\u80fd\u907f\u514d\u7cbe\u5ea6\u7684\u635f\u5931\u3002</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u4f4d\u53eb sticky bit\uff0c\u5176\u5b9a\u4e49\u662f\uff1a\u53ea\u8981 round \u53f3\u8fb9\u51fa\u73b0\u8fc7\u975e\u96f6\u4f4d\uff0c\u5c31\u5c06 sticky \u7f6e 1\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u5728\u52a0\u6cd5\u7684\u53f3\u79fb\u4e2d\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u662f\u5426\u6709 1 \u88ab\u79fb\u51fa\uff0c\u4ece\u800c\u80fd\u591f\u5b9e\u73b0 \"round to nearest even\"\u3002</p> <p><code>units in the last place(ulp)</code>: The number of bits in error in the leas t significant bits of the significant between the actual number and the number that can be represented.</p> <p></p> <p>Separate FP registers: $f0, \u2026, f31 $</p> <ul> <li> <p>double-precision </p> </li> <li> <p>single-precision values stored in the lower 32 bits </p> </li> </ul> <p>\u5355\u7cbe\u5ea6\u503c\u5b58\u50a8\u5728\u8f83\u4f4e\u7684 32 \u4f4d\u4e2d</p> <p>FP instructions operate only on FP registers </p> <p>FP \u6307\u4ee4\u4ec5\u5728 FP \u5bc4\u5b58\u5668\u4e0a\u8fd0\u884c</p> <ul> <li>Programs generally don\u2019t do integer ops on FP data, or vice versa </li> <li>More registers with minimal code-size impact </li> </ul> <p>FP load and store instructions \\(flw, fld fsw, fsd\\)</p> <p></p>"},{"location":"CO/4.%20The%20Processor/","title":"4. The Processor","text":"<p> \u7ea6 8606 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 43 \u5206\u949f</p> <p></p>"},{"location":"CO/4.%20The%20Processor/#41-introduction","title":"4.1 Introduction","text":"<ul> <li>Instruction count   Determined by ISA and compiler   \u5982\u540c\u6837\u7684\u529f\u80fd\u7528 Intel \u548c RISC-V \u7684\u5904\u7406\u5668\u5b9e\u73b0\uff0c\u82f1\u7279\u5c14\u7684\u6307\u4ee4\u7528\u7684\u66f4\u5c11\uff08\u56e0\u4e3a\u66f4\u590d\u6742\uff09</li> <li>CPI and Cycle time   Determined by CPU hardware</li> </ul> <p>\u552f\u4e00\u7684\u6027\u80fd\u6807\u51c6\u662fCPU Time</p> <p>For every instruction, the first two steps are identical <code>\u5bf9\u4e8e\u6bcf\u6761\u6307\u4ee4\uff0c\u524d\u4e24\u4e2a\u6b65\u9aa4\u90fd\u662f\u76f8\u540c\u7684</code></p> <ul> <li>Fetch the instruction from the memory \u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4</li> <li>Decode and read the registers \u89e3\u7801\u548c\u8bfb\u53d6\u5bc4\u5b58\u5668</li> </ul> <p>Next steps depend on the instruction class \u540e\u7eed\u6b65\u9aa4\u53d6\u51b3\u4e8e\u6307\u4ee4\u7c7b</p> <ul> <li>Memory-reference \u5185\u5b58\u53c2\u8003   <code>load, store</code></li> <li>Arithmetic-logical \u7b97\u672f\u903b\u8f91</li> <li>branches \u5206\u652f</li> </ul> <p>\u5747\u9700\u8981ALU\u7684\u53c2\u4e0e</p> <p>Depending on instruction class</p> <ul> <li> <p>Use ALU to calculate</p> <ul> <li> <p>Arithmetic result </p> </li> <li> <p>Memory address for load / store</p> </li> <li> <p>Branch comparison</p> </li> </ul> </li> <li> <p>Access data memory for load / store</p> </li> <li> <p>PC \\(\\leftarrow\\) target address PC + 4</p> </li> </ul> <p></p> <p></p> <p></p> <p></p> <p>\u5148\u5199\u540e\u8bfb\uff0c\u80fd\u591f\u5b9e\u73b0\u8bfb\u53d6\u6700\u65b0\u7684\u6570\u636e</p> <p></p> <p>\u5bc4\u5b58\u5668\u5806\u80fd\u591f\u540c\u65f6\u5b9e\u73b0\u8bfb\u53d6\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u548c\u5199\u5165\u4e00\u4e2a\u5bc4\u5b58\u5668\uff08\u5bf9\u5e94R\u578b\u6307\u4ee4\uff09</p> <p>reg_R_addr_A, reg_R_addr_B \u662fmux\u7684\u9009\u62e9\u4fe1\u53f7</p> <p>reg_W_addr \u9009\u62e9\u5bf9\u90a3\u4e2a\u5bc4\u5b58\u5668\u8fdb\u884cload\u64cd\u4f5c</p> <p></p> <p>Read register number 1\u4f5c\u4e3a mux \u7684\u9009\u62e9\u4fe1\u53f7\uff0c\u5f97\u5230\u5bf9\u5e94\u7684 Read Data</p> <p></p> <p>Write \u51b3\u5b9a\u80fd\u5426\u5199\u5165\uff0c Register number \u51b3\u5b9a\u54ea\u4e2a\u5bc4\u5b58\u5668\u8fdb\u884c\u5199\u5165\uff0c\u53cc\u91cd\u4f5c\u7528AND\uff0c</p> <p><code>Immediate generation unit</code></p> <p></p> <ul> <li>\u6839\u636e\u6307\u4ee4\u7c7b\u578b\uff08<code>ImmSel</code>\uff09\uff0c\u9009\u53d6\u7279\u5b9a\u7684bit\u4f4d\u751f\u6210\u76f8\u5e94\u7684\u7acb\u5373\u6570</li> <li>\u7acb\u5373\u6570\u5b57\u6bb5\u7b26\u53f7\u6269\u5c55\u4e3a64\u4f4d\u7ed3\u679c\u8f93\u51fa</li> </ul> <p></p> <p></p> <p>\u5229\u7528\u6574\u4e2aopcode\uff0c\u9009\u62e9\u7acb\u5373\u6570\u7684\u751f\u6210\u65b9\u5f0f</p> <p></p> <p><code>U-type 0110111 lui rd imm {instr[31:19], 12\u2019b0}</code></p>"},{"location":"CO/4.%20The%20Processor/#42-cpu-overview","title":"4.2 CPU Overview","text":"<p>edge triggered \u8fb9\u6cbf\u89e6\u53d1</p> <p>\u5728\u4e0a\u5347\u6cbf\u5230\u6765\u65f6\uff0c\u53d6\u51fastate element\uff0c \u540e\u7eed\u8fdb\u5165combinational logic\u8fdb\u884c\u8fd0\u7b97\uff0c\u5728\u4e0b\u4e00\u4e2a\u4e0a\u5347\u6cbf\u5230\u6765\u540e\uff0c\u5b58\u50a8state element</p>"},{"location":"CO/4.%20The%20Processor/#43-building-a-datapath","title":"4.3 Building a datapath","text":"<ul> <li>opcode\uff1abasic operation of the instruction.</li> <li>rs1\uff1a the first register source operand. </li> <li>rs2\uff1a the second register source operand. </li> <li>rd\uff1a the register destination operand. </li> <li>funct\uff1a function,this field selects the specific variant of the operation in the op field.  </li> <li>Immediate: address or immediate</li> </ul> <p>\u3001</p>"},{"location":"CO/4.%20The%20Processor/#431-instruction-execution-in-risc-v","title":"4.3.1 Instruction execution in RISC-V","text":"<ul> <li> <p>Fetch \u83b7\u53d6</p> <ul> <li>Take instructions from the instruction memory   \u4ece\u6307\u4ee4\u5b58\u50a8\u5668\u4e2d\u83b7\u53d6\u6307\u4ee4</li> <li>Modify PC to point the next instruction   \u4fee\u6539 PC \u4ee5\u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4</li> </ul> </li> <li> <p>Instruction decoding &amp; Read Operand </p> <p>\u6307\u4ee4\u89e3\u7801\u548c\u8bfb\u53d6\u64cd\u4f5c\u6570\uff1a</p> <ul> <li>Will be translated into machine control command   \u5c06\u8f6c\u6362\u4e3a\u673a\u5668\u63a7\u5236\u547d\u4ee4</li> <li>Reading Register Operands, whether or not to use   \u8bfb\u53d6\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570\uff0c\u662f\u5426\u4f7f\u7528</li> </ul> </li> <li> <p>Executive Control \u6267\u884c\u63a7\u5236\uff1a</p> <ul> <li> <p>Control the implementation of the corresponding ALU operation</p> <p>\u63a7\u5236\u76f8\u5e94 ALU \u64cd\u4f5c\u7684\u5b9e\u73b0</p> </li> </ul> </li> <li> <p>Memory access \u5185\u5b58\u8bbf\u95ee\uff1a</p> <ul> <li>Write or Read data from memory   \u4ece\u5185\u5b58\u4e2d\u5199\u5165\u6216\u8bfb\u53d6\u6570\u636e</li> <li>Only ld/sd \u53ea\u6709 ld/sd</li> </ul> </li> <li> <p>Write results to register \u5199\u5165\u7ed3\u679c\u8fdb\u884c\u6ce8\u518c\uff1a</p> <ul> <li> <p>If it is R-type instructions, ALU results are written to rd</p> <p>\u5982\u679c\u662f R \u578b\u6307\u4ee4\uff0c\u5219\u5c06 ALU \u7ed3\u679c\u5199\u5165 rd</p> </li> <li> <p>If it is I-type instructions, memory data are written to rd</p> <p>\u5982\u679c\u662f I \u578b\u6307\u4ee4\uff0c\u5219\u5185\u5b58\u6570\u636e\u5c06\u5199\u5165 rd</p> </li> </ul> </li> <li> <p>Modify PC for branch instructions   \u4fee\u6539 PC \u4ee5\u83b7\u53d6\u5206\u652f\u8bf4\u660e</p> </li> </ul> <p></p> <p>PC\u5730\u5740\u5bf9\u5e94\u7684\u6570\u636e\uff08\u6307\u4ee4\u7684\u5730\u5740\uff09\uff0c\u76f4\u63a5\u8fdb\u5165\u5185\u5b58\u8bfb\u53d6\u6307\u4ee4\uff0c\u6b64\u5904\u4e0d\u9700\u8981\u63a7\u5236read \u8fd8\u662f wirte</p> <p>\u4e3a\u4ec0\u4e48PC + 4\uff1f \u56e0\u4e3a\u4e00\u6761\u6307\u4ee4\u670932\u4f4d\uff0c\u4e00\u4e2a\u5b57\u82828\u4f4d</p>"},{"location":"CO/4.%20The%20Processor/#432-r\u578b\u6307\u4ee4","title":"4.3.2 R\u578b\u6307\u4ee4","text":"<ul> <li>(1) \u5904\u53d6\u51fa\u6307\u4ee4\uff0c <code>[6:0](opcode)</code> \u88ab\u9001\u5230 Control \u4ea7\u751f\u5bf9\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u770b\u5230\uff1b <code>[19:15](rs1)</code> , <code>[24:20](rs2)</code> , <code>[11:7](rd)</code> \u5206\u522b\u5bf9\u5e94 <code>rs1</code> , <code>rs2</code> , <code>rd</code> \uff0c\u88ab\u8fde\u5165 Registers \u8fd9\u4e2a\u7ed3\u6784\uff0c\u5bf9\u5e94\u5730 <code>Read data 1</code> \u548c <code>Read data 2</code> \u4e24\u5904\u7684\u503c\u5373\u53d8\u4e3a <code>rs1</code> , <code>rs2</code> \u7684\u503c\uff1b</li> <li>(2) \u5904 MUX \u5728 <code>ALUSrc = 0</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>Read data 2</code> \u4f5c\u4e3a ALU \u7684\u8f93\u5165\u4e0e <code>Read data 1</code> \u8fdb\u884c\u8fd0\u7b97\uff0c\u5177\u4f53\u7684\u8fd0\u7b97\u7531 <code>ALU control</code> \u63d0\u4f9b\u7684\u4fe1\u53f7\u6307\u660e\uff08\u6211\u4eec\u5728 4.1.3 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\uff09\u3002\u8fd0\u7b97\u7ed3\u679c\u5728 <code>ALU result</code> \u4e2d\u3002</li> <li>(3) \u5904 MUX \u5728 <code>MemtoReg = 0</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>ALU result</code> \u4f5c\u4e3a\u5199\u56de Register \u7684\u503c\uff0c\u8fde\u5230 (4) \u5904\uff1b\u5728 (5) \u5904 <code>RegWrite = 1</code> \u4fe1\u53f7\u63a7\u5236\u4e0b\uff0c\u8be5\u503c\u5199\u5165\u5230 <code>rd</code> \u5bc4\u5b58\u5668\u4e2d\u3002</li> </ul>"},{"location":"CO/4.%20The%20Processor/#433-i\u578b\u6307\u4ee4","title":"4.3.3 I\u578b\u6307\u4ee4","text":"<p><code>addi &amp;&amp; ld</code></p> <p></p> <ul> <li>\u5bf9\u4e8eaddi\uff0c\u5728ALU\u524d\uff0c\u9700\u8981\u6dfb\u52a0mux\uff0c\u533a\u5206imm\u548csourse register</li> <li>\u5bf9\u4e8eload\uff0c \u5728ALU\u8ba1\u7b97\u4e4b\u540e\uff0c\u8ba1\u7b97\u51fa\u5730\u5740\uff0c\u8fdb\u5165\u5230data memory\u53d6\u6570\u636e\uff0c\u53d6\u51fa\u6765\u4e4b\u540e\u9700\u8981\u5b58\u50a8\u5230rd\uff0c\u6240\u4ee5\u5728ALU\u4e4b\u540e\u8fd8\u9700\u8981\u4e00\u4e2amux\uff0c\u4e00\u4e2a\u5b58\u50a8\u5185\u5b58\u53d6\u51fa\u7684data\uff0c\u4e00\u4e2a\u662fALU\u76f4\u63a5\u8ba1\u7b97\u7684data</li> </ul> <p></p> <p>addi:</p> <ul> <li>(1) \u5904\u53d6\u51fa\u6307\u4ee4\uff0c <code>[6:0](opcode)</code> \u88ab\u9001\u5230 Control \u4ea7\u751f\u5bf9\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u770b\u5230\uff1b <code>[19:15](rs1)</code>  , <code>[11:7](rd)</code> \u5206\u522b\u5bf9\u5e94 <code>rs1</code>, <code>rd</code> \uff0c\u88ab\u8fde\u5165 Registers \u8fd9\u4e2a\u7ed3\u6784\uff0c\u5bf9\u5e94\u5730 <code>Read data 1</code> \u7684\u503c\u5373\u53d8\u4e3a <code>rs1</code>\u7684\u503c\uff1b[31:20] (imm)\u5bf9\u5e94\u7acb\u5373\u6570\uff0c\u4f20\u8f93\u5230Imm_Gen</li> <li>(2) \u5904 MUX \u5728 <code>ALUSrc = 1</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>Imm_out</code> \u4f5c\u4e3a ALU \u7684\u8f93\u5165\u4e0e <code>Read data 1</code> \u8fdb\u884c\u8fd0\u7b97\uff0c\u5177\u4f53\u7684\u8fd0\u7b97\u7531 <code>ALU control</code> \u63d0\u4f9b\u7684\u4fe1\u53f7\u6307\u660e\uff08\u6211\u4eec\u5728 4.1.3 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\uff09\u3002\u8fd0\u7b97\u7ed3\u679c\u5728 <code>ALU result</code> \u4e2d\u3002</li> <li>(3) \u5904 MUX \u5728 <code>MemtoReg = 0</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>ALU result</code> \u4f5c\u4e3a\u5199\u56de Register \u7684\u503c\uff0c\u8fde\u5230 (4) \u5904\uff1b\u5728 (5) \u5904 <code>RegWrite = 1</code> \u4fe1\u53f7\u63a7\u5236\u4e0b\uff0c\u8be5\u503c\u5199\u5165\u5230 <code>rd</code> \u5bc4\u5b58\u5668\u4e2d\u3002</li> </ul> <p>ld:</p> <ul> <li>(1) \u5904\u53d6\u51fa\u6307\u4ee4\uff0c <code>[6:0](opcode)</code> \u88ab\u9001\u5230 Control \u4ea7\u751f\u5bf9\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u6211\u4eec\u7a0d\u540e\u53ef\u4ee5\u770b\u5230\uff1b <code>[19:15](rs1)</code>  , <code>[11:7](rd)</code> \u5206\u522b\u5bf9\u5e94 <code>rs1</code>, <code>rd</code> \uff0c\u88ab\u8fde\u5165 Registers \u8fd9\u4e2a\u7ed3\u6784\uff0c\u5bf9\u5e94\u5730 <code>Read data 1</code> \u7684\u503c\u5373\u53d8\u4e3a <code>rs1</code>\u7684\u503c\uff1b[31:20] (imm)\u5bf9\u5e94\u7acb\u5373\u6570\uff0c\u4f20\u8f93\u5230Imm_Gen</li> <li>(2) \u5904 MUX \u5728 <code>ALUSrc = 1</code> \u7684\u4fe1\u53f7\u4f5c\u7528\u4e0b\u9009\u62e9 <code>Imm_out</code> \u4f5c\u4e3a ALU \u7684\u8f93\u5165\u4e0e <code>Read data 1</code> \u8fdb\u884c\u8fd0\u7b97\uff0c\u5177\u4f53\u7684\u8fd0\u7b97\u7531 <code>ALU control</code> \u63d0\u4f9b\u7684\u4fe1\u53f7\u6307\u660e\uff08\u6211\u4eec\u5728 4.1.3 \u5c0f\u8282 \u8ba8\u8bba\u8fd9\u4e2a\u8bdd\u9898\uff09\u3002\u8fd0\u7b97\u7ed3\u679c\u5728 <code>ALU result</code> \u4e2d\u3002</li> <li>(3) ALU_result \u8ba1\u7b97\u7684\u662f \u5185\u5b58\u7684\u5730\u5740\uff0c\u4ece Data memory\u4e2d\u53d6\u51fadata\uff0c\u7ecf\u8fc7\uff083\uff09\u5904MUX\u7684\u9009\u62e9\uff0c\u4f20\u8f93\u5230Register File\uff0c\u5728RegWrite = 1\u7684\u63a7\u5236\uff0c\u5199\u5165\u5230\u76ee\u6807\u5bc4\u5b58\u5668</li> </ul>"},{"location":"CO/4.%20The%20Processor/#434-s\u578b\u6307\u4ee4","title":"4.3.4 S\u578b\u6307\u4ee4","text":"<p><code>\u6ce8\u610fstore\u6307\u4ee4\u7684\u683c\u5f0f\uff0c\u4e0d\u518d\u5b58\u5728rd\uff0cfunc7\uff0c\u5206\u522b\u8f6c\u5316\u4e3aimm[4:0], imm[11:5]</code></p> <p>\u5bf9\u4e8estore\u6307\u4ee4\uff0csd x8\uff0c200(x9), \u5c06x8\u7684\u6570\u636e\u5b58\u50a8\u5230\u6307\u5b9a\u7684\u5730\u5740</p> <p>write_data, \u548c write_addr,\u8fde\u63a5\u5230data memory</p>"},{"location":"CO/4.%20The%20Processor/#435-sb\u578b\u6307\u4ee4","title":"4.3.5 SB\u578b\u6307\u4ee4","text":"<p>\u9700\u8981\u4e24\u4e2aALU\uff0c\u4e00\u4e2aALU\u8ba1\u7b97x1\u548cx2\u7684\u5dee\u503c\uff0c\u5f97\u5230\u7684\u7ed3\u679czero\u7528\u4e8emux\u7684\u9009\u62e9\u4fe1\u53f7\uff0c\u9009\u62e9PC+4\u6216\u8005PC+200</p> <p>\u53e6\u4e00\u4e2aALU\uff0c\u7528\u4e8e\u8ba1\u7b97PC+imm</p> <p></p> <ul> <li>(1) \u4e2d\u6709\u4e24\u4e2a\u52a0\u6cd5\u5668\uff0c\u4e00\u4e2a\u7684\u7ed3\u679c\u662f PC + 4\uff0c\u53e6\u4e00\u4e2a\u662f PC + offset\uff0c\u5176\u4e2d offset \u662f\u6765\u81ea\u5f53\u524d instruction \u7684\uff1b\u8fd9\u4e24\u4e2a\u52a0\u6cd5\u5668\u901a\u8fc7 MUX \u9001\u7ed9 PC</li> <li>MUX \u7684\u63a7\u5236\u4fe1\u53f7\u6765\u81ea (2)\uff0c (2) \u662f\u4e00\u4e2a\u4e0e\u95e8\uff0c\u5373\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7\u90fd\u4e3a\u771f\u65f6\u624d\u4f1a\u8f93\u51fa 1\uff0c\u4ece\u800c\u5728\u4e0a\u8ff0 MUX \u4e2d\u9009\u62e9\u8df3\u8f6c\u3002 (2) \u7684\u4e24\u4e2a\u8f93\u5165\u5206\u522b\u6765\u81ea\uff1a<ul> <li>(5) \u8fd9\u4e2a ALU \u7684 Zero \u4fe1\u53f7\uff0c\u8fd9\u662f\u7b2c 3 \u7ae0\u4e2d\u6211\u4eec\u8bbe\u8ba1\u7684\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0 <code>beq</code> \u7684\u7ed3\u6784\uff1b\u6211\u4eec\u8ba8\u8bba\u8fc7\u5b9e\u73b0 <code>beq</code> \u5176\u5b9e\u5c31\u662f\u8ba1\u7b97 <code>rs1 - rs2</code> \u5224\u65ad\u5176\u662f\u5426\u4e3a 0\uff0c\u6240\u4ee5\u8fd9\u91cc\u6839\u636e Zero \u662f\u5426\u4e3a 0 \u5c31\u80fd\u5224\u65ad\u4e24\u4e2a\u5bc4\u5b58\u5668\u662f\u5426\u76f8\u7b49</li> <li>(4) \u5904 Control \u7ed9\u51fa\u7684 <code>Branch</code> \u4fe1\u53f7\uff0c\u5373\u5982\u679c\u8fd9\u4e2a\u8bed\u53e5\u662f\u8df3\u8f6c\u8bed\u53e5\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u4fe1\u53f7\u4f1a\u7f6e\u4e3a 1</li> </ul> </li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e14\u4ec5\u5f53\u8bed\u53e5\u786e\u5b9e\u662f <code>beq</code> \u800c\u4e14 <code>Zero</code> \u4fe1\u53f7\u7684\u503c\u786e\u5b9e\u4e3a 1 \u65f6\u624d\u4f1a\u8fdb\u884c\u8df3\u8f6c\u3002</p>"},{"location":"CO/4.%20The%20Processor/#436-uj\u578b\u6307\u4ee4","title":"4.3.6 UJ\u578b\u6307\u4ee4","text":"<p>\u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u91c7\u7528PC\u76f8\u5bf9\u5bfb\u5740 PC+imm</p> <p>\u989d\u5916\u90e8\u5206\u5728\u4e8e\u5c06PC+4\u5b58\u50a8\u5230x1\u5bc4\u5b58\u5668</p> <p>\u6269\u5145\uff1aPC+4\u5728ALU\u4e4b\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u5206\u4e3a\u4e24\u6761\u8def\uff0c\u4e00\u6761\u6307\u5411\u5bc4\u5b58\u5668\u5806\uff08<code>\u6b64\u5904\u53ef\u4ee5\u548cdata memory\u4e4b\u524dmux\u5408\u5e76\uff0c\u4e00\u8d77\u9009\u62e9</code>\uff09\uff0c\u5c06PC+4\u4fdd\u5b58\u5728x1\uff0c\u53e6\u4e00\u6761\u548cPC+imm\u8fdb\u884cmux\u7684\u9009\u62e9</p>"},{"location":"CO/4.%20The%20Processor/#437-u\u578b\u6307\u4ee4","title":"4.3.7 U\u578b\u6307\u4ee4","text":"<p>lui x5, imm \u8bfb\u53d6\u7acb\u5373\u6570\u7684\u503c\uff0c\u5c06imm\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u9ad820\u4f4d</p> <p>\u76f4\u63a5\u5c06imm\u8fde\u63a5\u5230data memory\u524d\u7684mux\u5408\u5e76\uff08\u73b0\u5728\u67094\u4e2a\u9009\u62e9\uff09\uff0c\u6b64\u5904\u7684mux\u8f93\u51fa\u7ed3\u679c\u8fde\u63a5\u5230\u5bc4\u5b58\u5668\u5806\u7684write_data</p>"},{"location":"CO/4.%20The%20Processor/#44-controller","title":"4.4 controller","text":"<p>7 \u4e2a\u63a7\u5236\u4fe1\u53f7\u548c\u4e00\u4e2a 4 \u4f4d\u7684 <code>ALU_operation</code></p> <p></p> <p>\u84dd\u8272\u8868\u793a\u4e0econtroller\u6709\u5173</p>"},{"location":"CO/4.%20The%20Processor/#441-alu-control","title":"4.4.1 ALU control","text":"<p>\u5148\u6839\u636eopcode\u751f\u6210\u4e24\u4f4d\u7684ALUop</p> <p>\u518d\u6839\u636efunc3\u548cfunc7[5] \u751f\u6210ALU control</p> <p></p> <ul> <li> <p>First level</p> <ul> <li>\u4e00\u7ea7\u89e3\u7801\u540e\uff0c\u53ef\u4ee5\u51b3\u5b9a\u9664\u4e86 <code>ALU_opration</code> \u4ee5\u5916\u7684\u63a7\u5236\u4fe1\u53f7</li> <li>\u540c\u65f6\u6211\u4eec\u4f1a\u89e3\u7801\u51fa 2 \u4f4d\u7684 <code>ALU_op</code>.</li> </ul> <p></p> <p></p> </li> <li> <p>Second level</p> <p>ALU operation is decided by 2-bit ALUOp derived from opcode, and funct7 &amp; funct3 fields of the instruction.</p> </li> </ul> <p></p>"},{"location":"CO/4.%20The%20Processor/#442-datapath-with-control","title":"4.4.2 Datapath with Control","text":"<p>\u53f3\u4e0a\u65b9\u7684\u7b2c\u4e00\u4e2aMUX\uff0c\u9009\u62e9PC+4\u548cPC+imm\uff0c\u6267\u884c\u7684\u662fbranch\u64cd\u4f5c\uff0c\u9009\u62e9\u4fe1\u53f7\u662fbranch</p> <p>\u7b2c\u4e8c\u4e2aMUX\uff0c\u9009\u62e9branch\u672a\u6267\u884c\u7684\u7ed3\u679c\uff08PC+4\uff09\uff0cjalr\uff08rd+imm\uff09\uff0cPC+imm\uff0c\u6267\u884c\u7684\u662fjump\u64cd\u4f5c\uff0c\u9009\u62e9\u4fe1\u53f7\u662fjump</p> <p><code>\u5f53\u7136\u4e5f\u53ef\u4ee5\u4ec5\u7528\u4e00\u4e2amux\u5b9e\u73b0\uff0c\u9009\u62e9PC+4\uff0cPC+imm\uff0crs+imm\uff0c\u53ea\u9700\u8981\u6ee1\u8db3branch\u548cjal\u7684\u9009\u62e9\u4fe1\u53f7\u662f00/01\uff0cjalr\u7684\u9009\u62e9\u4fe1\u53f7\u662f10</code>\uff0c</p> <p></p> <p></p> <p></p> <ul> <li> <p>ld\u7684 MemtoReg = 01\uff0c\u76ee\u7684\u662f\u5c06\u6307\u5b9a\u5730\u5740\u7684\u6570\u636e\u5199\u5230\u76ee\u6807\u5bc4\u5b58\u5668</p> </li> <li> <p>addi\uff0caddi x5\uff0cx6\uff0c200</p> <p>200    x6  fun3  x5  addi</p> <p>ALUSrcB  = 1\uff0c\u9009\u62e9imm\u3002MemtoReg = 0.\u9009\u62e9 x5 + imm\u3002RegWrite = 1\uff0c\u5c06\u7ed3\u679c\u5199\u5230rd\u3002MemRead = 0.MemWrite = 0.Branch = 0\u3002Jump = 0.</p> </li> <li> <p>jalr\uff0c jalr x1\uff0c 200\uff08x7)  I \u578b\u6307\u4ee4</p> <p>1   10  1   0   0   0   1   </p> </li> <li> <p>lui\uff0cimm\u76f4\u63a5\u8fde\u63a5\u5230MemtoReg\uff0c\u6b64\u65f6MemtoReg = 11.</p> <p>X   11  1    0  0   0   \u2026.</p> </li> </ul> <p></p> <p></p> <p>\u5355\u5468\u671f\u7684\u5b9e\u73b0\u662f\u6307\uff0c\u4e00\u4e2a\u6307\u4ee4\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\uff0c\u4e5f\u5c31\u662f CPI = 1\u3002\u90a3\u4e48\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6\u5c31\u8981\u8db3\u591f\u6700\u957f\u7684\u90a3\u4e2a\u6307\u4ee4\u5b8c\u6210\u8fd0\u884c\u3002</p> <p>\u4f46\u662f\uff0c\u4f8b\u5982 <code>load</code> \u7c7b\u7684\u6307\u4ee4\u8981\u7ecf\u8fc7 inst mem, reg file, ALU, data mem, reg file \u8fd9\u4e48\u591a\u7684\u6b65\u9aa4\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u53d8\u5f97\u5f88\u957f\uff0c\u5bfc\u81f4\u6574\u4f53\u6027\u80fd\u53d8\u5f97\u5f88\u5dee\u3002</p> <p>\u5355\u5468\u671f\u7684\u5b9e\u73b0\u8fdd\u53cd\u4e86 common case fast \u8fd9\u4e00\u8bbe\u8ba1\u539f\u5219\u3002</p>"},{"location":"CO/4.%20The%20Processor/#45-exception","title":"4.5 Exception","text":"<p>The cause of changing CPU\u2019s work flow : </p> <ul> <li> <p>Control instructions in program (bne/beq, jal , etc) </p> <p>It is foreseeable in programming flow </p> </li> <li> <p>Something happen suddenly (<code>Exception and Interruption</code>) </p> <p>It is unpredictable </p> <p>Call Instructions triggered by hardware </p> </li> </ul> <p><code>Exception</code> </p> <ul> <li>Arises within the CPU\uff08e.g., overflow, undefined opcode, syscall, \u2026\uff09 </li> </ul> <p><code>Interrupt</code> </p> <ul> <li>From an external I/O controller </li> </ul> <p>Dealing with them without sacrificing performance is hard</p> <p></p>"},{"location":"CO/4.%20The%20Processor/#451-handling-exceptions","title":"4.5.1 Handling Exceptions","text":"<p>mtvec\u63d0\u4f9b\u57fa\u5730\u5740\uff0c\u6839\u636emCAUSE\u8ba1\u7b97\u504f\u79fb\u91cf\uff0c\u8df3\u8f6c\u5230\u76f8\u5e94\u7684handle</p>"},{"location":"CO/4.%20The%20Processor/#452-risc-v-privileged","title":"4.5.2 RISC-V Privileged","text":"<ul> <li> <p><code>All hardware implementations must provide M-mode</code></p> <p>\u6700\u7b80\u5355\u7684RISC-V\u5b9e\u73b0\uff0c\u4ec5\u63d0\u4f9b M mode</p> </li> <li> <p><code>Machine mode most important task:intercept and handle interrupts/exceptions\uff08\u4f7f\u7528CSR\u5bc4\u5b58\u5668\uff09</code></p> <p></p> <p>mechine level has the highest privileges</p> <p>CSR \u6307\u4ee4\u90fd\u4f7f\u7528 I \u578b\u6307\u4ee4\uff0c\u5176\u4e2d 12 \u4f4d\u7684\u7acb\u5373\u6570\u90e8\u5206\u8868\u793a CSR \u7684\u5730\u5740\uff0cfunct3 \u4f4e 2 \u4f4d\u7528\u6765\u7f16\u7801\u8bfb / \u6539 / \u5199\uff08read-modify-write\uff09\u64cd\u4f5c\u3001\u9ad8 1 \u4f4d\u8868\u793a\u662f\u5426\u6765\u81ea\u7acb\u5373\u6570\uff08\u5982\u679c\u6765\u81ea\u7acb\u5373\u6570\u5219 rs1 \u90e8\u5206\u8868\u793a\u4e00\u4e2a 5 \u4f4d\u65e0\u7b26\u53f7\u7acb\u5373\u6570\uff09\uff0copcode \u90fd\u662f SYSTEM\uff081110011\uff09\u3002</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>// CSR \u76f8\u5173\u6307\u4ee4\u5305\u62ec</p> <p>// 1. csrrw \u8bfb\u53d6 CSR \u5bc4\u5b58\u5668\u7684\u503c\u5230 rd\uff0c\u7136\u540e\u5c06 rs1 \u7684\u503c\u5199\u5165 CSR \u5bc4\u5b58\u5668</p> <p>// 2. csrrs \u8bfb\u53d6 CSR \u5bc4\u5b58\u5668\u7684\u503c\u5230 rd\uff0c\u7136\u540e\u5c06 rs1 \u7684\u503c\u4e0e CSR \u5bc4\u5b58\u5668\u7684\u503c\u8fdb\u884c\u6216\u64cd\u4f5c\uff0c\u7136\u540e\u5199\u5165 CSR \u5bc4\u5b58\u5668</p> <p>// 3. csrrc \u8bfb\u53d6 CSR \u5bc4\u5b58\u5668\u7684\u503c\u5230 rd\uff0c\u7136\u540e\u5c06 rs1 \u7684\u503c\u4e0e CSR \u5bc4\u5b58\u5668\u7684\u503c\u8fdb\u884c\u4e0e\u64cd\u4f5c\uff0c\u7136\u540e\u5199\u5165 CSR \u5bc4\u5b58\u5668</p> <p>// 4. csrrwi \u8bfb\u53d6 CSR \u5bc4\u5b58\u5668\u7684\u503c\u5230 rd\uff0c\u7136\u540e\u5c06 zimm \u5199\u5165 CSR \u5bc4\u5b58\u5668</p> <p>// 5. csrrsi \u8bfb\u53d6 CSR \u5bc4\u5b58\u5668\u7684\u503c\u5230 rd\uff0c\u7136\u540e\u5c06 CSR \u5bc4\u5b58\u5668\u7684\u503c\u4e0e zimm \u8fdb\u884c\u6216\u64cd\u4f5c\uff0c\u7136\u540e\u5199\u5165 CSR \u5bc4\u5b58\u5668</p> <p></p> <p>CSRRW:\u5c06csr\u7684\u503c\u8d4b\u503c\u7ed9rd\uff0c\u5c06rs1\u7684\u503c\u5199\u5165\u5230csr\uff08Read and Write\uff09</p> <p>CSRRS\uff1a\u9700\u8981\u6539\u52a8\u7684\u4f4dSet,rs1\u7279\u5b9a\u4f4d\u7f6e\u4e3a1\uff0c\u5176\u4ed6\u4f4d\u4e3a0\uff0ccsr = csr | rs1\uff08Read and Set\uff09</p> <p>CSRRC\uff1a\u5c06\u6307\u5b9a\u4f4d\u6e05\u96f6\uff0crs1\u7279\u5b9a\u4f4d\u7f6e\u4e3a0\uff0c\u5176\u4ed6\u4f4d\u4e3a1\uff0ccsr = csr &amp; ~rs1\uff08Read and Clear\uff09</p> <p></p> <p>MRET\uff0cmstatus\u9700\u8981\u53d8\u5316\uff0ceg: mp \\(\\leftarrow\\) mpp, mie \\(\\leftarrow\\) mpie</p> <p><code>MRET\uff1a\u7528\u4e8e\u6267\u884c\u5b8c\u5f02\u5e38\u5904\u7406\u4e4b\u540e\u8fd4\u56de</code></p> <p>wfi\uff08wait for interrupt\uff09</p> <p></p> </li> <li> <p>mstatus: <code>Machine Status register \u673a\u5668\u6a21\u5f0f\u72b6\u6001\u5bc4\u5b58\u5668</code></p> <p>\u6807\u8bb0\u4e2d\u65ad\u5168\u5c40\u4f7f\u80fd\uff0cMIE\uff080011\uff09\uff0cSIE\uff080001\uff09\uff0cUIE\uff080000\uff09\uff0c\u9ad8\u7ea7\u522b\u4e0d\u7406\u4f4e\u7ea7\u522b\uff0c\u4f4e\u7ea7\u522b\u54cd\u5e94\u9ad8\u7ea7\u522b</p> <p>\u5982\u679cMIE=0\uff0c\u673a\u5668\u6a21\u5f0f\u4e0b\u6240\u6709\u7684\u4e2d\u65ad\u90fd\u4e0d\u53d1\u751f\uff0cCPU\u5e72\u81ea\u5df1\u7684\u4e8b\u60c5\u4e0d\u88ab\u6253\u65ad\u3002\u5f02\u5e38\u80fd\u591f\u6b63\u5e38\u5904\u7406(\u56e0\u4e3a\u662fCPU\u5185\u90e8\u95ee\u9898)</p> <p><code>xPIE holds the value of the interrupt enable bit active prior to the trap</code></p> <p>xPIE\u8868\u793a\u524d\u4e00\u4e2a\u4e2d\u65ad\u7684interrupt enable bit\u7684\u503c</p> <p><code>xPP holds the privious privilege mode</code></p> <p>xPP\u8868\u793a\u524d\u4e00\u4e2aprivilege mode(\u4ece\u54ea\u4e2a\u6a21\u5f0f\u8df3\u5230\u54ea\u4e2a\u6a21\u5f0f\uff0cU-&gt;M)</p> <p></p> </li> <li> <p>mie / mip\uff1a\u4e2d\u65ad\u7684\u5c40\u90e8\u4f7f\u80fd</p> <ul> <li>MEIE\u3001SEIE and UEIE enable external interrupt</li> <li>MSIE\u3001SSIE &amp; USIE enable software interrupts</li> <li>MTIE\u3001STIE and UTIE enable timer interrupts</li> </ul> </li> <li> <p><code>mtvec : Machine Trap-Vector Base-Address Register</code></p> <p>\u7531 vector base address \u548c vector mode \u7ec4\u6210 \u57fa\u5730\u5740+\u504f\u79fb\u91cf</p> <p></p> <p>\u4e24\u4e2a\u6a21\u5f0f\uff0c</p> <ul> <li>\u67e5\u8be2\u6a21\u5f0f\uff08\u5f02\u5e38\u548c\u4e2d\u65ad\uff0c\u9ed8\u8ba4\u67e5\u8be2\u6a21\u5f0f\uff09\uff1a\u4e00\u79cd\u76f4\u63a5\u8df3\u8f6c\u5230base</li> <li>\u5411\u91cf\u6a21\u5f0f\uff08\u4ec5\u5916\u90e8\u4e2d\u65ad\u4e14Mode value = 1\uff09\uff1a\u53e6\u4e00\u79cd\u548ccase\u7ed3\u5408\uff0c\u57fa\u5730\u5740+\u504f\u79fb\u91cf</li> </ul> </li> <li> <p><code>mepc\uff1aMachine Exception Program Counter</code></p> <p>\u5f02\u5e38\u65ad\u70b9PC\u5730\u5740</p> <p>exception(\u5185\u90e8)\uff1a mepc $\\leftarrow $ pc</p> <p>interrupted\uff08\u5916\u90e8\uff09: mepc \\(\\leftarrow\\) pc + 4</p> <p>\u6700\u540e\u4e24\u4f4d\u6216\u8005\u6700\u540e\u4e00\u4f4dbit\u662f0\uff0c\u4fdd\u8bc1\u80fd\u88ab4\u6574\u9664\uff08PC\u53604\u5b57\u8282\uff09</p> </li> <li> <p>mcause\uff1a\u5f02\u5e38\u539f\u56e0</p> <p>Exception Code\u4e0emtvec\u7684\u5411\u91cf\u6a21\u5f0f\u76f8\u5bf9\u5e94\uff0c\u5728\u5f02\u6b65\u4e2d\u65ad\u65f6\uff0c\u4e0d\u540c\u7684\u6a21\u5f0f\u4f1a\u8df3\u8f6c\u5230\u4e0d\u540c\u7684\u5165\u53e3\u3002<code>\u5982\u679c\u662f\u67e5\u8be2\u6a21\u5f0f\u5462\uff1f\u90fd\u662f\u8df3\u8f6c\u5230Base\u5730\u5740\uff0c\u518d\u6839\u636emcause\u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u5373\u53ef</code></p> <p>The Exception Code is a WLRL\uff0cWrite/Read Only Legal Values \u5982\u679c\u5199\u5165\u503c\u4e0d\u5408\u6cd5\u4f1a\u5f15\u53d1\u975e\u6cd5\u6307\u4ee4\u5f02\u5e38</p> <p></p> <p>interrupt = 1 \u8868\u793a\u4e2d\u65ad\uff0c interrupt = 0\uff0c \u8868\u793a\u5f02\u5e38</p> <p></p> <p>Instruction address misaligned PC\u5730\u5740\u6ca1\u6709\u5bf9\u9f50\uff0c\u6700\u540e\u4e00\u4f4d\u662f1</p> <p></p> </li> </ul> <ol> <li> <p>RISC-V \u4e2d\u65ad\u5904\u7406\u2014\u2014\u8fdb\u5165\u5f02\u5e38</p> <p>\u66f4\u65b0mcause\uff0cmepc\uff0cmtval\uff0cmstatus\uff0c\u505c\u6b62\u6267\u884c\u5f53\u524d\u7684\u7a0b\u5e8f\u6d41\uff0c\u8f6c\u800c\u4eceCSR\u5bc4\u5b58\u5668mtvec\u5b9a\u4e49\u7684PC\u7684\u6267\u884c\u4e2d\u65ad</p> <p></p> </li> <li> <p>RISC-V\u4e2d\u65ad\u5904\u7406\u2014\u2014\u5f02\u5e38\u670d\u52a1\u7a0b\u5e8f</p> <p>\u901a\u8fc7\u67e5\u8be2mcause\u4e2d\u7684\u5f02\u5e38\u7f16\u53f7\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u5f02\u5e38\u670d\u52a1\u7a0b\u5e8f</p> </li> <li> <p>RISC-V\u4e2d\u65ad\u7ed3\u6784\u2014\u2014\u9000\u51fa\u5f02\u5e38</p> <p></p> <p>mpie\u4fdd\u5b58\u7684\u662f\u8fdb\u5165\u5230\u4e2d\u65ad\u5904\u7406\u4e4b\u524d\u7684\u6a21\u5f0f\uff0c\u4e2d\u65ad\u5904\u7406\u5b8c\u540e\u9700\u8981\u8fd4\u56de</p> </li> </ol> <p></p> <ol> <li>decoder controller \u5728\u8bd1\u7801\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u662f\u5426\u4e3aillegal instruction</li> <li> <p>ALU\u8ba1\u7b97\u51fa\u5185\u5b58\u5730\u5740\u540e\uff0c\u9700\u8981\u9001\u5230test logic\u4e2d\u68c0\u67e5\u662f\u5426\u4e3a4\u7684\u500d\u6570\uff08\u524d\u63d0\u5f97\u662fload/store\u6307\u4ee4\uff09\uff0c\u4e5f\u5c31\u662f\u662f\u5426\u5bf9\u9f50</p> </li> <li> <p>\u6839\u636emcause\u7684INT\u51b3\u5b9a mepc = pc / pc + 4</p> <p>mcause\u4fee\u6539\u6307\u5b9a\u4f4d\uff08\u5229\u7528CSRRS\uff09</p> </li> </ol>"},{"location":"CO/4.%20The%20Processor/#46-overview-of-pipelining","title":"4.6 Overview of Pipelining","text":"<p>\u6d41\u6c34\u7ebf\uff1a\u6307\u4ee4\u7684\u6267\u884c\u5728\u65f6\u95f4\u662f\u5b58\u5728\u91cd\u53e0\uff0c\u524d\u4e00\u6761\u6307\u4ee4\u8fd8\u5728\u6267\u884c\uff0c\u540e\u4e00\u6761\u5c31\u5f00\u59cb\u6267\u884c</p> <p>Why pipelining</p> <p>\u5bf9\u4e8e\u5355\u4e2a\u5de5\u4f5c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u5e76\u6ca1\u6709\u7f29\u77ed\u5176\u8fd0\u884c\u65f6\u95f4\uff1b\u4f46\u662f\u7531\u4e8e\u591a\u4e2a\u5de5\u4f5c\u53ef\u4ee5\u5e76\u884c\u5730\u6267\u884c\uff0c\u6d41\u6c34\u7ebf\u6280\u672f\u53ef\u4ee5\u66f4\u597d\u5730\u538b\u69a8\u8d44\u6e90\uff0c\u4f7f\u5f97\u5b83\u4eec\u88ab\u540c\u65f6\u800c\u4e0d\u662f\u8f6e\u6d41\u4f7f\u7528\uff0c\u5728\u5de5\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\u53ef\u4ee5\u589e\u52a0\u6574\u4f53\u7684 \u541e\u5410\u7387 throughput\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5b8c\u6210\u6574\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u3002</p>"},{"location":"CO/4.%20The%20Processor/#461-pipelining","title":"4.6.1 Pipelining","text":"<p>\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6761\u6307\u4ee4\u90fd\u5212\u5206\u4e3a\u8fd9\u4e48\u51e0\u6b65\uff1a</p> <ol> <li>IF: Instruction fetch from memory \u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4</li> <li>ID: Instruction decode &amp; register read \u8bfb\u53d6\u5bc4\u5b58\u5668\u3001\u6307\u4ee4\u8bd1\u7801</li> <li>EX: Execute operation or calculate address \u8ba1\u7b97\u64cd\u4f5c\u7ed3\u679c\u548c/\u6216\u5730\u5740</li> <li>MEM: Access data memory operand \u5185\u5b58\u5b58\u53d6\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> <li>WB: Write result back to register \u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09</li> </ol> <p>\\(CPI \\approx 1\\)</p> <ul> <li>One instruction will be issued (or finished) each cycle.     \u6bcf\u4e2a\u5468\u671f\u5c06\u53d1\u51fa\uff08\u6216\u5b8c\u6210\uff09\u4e00\u6761\u6307\u4ee4\u3002</li> <li>During any cycle, one instruction is present in each stage.     \u5728\u4efb\u4f55\u5468\u671f\u4e2d\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5b58\u5728\u4e00\u6761\u6307\u4ee4\u3002</li> </ul>"},{"location":"CO/4.%20The%20Processor/#4611-pipeline-performance","title":"4.6.1.1 Pipeline Performance","text":"<p>\u5bf9\u4e8e\u5355\u5468\u671f CPU, CPI \u662f 1, \u4f46\u65f6\u949f\u5468\u671f\u4f1a\u5f88\u957f\u3002    </p> <p>\u5047\u8bbe\u53d6\u6307\u4ee4 200ps, \u5bc4\u5b58\u5668\u8bfb 100ps, ALU \u8ba1\u7b97 200ps, \u5185\u5b58\u8bbf\u95ee 200ps, \u5bc4\u5b58\u5668\u5199 100ps.  </p> <p>\u90a3\u4e48 <code>add</code> \u9700\u8981 600ps, <code>ld</code> \u9700\u8981 800ps, <code>sd</code> \u9700\u8981 700ps, <code>beq</code> \u9700\u8981 500ps.   </p> <p>Longest delay determines clock period. (<code>ld</code>)  </p> <p>\u6700\u957f\u5ef6\u8fdf\u51b3\u5b9a\u4e86\u65f6\u949f\u5468\u671f\u3002\uff08 <code>ld</code> \uff09</p> <p>We will improve performance by pipelining.  </p> <p>\u6211\u4eec\u5c06\u901a\u8fc7\u6d41\u6c34\u7ebf\u6765\u63d0\u9ad8\u6027\u80fd\u3002</p> <p><code>\u5206\u9636\u6bb5\u8fdb\u884c\uff0c\u6bcf\u4e00\u4e2a\u9636\u6bb5200ps</code>\u4e0d\u540c\u64cd\u4f5c\u7684\u65f6\u95f4\u4e5f\u4e0d\u540c\uff0c\u6d41\u6c34\u7ebf CPU \u7684\u65f6\u949f\u5468\u671f\u4e3a\u6700\u957f\u7684\u64cd\u4f5c\u65f6\u95f4\u3002</p> <p>\u6ce8\u610f\u4e00\u4e0b\u6b64\u5904\u7684Reg\uff0c\u5206\u522b\u8868\u793a\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u6211\u4eec\u5c06\u8bfb\u53d6\u653e\u5728\u5355\u4e2a\u65f6\u949f\u5468\u671f\u7684\u540e\u534a\u90e8\u5206\uff0c\u5199\u5165\u653e\u5728\u5355\u4e2a\u65f6\u949f\u5468\u671f\u7684\u524d\u534a\u90e8\u5206\u3002\uff08\u5148\u8bfb\u540e\u5199\uff09</p> <p></p> <p><code>\u5404\u9636\u6bb5\u65f6\u95f4\u5747\u5300\uff0c\u5f97\u5230\u7684\u52a0\u901f\u6548\u679c\u6700\u597d</code></p> <p>\u6d41\u6c34\u7ebf\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf(throughput)\uff0c\u4f46\u662flatency\u4e0d\u4f1a\u51cf\u5c11 \uff08<code>\u53cd\u800c\u4f1a\u589e\u52a0</code>\uff09\u3002 </p> <p>\u4f46\u662f\u5355\u6761\u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u65f6\u95f4\u6bd4\u5728\u5355\u5468\u671fCPU\u4e2d\u7684\u6267\u884c\u65f6\u95f4\u957f\uff0c\u56e0\u4e3a\u6d41\u6c34\u7ebf\u6bcf\u4e00\u9636\u6bb5\u4e2d\u95f4\u90fd\u9700\u8981\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4f20\u8f93\u503c\uff0c\u9020\u6210\u65f6\u95f4\u7684\u6d6a\u8d39</p>"},{"location":"CO/4.%20The%20Processor/#4612-risc-v-isa-designed-for-pipelining","title":"4.6.1.2 RISC-V ISA designed for pipelining","text":"<p>RISC-V \u9002\u5408\u6d41\u6c34\u7ebf\u8bbe\u8ba1\u3002  </p> <ul> <li> <p>All instructions are 32-bits\uff08\u6307\u4ee4\u5b9a\u957f\uff0c\u6307\u4ee4\u7684fetch\u548cdecode\u65f6\u95f4\u76f8\u8fd1\uff09</p> <p>Easier to fetch and decode in one cycle</p> </li> <li> <p>Few and regular instruction formats  \uff08\u6307\u4ee4\u683c\u5f0f\u8f83\u5c11\uff09</p> <p>Can decode and read registers in one step</p> </li> <li> <p>Load/store addressing   </p> <p>Can calculate address in 3rd stage, access memory in 4th stage</p> </li> </ul>"},{"location":"CO/4.%20The%20Processor/#462-risc-v-pipelined-datapath","title":"4.6.2 RISC-V Pipelined Datapath","text":"<p>\u4e0d\u540c\u9636\u6bb5\u4e4b\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u4e4b\u524d\u9636\u6bb5\u5f97\u5230\u7684\u503c\u3002  </p> <p><code>\u7ade\u4e89\u53ea\u4f1a\u53d1\u751f\u5728\u4ece\u53f3\u5f80\u5de6\u7684\u9636\u6bb5(\u5bc4\u5b58\u5668\u7684\u5199\u56de\uff0c\u6307\u4ee4PC\u7684\u8df3\u8f6c)\u3002</code></p> <p>\u6ce8\u610f\u5230\uff0c\u7b2c\u4e94\u4e2a\u9636\u6bb5\u5199\u56de\u65f6\uff0c\u5199\u5bc4\u5b58\u5668\u53f7\u5e94\u8be5\u662f\u4ece MEM/WB \u4e2d\u7684\uff0c\u800c\u4e0d\u662f IF \u51fa\u7684\u5bc4\u5b58\u5668\u53f7\u3002</p> <ul> <li> <p>Single-clock-cycle pipeline diagram: Shows pipeline usage in a single cycle; Highlight resources used</p> <p>\u4e00\u4e2a\u5468\u671f\u4e00\u4e2a\u5468\u671f\u5730\u770b</p> </li> <li> <p>multi-clock-cycle diagram: Graph of operation over time</p> <p>\u591a\u4e2a\u5468\u671f\u5c06\u591a\u6761\u6307\u4ee4\u4ece\u4e0a\u5230\u4e0b\u653e\u7f6e\u6bd4\u8f83</p> </li> </ul> <p></p> <p>\u4e3a\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u53d6\u540d\u5b57\uff0c\u524d\u540e\u4e24\u4e2a\u9636\u6bb5\u7684\u540d\u5b57\uff08IF/ID, ID/EX\uff09</p> <p>\u5982IF/ID\uff0c\u9700\u8981\u4fdd\u5b58PC\uff0864\u4f4d\uff09\uff0cinstruction\uff0832\u4f4d\uff09</p> <p>ID/EX\uff0c\u9700\u8981\u4fdd\u5b58PC\uff0864\uff09\uff0cRs1_data,Rs2_data\uff0864\uff09\uff0cImm\uff0864\uff09</p> <p></p> <p>\u9636\u6bb5\u4e0d\u662f\u5212\u5206\u7684\u8d8a\u591a\u8d8a\u597d\uff0c\u5ef6\u8fdf\u4f1a\u589e\u52a0</p> <p></p> <p>Imbalance\u6709\u4e00\u4e2a\u9636\u6bb5\u7684\u65f6\u95f4\u7279\u522b\u957f\uff08\u6d6e\u70b9\u6570\u8ba1\u7b97\u7684\u6267\u884c\uff09</p> <p>overhead\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4f20\u8f93\u6570\u636e\u9700\u8981\u65f6\u95f4</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p><code>ID\u9636\u6bb5\u7684rd\u9700\u8981\u5411\u540e\u4f20\u9012</code>\uff0c\u4e00\u76f4\u5230\u5199\u56deWB\u9636\u6bb5\uff0c\u5c06rd\u4f20\u56de\u5230Register File\uff0c\u8fd9\u6837\u624d\u80fd\u6b63\u786e\u7684\u5199\u56de\u5bc4\u5b58\u5668</p> <p></p> <p></p> <p></p>"},{"location":"CO/4.%20The%20Processor/#463-pipeline-control","title":"4.6.3 Pipeline Control","text":"<p>\u4eceControl\u4e2d\u83b7\u5f97\u7684control\u4fe1\u53f7\u9996\u5148\u533a\u5206\u5206\u522b\u7528\u4e8e\u90a3\u4e2a\u9636\u6bb5\uff0c\u7136\u540e\u4f9d\u6b21\u5411\u540e\u4f20\u5bfc\u5230\u6307\u5b9a\u9636\u6bb5</p> <p>\u6700\u7ec8\u7248\u672c</p> <p></p>"},{"location":"CO/4.%20The%20Processor/#47-hazards","title":"4.7 Hazards","text":"<p>\u5192\u9669/\u7ade\u4e89  \uff1a <code>Situations that prevent starting the next instruction in the next cycle</code></p> <p><code>\u963b\u6b62\u5728\u4e0b\u4e00\u4e2a\u5468\u671f\u4e2d\u542f\u52a8\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u60c5\u51b5</code></p> <p>\u5f53\u524d\u8fd9\u6761\u6307\u4ee4\u4e0d\u80fd\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\uff0c\u8981\u7b49\u5f85\u3002  </p> <ul> <li> <p>Structure hazards   </p> <p>A required resource is busy.  </p> </li> <li> <p>Data hazard  </p> <p>Need to wait for previous instruction to complete its data read/write.  </p> </li> <li> <p>Control hazard  </p> <p>Deciding on control action depends on previous    instruction.  </p> </li> </ul>"},{"location":"CO/4.%20The%20Processor/#471-structure-hazards","title":"4.7.1 Structure Hazards","text":"<p>\u5982\u679c\u53ea\u6709\u4e00\u5757\u5185\u5b58\uff0c\u4f46 IF \u548c MEM \u9636\u6bb5\u90fd\u9700\u8981\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\uff0c\u90a3\u4e48 IF \u5c31\u4f1a\u88ab stall \u6682\u505c\uff0c\u9020\u6210\u4e00\u4e2a bubble. (\u5373\u6d41\u6c34\u7ebf\u5185\u6709\u4e00\u4e2a\u65f6\u523b\u662f\u6e05\u7a7a\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u6211\u4eec\u6ca1\u6709\u53bb\u53d6\u6307\u4ee4)</p> <p><code>IF\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u6307\u4ee4\uff0cload/store\u64cd\u4f5c\u9700\u8981\u5728MEM\u9636\u6bb5\u5c06\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u6216\u8005\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e</code></p> <p>Pipelined datapaths require separate instruction/data memories. (Or separate instruction/data caches)</p> <p>\u56e0\u6b64\uff0c\u4f60\u4f1a\u53d1\u73b0instruction memory\u548cdata memory\u662f\u5206\u5f00\u7684</p> <p></p> <p>\u9700\u8981\u540c\u65f6\u4f7f\u7528Reg\uff0c\u5206\u522b\u662f\u5c06\u6570\u636e\u5199\u5165\u5230\u76ee\u6807\u5bc4\u5b58\u5668\u548c\u8bfb\u53d6\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u5148\u5199\u540e\u8bfb\uff0c\u4e0a\u5347\u6cbf\u5199\uff0c\u4e0b\u964d\u6cbf\u8bfb\uff08double bump\uff09</p> <p>\u9700\u8981\u76f8\u9694\u4e09\u6761\u6307\u4ee4</p> <p></p> <p></p> <p>\u505c\u987f\u4ee5\u89e3\u51b3hazard\uff0c\u53ef\u4ee5\u63d2\u5165\u7a7a\u6307\u4ee4\u6216\u8005\u5c06\u540e\u9762\u7684\u6307\u4ee4\u5168\u90e8\u6682\u505c</p> <p></p>"},{"location":"CO/4.%20The%20Processor/#472-data-hazards","title":"4.7.2 Data Hazards","text":"<p>An instruction depends on completion of data access by a previous instruction.  \u6307\u4ee4\u53d6\u51b3\u4e8e\u5148\u524d\u6307\u4ee4\u5b8c\u6210\u6570\u636e\u8bbf\u95ee</p> <p>Example</p> <p> </p> <p>\u6ce8\u610f\u8fd9\u91cc WB \u662f\u5728\u524d\u534a\u4e2a\u5468\u671f\u5c06\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668, ID \u662f\u5728\u540e\u534a\u4e2a\u5468\u671f\u5c06\u6570\u636e\u4ece\u5bc4\u5b58\u5668\u4e2d\u53d6\u51fa\u3002<code>\u65f6\u949f\u5468\u671f\u4e0b\u964d\u6cbf\u5199\u5165\uff0c\u4e0a\u5347\u6cbf\u8bfb\u53d6</code> </p> <p>\u6b64\u5904\u7684bubble\u76f8\u5f53\u4e8eNOP\uff0c\u4ec0\u4e48\u90fd\u4e0d\u6267\u884c\uff0c\u62d6\u5ef6\u4e24\u4e2a\u65f6\u949f\u5468\u671f\u4f7f\u5f97WB\u548cID\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u4f46\u662f\u5199\u5165\u5728\u4e0b\u964d\u6cbf\uff0c\u8bfb\u53d6\u5728\u4e0a\u5347\u6cbf\uff0c\u8bfb\u53d6\u5efa\u7acb\u5728\u5199\u5165\u4e4b\u540e\uff0c\u4ece\u800c\u89e3\u51b3data hazards</p> <p>\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u7528\u7684\u7ed3\u679c\u5728 EX \u65f6\u5df2\u7ecf\u4ea7\u751f\u4e86\uff0c\u4e14\u4e3a\u4e86\u6027\u80fd\u8003\u8651\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u4e24\u4e2abubble\uff0c\u4e8e\u662f\u4f7f\u7528\u4e00\u4e0b\u7684forward\u3002</p> <ul> <li> <p>Forwarding(Bypassing) </p> <p>Use result when it is computed  </p> <ul> <li>Don\u2019t wait for it to be stored in a register</li> <li>Requires extra connections in the datapath</li> </ul> <p></p> <p><code>\u5982\u4e0a\u6240\u793a\uff0cadd\u6307\u4ee4\u4e2dx1\u7684\u7ed3\u679c\u5728EX\u9636\u6bb5\u5c31\u4ea7\u751f\uff0csub\u6307\u4ee4\u4e2dx1\u5728EX\u9636\u6bb5\u88ab\u4f7f\u7528\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6570\u636e\u901a\u8def\u4e2d\u8fdb\u884c\u989d\u5916\u7684\u8fde\u63a5\uff0c\u5c06add\u6307\u4ee4EX\u9636\u6bb5\u4ea7\u751f\u7684\u7ed3\u679c\u76f4\u63a5\u4f20\u8f93\u7ed9sub\u6307\u4ee4EX\u9636\u6bb5\u5373\u53ef\uff0c\u8fd9\u6837\u4e00\u4e2abubble\u90fd\u4e0d\u9700\u8981</code></p> <p><code>\u786c\u4ef6\u4e0a\uff0cALU\u7684\u6570\u636e\u6765\u6e90\u9700\u8981\u589e\u52a0\uff0c\u53ef\u80fd\u6765\u6e90\u4e8e\u524d\u4e00\u6761\u6307\u4ee4\u7684ALU_result\uff08\u5bf9\u5e94EX/MEM\u5bc4\u5b58\u5668\uff09\uff0c\u540c\u65f6\u7531\u4e8e\u4e0d\u52a0\u989d\u5916\u6570\u636e\u901a\u8def\u65f6\uff0c\u9700\u8981\u505c\u4e24\u4e2abubble\uff0c\u6240\u4ee5\u8fd8\u4f1a\u53d7\u524d\u4e00\u6761\u6307\u4ee4\u7684\u524d\u4e00\u6761\u6307\u4ee4\u7684ALU_result\u5f71\u54cd\uff08\u4e5f\u5c31\u662fMEM/WB\u5bc4\u5b58\u5668\uff09\u3002\u6240\u4ee5ALU\u7684\u6570\u636e\u6765\u6e90\u4e00\u5171\u5305\u542b\uff1aRegister\uff0c Imm\uff0c EX/MEM\uff0c MEM/WB\uff0c\u76f8\u5e94\u7684\u63a7\u5236\u4fe1\u53f7\u9700\u8981\u6269\u5145\uff0c\u79f0\u4e4b\u4e3aForward A/B</code></p> </li> </ul> <p></p> <p><code>Load\u6307\u4ee4\u65e0\u6cd5\u907f\u514dbubble\uff0c\u56e0\u4e3aload\u6307\u4ee4\u53ea\u6709\u5c06\u7ed3\u679c\u5199\u5165\u5230\u76ee\u6807\u5bc4\u5b58\u5668\u540e\uff08\u6216\u8005\u8bf4\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u6765\uff09\u624d\u80fd\u5728\u4e0b\u4e00\u6761\u6307\u4ee4\u4e2d\u5f97\u5230\u4f7f\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4sub\u6307\u4ee4\u7684x1\u9700\u8981\u5728ld\u6307\u4ee4\u5b8c\u6210MEM\u9636\u6bb5\u540e\u624d\u80fd\u4f7f\u7528\u3002\u6240\u4ee5\u9700\u8981\u63d2\u5165\u4e00\u4e2abubble\uff0c\u4f7f\u5f97\u4e0a\u4e00\u6761\u7684MEM\u548c\u4e0b\u4e00\u6761\u7684EX\u5904\u4e8e\u524d\u540e\u5173\u7cfb\uff0c\u518d\u5229\u7528\u989d\u5916\u7684\u6570\u636e\u901a\u8def\u8fdb\u884c\u4f20\u8f93</code></p> <p>\u6d41\u6c34\u7ebf\u7684 CPI \u4e0d\u53ef\u80fd\u7b49\u4e8e 1, \u56e0\u4e3a\u4e0a\u56fe\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u4f1a\u53d1\u751f(<code>ld</code> \u65e0\u6cd5\u907f\u514d)\u3002  </p> <p>\u53ef\u4ee5\u628a\u540e\u7eed\u4e0e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u65e0\u5173\u7684\u6307\u4ee4\u5148\u62ff\u5230\u8fd9\u91cc\u6267\u884c\u3002\uff08\u4e71\u5e8f\u6267\u884c\uff09</p> <p></p> <p>\u4fee\u6539\u524d\uff0c<code>ld x2, 8(x31)</code>\u9700\u8981\u4e00\u4e2abubble\u4e4b\u540e\u624d\u80fd\u6267\u884c<code>add x3, x1, x2</code></p> <p>\u4fee\u6539\u540e, <code>ld x2, 8(x0)</code> \u540e\u7eed\u6dfb\u52a0\u4e00\u6761\u4e0e\u5f53\u524d\u53d1\u751f\u6307\u4ee4\u65e0\u5173\u7684\u6307\u4ee4\uff0c\u4ee3\u66ff\u539f\u5148\u7684bubble\uff0c\u4e4b\u540e\u76f4\u63a5\u5c06x2\u4f20\u8f93\u7ed9add\u6307\u4ee4\u7684EX\u9636\u6bb5 <code>add x3, x1, x2</code> \u4e2d\u53bb\u3002</p>"},{"location":"CO/4.%20The%20Processor/#473-control-hazards","title":"4.7.3 Control Hazards","text":"<p>Branch determines flow of control</p> <ul> <li> <p>Fetching next instruction depends on branch outcome</p> <p>\u83b7\u53d6\u4e0b\u4e00\u6761\u6307\u4ee4\u53d6\u51b3\u4e8ebranch\u7ed3\u679c</p> </li> <li> <p>Pipeline can\u2019t always fetch correct instruction</p> <p>\u6d41\u6c34\u7ebf\u4e0d\u80fd\u603b\u662f\u83b7\u53d6\u6b63\u786e\u7684\u6307\u4ee4</p> </li> </ul> <p><code>\u89e3\u51b3\u65b9\u6cd5\uff1a1.\u5c06\u6bd4\u8f83\u63d0\u524d\u5230ID\u9636\u6bb5\u30022.\u9884\u6d4b\u662fPC+4\u8fd8\u662fPC+imm</code></p> <p>1.\u5c06\u6bd4\u8f83\u63d0\u524d\u5230ID\u9636\u6bb5\uff0c\u5e76\u4e14\u4f7f\u7528bubble</p> <p> </p> <p><code>\u6b64\u5904\u5224\u65ad\u8df3\u8f6c\u4e0e\u5426\uff08\u4e5f\u5c31\u662f\u4e0b\u4e00\u6761\u6307\u4ee4\u7684PC\uff09\uff0c\u9700\u8981\u5728branch\u6307\u4ee4\u5b8c\u6210\u6bd4\u8f83\u5224\u65ad\u4e4b\u540e\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53d1\u751f\u5728ID\u9636\u6bb5\u3002\u6240\u4ee5\u4e0b\u4e00\u53f0\u6307\u4ee4\u7684instruction fetch\u9700\u8981\u53d1\u751f\u5728Reg\u4e4b\u540e\uff0c\u4e2d\u95f4\u5c31\u9700\u8981\u4f7f\u7528\u4e00\u4e2abubble</code></p> <p>2.Branch Prediction \u9884\u6d4b\u662fPC+4\u8fd8\u662fPC+imm </p> <p>\u66f4\u957f\u7684\u6d41\u6c34\u7ebf\u4e0d\u80fd\u5f88\u65e9\u5730\u51b3\u5b9a\u5206\u652f\u7ed3\u679c\u3002  </p> <p>\u53ef\u4ee5\u9884\u6d4b branch \u547d\u4e2d\u6216\u8005\u4e0d\u547d\u4e2d\u3002  </p> <ul> <li> <p>Static branch prediction  </p> <p>\u5047\u8bbe\u603b\u662f\u547d\u4e2d/\u4e0d\u547d\u4e2d</p> </li> <li> <p>Dynamic branch prediction  </p> <p>\u8bb0\u5f55\u4e0a\u6b21\u8dd1\u5230\u8fd9\u91cc\u662f\u5426\u547d\u4e2d\uff0c\u7136\u540e\u4e0b\u6b21\u6309\u7167\u4e4b\u524d\u7684\u7ed3\u679c\u9884\u6d4b\u3002  </p> </li> </ul> <p>Summary</p> <ul> <li> <p>Pipelining improves performance by increasing instruction throughput </p> <p><code>\u6d41\u6c34\u7ebf\u901a\u8fc7\u63d0\u9ad8\u6307\u4ee4\u541e\u5410\u91cf\u6765\u63d0\u9ad8\u6027\u80fd</code></p> </li> <li> <p>Executes multiple instructions in parallel</p> <p>\u5e76\u884c\u6267\u884c\u591a\u6761\u6307\u4ee4</p> </li> <li> <p>Each instruction has the same latency</p> <p>\u6bcf\u6761\u6307\u4ee4\u5177\u6709\u76f8\u540c\u7684\u5ef6\u8fdf</p> </li> <li> <p>Subject to hazards(Structure, data, control)</p> <p><code>\u6613\u53d7\u7ade\u4e89harzards</code></p> </li> <li> <p>Instruction set design affects complexity of pipeline implementation</p> </li> </ul> <p>\u6307\u4ee4\u96c6\u8bbe\u8ba1\u5f71\u54cd\u6d41\u6c34\u7ebf\u5b9e\u73b0\u7684\u590d\u6742\u6027</p>"},{"location":"CO/4.%20The%20Processor/#48-data-hazards","title":"4.8 Data Hazards","text":""},{"location":"CO/4.%20The%20Processor/#481-forwarding","title":"4.8.1 Forwarding","text":"<p><code>\u6839\u636e\u4e0a\u9762\u7684\u591a\u5468\u671f\u6307\u4ee4\u6d41\u7a0b\u56fe\uff0c\u4f60\u4f1a\u53d1\u73b0x2\u5728\u91cd\u590d\u4f7f\u7528\uff0c\u8303\u5f0f\u6d89\u53ca\u5230\u4ece\u53f3\u5f80\u5de6\u7684\u90fd\u4f1a\u53d1\u751fdata hazards\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u989d\u5916\u7684\u6570\u636e\u901a\u8def\uff08\u4e0a\u4e00\u6761\u6307\u4ee4EX\u7ed3\u675f\u4e4b\u540e\u76f4\u63a5\u5c06\u7ed3\u679c\u4f20\u9001\u5230\u4e0b\u4e00\u6761\u6307\u4ee4EX\u5f00\u59cb\u4e4b\u524d\uff0cld\u6307\u4ee4\u9700\u8981\u4e00\u4e2abubble\uff0c\u666e\u901aR\u578b\u6307\u4ee4\u4e0d\u9700\u8981bubble\uff09\uff0c\u9700\u8981\u4f7f\u7528\u4e24\u4e2abubble\uff0c\u6070\u597d\u80fd\u591f\u5728\u4e0b\u964d\u6cbf\u5199\u5165\u6570\u636e\uff0c\u4e0a\u5347\u6cbf\u8bfb\u53d6\u6570\u636e</code></p> <p>\u5982\u4f55\u5224\u65ad\u662f\u5426\u9700\u8981\u524d\u9012\uff1f </p> <p>\u5224\u65ad\u5f53\u524d\u6307\u4ee4\u6240\u9700\u8bfb\u53d6\u7684rs\u5bc4\u5b58\u5668\u662f\u4e0d\u662f\u4e0a\u4e00\u6761\u6307\u4ee4\u548c\u4e0a\u4e00\u6761\u7684\u4e0a\u4e00\u6761\u6307\u4ee4\u9700\u8981\u5199\u5165\u7684rd\u5bc4\u5b58\u5668</p> <p></p> <p>Data hazards when</p> <ol> <li> <ul> <li> <p><code>EX/MEM.RegisterRd = ID/EX.RegisterRs1</code> </p> <p>\u5728\u7b2c\u56db\u4e2a\u65f6\u949f\u5468\u671f\u65f6\u628a EX/MEM \u7684\u5bc4\u5b58\u5668\u503c\u9001\u5230 ALU. </p> </li> <li> <p><code>EX/MEM.RegisterRd = ID/EX.RegisterRs2</code></p> </li> <li> <p><code>MEM/WB.RegisterRd = ID/EX.RegisterRs1</code></p> </li> <li> <p><code>MEM/WB.RegisterRd = ID/EX.RegisterRs2</code></p> </li> </ul> </li> <li> <p>\u53ea\u6709\u5728\u6211\u4eec\u8981\u4f7f\u7528\u5728\u524d\u9762\u6307\u4ee4\u503c\u53d1\u751f\u6539\u53d8\u7684\u5bc4\u5b58\u5668\u7684\u503c\u7684\u65f6\u5019\uff0cdata hazard\u624d\u4f1a\u53d1\u751f\uff08\u6709\u4e9b\u6307\u4ee4\u53ef\u80fd\u6839\u672c\u5c31\u4e0d\u4f1a\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u6ca1\u6709\u6709\u6548\u7684 Rd\uff09   </p> </li> <li> <p>\u6b64\u5916 <code>EX/MEM.RegisterRd, MEM/WB.RegisterRd</code> \u4e5f\u4e0d\u80fd\u4e3a 0. </p> </li> </ol> <p></p> <p><code>Forwarding unit\u7528\u4e8edetect data hazards\uff0c\u6240\u4ee5\u9700\u8981\u8bfb\u5165ID/EX\u7684Rs1\uff0cRs2\uff0cEX/MEM\u548cMEM/WB\u7684Rd\uff0c\u540c\u65f6\u8fd8\u9700\u8981EX/MEM\u7684RegWrite\uff0cMEM/WB\u7684RegWrite\u3002</code></p> <p>\u5982\u679cRs1/Rs2\u90fd\u4e0d\u7b49\u4e8e\u4e0a\u8ff0\u4e24\u4e2aRd\uff0c\u610f\u5473\u7740\u4e0d\u53d1\u751fdata hazard\uff0c\u6240\u4ee5forwardA = 00\uff0c\u8868\u793a\u9009\u53d6register file\u6216\u8005imm</p> Mux control Source Explanation <code>ForwardA = 00</code> ID/EX The first ALU operand comes from the register file. <code>ForwardA = 10</code> EX/MEM The first ALU operand is forwarded from the prior ALU result. <code>ForwardA = 01</code> MEM/WB The first ALU operand is forwarded from data memory or an earlier ALU result. <p>Example \"Double Data Hazard\"</p> <p><code>\u65e2\u6709\u53ef\u80fdEX/MEM.RegisterRd = ID/EX.RegisterRs1\uff0c\u53c8\u6709\u53ef\u80fdMEM/WB.RegisterRd = ID/EX.RegisterRs1</code></p> <p> <code>\u7b2c\u4e09\u6761\u6307\u4ee4\u7684rs\u548c\u524d\u4e24\u6761\u6307\u4ee4\u7684rd\u90fd\u76f8\u7b49\u3002\u90a3\u4f18\u5148\u9009\u62e9\u6700\u65b0\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e00\u6761\u6307\u4ee4\u7684ALU_result\uff0c\u6240\u4ee5\u9700\u8981\u4f18\u5148\u5224\u65adEX/MEM RegisterRd\u662f\u4e0d\u662f\u7b49\u4e8eID/EX RegisterRs</code></p> <p>\u6211\u4eec\u524d\u9012\u65f6\u8981\u52a0\u4e00\u4e2a\u6761\u4ef6\uff0c\u53ea\u6709\u5728 EX/MEM \u7684\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6\uff0c\u624d\u80fd\u67e5\u770b MEM/WB \u7684\u6761\u4ef6\u3002</p> <p></p> <pre><code>MEM hazard\nif( MEM/WB.RegWrite == 1\n    and MEM/WB.RegisterRd != 0\n    and MEM/WB.RegisterRd == ID/EX.Register1/2\n    and (EX/MEM.RegWrite == 0 or EX/MEM.RegisterRd == 0 or EX/MEM.RegisterRd != ID/EX.RegisterRs1/2))\n</code></pre> <p></p> <p><code>\u4e0eALU\u76f8\u5173\u7684data hazard\uff0c\u6dfb\u52a0\u4e00\u4e2aforwarding unit\uff0c\u66f4\u65b0ALU\u7684mux</code></p> <p><code>store\u76f8\u5173\u7684data harzard\uff0cadd x5\uff0cx2\uff0cx3  store x5, 0(x6).store\u6307\u4ee4\u6267\u884cMEM\u9636\u6bb5\u65f6\uff0cEX/MEM\u53ea\u80fd\u8ba1\u7b97\u51fastore\u7684\u5730\u5740\uff0c\u4f46\u662fstore\u7684\u503cx5\u8fd8\u6ca1\u6709\u5199\u5165\u5230x5\uff0c\u6240\u4ee5\u9700\u8981\u6dfb\u52a0forward\uff08\u989d\u5916\u6570\u636e\u901a\u8def\uff09\uff0c\u5c06MEM/WB\u7684ALU_result\u4f20\u9012\u7ed9MEM\u7684write_data.</code></p> <p><code>\u76f8\u5e94\u7684Store\u76f8\u5173\u7684data hazard\uff0c\u4e5f\u9700\u8981\u4e00\u4e2aforwarding unit\uff0c\u5e76\u4e14\u5728data memory\u7684write_data\u524d\u9762\u52a0\u4e0amux\u3002data hazard\u7684\u6761\u4ef6\u662f memWrite = 1\uff0c \u4e14EX/MEM\u7684Register Rs2\u4e0e\u4e0a\u4e00\u6761\u6307\u4ee4MEM/WB\u7684rd\u76f8\u7b49</code></p>"},{"location":"CO/4.%20The%20Processor/#482-load-use-hazard-detection","title":"4.8.2 Load-Use Hazard Detection","text":"<p><code>\u4e3a\u4ec0\u4e48\u662fID/EX.RegisterRd = IF/ID.RegisterRs1\u5462\uff1f\u56e0\u4e3aload\u6307\u4ee4\u5b58\u5728WB\u73af\u8282\uff0cRegisterRd\u9700\u8981\u5728load\u6307\u4ee4\u4e2d\u5c42\u5c42\u4f20\u9012\u4e00\u76f4\u5230WB\u73af\u8282\u5c06RegisterRd\u4f20\u56de\u5230\u540e\u9762\u6307\u4ee4\u7684IF/ID\u9636\u6bb5\uff08\u5728\u8be5\u9636\u6bb5\u5b8c\u6210\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u5199\u5165\uff09\u3002\u4e00\u65e6\u53d1\u751fID/EX.RegisterRd = IF/ID.RegisterRs,\u8bf4\u660e\u5f53\u524d\u6307\u4ee4\u7684\u6e90\u5bc4\u5b58\u5668\u4e0e\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u5b58\u5728\u6570\u636e\u51b2\u7a81</code></p> <p>\u5982\u679c\u6211\u4eec\u5728 ld \u6307\u4ee4 EX/MEM \u65f6\u6682\u505c\uff0c\u6b64\u65f6 ld \u540e\u9762\u6709\u4e24\u6761\u6307\u4ee4\u9700\u8981\u6682\u505c\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u66f4\u65e9\u7684\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\uff08\u4e5f\u5c31\u662fID/EX\u9636\u6bb5\uff09\u3002</p> <pre><code>Load-use hazard when\n\n    (ID/EX.MemRead == 1)\n    and ((ID/EX.RegisterRd = IF/ID.RegisterRs1) \n    or (ID/EX.RegisterRd = IF/ID.RegisterRs2))`\n</code></pre> <p>If detected, stall and insert bubble</p> <p></p> <p>\u7b2c\u4e00\u6761\u6307\u4ee4\u548c\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e4b\u95f4\u5fc5\u987b\u6dfb\u52a0\u4e00\u4e2aBubble</p> <p>\u7b2c\u4e00\u6761\u6307\u4ee4\u548c\u7b2c\u4e09\u6761\u6307\u4ee4\u4e4b\u95f4\u901a\u8fc7forward\u5b9e\u73b0\uff08\u6d41\u6c34\u7ebf\uff0c\u524d\u63d0\u662f\u6ca1\u6709bubble\uff09</p> <p>\u7b2c\u4e00\u6761\u6307\u4ee4\u548c\u7b2c\u56db\u6761\u6307\u4ee4\u4e4b\u95f4\u521a\u597d\uff08\u9694\u4e24\u6761\u6307\u4ee4\uff09\uff0cReg\u5148\u5199\u540e\u8bfb</p> <p></p> <p>\u52a0\u52a0\u6761\u4ef6\u68c0\u67e5load\u7684hazard</p> <p><code>\u63d2\u5165bubble\u610f\u5473\u7740bubble\u6307\u4ee4\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e8e\u662f\u8ba9\u6240\u6709\u5728ID/EX Register\u4e2d\u7684\u63a7\u5236\u4fe1\u53f7\u4e3a0\uff0cIF/ID \u5bc4\u5b58\u5668\u4e0d\u53d8\uff0c\u8fd9\u6837\u540e\u7eedEX\uff0cMEM\uff0cWB\u9636\u6bb5\u90fd\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c</code></p> <p><code>\u540c\u65f6\u8fd8\u9700\u8981\u9632\u6b62\u66f4\u65b0PC\u548cIF/ID\u5bc4\u5b58\u5668\uff0c\u91cd\u65b0\u83b7\u53d6load\u6307\u4ee4\u540e\u9762\u7684\u90a3\u4e00\u6761\u6307\u4ee4\uff0c\u91cd\u65b0decode</code></p> <p></p> <p></p> <p><code>\u6dfb\u52a0\u4e00\u4e2aHazard detection unit\uff0c\u8f93\u5165ID/EX.MemRead\uff08\u533a\u5206R\u578b\u6307\u4ee4\uff0c\u589e\u52a0\u4e86\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\u7684MEM\u9636\u6bb5\uff09, ID/EX.RegisterRd, IF/ID.RegisterRs1/2</code></p> <p><code>\u8f93\u51fa\u7ed3\u679c\u5305\u62ecPCWrite\u63a7\u5236PC\u662f\u5426\u6539\u53d8\uff0cIF/ID Write\u63a7\u5236\u4e0b\u4e00\u6761\u6307\u4ee4\u662f\u5426decode\uff0c\u53e6\u5916\u4e00\u4e2a\u63a7\u5236\u4fe1\u53f7\u8f93\u9001\u5230ID/EX\u5bc4\u5b58\u5668\u524d\u7684Mux\uff0c\u4e00\u65e6\u53d1\u751fdata hazard\uff0c\u5c31\u628aID/EX\u5bc4\u5b58\u5668\u4e2d\u7684\u63a7\u5236\u4fe1\u53f7\u5168\u90e8\u7f6e\u4e3a0</code></p> <p></p>"},{"location":"CO/4.%20The%20Processor/#483-stalls-and-performance","title":"4.8.3 Stalls and Performance","text":"<ul> <li>Stalls reduce performance<ul> <li>But are required to get correct results</li> </ul> </li> <li>Compiler can arrange code to avoid hazards and stalls</li> </ul> <ol> <li>double bump \u5bc4\u5b58\u5668\u5148\u5199\u540e\u8bfb</li> <li>forward \u524d\u9012</li> <li>compiler scheduling \u7f16\u8bd1\u5668\u8c03\u5ea6\uff0c\u8c03\u6574\u6307\u4ee4\u7684\u987a\u5e8f\uff0c\u51cf\u5c11\u51fa\u73b0stall</li> <li>Stall</li> </ol>"},{"location":"CO/4.%20The%20Processor/#49-branch-hazards","title":"4.9 Branch Hazards","text":"<p><code>\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\u53d1\u751f\u5728MEM\u73af\u8282\uff0c\u6b64\u73af\u8282Branch\u63a7\u5236\u4fe1\u53f7\u548cALU_zero\u4fe1\u53f7\u5171\u540c\u51b3\u5b9aPC\u662f\u5426\u7b49\u4e8ePC+imm\u3002</code></p> <p></p> <p><code>\u89c2\u5bdf\u4e0a\u56fe\u53d1\u73b0\uff0cbranch\u6307\u4ee4\u5728MEM\u9636\u6bb5\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\uff0c\u51b3\u5b9aPC\u662f\u5426\u7b49\u4e8ePC+imm\u3002\u771f\u6b63\u53d1\u751f\u8df3\u8f6c\u5df2\u7ecf\u8fbe\u5230WB\u9636\u6bb5\uff08\u6267\u884c\u6700\u65b0\u7684PC\u6307\u4ee4\uff09\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u4e2d\u95f4\u5c31\u76f8\u9694\u4e09\u6761\u6307\u4ee4\uff0c\u610f\u5473\u7740\u8fd9\u4e09\u6761\u6307\u4ee4\u5e94\u5f53\u4e0d\u80fd\u6267\u884c\uff0c\u9700\u8981\u5c06\u5b83flush\u6389\uff0c</code></p> <p><code>\u8bbe\u7f6e\u6240\u6709\u7684\u63a7\u5236\u4fe1\u53f7\u4e3a0.\u4e2d\u95f4\u7684\u4e09\u6761\u6307\u4ee4\u662f\u5426\u4ea7\u751f\u5f71\u54cd\uff0c\u5173\u952e\u5728\u4e8e\u662f\u5426\u6539\u53d8\u4e86\u5bc4\u5b58\u5668\uff0c\u662f\u5426\u5728\u5185\u5b58\u4e2d\u53d1\u751f\u4e86\u5199\u5165</code></p> <ul> <li> <p>\u6700\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u65e0\u89c6\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u524d\u4e09\u4e2a\u9636\u6bb5\u5e76\u4e0d\u6d89\u53ca\u5bf9\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u4fee\u6539\uff0c\u5373\u4f7f\u6211\u4eec\u9884\u6d4b\u540e\u7eed\u4e0d\u6267\u884c\u8fd9\u4e9b\u6307\u4ee4\u4e5f\u4e0d\u4f1a\u5e26\u6765\u5f71\u54cd\u3002\u4f46\u8fd9\u6837\u53ef\u80fd\u5e26\u6765 CPI \u7684\u663e\u8457\u589e\u52a0\u3002</p> <p><code>\u6b64\u5904\u662f\u60f3\u8bf4\u660e\uff1a\u5f53Branch\u6267\u884c\u5230MEM\u9636\u6bb5\u65f6\uff0c\u540e\u9762\u4e09\u6761\u6307\u4ee4\u6267\u884c\u5230\u7684\u9636\u6bb5\u5206\u522b\u4e3aEX\uff0cID\uff0cIF\uff0c\u5e76\u4e0d\u4f1a\u53d1\u751f\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff08MEM\uff09\u548c\u4fee\u6539\u5bc4\u5b58\u5668\u7684\u503c\uff08WB\uff09\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5e26\u6765\u4ec0\u4e48\u8d1f\u9762\u5f71\u54cd\uff0c</code></p> </li> <li> <p>\u4e00\u79cd\u65b9\u6cd5\u662f\u5728 ID \u7ea7\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\uff08\u6b64\u65f6\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\u548c\u7acb\u5373\u6570\uff09</p> <p>  \u8fd9\u6837\u6211\u4eec\u53ea\u53ef\u80fd\u591a\u4f59\u4e00\u6761\u6307\u4ee4\uff0c\u63d2\u5165 bubble \u5373\u53ef\u3002\u4f46\u662f\u8fd9\u6837\u4e5f\u4e0d\u53ef\u63a5\u53d7\u3002</p> </li> </ul> <p></p>"},{"location":"CO/4.%20The%20Processor/#491-stall","title":"4.9.1 stall","text":"<ul> <li> <p>Flushing the pipeline</p> <p><code>\u8ba9\u540e\u9762\u4e09\u6761\u6307\u4ee4\u7684\u63a7\u5236\u4fe1\u53f7\u4e3a0\u5373\u53ef\uff0cstall</code></p> </li> <li> <p>problem\uff1aWith a 30% branch frequency and an ideal CPI of 1, how much the performance is by inserting stalls ?</p> <p>Answer: \\(CPI = 1+ 0.3 \\times 3\uff1d1.9\\)</p> </li> </ul> <p>\u3001</p>"},{"location":"CO/4.%20The%20Processor/#492-predict-untakentaken","title":"4.9.2 Predict-untaken/taken","text":"<p>\u5047\u5b9a\u59cb\u7ec8\u4e0d\u8df3\u8f6c\uff0c\u53d1\u73b0\u9519\u8bef\u540e\uff0c\u5c06\u989d\u5916\u6267\u884c\u7684\u4e09\u6761\u6307\u4ee4\u51b2\u6389</p> <p></p> <p>\u6700\u65b0\u7684CPI\u5c31\u662f\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u8df3\u8f6c\u7684branch\u6307\u4ee4\u5e26\u6765\u7684\u989d\u5916CPI $$ CPI = 1 + br\\% \\times take \\% \\times 3 $$</p> <p></p> <p><code>branch_signal\u8ba1\u7b97\u63d0\u524d\u5230ID\u9636\u6bb5\uff0c\u6dfb\u52a0ALU\u8ba1\u7b97\u51fa\u8df3\u8f6c\u5730\u5740\uff0c\u6bd4\u8f83Rs1\u548cRs2\u7684\u503c</code></p> <p></p> <p><code>\u63d0\u524d\u8ba1\u7b97branch_signal\uff0c\u539f\u5148\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\u53d1\u751f\u5728MEM\u9636\u6bb5\uff0c\u73b0\u5728\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\u53d1\u751f\u5728ID\u9636\u6bb5\uff0c\u51cf\u5c11\u4e86\u4e2d\u95f4\u7684EX\u548cMEM\u9636\u6bb5\uff0c\u8fd9\u610f\u5473\u7740\u4e24\u4e2a\u6307\u4ee4\u80fd\u591f\u5f97\u5230\u91ca\u653e\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2abubble\uff0c\u51cf\u5c11branch\u7684delay</code></p> <p></p> <p></p> <p></p> <p></p> <pre><code>ld  x1, addr\nadd x4, x5, x6\nbeq stalled\nbeq x1, x4, target\n</code></pre> <p>\u9700\u8981\u5728beq\u6307\u4ee4\u4e4b\u524d\u6dfb\u52a0\u4e00\u4e2astall\u3002\u56e0\u4e3abeq\u6307\u4ee4\u9700\u8981\u7684\u6e90\u5bc4\u5b58\u5668\u662fld\u6307\u4ee4\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u3002\u6240\u4ee5\u9700\u8981\u7b49\u5230ld\u5b8c\u6210WB\u4e4b\u540e\u624d\u80fd\u8fdb\u884cbeq\u7684instruction decoder\u3002</p> <p>\u56e0\u6b64ld\u6307\u4ee4\u7684WB\u9636\u6bb5\u548cbeq\u6307\u4ee4\u7684ID\u9636\u6bb5\u5bf9\u5e94\uff0c\u6267\u884c\u5148\u5199\u540e\u8bfb\u7684\u64cd\u4f5c\u3002\u4e24\u8005\u9700\u8981\u76f8\u5deeMEM\uff0cEX\u9636\u6bb5\uff0c\u5bf9\u5e94\u7684\u5c31\u9700\u8981\u4e24\u6761\u6307\u4ee4\u4f5c\u4e3a\u95f4\u9694\uff0c\u9664\u53bbadd\u6307\u4ee4\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2abubble</p> <pre><code>ld  x1, addr\nbeq stalled\nbeq stalled\nbeq x1, x4, target\n</code></pre> <p><code>load\u548cbranch\u6328\u7740\uff0c\u9700\u8981\u505c\u4e24\u4e2abubble</code></p>"},{"location":"CO/4.%20The%20Processor/#493-static-branch-prediction","title":"4.9.3 Static branch prediction","text":"<p>\u4e00\u822c\u7528\u4e8efor\u5faa\u73af\uff0c\u76f4\u63a5\u5047\u8bbe\u6240\u6709\u7684branch\u6307\u4ee4\u90fd\u4e0d\u8df3\u8f6c\u6216\u8005\u90fd\u8df3\u8f6c\u3002</p>"},{"location":"CO/4.%20The%20Processor/#494-dynamic-branch-prediction","title":"4.9.4 Dynamic Branch Prediction","text":"<p>In deeper and superscalar(\u591a\u53d1\u5c04) pipelines, branch penalty is more significant.  </p> <p>Use dynamic prediction.  </p> <ul> <li>Branch prediction buffer (aka branch history table)   </li> </ul> <p>\u8bb0\u5f55\u524d\u51e0\u6b21\u662f\u5426\u547d\u4e2d</p> <ul> <li> <p>Indexed by recent branch instruction addresses</p> </li> <li> <p>Stores outcome (taken/not taken)</p> </li> <li> <p>To execute a branch</p> <ul> <li>Check table, expect the same outcome</li> <li>Start fetching from fall-through or target</li> <li>If wrong, flush pipeline and flip prediction</li> </ul> </li> </ul> <p>\u52a8\u6001\u9884\u6d4b\uff0c\u770b\u524d\u4e00\u6b21branch\u662f\u5426taken\uff0c\u5982\u679c\u53d1\u751f\u5c31\u9884\u6d4b\u672c\u6b21\u4e5f\u53d1\u751f\uff0c\u4e0d\u53d1\u751f\u5c31\u9884\u6d4b\u672c\u6b21\u4e5f\u4e0d\u53d1\u751f\u3002\u53ef\u4ee5\u5904\u7406 for \u5faa\u73af\u7684\u9884\u6d4b\u3002</p> <p>\u5efa\u7acb\u4e00\u4e2abranchprediction buffer\uff0c\u8df3\u8f6c\u9884\u6d4b\u7f13\u51b2\u533a\uff0c\u7528\u6700\u8fd1\u7684branch\u6307\u4ee4\u5730\u5740\u4e3a\u7d22\u5f15\uff0c\u5b58\u50a8taken\u6216\u8005not taken\u3002\u5f53\u6267\u884cbranch\u6307\u4ee4\u65f6\uff0c\u68c0\u67e5table\uff0c\u53d6\u6700\u8fd1\u7684branch\u7ed3\u679c\u4f5c\u4e3a\u9884\u6d4b\u3002 </p> <p>Note \"1-Bit Predictor\"</p> <p>\u4f46\u4e5f\u5b58\u5728\u95ee\u9898\uff0c\u5bf9\u4e8e\u53cc\u5c42\u5faa\u73af\uff0c\u5f53\u5185\u5c42\u5faa\u73af\u8981\u7ed3\u675f\u65f6\u4f1a\u9519\u4e24\u6b21\u3002</p> <p><code>\u5bf9\u5e94\u60c5\u5f62\u4e3a\uff1a\u5728\u5185\u5faa\u73af\u7684\u6700\u540e\u4e00\u6b21\u64cd\u4f5c\uff0c\u6309\u7167\u524d\u4e00\u6b21\u7684\u9884\u6d4b\uff0c\u9700\u8981\u7ee7\u7eed\u8df3\u8f6c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5e94\u5f53\u8fd4\u56de\u5230\u5916\u5faa\u73af\uff08\u4e5f\u5c31\u662f\u987a\u5e8f\u6267\u884ci=i+1\uff09\uff0c\u9884\u6d4b\u9519\u8bef\u3002\u4e4b\u540e\u9700\u8981\u4ece\u5916\u5faa\u73af\u8df3\u8f6c\u5230\u5185\u5faa\u73af\uff0c\u6309\u7167\u524d\u4e00\u6b21\u7684\u9884\u6d4b\uff0c\u4e0d\u6267\u884c\u8df3\u8f6c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5e94\u8be5\u8df3\u8f6c\uff0c\u6240\u4ee5\u9884\u6d4b\u9519\u8bef\u3002\u53d1\u751f\u4e24\u6b21\u9884\u6d4b\u9519\u8bef</code></p> <ul> <li> <p>Mispredict as taken on last iteration of inner loop</p> <p>\u9519\u8bef\u9884\u6d4b\uff0c\u5982\u5185\u5faa\u73af\u7684\u6700\u540e\u4e00\u6b21\u8fed\u4ee3</p> </li> <li> <p>Then mispredict as not taken on first iteration of inner loop next time around</p> </li> </ul> <p>\u53ef\u4ee5\u4fee\u6539\u9884\u6d4b\u65b9\u5f0f\uff1a\u53ea\u6709\u8fde\u7eed\u9519\u8bef\u4e24\u6b21\u624d\u4f1a\u4fee\u6539\u6211\u4eec\u7684\u9884\u6d4b\u3002\u5373 2-Bit Predictor. </p> <p>Calculating the Branch Target</p> <p>\u5373\u4f7f branch \u547d\u4e2d\u4e86\uff0c\u6211\u4eec\u4e5f\u6709\u4e00\u4e2a\u65f6\u949f\u7684 bubble \u6765\u8ba1\u7b97\u5730\u5740\u3002  </p> <p>\u4f46 branch \u8981\u8df3\u8f6c\u7684\u5730\u5740\u5176\u5b9e\u662f\u53ef\u4ee5\u5b58\u4e0b\u6765\u7684\u3002  </p> <p>Branch target buffer</p> <ul> <li> <p>Cache of target addresses</p> <p><code>\u5b58\u50a8\u6700\u8fd1\u6700\u65b0\u7528\u5230\u7684\uff0c\u8001\u7684\u4f1a\u88ab\u5220\u9664</code></p> </li> <li> <p>Indexed by PC when instruction fetched  \u83b7\u53d6\u6307\u4ee4\u65f6\u7531 PC \u7d22\u5f15</p> <p>If hit and instruction is branch predicted taken, can fetch target immediately</p> <p>\u5982\u679c\u547d\u4e2d\u5e76\u9884\u6d4b\u5206\u652f\u91c7\u53d6\u6307\u4ee4\uff0c\u5219\u53ef\u4ee5\u7acb\u5373\u83b7\u53d6\u76ee\u6807</p> </li> </ul>"},{"location":"CO/4.%20The%20Processor/#410-exception-in-pipeline","title":"4.10 Exception in pipeline","text":""},{"location":"CO/4.%20The%20Processor/#4101-single-exception","title":"4.10.1 Single Exception","text":"<p>\u6d41\u6c34\u7ebf\u7684\u5f02\u5e38\u7c7b\u4f3c\u4e8eControl Hazards\uff0c\u6d41\u6c34\u7ebf\u7684\u5f02\u5e38\u9700\u8981flush\u6389\u5f02\u5e38\u53d1\u751f\u65f6\u6240\u6709\u4f1a\u6539\u53d8\u5185\u5b58\u6216\u8005\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u3002</p> <p>\u5982\u679coverflow\u53d1\u751f\u5728add\u6307\u4ee4\u7684EX\u9636\u6bb5\uff08add x1\uff0cx2\uff0cx1\uff09\uff0c\u8be5\u600e\u4e48\u529e\uff1f</p> <ul> <li>Prevent x1 from being clobbered \u9632\u6b62 x1 value\u53d1\u751f\u6539\u53d8</li> <li>Complete previous instructions \u5b8c\u6210add\u6307\u4ee4\u4e4b\u524d\u7684\u6307\u4ee4</li> <li>Flush add and subsequent instructions \u5c06add\u6307\u4ee4\u548cadd\u6307\u4ee4\u4e4b\u540e\u7684\u6307\u4ee4\u5168\u90e8flush\u6389</li> <li>Set Cause and SEPC register values \u8bbe\u7f6eScause\u548cSCEP\uff0c\u8fdb\u5165\u5f02\u5e38\u89e3\u51b3</li> <li>Transfer control to handler \u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5904\u7406\u7a0b\u5e8f</li> </ul> <ol> <li> <p>Pipeline can flush the instruction</p> </li> <li> <p>Handler executes, then returns to the instruction</p> </li> <li>Refetched and executed from scratch  \u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u83b7\u53d6\u548c\u6267\u884c</li> </ol> <p></p> <p><code>\u53d1\u73b0PC\u662f\u4eceID/EX\u5bc4\u5b58\u5668\u4f20\u8f93\u7ed9SEPC\u7684\uff0c\u8bf4\u660ePC\u968f\u7740\u6d41\u6c34\u7ebf\u4f9d\u6b21\u4f20\u9012\u3002\u56e0\u4e3a\u6b64\u65f6add\u5904\u4e8eEX\u9636\u6bb5\uff0c\u8bf4\u660eadd\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u4f4d\u4e8eID\u9636\u6bb5\uff0c\u518d\u4e0b\u4e00\u6761\u6307\u4ee4\u4f4d\u4e8eIF\u9636\u6bb5\uff0c\u5b58\u5728Branch\u6307\u4ee4\u7684\u53ef\u80fd\uff0cPC\u7684\u503c\u53d8\u4e3aPC+imm\uff0c\u6b64\u65f6\u5982\u679cPC\u4e0d\u4f9d\u6b21\u4f20\u9012\uff0c\u65e0\u6cd5\u901a\u8fc7\u5f53\u524dPC\u7684\u503c\u8ba1\u7b97\u51faadd\u5bf9\u5e94\u7684PC\u503c</code></p> <p>example</p> <p></p> <p></p> <p></p> <p>\u4e00\u65e6\u5f02\u5e38\u53d1\u751f\uff0c\u9996\u5148\u4f60\u4f1a\u770b\u5230PC\u7684mux\u589e\u52a0\u4e86\u4e00\u4e2a\u8f93\u5165\uff0c1C090000\uff0c\u4e5f\u5c31\u662f\u89e3\u51b3\u7a0b\u5e8f\u7684\u521d\u59cb\u5730\u5740\uff0c\u9700\u8981\u8df3\u8f6c\u5230\u8be5\u5730\u5740\u3002</p> <p>\u6267\u884cflush\u64cd\u4f5c\uff0c\u5c06add\u6307\u4ee4\u548c\u540e\u9762\u7684sub\uff0cld\u6307\u4ee4\u5168\u90e8\u53d8\u4e3abubble\u3002or\u6307\u4ee4\u5728add\u6307\u4ee4\u4e4b\u524d\u6240\u4ee5\u4f9d\u7136\u6267\u884c\u3002\u5c06add\u6307\u4ee4\u7684\u5730\u57404C\u5b58\u5230SEPC\u4e2d\u3002</p> <p><code>\u6307\u4ee4\u975e\u6cd5\u5728IF\u9636\u6bb5\u5c31\u53ef\u4ee5\u5224\u522b\u8fdb\u884c\u5904\u7406\uff0c\u5916\u90e8\u4e2d\u65ad\u7684\u8bdd\uff0c\u5c06\u6d41\u6c34\u7ebf\u7684\u6240\u6709\u6307\u4ee4\u5904\u7406\u5b8c\u6bd5\u4e4b\u540e\u518d\u5904\u7406\u4e2d\u65ad</code></p>"},{"location":"CO/4.%20The%20Processor/#4102-multiple-exxceptions","title":"4.10.2 Multiple Exxceptions","text":"<p>Pipelining overlaps multiple instructions </p> <ul> <li> <p>Could have multiple exceptions at once</p> <p><code>\u4e94\u7ea7\u6d41\u6c34\u7ebf\uff0c\u5305\u542b\u591a\u6761\u6307\u4ee4\uff0c\u5b58\u5728\u591a\u6761\u6307\u4ee4\u540c\u65f6\u53d1\u751f\u5f02\u5e38\u7684\u60c5\u51b5</code></p> <p>Simple approach: deal with exception from earliest instruction</p> </li> <li> <p>Flush subsequent instructions</p> </li> <li> <p>\u201cPrecise\u201d exceptions</p> <p><code>\u89e3\u51b3\u65b9\u6cd5\uff1a\u7cbe\u786e\u5904\u7406\u3002\u4f18\u5148\u89e3\u51b3\u6700\u65e9\u53d1\u751f\u7684\u6307\u4ee4\u7684\u5f02\u5e38\uff08\u6307\u4ee4\u7684\u5b8c\u6210\u987a\u5e8f\u548c\u53d1\u751f\u987a\u5e8f\u76f8\u540c\uff09\uff0cflush\u6389\u5f02\u5e38\u6307\u4ee4\u540e\u7eed\u7684\u6307\u4ee4\uff08\u5f02\u5e38\u4e5f\u968f\u4e4b\u89e3\u51b3\uff09\u3002</code></p> </li> </ul> <p>In complex pipelines</p> <ul> <li> <p>Multiple instructions issued per cycle</p> </li> <li> <p>Out-of-order completion</p> </li> <li> <p>Maintaining precise exceptions is difficult!</p> <p><code>\u4f46\u662f\u590d\u6742\u6d41\u6c34\u7ebf\u4e2d\uff0c\u5b58\u5728\u7740\u4e00\u4e2a\u65f6\u95f4\u5468\u671f\u5b58\u5728\u591a\u6761\u6307\u4ee4\uff0c\u4ee5\u53ca\u6307\u4ee4\u7684\u4e71\u5e8f\u5b8c\u6210\uff08\u5b8c\u6210\u987a\u5e8f\u4e0d\u4f9d\u7167\u5f00\u59cb\u6267\u884c\u987a\u5e8f\uff09\uff0c\u5bfc\u81f4prrcise exception\u7684\u89e3\u51b3\u65b9\u6cd5\u5f88\u96be\u6267\u884c</code></p> </li> </ul> <p>\u6b64\u65f6\u53ea\u80fd\u6267\u884c imprecise Exception</p> <p></p> <p>\u53d1\u751f\u4e2d\u65ad\u65f6\uff0c\u600e\u4e48\u5904\u7406\u7531\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u51b3\u5b9a\uff0c\u8fd9\u5c31\u5bfc\u81f4\u786c\u4ef6\u90e8\u5206\u5f97\u5230\u7b80\u5316\uff0c\u4f46\u662f\u8f6f\u4ef6\u90e8\u5206\u590d\u6742\u5316</p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/","title":"5. Large and Fast: Exploiting Memory Hierarchy","text":"<p> \u7ea6 7666 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 38 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Memory Technologies</li> <li>Memory Hierarchy Introduction</li> <li>The basics of Cache</li> <li>Measuring and improving cache performance</li> <li>Dependable Memory Hierarchy</li> <li>Virtual Machines</li> <li>Virtual Memory</li> <li>A common Framework for Memory Hierarchy</li> <li>Using FSM to Control a simple Cache</li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#51-memory-technologies","title":"5.1 Memory Technologies","text":"<ul> <li> <p>SRAM</p> <ul> <li> <p>value is stored on a pair of inverting gates</p> </li> <li> <p>very fast but takes up more space than DRAM </p> <p>\u503c\u5b58\u50a8\u5728\u4e00\u5bf9\u53cd\u76f8\u95e8\u4e0a,\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u5360\u7528\u7684\u7a7a\u95f4\u6bd4DRAM\u591a</p> <p></p> </li> </ul> </li> <li> <p>DRAM</p> <ul> <li> <p>value is stored as a charge on capacitor (must be refreshed)</p> </li> <li> <p>very small but slower than SRAM (factor of 5 to 10</p> <p>\u503c\u5b58\u50a8\u4e3a\u7535\u5bb9\u5668\u4e0a\u7684\u7535\u8377\uff08\u5fc5\u987b\u5237\u65b0\uff09\uff0c\u975e\u5e38\u5c0f\uff0c\u4f46\u6bd4 SRAM \u6162\uff08\u7cfb\u6570\u4e3a 5 \u5230 10\uff09\u9700\u8981\u5468\u671f\u6027\u7684\u5237\u65b0</p> <p></p> <p><code>bank\u7528\u4e8e\u52a0\u5feb\u6570\u636e\u8bfb\u53d6\u7684\u901f\u5ea6\uff0c\u7c7b\u4f3c\u80e1\u5e76\u884c\u8bfb\u53d6\u3002</code></p> <p></p> <p>Burst mode\uff1asupply successive words from a row with reduced latency</p> <p><code>\u5728\u8bfb\u53d6\u8fde\u7eed\u7684\u6570\u636e\u65f6\u80fd\u591f\u51cf\u5c11\u5ef6\u8fdf\uff0cseek\u7684\u6b21\u6570\u548c\u65f6\u95f4\u51cf\u5c11</code></p> <p>DDR\uff1a\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u53d6\u6570\u636e \\(\\Rightarrow\\) \u901f\u5ea6\u7ffb\u500d</p> <p></p> <p>Row buffer\uff1a\u6bcf\u4e00\u884c\u90fd\u653e\u5230buffer\u4e2d</p> <p>Synchronous DRAM\uff1a\u65f6\u949f\u540c\u6b65</p> <p>DRAM banking\uff1a\u5206\u6210\u591a\u6bb5\uff0c\u6bcf\u4e00\u4e2abank\u90fd\u8bfb\u53d6</p> </li> </ul> </li> </ul> <p>\u89c1\u8ba1\u903b\u90e8\u5206</p> <p></p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#52-memory-hierarchy-introduction","title":"5.2 Memory Hierarchy Introduction","text":"<p>Programs access a small proportion of their address space at any time  </p> <ul> <li> <p>Temporal locality   \u65f6\u95f4\u5c40\u90e8\u6027</p> <p>Items accessed recently are likely to be accessed again soon </p> <p>\u6700\u8fd1\u8bbf\u95ee\u7684\u9879\u76ee\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u518d\u6b21\u8bbf\u95ee</p> <p>\u5982 for \u5faa\u73af\uff0c\u8dd1\u8fc7\u4e00\u6b21\u540e\u6211\u4eec\u5927\u6982\u7387\u8fd8\u8981\u6267\u884c\u5faa\u73af\u4f53\u91cc\u7684\u4ee3\u7801</p> </li> <li> <p>Spatial locality  \u7a7a\u95f4\u5c40\u90e8\u6027</p> <p>Items near those accessed recently are likely to be accessed soon  </p> <p>\u6700\u8fd1\u8bbf\u95ee\u7684\u9879\u76ee\u9644\u8fd1\u7684\u9879\u76ee\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u88ab\u8bbf\u95ee</p> <p>\u5982\u6570\u7ec4\uff0c\u6211\u4eec\u8bbf\u95ee\u4e86\u8fd9\u4e2a\u5143\u7d20\u540e\u5927\u6982\u7387\u8fd8\u8981\u8bbf\u95ee\u540e\u9762\u7684\u5143\u7d20</p> </li> </ul> <p>\u5229\u7528\u5c40\u90e8\u6027\uff1a</p> <ul> <li> <p>Memory hierarchy</p> </li> <li> <p>Store everything on disk</p> </li> <li> <p>Copy recently accessed (and nearby) items from disk to smaller DRAM memory</p> <p>\u5c06\u6700\u8fd1\u8bbf\u95ee\u7684\uff08\u548c\u9644\u8fd1\u7684\uff09\u9879\u76ee\u4ece\u78c1\u76d8\u590d\u5236\u5230\u8f83\u5c0f\u7684 DRAM \u5185\u5b58</p> <ul> <li>Main memory</li> </ul> </li> <li> <p>Copy more recently accessed (and nearby) items from DRAM to smaller SRAM    memory </p> <p>\u5c06\u6700\u8fd1\u8bbf\u95ee\uff08\u548c\u9644\u8fd1\uff09\u7684\u9879\u76ee\u4eceDRAM\u590d\u5236\u5230\u8f83\u5c0f\u7684SRAM\u5b58\u50a8\u5668</p> <ul> <li>Cache memory attached to CPU</li> </ul> </li> </ul> <p><code>\u8fd1\u671f\u8bbf\u95ee\u5230\u7684\u5185\u5b58\u5355\u5143\u548c\u5b83\u9644\u8fd1\u7684\u5185\u5bb9\u4f1a\u88ab\u590d\u5236\u4e00\u4efd\u653e\u5230DRAM\uff08main memory\uff09\uff0c\u6216\u8005\u4eceDRAM\u590d\u5236\u4e00\u4efd\u653e\u5230\u79bbCPU\u66f4\u8fd1\uff0c\u8bbf\u95ee\u901f\u5ea6\u66f4\u5feb\u7684SRAM\uff08cache\uff09\u4e2d</code></p> <p>\u4e0a\u56fe\u4e2d\u4e2d\u95f4\u7684\u4ef7\u683c\u6700\u9ad8\uff0c\u4e3acache\uff08SRAM\uff09\uff0c\u5e95\u90e8\u7684\u4ef7\u683c\u6700\u4f4e\uff0c\u4e3amemory\uff08DRAM\uff09</p> <p><code>\u7b2ci\u5c42\u7684\u6570\u636e\u6765\u6e90\u4e8e\u7b2ci+1\u5c42\uff0c\u6240\u4ee5\u7b2ci+1\u5c42\u4e00\u5b9a\u5b58\u5728\u524d\u9762i\u5c42\u7684\u6240\u6709\u6570\u636e</code></p> <ul> <li> <p>Block (aka line): unit of copying  </p> <p>\u5411\u4e0a\u7ea7\u5b58\u50a8\u5668\u4f20\u8f93\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\uff08\u53ef\u80fd\u6709\u5f88\u591a\u4e2a\u5b57\uff09\u3002\u5982\u679c\u9700\u8981\u4ecememory\u5411cache\u4f20\u8f93\u6570\u636e\uff0c\u6700\u5c0f\u4f20\u8f93\u5355\u4f4d\u5c31\u662f\u4e00\u4e2ablock</p> </li> <li> <p>Hit: If accessed data is present in upper level  </p> <p>The CPU accesses the upper level and succeeds.</p> <p>\u547d\u4e2d - \u4e0a\u5c42\u7684\u5b58\u50a8\u5668\uff08cache\uff09\u6709\u6211\u4eec\u8981\u7684\u6570\u636e\uff0c\u4e0d\u9700\u8981\u53bb\u4e0b\u5c42\u5b58\u50a8\u5668\uff08memory\uff09\u5bfb\u627e</p> <ul> <li>hit ratio: hits/accesses</li> <li>hit time: <code>\u8bbf\u95ee\u4e0a\u5c42\u5b58\u50a8\u7684\u65f6\u95f4\u4ee5\u53ca\u51b3\u5b9a\u662f\u5426\u547d\u4e2d\u7684\u65f6\u95f4</code></li> </ul> </li> <li> <p>Miss: If accessed data is absent  </p> <p>The CPU accesses the upper level and fails</p> <p>block copied from lower level</p> <p>\u9700\u8981\u4ece\u4e0b\u5c42\u5b58\u50a8\u5668\u4e2d\u628a\u5bf9\u5e94\u6570\u636e\u7684\u5757\u4f20\u8f93\u5230\u4e0a\u5c42\uff0c\u63a5\u7740\u4ece\u4e0a\u5c42\u628a\u6570\u636e\u8bfb\u8d70</p> <ul> <li> <p><code>miss penalty\uff1a\u7528\u4e0b\u5c42\u7684\u76f8\u5e94\u5757\u66ff\u6362\u4e0a\u5c42\u5757\u7684\u65f6\u95f4\uff0c\u52a0\u4e0a\u5c06\u6b64\u5757\u4f20\u9001\u5230\u5904\u7406\u5668\u7684\u65f6\u95f4\u3002</code></p> <p><code>(\u6ce8\u610f\u6b64\u5904\u662freplace\uff0c\u4e0d\u662f\u8986\u76d6\u3002\u5b58\u5728\u4e0a\u5c42\u5b58\u50a8\u5668\u5df2\u7ecf\u6ee1\u7684\u60c5\u51b5\uff0c\u66ff\u6362\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u5c06\u539f\u5148\u7684\u4e0a\u5c42\u5757\u91cd\u65b0\u5199\u56de\u5230\u4e0b\u5c42\u5b58\u50a8\u5668)</code></p> </li> <li> <p>miss ratio: 1 - hit ratio</p> </li> <li> <p>miss time: \u66ff\u4ee3\u4e0a\u5c42\u5b58\u50a8\u5668\u7684\u5757\u7684\u65f6\u95f4\u548c\u628a\u8fd9\u4e2a\u5757\u7ed9\u5904\u7406\u5668\u7684\u65f6\u95f4</p> </li> </ul> </li> </ul> <p>hit\u6b64\u5904\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u662f</p> <ul> <li>\u8bbf\u95ee\u78c1\u76d8\uff0c\u53d1\u73b0\u5185\u5b58\u4e2d\u5b58\u5728\u6570\u636e</li> <li>\u8bbf\u95ee\u5185\u5b58\uff0c\u53d1\u73b0cache\u4e2d\u5b58\u5728\u6570\u636e</li> </ul> <p><code>\u6240\u4ee5\u4f7f\u7528\u7684\u662fupper level</code></p> <p>Exploiting Memory Hierarchy</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5173\u6ce8\u4e24\u90e8\u5206\uff1a</p> <ul> <li>The basics of Cache: SRAM and DRAM(main memory) </li> </ul> <p>\u89e3\u51b3\u901f\u5ea6\u95ee\u9898</p> <ul> <li>Virtual Memory: DRAM and DISK </li> </ul> <p>\u89e3\u51b3\u5bb9\u91cf\u95ee\u9898 </p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#53-the-basics-of-cache","title":"5.3 The basics of Cache","text":"<p>For each item of data at the lower level, there is exactly one location in the cache where it might be.  </p> <p>So, lots of items at the lower level share locations in the upper level.  </p> <p>\u591a\u4e2a\u5757\u4f1a\u6620\u5c04\u5230cache\u7684\u540c\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <ul> <li> <p>How do we know if a data item is in the cache?  </p> <p>\u5982\u4f55\u77e5\u9053\u6570\u636e\u662f\u5426\u5728 cache \u4e2d\uff1f</p> </li> <li> <p>If it is, how do we find it?  </p> <p>\u5982\u679c\u6709\uff0c\u5982\u4f55\u627e\u5230\u6570\u636e\uff1f</p> </li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#531-direct-mapped-cache","title":"5.3.1 Direct Mapped Cache","text":"<p>memory address is modulo the number of blocks in the cache  \u53d6\u6a21\u3002</p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5185\u5b58\u6709 32 \u4e2a block\uff0c\u5176\u7f16\u53f7 (block address) \u5206\u522b\u4e3a 00000 \u5230 11111\uff1bcache \u6709 8 \u4e2a block\u3002Direct mapped cache \u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u6309 block address \u7684\u540e 3 \u4f4d\u786e\u5b9a\u5b83\u5e94\u8be5\u653e\u5728 cache \u7684\u54ea\u4e2a block \u91cc\u3002</p> <p>\u5148\u786e\u5b9a\u9700\u8981\u5bfb\u627e\u7684\u6570\u636e\u5728memory\u7684\u54ea\u4e2ablock\uff0c\u6839\u636e\u53d6\u6a21\u627e\u5230\u5bf9\u5e94\u7684cache\u4e2d\u7684block\uff0c\u5224\u65ad\u662f\u5426\u6709\u6570\u636e\u3002<code>\u600e\u4e48\u786e\u5b9acache block\u4e2d\u7684\u6570\u636e\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u90a3\u4e2ablock\u7684\u6570\u636e\u5462\uff1f\u5229\u7528memory block index\u7684\u9ad8\u82e5\u5e72\u4f4d\uff0c\u4f5c\u4e3a\u9ad8\u4f4d\u6807\u8bb0\uff0c\u4e00\u5e76\u5b58\u50a8\u5230cache\u4e2d\u3002\u4f8b\u5982\u56fe\u4e0a\u7684\u4f8b\u5b50\u4e2d\uff0c10001 \u5b58\u5728 index \u4e3a 001 \u7684 cache block \u4e2d\uff0c\u53ea\u9700\u8981\u989d\u5916\u5b58\u5f00\u5934\u7684 10 \u5373\u53ef\u3002</code></p> <ul> <li> <p>Store block address as well as the data   \u6211\u4eec\u9700\u8981\u77e5\u9053 cache \u653e\u7684\u662f\u54ea\u4e2a\u5757\u3002</p> <ul> <li>Actually, only need the high-order bits \u9ad8\u4f4d\u6bd4\u7279 </li> <li>Called the tag \u79f0\u4e4b\u4e3a\u6807\u8bb0 </li> </ul> </li> <li> <p>Valid bit: 1 = present, 0 = not present  </p> <p>\u6211\u4eec\u9700\u8981\u77e5\u9053 cache \u91cc\u662f\u5426\u6709\u653e\u6709\u6548\u7684\u5757\u3002</p> <p>\u5982\u4f55\u786e\u5b9acache\u4e2d\u5b58\u653e\u7684block\u662f\u5426\u6709\u6548\uff1f\u4efb\u4f55\u65f6\u5019\u8be5block\u90fd\u6709\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u662f\u542f\u52a8\u65f6\u81ea\u5e26\u7684\uff0c\u90a3\u4e48\u5c31\u4f1a\u53d1\u751f\u9519\u8bef\uff08\u56e0\u4e3a\u5b83\u4e0d\u662f\u5bf9\u5e94\u7684memory block\u7684\u503c\uff09\u3002\u56e0\u6b64\u6211\u4eec\u5f15\u5165<code>valid bit</code>\u6765\u8868\u793a\u8fd9\u4e2ablock\u662f\u5426\u6709\u6548\u30021 \u8868\u793a \u6709\u6548\uff0c0 \u8868\u793a\u65e0\u6548</p> <p>cache hit \u5f53\u4e14\u4ec5\u5f53 valid bit \u662f 1 \u800c\u4e14 tag \u662f\u4e00\u81f4\u7684\u3002</p> </li> </ul> <p><code>\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u90fd\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8ba8\u8bba\u7684block address\u662f\u4ee5block\u4e3a\u5355\u4f4d\u7684\u3002</code></p> <p>\u6211\u4eec\u9700\u8981\u5c06byte address \u8f6c\u5316\u4e3a block address\uff0c\u64cd\u4f5c\u4e5f\u5c31\u662f\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u6bcf\u4e00\u4e2ablock\u6240\u5360\u7684\u5b57\u8282\u6570\u3002block\u5f80\u5f80\u662f2\u7684\u82e5\u5e72\u4e2a\u6b21\u65b9\u4e2aword\uff0c\u5bf9\u5e94\u7684\uff0c\u6bcf\u4e00\u4e2ablock\u7684byte\u6570\u4e5f\u662f2\u7684\u82e5\u5e72\u6b21\u65b9</p> </li> <li> <p>\u7528byte address / \\(2^n\\)\u5f97\u5230\u524d\u82e5\u5e72\u4f4d\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u7684block address\uff0c\u76f8\u5f53\u4e8e\u5c06\u76f8\u90bb\u7684\\(2^n\\)\u4e2abyte\u805a\u5408\u6210\u4e00\u4e2ablock</p> </li> </ul> <p><code>\u6b64\u65f6\u6211\u4eec\u7684byte address\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1ablock address \u548c byte offset\uff0c\u5373\u6240\u5728block\u7684\u7f16\u53f7\u548c\u5728\u8be5block\u4e2d\u7684\u504f\u79fb\u91cf\u3002</code></p> <p><code>block address\u53c8\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0ctag \u548c index</code></p> <p>gua</p> <p>\u540c\u65f6\u4e5f\u4f1a\u53d1\u73b0 memory block address \u957f\u5ea6\u5927\u4e8e cache block address\uff0c\u56e0\u4e3a\u591a\u4e86tag\uff0c\u591a\u5bf9\u4e00</p> <p>\u5173\u4e8ecache block\u7684\u7ed3\u6784\uff08\u5730\u5740index\u786e\u5b9a\uff09\uff1a\u5305\u542bvalid bit\uff0c tag\uff0c data</p> <p></p> <ul> <li> <p>byte offset \u4f4d\u5bbd\u7531 block\u7684\u5927\u5c0f\uff08size\uff09\u51b3\u5b9a</p> </li> <li> <p>index\u4f4d\u5bbd\u7531cache \u4e2dblock\u7684\u6570\u91cf\u51b3\u5b9a</p> </li> <li> <p>tag \u4f4d\u5bbd\u7531\u603b\u7684\u5730\u5740\u4f4d\u5bbd\u51cf\u6389\u5176\u4ed6\u4f4d\u51b3\u5b9a</p> </li> </ul> <p>\u5982\u679c\u4e00\u4e2a block \u662f\u4e00\u4e2a\u5b57\uff084\u4e2abyte\uff09\uff0c\u90a3\u4e48 byte offset \u5e94\u8be5\u6709 2 \u4f4d\u3002  </p> <p>\u6ce8\u610f CPU \u7ed9\u51fa\u7684\u5730\u5740\u90fd\u662f\u4ee5 byte \u4e3a\u6700\u5c0f\u5bfb\u5740\u5355\u5143\u7684\u3002</p> <p>example</p> <p></p> <p></p> <p><code>\u6ce8\u610f\u770b\u64cd\u4f5ci\uff0c\u867d\u7136index\u5bf9\u4e0a\u4e86\uff0c\u4f46\u662ftag\u4e0d\u4e00\u6837\uff0c\u540c\u6837\u662fmiss\uff0c\u6b64\u65f6\u9700\u8981\u8fdb\u884creplace\u64cd\u4f5c\uff0c\u5c06memory(11010)\u66ff\u6362\u4e3amemory(10010)</code></p> <p>\u5bf9\u4e8e\u4e00\u4e2a64\u4f4d\u5730\u5740\u7684\u673a\u5668\uff0ccache\u7684\u5927\u5c0f\u4e3a1024\u4e2ablock\uff0c\u4e00\u4e2ablock\u6709\u4e00\u4e2aword\uff0c\u4e5f\u5c31\u662f4\u4e2abyte\u3002</p> <ul> <li>index\u7684\u4f4d\u6570\u4e3a\\(log_2 1024 = 10\\)</li> <li>byte offset\u7684\u4f4d\u6570\u4e3a\\(log_2 4 = 2\\)</li> <li>tag\u7684\u4f4d\u6570\u4e3a\\(64-2-10=52\\).</li> <li>cache\u6bcf\u4e00\u6761\u76ee\u7684\u4f4d\u6570\u5c31\u662fvalid bit(1\u4f4d) + tag(52\u4f4d) + data(1\u4e2aword32\u4f4d) = 85</li> </ul> <p></p> <p>hit\u8981\u6c42 valid bit = 1\uff0c index \u5bf9\u5e94\uff0c tag \u5bf9\u5e94\u3002\u6700\u7ec8\u7ed3\u679c\u6839\u636eoffset\u4eceData\u4e2d\u8fdb\u884c\u9009\u53d6</p> <p><code>\u4e00\u4e2ablock\u4e2d\u53ef\u80fd\u5b58\u5728\u591a\u4e2aword\uff0c\u4f46\u662f\u6bcf\u4e00\u6b21\u5b9e\u9645\u4e0a\u53ea\u4f1a\u8bbf\u95ee\u51fa\u4e00\u4e2aword\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728block\u4e2d\u9009\u62e9\u51fa\u5bf9\u5e94\u7684word\uff0c\u8fd9\u65f6\u5019\u9700\u8981block offset</code></p> <p></p> <p>\u4e0a\u65b9\u7684\u60c5\u5f62\u4f7f\u7528\u7684\u662f32\u4f4d\u7684\u673a\u5668\uff0c\u4e00\u4e2ablock\u670916\u4e2aword\uff0c\u4e00\u5171\u6709256\u4e2acache entry\u3002yi</p> <ul> <li>byte offset\u7684\u4f4d\u6570\u4e3a\\(log_2 4 = 2\\)</li> <li>block offset\u7684\u4f4d\u6570\u4e3a\\(log_2 16 = 4\\)</li> <li>index offset\u7684\u4f4d\u6570\u4e3a\\(log_2 256 = 8\\)</li> <li>tag\u7684\u4f4d\u6570\u4e3a\\(32 - 2 - 4- 8 = 18\\)</li> <li>\u4e00\u4e2acache entry\u7684\u957f\u5ea6\u4e3avalid bit + tag + data = 1 + 18 + 16 *32 = 531</li> </ul> <p>Example \"Bits in Cache\" <code>important</code></p> <p> </p> <ul> <li>\u4e00\u5171\u670916KB\u7684\u6570\u636e\uff0c\u4e5f\u5c31\u662f16KB/4B= 4K word</li> <li>\u4e00\u4e2ablock\u67094\u4e2aword\uff0c\u603b\u6570\u636e\u4e3a1K block</li> <li>1K \u4e2a block \u5bf9\u5e94\u7684index\u4f4d\u6570\u4e3a10</li> <li>byte offset\u4f4d\u6570\u4e3a2\uff0cblock offset\u4f4d\u6570\u4e3a2</li> <li>\u90a3\u4e48tag\u4f4d\u6570\u4e3a32-10-2-2=18</li> <li>\u4e00\u4e2acache entry\u7684\u4f4d\u6570\u4e3a1+18+4*32 = 147</li> <li>total bits = \\(2^{10}\\times 147\\)  = 147Kbit</li> </ul> <p> </p> <ul> <li>\u4e0b\u65b9\u540c\u7406\uff0c\u53ea\u662ftag\u7684\u4f4d\u6570\u53d1\u751f\u6539\u53d8\uff0c\u6b64\u65f6tag\u7684\u4f4d\u6570\u4e3a64-10-2-2=50</li> </ul> <p>Example \"Mapping an Address to Multiword Cache Block\"</p> <p><code>\u5df2\u77e5byte address\uff0c\u6211\u4eec\u9700\u8981\u5148\u77e5\u9053block address\uff0c\u4e5f\u5c31\u662f1200/16 = 75.\u7136\u540e\u6211\u4eec\u77e5\u9053cache\u4e2d\u4e00\u5171\u670964\u4e2ablock\uff0c\u90a3\u4e48\u901a\u8fc7\u53d6\u6a21\uff0c\u6211\u5c31\u77e5\u9053\u5bf9\u5e94\u7684block number \u4e3a75%64=11</code></p> <p>\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u77e5\u9053\u7b2c11\u4e2acache block\u4e2d\u5b58\u653e\u7684byte address\u7684\u8303\u56f4</p> <ul> <li>\u6b63\u5411\u601d\u8003\uff0c\u6bcf\u4e00\u4e2ablock\u5b58\u653e16bytes\uff0c\u53c8\u7531\u4e8e\u521a\u521a\u7684\u8ba1\u7b97\u53d1\u73b01200byte address \u6070\u597d\u662f\u7b2c\u4e00\u4e2a\uff0c\u6240\u4ee5\u8303\u56f4\u662f1200-1215</li> <li>**\u9006\u5411\u601d\u8003\uff0c\u7b2c12\u4e2ablock\u5b58\u653e\u7684\u521d\u59cbbyte\u7684\u5730\u5740\u662f\uff1a12 + 64 = 76\uff0c76 * 16 = 1216\uff0c\u5939\u903c\u4e00\u4e0b\u5f97\u5230\u8303\u56f4\u662f1200-1215 **</li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#532-handling-cache-hit-and-misses","title":"5.3.2 Handling Cache hit and Misses","text":"<ul> <li> <p>Read hits</p> <p>\u76f4\u63a5\u4ece cache \u91cc\u8bfb\u5c31\u597d\u4e86</p> </li> <li> <p>Read misses\u2014two kinds of misses</p> <p></p> <ul> <li> <p><code>data cache miss</code></p> <ul> <li>\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u7136\u540e\u8bfb\u53d6\u5bf9\u5e94\u7684\u5185\u5bb9\u3002</li> <li>\u5199\u5165cache\uff0c\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636edata\u653e\u5728\u6761\u76ee\u7684\u6570\u636e\u90e8\u5206\uff0c\u5c06\u5730\u5740\u7684\u4e0a\u4f4d\uff08\u6765\u81ea ALU\uff09\u5199\u5165\u6807\u7b7e\u5b57\u6bb5\uff0c\u7136\u540e\u6253\u5f00\u6709\u6548\u4f4d\u3002</li> </ul> </li> <li> <p><code>instruction cache miss</code></p> <p>Stall the CPU, fetch block from memory, deliver to cache, restart CPU read </p> <p>\u6682\u505c CPU \u8fd0\u884c\uff0c\u4ece memory \u91cc\u628a\u5bf9\u5e94\u7684 block \u62ff\u5230 cache\uff0c\u4ece\u7b2c\u4e00\u4e2a step \u5f00\u59cb\u91cd\u65b0\u8fd0\u884c\u5f53\u524d\u8fd9\u6761\u6307\u4ee4\u3002</p> <ol> <li>Send the original PC value (current PC-4) to the memory. </li> </ol> <p>\u56e0\u4e3a PC \u53d6\u503c\u5b8c\u5c31\u53d8\u6210 +4 \u4e86\uff0c\u6240\u4ee5\u5f53\u524d\u6267\u884c\u7684\u5176\u5b9e\u662f PC-4</p> <ol> <li> <p>Instruct main memory to perform a read and wait for the memory to complete its access. </p> <p>\u6839\u636ePC-4\uff0c\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4\u5185\u5bb9</p> </li> <li> <p>Write the cache entry, putting the data from memory in the data portion of the entry, writing the upper bits of the address (from the ALU) into the tag field, and turning the valid bit on. </p> <p>\u5c06\u6307\u4ee4\u5185\u5bb9\u5199\u5165\u5bf9\u5e94\u7684cache entry\uff0c\u5c06\u9ad8\u4f4dbit\u5199\u5165\u5230tag\uff0c\u5c06valid bit\u5199\u4e3a1</p> </li> <li> <p>Restart the instruction execution at the first step, which will refetch the instruction again, this time finding it in the cache. </p> <p>\u5728\u7b2c\u4e00\u6b65\u91cd\u65b0\u542f\u52a8\u6307\u4ee4\u6267\u884c\uff0c\u8fd9\u5c06\u518d\u6b21\u91cd\u65b0\u83b7\u53d6\u6307\u4ee4\uff0c\u8fd9\u6b21\u662f\u5728\u7f13\u5b58\u4e2d\u627e\u5230\u5b83</p> </li> </ol> </li> </ul> </li> <li> <p>Write hits</p> <ul> <li> <p>write-back: Cause Inconsistent  </p> <p><code>cache\u548cmemory\u90fd\u6709\u76f8\u540c\u7684\u6570\u636e\u3002\u4ec5\u4ec5\u5c06\u6570\u636e\u5199\u5165\u5230cache\u3002\u5982\u679c\u9700\u8981replace cache\u4e2d\u7684\u6570\u636e\uff0c\u6b64\u65f6\u9700\u8981\u5c06cache\u4e2d\u5bf9\u5e94\u7684\u6570\u636e\u5199\u5165\u5230memory\u3002\u5f15\u5165\u4e00\u4e2adirty bit\u6765\u8bb0\u5f55\u8fd9\u4e2acache block\u662f\u5426\u88ab\u66f4\u6539\u8fc7\uff0c\u4ece\u800c\u5224\u65ad\u662f\u5426\u9700\u8981\u5199\u5165\u5230\u5185\u5b58</code></p> </li> <li> <p>write-through: Ensuring Consistent  </p> <p><code>\u65e2\u628a\u6570\u636e\u5199\u5230 cache \u4e2d\u53c8\u5199\u5230\u5185\u5b58\u4e2d,\u901f\u5ea6\u6162\u3002</code></p> <p><code>\u6539\u8fdb\u63aa\u65bd\uff1a\u5c06\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u64cd\u4f5c\uff0c\u5148\u5c06\u6570\u636e\u5199\u5165\u5230write buffer\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\uff0cbuffer\u5185\u7684\u6570\u636e\u7b49\u5230\u6709\u673a\u4f1a\u6162\u6162\u5199\u5165\u5185\u5b58\u5373\u53ef\u3002\u5982\u679cwrite buffer\u6162\u4e86\uff0c\u9700\u8981\u6682\u505c\u5904\u7406\u5668\u6267\u884c\u5199\u5165main memory\u7684\u5de5\u4f5c\uff0c\u77e5\u9053buffer\u4e2d\u6709\u7a7a\u95f2\u7684entry</code></p> </li> </ul> </li> <li> <p>Write misses  </p> <ul> <li> <p>read the entire block into the cache, then write the word \u2014\u2014 wirte allocate</p> <p>\u50cf read miss \u4e00\u6837\u5148\u628a block \u62ff\u5230 cache \u91cc\u518d\u5199\u5165\u3002</p> </li> <li> <p>Write around the data into the memory ( the lower level memory) ----no write allocate ( also called write around ).</p> <p>\u4e0d\u62ff\u5230cache\u4e2d\uff0c\u76f4\u63a5\u5199\u5165\u5230\u5185\u5b58\u4e2d\u5373\u53ef</p> </li> </ul> </li> </ul> <p>\u533a\u5206write Through\uff0c write back\uff0c write allocation\u64cd\u4f5c</p> <p></p> <p>\u5982\u679c\u6267\u884c\u7684\u662fno-write allocate</p> <ul> <li>\u00b7<code>\u7531\u4e8e\u521d\u59cb\u72b6\u6001cache\u662f\u7a7a\u7684\uff0c\u6240\u4ee5Write miss\uff0c\u6b64\u65f6\u6267\u884c\u7684\u662fno-write allocate\uff08\u4e5f\u5c31\u662fwrite around\uff09\uff0c\u76f4\u63a5\u5c06Mem[100]\u5199\u5165\u5230\u5185\u5b58\u4e2d\uff0ccache\u4e0a\u4e0d\u4fdd\u5b58Mem[100]</code></li> <li><code>\u518d\u6b21\u6267\u884cwrite Mem[100], write miss, \u4f9d\u7136\u76f4\u63a5\u5199\u5165\u5230\u5185\u5b58\uff0c\u4e0d\u4fdd\u5b58\u5728cache\u4e2d</code></li> <li><code>Read Mem[200], Read miss\uff0c\u6b64\u65f6\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u53d6\u51faMem[200],\u5e76\u5c06Mem[200]\u4fdd\u5b58\u5230cache\u4e2d\uff0c\u7136\u540e\u8bfb\u53d6Mem[200]</code></li> <li><code>write Mem[200], write hit</code></li> <li><code>write Mem[100], write miss</code></li> </ul> <p>\u5982\u679c\u6267\u884c\u7684\u662fwrite allocate</p> <ul> <li><code>\u7531\u4e8e\u521d\u59cb\u72b6\u6001cache\u662f\u7a7a\u7684\uff0c\u6240\u4ee5Write miss\uff0c\u6b64\u65f6\u6267\u884c\u7684\u662fwrite allocate\uff0c\u9700\u8981\u5148\u628a\u5bf9\u5e94\u7684block\u62ff\u5230cache\uff0c\u7136\u540e\u518d\u5199\u5165\u6570\u636e</code></li> <li><code>\u518d\u6b21\u6267\u884cwrite Mem[100], write hit, \u56e0\u4e3acache\u4e2d\u5df2\u7ecf\u5b58\u5728Mem[100]</code></li> <li><code>Read Mem[200], Read miss\uff0c\u6b64\u65f6\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u53d6\u51faMem[200],\u5e76\u5c06Mem[200]\u4fdd\u5b58\u5230cache\u4e2d\uff0c\u7136\u540e\u8bfb\u53d6Mem[200]</code></li> <li><code>write Mem[200], write hit</code></li> <li><code>\u518d\u6b21\u6267\u884cwrite Mem[100], write hit, \u56e0\u4e3acache\u4e2d\u5df2\u7ecf\u5b58\u5728Mem[100]</code></li> </ul> <p></p> <p>block size\u589e\u5927\uff0c miss rate \u5148\u51cf\u5c11\u540e\u589e\u5927</p> <ul> <li>\u5229\u7528\u5c40\u90e8\u6027\uff0c\u628a\u76f8\u90bb\u7684\u90fd\u8bfb\u53d6\u8fdb\u6765</li> <li>block size\u592a\u5927\uff0c\u7ade\u4e89\u6fc0\u70c8\uff0c\u8fd8\u6ca1\u5229\u7528\u5b8c\u5c31\u88ab\u66ff\u6362\uff0c\u540c\u65f6miss penalty\u589e\u5927\uff08size\u592a\u5927\uff0c\u4f20\u8f93\u65f6\u95f4\u589e\u52a0\uff09</li> </ul> <p></p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#533-deep-concept-in-cache","title":"5.3.3 Deep concept in Cache","text":"<ul> <li> <p>Q1: Where can a block be placed in the upper level? (Block placement)</p> <p><code>\u5b58\u5728\u4e09\u79cd\u65b9\u5f0f\uff1afully associative\uff0cset associative\uff0c direct mapped</code></p> </li> <li> <p>Q2: How is a block found if it is in the upper level? (Block identification)</p> <p><code>Tag/Block</code></p> <p></p> </li> <li> <p>Q3: Which block should be replaced on a miss? (Block replacement)</p> <p><code>Random, LRU, FIFO</code></p> </li> <li> <p>Q4: What happens on a write? (Write strategy)</p> <p><code>Write Back or Write Through</code></p> </li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5331-block-placement","title":"5.3.3.1 Block Placement","text":"<ul> <li> <p>Direct mapped  </p> <p><code>Block can only go in one place in the cache</code> </p> <p>\u5757\u53ea\u80fd\u53bb\u4e00\u4e2a\u5730\u65b9\uff0c\u901a\u5e38\u53d6\u6a21</p> </li> <li> <p>Fully associative \u5168\u76f8\u8054 </p> <p><code>Block can go anywhere in cache.</code> </p> <p>\u54ea\u91cc\u7a7a\u4e86\u53bb\u54ea\u91cc</p> </li> <li> <p>Set associative \u7ec4\u5173\u8054 </p> <p><code>Block can go in one of a set of places in the cache.</code> </p> <p>A set is a group of blocks in the cache. </p> <p>set associative \u662f\u4e0a\u9762\u4e24\u79cd\u65b9\u6cd5\u7684\u96c6\u5408\u3002\u5148\u7528block address mod number of sets in the cache \u8ba1\u7b97\u51fa\u5f53\u524dblock\u5e94\u5f53\u4f4d\u4e8e\u54ea\u4e2aset\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u7684set\u7a7a\u95f2\u7684\u4efb\u610fblock\u8fdb\u5165\u63d2\u5165</p> <p>\u5982\u679c\u4e00\u4e2aset\u6709n\u4e2ablock\uff0c\u90a3\u4e48\u5c31\u5c06\u8be5cache\u79f0\u4e4b\u4e3an-way set associative</p> <p>Direct mapped \u76f8\u5f53\u4e8e 1-way set associative, Fully associative \u76f8\u5f53\u4e8e m-way set-associative(for a cache with m blocks)</p> </li> </ul> <p> </p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5332-block-identification","title":"5.3.3.2 Block Identification","text":"<ul> <li> <p>Tag  </p> <ul> <li> <p>Every block has an address tag that stores the main memory address of the data stored in the block.</p> <p>\u6bcf\u4e2a\u5757\u90fd\u6709\u4e00\u4e2a\u5730\u5740\u6807\u7b7e\uff0c\u7528\u4e8e\u5b58\u50a8\u5757\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u7684\u4e3b\u5185\u5b58\u5730\u5740\u3002</p> </li> <li> <p>When checking the cache, the processor will compare the requested memory address to the cache tag -- if the two are equal, then there is a cache hit and the data is present in the cache</p> <p>\u5728\u68c0\u67e5\u7f13\u5b58\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u5c06\u8bf7\u6c42\u7684\u5185\u5b58\u5730\u5740\u4e0e\u7f13\u5b58\u6807\u7b7e\u8fdb\u884c\u6bd4\u8f83\u2014\u2014\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u5219\u5b58\u5728\u7f13\u5b58\u547d\u4e2d\uff0c\u5e76\u4e14\u6570\u636e\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d</p> </li> </ul> <p>\u76f4\u63a5\u6620\u5c04\u53ea\u9700\u8981\u6bd4\u8f83\u4e00\u4e2a\u5757\u7684 tag, \u7ea7\u76f8\u8054\u9700\u8981\u6bd4\u8f83 set \u91cc\u6240\u6709\u5757\u7684 tag.  </p> </li> <li> <p>Valid bit</p> <p>The Format of the Physical Address</p> </li> <li> <p>The Index field selects  </p> <ul> <li> <p>\u5168\u76f8\u8054\u6ca1\u6709 index. </p> <ul> <li>The set, in case of a set-associative cache \u7ec4\u5173\u8054 \\(\\log_2(sets)\\)</li> <li>The block, in case of a direct-mapped cache \u76f4\u63a5\u6620\u5c04 \\(\\log_2(blocks)\\)</li> </ul> </li> </ul> </li> <li> <p>The Byte Offset field selects  </p> <p>\u7531\u4e00\u4e2a\u5757\u5185 byte \u7684\u6570\u76ee\u51b3\u5b9a. \\(\\log_2(size \\ of \\ block)\\)</p> </li> <li> <p>The Tag is used to find the matching block within a set or in the cache</p> </li> </ul> <p>Example \"Direct-mapped Cache Example (1-word Blocks)\"</p> <p> \u4e00\u4e2ablock\u67094\u4e2abyte\uff0c\u5bf9\u5e94byte offset\u7684\u4f4d\u6570\u4e3a2.</p> <p>cache\u4e00\u5171\u67094\u4e2acache entry\uff0c\u5bf9\u5e94\u7684index\u7684\u4f4d\u6570\u4e3a2</p> <p>\u4ececache\u4e2d\u53d60x04\u7684\u5185\u5bb9\u65f6\uff0c\u6bd4\u8f83\u5bf9\u5e94index\u7684entry\u7684tag\u662f\u5426\u76f8\u7b49\uff0c\u6bd4\u8f83valid bt\u662f\u5426\u4e3a1</p> <p>Example \"Fully-Associative Cache example (1-word Blocks)\"</p> <p> </p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u662f\u53ef\u4ee5\u964d\u4f4e miss rate\uff0c\u574f\u5904\u662f\u6bcf\u6b21\u9700\u8981\u8ddf\u6240\u6709 block \u6bd4\u8f83\u662f\u5426 hit\uff1a</p> <p>\u7531\u4e8e\u6ca1\u6709index\uff0c\u5185\u5b58\u5730\u5740\u7684tag\u9700\u8981\u4e0ecache block address\u4e2d\u6240\u6709\u7684tag\u8fdb\u884c\uff0c\u5982\u679c\u76f8\u7b49\u518d\u53bb\u68c0\u67e5valid bit\u662f\u5426\u4e3a1.\u5bf9\u4e8e\u8f83\u5927\u7684cache\uff0c\u8017\u65f6\u592a\u957f</p> <p>Example \"2-Way Set-Associative Cache\"</p> <p>\u524d\u63d0\uff1acache\u4e00\u51714\u4e2ablock\uff0c\u4e00\u4e2ablock1\u4e2aword</p> <p>\u5206\u6210\u4e24\u7ec4\u7684\u8bdd\uff0c\u4e00\u4e2aset\u6709\u4e24\u4e2ablock</p> <p> </p> <p>\u6ce8\u610f\u8fd9\u91cc\u5e94\u8be5\u662f\u5bf9 Set0 \u91cc\u9762\u7684 tag \u6bd4\u8f83\u3002</p> <p>\u5148\u6839\u636eindex\u627e\u5230\u5bf9\u5e94\u7684set\uff0c\u7136\u540etag\u8ddfset\u91cc\u9762\u7684\u6bcf\u4e00\u4e2aentry\u7684tag\u8fdb\u884c\u6bd4\u8f83</p> <p></p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5333-block-replacement","title":"5.3.3.3 Block Replacement","text":"<p>In a direct-mapped cache, there is only one block that can be replaced.  </p> <p>In set-associative and fully-associative caches, there are N blocks (where N is the degree of associativity).</p> <ul> <li> <p>Random replacement - randomly pick any block</p> <ul> <li> <p>Easy to implement in hardware, just requires a <code>random number generator</code> </p> </li> <li> <p>Spreads allocation uniformly across cache</p> </li> <li> <p>May evict a block that is about to be accessed</p> <p>\u53ef\u80fd\u9010\u51fa\u5373\u5c06\u88ab\u8bbf\u95ee\u7684\u5757</p> </li> </ul> </li> <li> <p>Least-recently used (LRU) - pick the block in the set which was <code>least recently accessed</code></p> <ul> <li> <p>Assumed more recently accessed blocks more likely to be referenced again</p> </li> <li> <p>This requires extra bits in the cache to keep track of accesses.   </p> <p>\u9700\u8981\u989d\u5916\u7684\u4f4d\u6570\uff01</p> </li> </ul> </li> <li> <p>First in,first out(FIFO) - Choose a block from the set which was first came into the cache</p> </li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5334-write-strategy","title":"5.3.3.4 Write Strategy","text":"<p>write hit:</p> <ul> <li>write back</li> <li>write through</li> </ul> <ul> <li> <p>If the data is written to memory, the cache is called a write through cache</p> <ul> <li>Can always discard cached data - most up-to-date data is in memory  </li> <li>Cache control bit: only a valid bit</li> <li>memory (or other processors) always have latest data</li> </ul> <p><code>\u597d\u5904\u662f\uff1acache\u548cmemory\u5177\u6709\u4e00\u81f4\u6027\uff0ccache\u5185\u7684block\u9700\u8981\u88ab\u66ff\u6362\u65f6\uff0c\u76f4\u63a5\u4e22\u6389\u5373\u53ef\u3002\u540c\u65f6\u53ea\u9700\u8981\u4e00\u4e2avalid bit\uff0c\u4e0d\u9700\u8981dirty bit\u68c0\u67e5\u662f\u5426\u4fee\u6539\u8fc7</code></p> </li> <li> <p>If the data is NOT written to memory, the cache is called a write-back cache</p> <ul> <li>Can\u2019t just discard cached data - may have to write it back to memory</li> <li>Cache control bits: both valid and dirty bits</li> <li>much lower bandwidth, since data often overwritten multiple times</li> </ul> <p><code>\u574f\u5904\u662f\uff1a\u9700\u8981\u4e00\u4e2adirty bit\uff0c\u9700\u8981\u68c0\u67e5\u662f\u5426\u88ab\u4fee\u6539\u8fc7\u3002cache\u548cmemory\u4e0d\u4e00\u81f4\u3002</code></p> <p><code>\u597d\u5904\u662f\uff1a\u5bf9\u67d0\u4e00\u4e2a\u6570\u636e\u6267\u884c\u591a\u6b21\u7684\u5199\u5165\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u53ea\u9700\u5728\u6700\u540e\u5199\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u901f\u5ea6\u5feb</code></p> </li> </ul> <p>\u5199\u56de\u9700\u8981\u65f6\u95f4\uff0c\u6211\u4eec\u9700\u8981 write stall.  </p> <p>Write stall -- When the CPU must wait for writes to complete during write through.  </p> <p>\u6211\u4eec\u5f80\u5f80\u4f7f\u7528 write buffer.  </p> <ul> <li> <p>A small cache that can hold a few values waiting to go to main memory.</p> </li> <li> <p>It does not entirely eliminate stalls since it is possible for the buffer to fill if the burst is larger than the buffer. </p> <p><code>buffer \u53ef\u80fd\u88ab\u586b\u6ee1\uff0c\u4e0d\u80fd\u5b8c\u5168\u907f\u514d write stall</code>. </p> </li> </ul> <p><code>\u5b58\u5728\u95ee\u9898\uff1a\u5f53\u6211\u5982\u679c\u8981\u8bfb\u7684\u65f6\u5019\uff0c\u6570\u636e\u8fd8\u5728 buffer \u91cc\u6ca1\u6709\u88ab\u5199\u5165\u5185\u5b58\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u5728 buffer \u91cc\u9762\u6bd4\u8f83\uff0c\u5982\u679c\u6ca1\u6709\u518d\u5728\u5185\u5b58\u91cc\u627e\u3002</code></p> <p>Write miss</p> <ul> <li>write allocate</li> <li>write around(no write allocate)</li> </ul> <ul> <li> <p>Write allocate  </p> <p>The block is loaded into the cache on a miss before anything else occurs.  </p> <p><code>\u8bfb\u53d6\u5230cache\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u751f\u66ff\u6362\uff0c\u8fd8\u9700\u8981\u68c0\u67e5\u88ab\u66ff\u6362\u7684\u6570\u636edirty bit\u662f\u5426\u4e3a1\uff0c\u662f\u5426\u9700\u8981\u5199\u56de\u5185\u5b58</code></p> <p>\u5e38\u4e0e write back \u642d\u914d</p> </li> <li> <p>Write around (no write allocate)  </p> <p>\u5e38\u4e0e write through \u642d\u914d</p> <ul> <li>The block is only written to main memory</li> <li>It is not stored in the cache.</li> </ul> </li> </ul> <p></p> <ol> <li> <p>Compulsory miss\u5f3a\u5236\u5931\u6548\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u65f6\uff0cblock\u4e00\u5b9a\u4e0d\u5b58\u5728</p> </li> <li> <p>capacity miss\u5bb9\u91cf\u5931\u6548\uff1acache\u7684\u5bb9\u91cf\u4e0d\u591f\uff0c\u88ab\u66ff\u6362\u51fa\u53bb\u7684block\u540e\u7eed\u4ecd\u9700\u8981\u8bbf\u95ee</p> </li> <li> <p>conflict miss\u51b2\u7a81\u5931\u6548\uff1a\u4f8b\u5982direct mapped\u4e2d\uff0c\u591a\u4e2amemory block\u5bf9\u5e94\u4e00\u4e2acache block\uff0c\u5373\u4f7fcache\u6ca1\u6709\u6ee1\uff0c\u4e5f\u4f1a\u53d1\u751f\u66ff\u6362</p> </li> </ol> <p><code>\u63d0\u9ad8\u5173\u8054\u5ea6\uff0cset\u4e2dblock\u7684\u6570\u91cf\u3002\u867d\u7136miss\u7684\u6982\u7387\u51cf\u5c0f\uff0c\u4f46\u662f\u8bbf\u95ee\u65f6\u95f4\u589e\u52a0</code></p> <p></p> <p>\u7a7a\u95f4\u5c40\u90e8\u6027\u539f\u7406\u7684\u4f7f\u7528\uff1a</p> <p>Spatial locality  \u7a7a\u95f4\u5c40\u90e8\u6027</p> <p>Items near those accessed recently are likely to be accessed soon  </p> <p>\u6700\u8fd1\u8bbf\u95ee\u7684\u9879\u76ee\u9644\u8fd1\u7684\u9879\u76ee\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u88ab\u8bbf\u95ee</p> <p>\u5982\u6570\u7ec4\uff0c\u6211\u4eec\u8bbf\u95ee\u4e86\u8fd9\u4e2a\u5143\u7d20\u540e\u5927\u6982\u7387\u8fd8\u8981\u8bbf\u95ee\u540e\u9762\u7684\u5143\u7d20</p> <p><code>Larger blocks exploit spatial locality</code></p> <p>\u5229\u7528\u5728\u4e00\u4e2ablock\u4e2d\u88c5\u5c3d\u66f4\u591a\u7684word\uff0c\u8fd9\u6837\u5c31\u628a\u76f8\u90bb\u7684\u6570\u636e\u90fd\u5b58\u653e\u5728\u4e86\u4e00\u8d77\u3002</p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#534-designing-the-memory-system-to-support-cache","title":"5.3.4 Designing the Memory system to Support Cache","text":"<p>\u4e3a\u4e86\u63d0\u9ad8 cache \u7684\u6027\u80fd\uff0c\u6211\u4eec\u6709\u4e0d\u540c\u7684 memory \u7ec4\u7ec7\u67b6\u6784</p> <ul> <li> <p>Performance basic memory organization</p> <p> </p> <p><code>\u4f20\u8f93\u4e00\u4e2aword\u6240\u9700\u7684\u65f6\u95f4\u4e3a</code>\uff1a1\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u9001\u6307\u5b9a\u7684\u5730\u5740\uff0c15\u4e2a\u65f6\u949f\u5468\u671f\u4eceDRAM\u4e2d\u53d6\u51fa\u6570\u636e\uff0c1\u4e2a\u65f6\u949f\u5468\u671f\u8fd4\u56de\u7ed3\u679c \\(1 + 15 + 1 = 17 cycles\\)</p> <p><code>\u5982\u679c\u662f\u4f20\u8f93\u4e00\u4e2ablock/miss penalty</code>\uff0c\u6240\u82b1\u7684\u65f6\u95f4\u4e3a\uff1a\u5730\u5740\u53ea\u9700\u8981\u4f20\u8f93\u4e00\u6b21\uff08\u8fde\u7eed\u5b58\u50a8\uff09\uff0c4\u6b21\u53d6\u6570\u636e\u4f20\u6570\u636e\uff0c\u6240\u4ee5\u65f6\u95f4\u4e3a\\(1 + 4\\times (15 + 1) = 65cycles\\)</p> <p><code>\u4ece\u800c\u8ba1\u7b97\u51fa\u5e26\u5bbdbandwidth(\u4f20\u8f93\u4e00\u4e2ablock\uff0c\u6bcf\u4e00\u4e2abyte\u6240\u82b1\u8d39\u7684\u65f6\u95f4)\uff1a</code>\\(\\dfrac{4 \\times 4}{65} \\approx \\dfrac{1}{4}\\)</p> </li> <li> <p>Performance in Wider Main Memory  </p> <p>\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u4e24\u4e2a word. </p> <p> </p> <p>\u4f46\u662f\u8fd9\u65f6\u5185\u5b58\u592a\u5927\uff0c\u4ee3\u4ef7\u592a\u5927</p> </li> <li> <p>Performance in Four-way interleaved memory</p> <p> </p> <p><code>\u6267\u884c\u65b9\u6cd5\u4e3a\uff1a\u7b2c1\u4e2a\u65f6\u949f\u5468\u671f\u5c06\u5730\u5740\u4f20\u7ed9bank0\uff0c\u7b2c2\u4e2a\u65f6\u949f\u5468\u671f\u5c06\u5730\u5740\u4f20\u7ed9bank1\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u76f4\u5230\u7b2c16\u4e2a\u65f6\u949f\u5468\u671f\uff0cbank0\u5185\u5b8c\u6210\u6570\u636e\u7684\u8bfb\u53d6\uff0c\u7b2c17\u4e2a\u65f6\u949f\u5468\u671f\uff0cbank0\u7684\u6570\u636e\u4f20\u8f93\u56de\u53bb\uff0cbank1\u5185\u5b8c\u6210\u6570\u636e\u7684\u8bfb\u53d6\u3002\u6700\u540e\u5728\u7b2c20\u4e2a\u65f6\u949f\u5468\u671f\uff0cbank3\u5b8c\u6210\u6570\u636e\u7684\u4f20\u8f93</code></p> <p>\u6240\u4ee5\u82b1\u8d39\u7684\u603b\u65f6\u95f4\u662f\uff1a\\(1 + 15 + 1 + 3(\u5ef6\u8fdf) = 20\\)</p> </li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#54-measuring-and-improving-cache-performance","title":"5.4 Measuring and improving cache performance","text":"<ul> <li>How to measure cache performance?</li> <li>How to improve performance?<ul> <li><code>Reducing cache misses</code> by more flexible placement of blocks</li> <li><code>Reducing the miss penalt</code>y using multilevel caches</li> </ul> </li> </ul> <p>Average Memory Assess time = hit time + miss time =  hit rate \\(\\times\\) Cache time + miss rate \\(\\times\\) memory time</p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#541-measuring-cache-performance","title":"5.4.1 Measuring cache performance","text":"<p>We use CPU time to measure cache performance.  </p> \\[ \\begin{aligned} &amp;CPU\\  Time = (CPU\\  execution\\  clock\\  cycles +  Memory \\ stall \\ clock\\  cycles ) \\\\ &amp;\\times Clock\\  cycle\\  time \\end{aligned} \\] <p>\u8fd9\u91cc CPU \u7684\u6267\u884c\u65f6\u95f4\u5728\u8bbe\u8ba1\u6d41\u6c34\u7ebf\u7684\u65f6\u5019\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u6211\u4eec\u65e0\u9700\u8003\u8651\u3002</p> \\[ \\begin{align*} Memory\\ stall\\  clock\\ cycles &amp; =  instructions \\times miss\\  ratio \\times miss \\  penalty \\\\ &amp; = Read \\ stall\\  cycles + Write\\ stall\\  cycles \\end{align*} \\] <ul> <li> <p>For Read-stall  </p> \\[ Read \\ stall\\ cycles = \\dfrac{Read}{Program}\\times Read\\ miss\\ rate \\times Read\\ miss\\ penalty \\] <p>\u5305\u62ec\u53d6\u6307\u548c\u6570\u636e\u52a0\u8f7d\u3002</p> </li> <li> <p>For a write-through plus write buffer scheme   $$   Write  stall cycles = \\left(\\dfrac{Write}{Program} \\times Write miss rate \\times Write miss penalty\\right) \\   +Write buffer stalls   $$</p> <ul> <li>If the write buffer stalls are small, we can safely ignore them.  </li> </ul> <p>\u4e00\u822c\u6765\u8bf4 buffer \u4e0d\u4f1a\u6ea2\u51fa\u3002</p> <ul> <li>If the cache block size is one word, the write miss penalty is 0.  </li> </ul> <p>\u5927\u5c0f\u662f\u4e00\u4e2a word, \u66ff\u6362\u51fa\u53bb\u5c31\u76f4\u63a5\u5199\u4e86\u3002</p> </li> </ul> <p>In most write-back cache organizations, the read and write miss penalties are the same.</p> <p><code>Read miss penalty\uff1aread miss \u662f\u5c06block\u4f20\u8f93\u5230cache\uff0c\u518d\u8fdb\u884c\u8bfb\u53d6\u3002write miss \u662fwrite allocate\uff08\u5e38\u4e0ewrite back\u642d\u914d\uff09\uff0c\u5728cache\u548cmemory\u90fd\u6267\u884c\u5199\u5165</code></p> <p>If we neglect the write buffer stalls, we get the following equation: </p> <p><code>Read stall \u548c Write stall\u5408\u5e76\uff0cRead\u548cwrite\u5408\u5e76\u4e3amemory access</code></p> \\[ \\begin{align*} Memory \\ stall\\ clock\\ cycles &amp; =\\dfrac{Memory\\ accesses}{Program}\\times Miss\\ rate\\times Miss\\ penalty\\\\ &amp; =\\dfrac{Instructions}{Program}\\times \\dfrac{Misses}{Instructions}\\times Miss\\ penalty \\end{align*} \\] <p></p> <p><code>\u6ce8\u610f\u6b64\u5904\u8ba1\u7b97hit time\u7684\u65f6\u5019\uff0c\u5e94\u5f53\u76f4\u63a5\u4f7f\u7528cache time\uff0c\u4e0d\u7528hit rate * cache time\u3002\u56e0\u4e3a\u4e0d\u7ba1\u6709\u65e0hit\uff0c\u90fd\u9700\u8981\u8fdb\u884ctag\u7684\u6bd4\u8f83\u3002\u5982\u679chit\uff0c\u76f4\u63a5\u4ececache\u4e2d\u8bfb\u53d6\u5373\u53ef\u3002\u5982\u679c\u6ca1\u6709hit\uff0c\u5e94\u5f53\u5148\u5c06\u6570\u636e\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u5230cache\uff0c\u518d\u4ececache\u4e2d\u8bfb\u53d6\uff0c\u6240\u4ee5\u4e24\u8005\u7684cache time\u76f8\u540c</code></p> <p>example\uff1aCalculating cache performance</p> <p> </p> <p> </p> <p>\u5185\u5b58\u5360\u4e86\u6027\u80fd\u74f6\u9888\u3002  </p> <p><code>\u5047\u8bbe\u6211\u4eec\u628a\u65f6\u949f\u9891\u7387\u63d0\u9ad8\u4e24\u500d\uff0c\u76f8\u540c\u7684\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\uff0c\u5bfc\u81f4\u5185\u5b58\u7684miss penalty\u4f1a\u63d0\u9ad8\u4e24\u500d\uff0c\u6240\u9700\u7684cycle\u6570\u662f\u539f\u6765\u7684\u4e24\u500d</code> </p> <p>\u7531\u4e8e\u65f6\u949f\u9891\u7387\u63d0\u9ad8\u4e86\u4e00\u500d\uff0c\u76f8\u5e94\u7684cycle time\u4f1a\u53d8\u4e3a\u539f\u6765\u7684\u4e8c\u5206\u4e4b\u4e00\uff0c\u6240\u4ee5\u6700\u540e\u8ba1\u7b97\u65f6\u95f4\u7684\u65f6\u5019\u9700\u8981\u00d7\u4e8c\u5206\u4e4b\u4e00</p> <p>\u6b64\u65f6 CPU \u6027\u80fd\u5b9e\u9645\u53ea\u63d0\u5347 1.23 \u500d\u3002</p> <p> </p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#542-improving","title":"5.4.2 Improving","text":""},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5421-solution1","title":"5.4.2.1 solution1","text":"<p>\u63d0\u9ad8 cache \u547d\u4e2d\u7387\uff1b\u51cf\u5c0f penalty.  </p> <p><code>Reducing cache misses by more flexible placement of blocks</code></p> <p></p> <p>\u5982\u679c\u6211\u4eec\u6b63\u597d\u4ee5\u6a21\u957f\u4e3a\u6b65\u8ddd\u8bbf\u95ee\uff0c\u5c31\u4f1a\u4e00\u76f4 miss. \u4f46\u5176\u5b9e\u6b64\u65f6 cache \u4e2d\u8fd8\u6709\u5f88\u591a\u7a7a\u4f4d\u3002</p> <ol> <li> <p>The disadvantage of a direct-mapped cache          </p> <p>\u591a\u4e2amemory block \u5bf9\u5e94\u5355\u4e2acache block\uff0cmiss\u7684\u6982\u7387\u592a\u5927</p> </li> <li> <p>The basics of a set-associative cache</p> <p> </p> <p> </p> <p>two way set associative \u4e00\u4e2aset\u4e24\u4e2a\u7b49\u4ef7\u7684block\uff0c\u6b64\u5904\u76f4\u63a5\u8fde\u63a5\u5728\u4e00\u8d77</p> </li> <li> <p>Miss rate versus set-associative</p> <p>\u6ce8\u610f block addr \u662f\u5ffd\u7565\u4e86\u5730\u4f4d\u7684 byte offset \u7684\u3002</p> <p> </p> <p>\u6b64\u5904\u7684\u66ff\u6362\u7b56\u7565\u662fLRU\uff0c\u6700\u8fd1\u6700\u5c11\u7b56\u7565</p> <p>\u5168\u5173\u8054\u7684miss\u6b21\u6570\u6700\u5c11\uff0c\u4f46\u662f\u6bcf\u4e00\u6b21\u7684\u5f00\u9500\u662f\u6700\u5927\u7684</p> </li> <li> <p>locating a block in the set-associative cache</p> <p></p> <p>\u5148\u627e\u5230\u5bf9\u5e94\u7684set\uff0c\u518d\u904d\u5386set\u4e2d\u7684block\uff0c\u6839\u636evalid bit\u548ctag\uff0c\u627e\u5230\u5bf9\u5e94\u7684block</p> <p><code>\u9996\u5148set index\u7684\u4f4d\u6570\u4e3a8\uff0c\u6709256\u4e2aset\uff0c\u4e00\u4e2aset\u67094\u4e2ablock\uff0c\u4e00\u4e2ablock\u67091\u4e2aword\uff0c\u5219\u4e0a\u8ff0cache\u80fd\u591f\u5b58\u50a8</code>\\(256 \\times 4 \\times 4bytes = 4KB\\)\u7684\u6570\u636e</p> </li> <li> <p>Size of tags versus set associativity      </p> <p>\u5bf9\u4e8edirect mapped\uff0ccache\u4e00\u5171\u67094K\u4e2ablock\uff0c\u5bf9\u5e94\u7684index\u7684\u4f4d\u6570\u662f12</p> <p>Block size\u662f4words\uff0c\u90a3\u4e48byte offset\u7684\u4f4d\u6570\u5c31\u662f4</p> <p>tag\u7684\u4f4d\u6570\u5c31\u662f32-12-4 = 16</p> <p> </p> <p>\u5bf9\u4e8eTwo-way association\uff0ccache set\u7684\u6570\u91cf\u4e3a4K/2 = 2K\uff0c\u6240\u9700\u7684index\u7684\u4f4d\u6570\u662f11\u4f4d</p> <p>\u5bf9\u5e94\u7684tag\u7684\u4f4d\u6570\u662f32-11-4 = 17</p> </li> <li> <p>Choose which block to replace</p> <p>Random\uff0cLRU\uff0cFIFO</p> </li> </ol>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#5422-solution2","title":"5.4.2.2 solution2","text":"<p>Decreasing miss penalty with multilevel caches</p> <p>\u901a\u8fc7\u591a\u7ea7\u7f13\u5b58\u51cf\u5c11\u672a\u547d\u4e2d\u4ee3\u4ef7</p> <p>Add a second level cache:</p> <ul> <li>often primary cache is on the same chip as the processor</li> <li>use SRAMs to add another cache above primary memory (DRAM)</li> <li>miss penalty goes down if data is in 2nd level cache</li> </ul> <p><code>primary cache\uff08\u4e00\u7ea7\u7f13\u5b58\uff09\u4e0e\u5904\u7406\u5668\u4f4d\u4e8e\u540c\u4e00\u82af\u7247\u4e0a\uff0c\u4f7f\u7528 SRAM \u5728main memory \uff08DRAM\uff09 \u4e0a\u65b9\u6dfb\u52a0\u53e6\u4e00\u4e2a\u7f13\u5b58cache\uff08\u4e8c\u7ea7\u7f13\u5b58\uff09</code></p> <p>Example</p> <p> </p> <ul> <li> <p>\u5047\u8bbe\u6ca1\u6709\u4e8c\u7ea7cache\uff0cmiss penalty to the main memory is \\(100ns/0.2ns = 500cycles\\)</p> <p>The CPI with one level of cache  $$ \\begin{aligned} Total  CPI &amp;= 1.0 + Memory  stall  cycles  per instruction\\ &amp;=1.0 + miss  rate \\times miss  penalty \\ &amp; = 1.0 + 0.02 \\times 500 = 11 \\end{aligned} $$</p> </li> <li> <p>\u6dfb\u52a0\u4e8c\u7ea7\u7f13\u5b58\u4e4b\u540e\uff0c\u4e00\u7ea7\u7f13\u5b58\u8bbf\u95ee\u4e8c\u7ea7\u7f13\u5b58\u7684\u65f6\u95f4\u4e3a5ns\uff0c\u5bf9\u5e94\u7684penalty\u4e3a\\(5ns/0.2ns = 25cycles\\)</p> <p><code>The CPI with Two level of cache with 0.5% miss rate for main memory</code></p> \\[ \\begin{aligned} &amp;Total \\ CPI \\\\ &amp;= 1.0 + Primary \\ stall \\ per \\ instruction + Secondary \\ stalls \\ per \\ instruction \\\\ &amp;=1.0 + 0.02 \\times 25 + 0.005 \\times 500\\\\ &amp;=1.0+0.5+2.5\\\\ &amp;=4 \\end{aligned} \\] <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6027\u80fd\u63d0\u9ad8\u4e86\\(11/4 = 2.8\\)\u500d</p> </li> </ul> <p>Using multilevel caches:</p> <ul> <li>try and optimize the hit time on the 1st level cache</li> <li>try and optimize the miss rate on the 2nd level cache</li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#55-virtual-memory","title":"5.5 Virtual Memory","text":"<p>Main Memory act as a \u201cCache\u201d for the secondary storage.  </p> <p>\u628a\u4e3b\u5b58\u5f53\u4f5c\u78c1\u76d8\u7684\u7f13\u5b58\u3002</p> <ul> <li> <p>Efficient and safe sharing of memory among multiple programs.  </p> <p>\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u9ad8\u6548\u5b89\u5168\u5730\u5171\u4eab\u5185\u5b58\u3002</p> <p>\u4e0d\u540c\u7a0b\u5e8f\u6709\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6211\u4eec\u5e0c\u671b\u53ea\u8003\u8651\u81ea\u5df1\u7684\u7a7a\u95f4\uff0c\u4e0d\u5728\u4e4e\u5176\u4ed6\u7a0b\u5e8f\u653e\u5728\u54ea\u91cc\u3002\u8ba9\u8fdb\u7a0b\u8ba4\u4e3a\u662f\u81ea\u5df1\u72ec\u6709\u8fd9\u5757\u5730\u5740\u7a7a\u95f4\u3002</p> </li> <li> <p>Remove the programming burdens of a small, limited amount of main memory.  </p> <p>\u6d88\u9664\u5c11\u91cf\u3001\u6709\u9650\u7684\u4e3b\u5b58\u50a8\u5668\u7684\u7f16\u7a0b\u8d1f\u62c5\u3002</p> </li> </ul> <p>Translation of a program\u2019s address space to physical address.  </p> <p><code>\u865a\u62df\u5185\u5b58\u7684\u4f5c\u7528\u5c31\u662f\u7ffb\u8bd1\u3002\uff08\u5185\u5b58\u662f\u788e\u7247\u5316\u7684\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u7a0b\u5e8f\u8ba4\u4e3a\u5730\u5740\u662f\u8fde\u7eed\u7684\uff09</code></p> <p>Advantages:</p> <ul> <li> <p>illusion of having more physical memory</p> <p>\u62e5\u6709\u66f4\u591a\u7269\u7406\u5185\u5b58\u7684\u9519\u89c9</p> </li> <li> <p>program relocation </p> </li> <li> <p>protection</p> </li> </ul> <p><code>\u865a\u62df\u5b58\u50a8\u5b9e\u9645\u4e0a\u5c31\u662f\u5730\u5740\u7684\u8f6c\u5316\uff0c\u6267\u884c\u7684\u7a0b\u5e8f\u7684\u5730\u5740\uff08PC+4\uff0c\u8fde\u7eed\uff09\u8f6c\u5316\u5230\u5185\u5b58\u4e2d\u3001\u78c1\u76d8\u4e2d\uff08\u79bb\u6563\u7684\uff09\u3002\u7531\u4e8e\u5185\u5b58\u7684\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u6709\u4e00\u90e8\u5206\u7684\u6307\u4ee4\u76f4\u63a5\u6620\u5c04\u5230\u78c1\u76d8\u4e2d\uff0c\u4eff\u4f5b\u81ea\u5df1\u7684\u5185\u5b58\u80fd\u591f\u505a\u5230\u65e0\u9650\u5927</code></p> <p><code>\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981virtual memory\uff1f</code></p> <ol> <li>\u7a0b\u5e8f\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u53ef\u80fd\u662f\u5206\u6563\u7684\u4e0d\u8fde\u7eed\u7684\u3002\u4f46\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u5019\uff0c\u8981\u6c42\u80fd\u591fPC+4.\u9700\u8981\u8fde\u7eed\u7684\u6267\u884c\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884ctranslation</li> <li>\u5b58\u5728\u7a0b\u5e8f\u5f88\u5927\uff0c\u65e0\u6cd5\u5728\u5185\u5b58\u4e2d\u5b8c\u6574\u653e\u4e0b\u7684\u56f0\u96be\u3002\u6240\u4ee5\u4e00\u90e8\u5206\u7684\u7a0b\u5e8f\u9700\u8981\u653e\u5230\u786c\u76d8\u4e2d\uff0c\u9700\u8981\u4f7f\u7528virtual memory \u5b8c\u6210\u6620\u5c04</li> </ol>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#551-pages-virtual-memory-blocks","title":"5.5.1 Pages: virtual memory blocks","text":"<p>page \u662f\u6620\u5c04\u7684\u6700\u5c0f\u5355\u4f4d\u3002  </p> <p>Page faults: the data is not in memory, retrieve it from disk</p> <p><code>\u9875\u7f3a\u5931\uff08\u76f8\u5f53\u4e8emiss\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6570\u636e\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u9700\u8981\u4ece\u78c1\u76d8\u4e2d\u68c0\u7d22\u83b7\u53d6</code></p> <ul> <li> <p>huge miss penalty, thus pages should be fairly large e.g. 4KB</p> <p><code>\u5c06\u6570\u636e\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u5230\u5185\u5b58\uff0c\u901f\u5ea6\u7f13\u6162\uff0c\u4ee3\u4ef7\u592a\u5927</code></p> </li> <li> <p>reducing page faults is important </p> <p>\uff08<code>LRU is worth the price\uff0c\u4f7f\u7528LRU\u66ff\u6362\u7b56\u7565\u66ff\u6362\u5185\u5b58\u4e2d\u6570\u636e</code>\uff09 </p> </li> <li> <p>can handle the faults in software instead of hardware  </p> <p><code>\u7f3a\u9875\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\u7684\uff0c\u800c\u4e0d\u662f\u786c\u4ef6(cache \u662f\u786c\u4ef6\u505a\u7684)</code></p> </li> <li> <p>using write-through is too expensive so we use write back  </p> <p><code>\u4f7f\u7528write back\u800c\u4e0d\u662fwrite through\uff0c\u6b64\u5904\u7684write through\u7684\u610f\u601d\u662f\u65e2\u5199\u5230\u5185\u5b58\u4e2d\uff0c\u53c8\u5199\u5230\u78c1\u76d8\u3002\u4f46\u662f\u5199\u5230\u78c1\u76d8\u7684\u64cd\u4f5c\u592a\u6162\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528write back\uff0c\u4e5f\u5c31\u662f\u4ec5\u4ec5\u5199\u5230\u5185\u5b58\u4e2d\u3002</code></p> <p>\u786c\u76d8\u64cd\u4f5c\u592a\u6162\u4e86\uff0c\u6211\u4eec\u53ea\u5728\u88ab\u8e22\u51fa\u7684\u65f6\u5019\u5199\u56de\u3002\u56e0\u6b64\u7a81\u7136\u65ad\u7535\u7684\u65f6\u5019\u6570\u636e\u4f1a\u4e22\u5931\u3002</p> </li> </ul> <p>\u5047\u8bbe\u73b0\u5728\u5185\u5b58\u6709\\(2^{30}\\)byte,\u4e5f\u5c31\u662f1G\u7684\u7a7a\u95f4\u3002\u7531\u4e8epage\u7684\u5927\u5c0f\u4e3a4KB\uff0c\u5728page\u5185\u5bfb\u5740\u6240\u9700\u7684page offset\u6240\u9700\u7684\u4f4d\u6570\u4e3a12\u4f4d\u3002</p> <p>CPU\u7ed9\u51fa\u7684\u5730\u574032\u4f4d\u53eb\u505a\u865a\u62df\u5730\u5740\uff08<code>\u5927\u5c0f\u56fa\u5b9a\uff0c\u4e00\u822c\u4e3a32\u4f4d\u6216\u800564\u4f4d</code>\uff09</p> <p>translation\u7684\u4f5c\u7528\u5c31\u662f\u5c06Virtual page number\u8f6c\u5316\u4e3aphysical page number\uff0c\u5bf9\u5e94\u7684page offset\u4e0d\u53d1\u751f\u6539\u53d8\uff0c\u76f4\u63a5\u8fc1\u79fb</p> <p>Larger number of virtual pages than physical pages\uff1f</p> <p>\u865a\u62df\u9875\u7684\u6570\u91cf\u6bd4\u7269\u7406\u9875\u591a\uff08\u73b0\u5728\u4e0d\u4e00\u5b9a\uff09\u3002</p> <p>\u53ea\u8981\u7269\u7406\u5185\u5b58\u591f\u5927\uff0c\u80fd\u591f\u5bb9\u7eb3\u7684page\u6570\u91cf\u5c31\u591a\uff0c\u76f8\u5e94\u7684physical page number\u6240\u9700\u7684\u4f4d\u6570\u4e5f\u589e\u52a0\uff0c\u53ef\u4ee5\u4f1a\u6bd4virtual page number\u7684\u4f4d\u6570\u8981\u591a</p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#552-page-tables","title":"5.5.2 Page Tables","text":"<p><code>\u53ef\u80fd\u5b58\u5728\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\u7684\u60c5\u51b5\u3002\u6b64\u65f6\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u90fd\u9700\u8981\u4e00\u4e2a\u81ea\u5df1\u7684virtual memory\u3002\u56e0\u4e3a\u4e0d\u540c\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u53ef\u80fd\u5b58\u5728virtual memory page\u76f8\u540c\u7684\u53ef\u80fd\u3002\u56e0\u6b64\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u90fd\u9700\u8981\u6709\u81ea\u5df1\u7684page table</code></p> <p>page table\u672c\u8eab\u5b58\u5728 memory \u91cc\uff0c\u8bb0\u5f55\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\u3002\uff08\u7d22\u5f15\u662f\u865a\u62df\u5730\u5740\u7684\u9ad8\u4f4d\uff0c\u627e\u5230\u8868\u4e2d\u5bf9\u5e94\u9879\uff0c\u5c31\u662f\u7269\u7406\u5730\u5740\uff0c\u524d\u63d0\u662fpage\u521a\u597d\u5728\u5185\u5b58\u4e2d\uff09</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684 Page table, Program counter and the page table register.  </p> <p><code>\u5982\u4f55\u5207\u6362\u8fdb\u7a0b\u5462\uff1f\u5207\u6362\u5230\u5bf9\u5e94\u7684page table\uff0c\u7136\u540e\u5c06program count\u8f6c\u5316\u5230\u8fdb\u7a0b\u5f53\u524d\u6240\u5904\u7684\u72b6\u6001</code></p> <p>Virtual memory systems use fully associative mapping method. </p> <p>\u4e3a\u4e86\u63d0\u9ad8\u547d\u4e2d\u7387\uff0c\u6211\u4eec\u91c7\u7528\u5168\u76f8\u8054\u7684\u65b9\u5f0f\u3002\u8fd9\u5bfc\u81f4\u66ff\u6362\u7b56\u7565\uff08\u6bd4\u5982 LRU\uff09\u5f88\u590d\u6742\uff0c\u4f46\u56e0\u4e3a\u662f OS \u7f16\u5199\uff0c\u6240\u4ee5\u95ee\u9898\u4e0d\u5927\u3002</p> <p><code>page table register\u7684\u4f5c\u7528\uff1a\u7528\u4e8e\u8ffd\u8e2apage table\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e</code></p> <p><code>page table\u4e2d\u8fd8\u5b58\u5728 valid bit\uff0c\u8868\u793apage\u662f\u5426\u5728\u5185\u5b58\u4e2d</code></p> <p></p> <p><code>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u521b\u5efa\u8fdb\u7a0b\u7684    \u65f6\u5019\uff0c\u5b83\u4f1a\u5728disk\u4e2d\u4e5f\u521b\u5efa\u4e00\u4e2apage\u96c6\u5408\u3002\u5982\u679cpage fault\u53d1\u751f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5f02\u5e38\u673a\u5236\uff0c\u627e\u5230\u7f3a\u5931\u7684\u9875\u5728disk\u4e2d\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u5c06\u5bf9\u5e94\u7684page\u5199\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u7684page\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5c31\u4f1a\u91c7\u7528LRU\u7b56\u7565\u66ff\u6362\u6389\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684page</code></p> <p></p> <p>entry size \u6307\u7684\u662f\u9875\u8868\u91cc\u6bcf\u6761\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f<code>virtual page number \u6307\u5411 physical page number\u7684\u90a3\u4e2a\u6761\u76ee\u7684\u5927\u5c0f\uff08\u5305\u542bvalid bit....\uff09</code> </p> <p>\u9875\u8868\u8981\u80fd\u628a\u6240\u6709\u7684\u9875\u90fd\u80fd\u653e\u4e0b\u3002\uff08\u6bcf\u4e2a\u865a\u62df\u9875\u90fd\u9700\u8981\u5b58\u653e\u5bf9\u5e94\u7684\u7269\u7406\u9875\uff09  \u3002\u9996\u5148\u9700\u8981\u8ba1\u7b97\u51fa\u865a\u62df\u9875\u7684\u9875\u6570\uff0c\u518d\u4e58\u4ee5\u6bcf\u4e00\u4e2aentry\u7684size\uff0c\u5f97\u5230\u7684\u5c31\u662fpage table \u7684size</p> <p>\u6211\u4eec\u9700\u8981\u51cf\u5c0f\u9875\u8868\u7684\u5927\u5c0f\u3002</p> <p></p> <p>disk write \u5f88\u6162\uff0c\u56e0\u6b64\u6211\u4eec\u7528 write-back \u7684\u7b56\u7565\uff0c\u9700\u8981\u6709\u4e00\u4e2a dirty bit.  </p> <p>The dirty bit is set when a page is first written. If the dirty bit of a page is set, the page must be written back to disk before being replaced.</p> <p><code>\u5982\u679c\u8bbe\u7f6e\u4e86\u9875\u9762\u7684dirty bit\uff0c\u5219\u5728\u66ff\u6362\u4e4b\u524d\u5fc5\u987b\u5c06\u9875\u9762\u5199\u56de\u78c1\u76d8\u3002</code></p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#553-making-address-translation-fast--tlb","title":"5.5.3 Making Address Translation Fast--TLB","text":"<p>\u5728 pgtbl \u4e0a\u627e\u4e5f\u662f\u5f88\u6162\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u5165\u4e86 TLB.(CPU \u5185)    </p> <p>The TLB (Translation-lookaside Buffer) acts as Cache on the page table  </p> <p>\u7ed9\u51fa\u865a\u62df\u5730\u5740\uff0c\u5148\u5728 TLB \u627e\uff0c\u627e\u4e0d\u5230\u518d\u53bb\u5185\u5b58\u91cc\u7684\u9875\u8868\u627e\u3002\u4e00\u822c 16~512 entries.</p> <p><code>\u5224\u65ad\u662f\u5426\u6210\u529f\u5728TLB\u627e\u5230\u5bf9\u5e94\u7684physical page number\uff1f\u4f7f\u7528tag\uff0ctag\u5bf9\u5e94\u7684\u4e5f\u662fvirtual page number\u7684\u9ad8\u4f4d</code></p> <p>Example \"FastMATH Memory Hierarchy\"</p> <p> </p> <p></p> <p><code>Virtual address\u5148\u5230TLB\u4e2d\u8fdb\u884c\u5bfb\u627e\uff0cmiss\u6267\u884cTLB miss exception\uff0chit\u5f97\u5230\u5bf9\u5e94\u7684physical page number\u3002\u7136\u540e\u6211\u4eec\u6839\u636ephysical page number\u7684\u9ad8\u4f4d\u4e5f\u5c31\u662fphysical address tag\u5148\u5230cache\u4e2d\u8fdb\u884c\u5bfb\u627e\uff0c\u5982\u679ccache\u627e\u4e0d\u5230\u5c31\u518d\u5230\u5185\u5b58\u4e2d\u5bfb\u627e</code></p> Possible combinations of Event <p><code>\u6700\u540e\u4e09\u4e2a\u4e0d\u53ef\u80fd\u3002\u628apage table\u5f53\u6210memory\u5373\u53ef\uff0cpage table miss \u610f\u5473\u7740\u5f53\u524dpage\u5728\u78c1\u76d8\u4e2d\uff0c\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5728cache\u548cTLB\u4e2d</code></p>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#554-page-faults","title":"5.5.4 Page faults","text":"<p>When the OS creates a process, it usually creates the space on disk for all the pages of a process.   </p> <p>OS \u542f\u52a8\u65f6\uff0c\u628a\u8981\u7528\u7684 page \u5168\u90e8\u653e\u5230\u4e00\u4e2a\u5730\u65b9(swap space) \u4fbf\u4e8e\u67e5\u627e\uff0c\u8bb0\u5f55\u9875\u5728\u786c\u76d8\u7684\u4ec0\u4e48\u4f4d\u7f6e\u3002\uff08\u6709\u7684 OS \u53ef\u80fd\u7528\u53e6\u5916\u7684\u8868\u6765\u7ef4\u62a4\u9875\u5728\u786c\u76d8\u7684\u4f4d\u7f6e\uff09</p> <ul> <li>When a page fault occurs, the OS will be given control through exception mechanism.</li> <li>The OS will find the page in the disk by the page table.</li> <li>Next, the OS will bring the requested page into main memory. If all the pages in main memory are in use, the OS will use LRU strategy to choose a page to replace</li> </ul>"},{"location":"CO/5.%20Large%20and%20Fast%20Exploiting%20Memory%20Hierarchy/#protection-in-the-virtual-memory-system","title":"Protection in the virtual memory System","text":"<p>\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u77e5\u9053\u5176\u4ed6\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/","title":"6. Storage, Networks and Other Peripherals","text":"<p> \u7ea6 5903 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 30 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Introduction</li> <li>Disk Storage and Dependability</li> <li>Networks (Skim)</li> <li>Buses and Other Connections between Processors Memory, and I/O Devices</li> <li>Interfacing I/O Devices to the Memory, Processor, and Operating System</li> <li>I/O Performance Measures:    Examples from Disk and File Systems</li> <li>Designing an I/O system</li> <li>Real Stuff: A Typical Desktop I/O System</li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#61-introduction","title":"6.1 Introduction","text":"<p>\u9664\u4e86 CPU \u7684\u8bbe\u5907\u6211\u4eec\u90fd\u8ba4\u4e3a\u662f I/O.  </p> <p>Assessing I/O system performance is very difficult.  </p> <p>\u4e0d\u540c\u7684\u573a\u666f\u6709\u4e0d\u540c\u7684\u8bc4\u4f30\uff08\u53ef\u6269\u5c55\u6027expandability\uff0c \u53ef\u9760\u6027resilience\uff0cperformance\uff09\u3002</p> <p>Performance of I/O system depends on:</p> <ul> <li>connection between devices and the system</li> <li>the memory hierarchy</li> <li>the operating system</li> </ul> <p>example\uff1a Typical collection of I/O device</p> <p></p> <p>CPU \u548c I/O \u7531\u603b\u7ebf\u8fde\u63a5. I/O \u5f80\u5f80\u901a\u8fc7\u4e2d\u65ad\u7684\u65b9\u5f0f\u901a\u77e5 CPU \u6709\u4e8b\u4ef6\u5904\u7406\u3002 </p> <p>\u4e0d\u540c\u7684\u8bbe\u5907\u6709\u4e0d\u540c\u7684\u9a71\u52a8(I/O controller)</p> <p><code>Three characters of IO</code></p> <ul> <li> <p>Behavior </p> <p>Input (read once), output (write only, cannot read) ,or storage (can be reread and usually rewritten)  \u8f93\u5165/\u8f93\u51fa/\u5b58\u50a8</p> </li> <li> <p>Partner </p> <p>Either a human or a machine is at the other end of the I/O device, either feeding data on input or reading data on output.  \u548c\u8c01\u5bf9\u63a5\uff1f\u4eba/\u673a\u5668</p> </li> <li> <p>Data rate </p> <p>The peak rate at which data can be transferred between the I/O device and the main memory or processor.  \u6570\u636e\u4f20\u8f93\u901f\u7387</p> </li> </ul> <p><code>I/O performance depends on the application.</code> </p> <ul> <li> <p>Throughput \u541e\u5410\u91cf/\u5e26\u5bbd</p> <p><code>\u5355\u4f4d\u65f6\u95f4\u4f20\u8f93\u7684\u6570\u636e\u91cf\uff1b\u5355\u4f4d\u65f6\u95f4 I/O \u7684\u64cd\u4f5c\u6570\u3002</code></p> <ul> <li> <p>How much data can we move through the system in a certain time?</p> <p>\u4f8b\u5982\uff0c\u5728\u8bb8\u591a\u8d85\u7ea7\u8ba1\u7b97\u673a\u5e94\u7528\u4e2d\uff0c\u5927\u591a\u6570 I/O \u8981\u6c42\u90fd\u662f\u9488\u5bf9\u957f\u6570\u636e\u6d41\u7684\uff0c\u4f20\u8f93\u5e26\u5bbd\u662f\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u3002</p> </li> <li> <p>How many I/O operations can we do per unit of time?</p> <p>\u4f8b\u5982\uff0c\u56fd\u5bb6\u6240\u5f97\u7a0e\u5c40\u4e3b\u8981\u5904\u7406\u5927\u91cf\u5c0f\u6587\u4ef6\u3002</p> </li> </ul> </li> <li> <p>Response time </p> <p>e.g., workstation and PC</p> </li> <li> <p>both throughput and response time e.g., ATM \u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u5173\u5fc3\u4e0d\u540c\u7684\u65b9\u9762\u3002</p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#611-amdahls-law","title":"6.1.1 Amdahl\u2019s law","text":"<p><code>Sequential part can limit speedup\u3002make common case fast \u65e0\u6cd5\u52a0\u901f\u7684\u90e8\u5206\u4f1a\u9650\u5236\u603b\u4f53\u7684\u52a0\u901f</code></p> <p><code>\u5904\u7406\u5668\u7684\u8fd0\u884c\u65f6\u95f4\u5206\u4e3a\u5e76\u884c\u90e8\u5206\u548c\u4e32\u884c\u90e8\u5206\uff0c\u4e32\u884c\u90e8\u5206\u53ea\u9700\u4e00\u4e2a\u5904\u7406\u5668\u5373\u53ef\uff0c\u4e0d\u53d1\u751f\u6539\u53d8\uff0c\u5e76\u884c\u90e8\u5206\u53ef\u4ee5\u5206\u644a\u5230100\u4e2a\u5904\u7406\u5668\u3002\u8981\u60f3\u52a0\u901f\u5c3d\u53ef\u80fd\u5730\u660e\u663e\uff0c\u663e\u7136\u5e76\u884c\u90e8\u5206\u7684\u65f6\u95f4\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u957f\uff0c\u8fd9\u6837\u624d\u80fd\u6700\u5927\u5316\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\u3002\u7ee7\u800c\u8bf4\u660e\u7ed3\u8bba Sequential part can limit speedup</code></p> <p>Remind us that ignoring I/O is dangerous. </p> <p>\u4ec5\u4ec5CPU\u6027\u80fd\u63d0\u5347\uff0cIO\u8bbe\u5907\u6027\u80fd\u4e0d\u53d8\uff0c\u603b\u4f53\u7684\u63d0\u5347\u5e45\u5ea6\u4f1a\u7f29\u6c34</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#62-disk-storage-and-dependability","title":"6.2 Disk Storage and Dependability","text":"<p>Two major types of magnetic disks</p> <ul> <li>floppy disks  \u8f6f\u76d8\uff08\u5185\u5b58\uff09</li> <li>hard disks<ul> <li>larger</li> <li>higher density</li> <li>higher data rate</li> <li>more than one platter</li> </ul> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#621-the-organization-of-hard-disk","title":"6.2.1 The organization of hard disk","text":"<ul> <li> <p>platters: disk consists of a collection of platters, each of which has two recordable disk surfaces</p> <p>\u78c1\u76d8\u7531\u4e00\u7ec4\u76d8\u7247\u7ec4\u6210\uff0c\u6bcf\u4e2a\u76d8\u7247\u6709\u4e24\u4e2a\u53ef\u8bb0\u5f55\u7684\u78c1\u76d8\u8868\u9762</p> </li> <li> <p>tracks: each disk surface is divided into concentric circles  </p> <p>\u6bcf\u4e2a\u5706\u76d8\u8868\u9762\u88ab\u5212\u5206\u4e3a\u540c\u5fc3\u5706 </p> </li> <li> <p>sectors: each track is in turn divided into sectors, which is the smallest unit that can be read or written  </p> <p>\u6bcf\u4e2a\u8f68\u9053\u4f9d\u6b21\u5212\u5206\u4e3a\u6247\u533a\uff0c\u8fd9\u662f\u53ef\u4ee5\u8bfb\u6216\u5199\u7684\u6700\u5c0f\u5355\u4f4d </p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#622-to-access-data-of-disk","title":"6.2.2 To access data of disk","text":"<ul> <li> <p>Seek: position read/write head over the proper track  </p> <p>\u6570\u636e\u4e0d\u4e00\u5b9a\u521a\u597d\u5728\u5f53\u524d\u5708\u4e0a\uff0c\u9700\u8981\u627e\u5230\u6570\u636e\u5bf9\u5e94\u7684\u5708\u3002</p> <p><code>average seek time(3 to 14 ms)</code></p> </li> <li> <p>Rotational latency: wait for desired sector  </p> <p>\u627e\u5230\u5708\u540e\uff0c\u7b49\u5f85\u65cb\u8f6c\u5230\u6570\u636e\u8d77\u70b9\u3002 </p> <p><code>RPM \uff1a rotation per minute</code></p> <p> </p> </li> <li> <p>Transfer: time to transfer a sector (1 KB/sector) function of rotation speed  </p> <p>\u628a\u786c\u76d8\u6570\u636e\u642c\u5230\u5185\u5b58\u3002</p> </li> <li> <p>Disk controller \uff1awhich controls the transfer between the disk and the memory</p> </li> </ul> <p>Example \"Disk Read Time\"</p> <p> </p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#623-flash-storage","title":"6.2.3 Flash Storage","text":"<p>Nonvolatile semiconductor storage \u975e\u6613\u5931\u6027\u534a\u5bfc\u4f53\u5b58\u50a8</p> <ul> <li>100\u00d7 \u2013 1000\u00d7 faster than disk</li> <li>Smaller, lower power, more robust</li> <li>But more $/GB (between disk and DRAM)</li> </ul> <p>Flash Types</p> <ul> <li> <p>NOR flash: bit cell like a NOR gate</p> <ul> <li> <p>Random read/write access  </p> <p>\u53ef\u4ee5\u968f\u610f\u8bfb\u5199</p> </li> <li> <p>Used for instruction memory in embedded systems  </p> <p>\u56e0\u6b64\u5728\u5d4c\u5165\u5f0f\u4e2d\u4f5c\u4e3a\u6307\u4ee4\u5b58\u50a8</p> </li> </ul> </li> <li> <p>NAND flash: bit cell like a NAND gate</p> <ul> <li> <p>Denser (bits/area), but block-at-a-time access  </p> <p>\u5bc6\u5ea6\u53ef\u4ee5\u66f4\u9ad8\uff0c\u4f46\u662f\u8bfb\u5199\u8981\u4ee5 block \u4e3a\u5355\u4f4d\uff0c\u4e0d\u80fd\u4efb\u610f\u8bfb\u5199</p> </li> <li> <p>Cheaper per GB  </p> </li> <li> <p>Used for USB keys, media storage  </p> </li> </ul> </li> </ul> <p>Flash bits wears out\uff08\u78e8\u635f\uff09 after 100000\u2019s of accesses. </p> <p>\u5bff\u547d\u77ed\u3002\u56e0\u6b64\u4e0d\u9002\u5408\u505a RAM/\u786c\u76d8\u7684\u66ff\u4ee3\u3002  \u5f53\u5df2\u7ecf\u88ab\u78e8\u635f\u65f6\uff0c\u5c31\u628a\u672c\u6765\u7684\u6570\u636e\u6620\u5c04\u5230\u5176\u4ed6\u5185\u5b58\u3002</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#624-disk-performance-issues","title":"6.2.4 Disk Performance Issues","text":"<p>\u4e00\u822c\u5f97\u5230\u7684\u662f average seek time. </p> <p><code>\u4f9d\u9760\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\uff0cdisk controller\u7684\u5206\u914d\uff0c\u4ee5\u53caprefetch\uff0c\u5b9e\u73b0\u83b7\u53d6sector</code></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#625-dependability","title":"6.2.5 Dependability","text":"<p>\u8861\u91cf\u786c\u76d8\u7684\u6307\u6807\u5c31\u662f\u53ef\u9760\u6027 Dependability(Reliability).  </p> <p>Computer system dependability is the quality of delivered service such that reliance can justifiably be placed on this  service.  \u8fde\u7eed\u63d0\u4f9b\u670d\u52a1\u7684\u65f6\u95f4\u3002</p> <p></p> <ul> <li> <p>MTTF mean time to failure  \u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4</p> </li> <li> <p>MTTR mean time to repair \u5e73\u5747\u4fee\u590d\u65f6\u95f4</p> </li> <li> <p>MTBF (Mean Time Between Failures) \u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4  </p> <p>= MTTF+ MTTR</p> </li> </ul> <p>\u56e0\u6b64\u53ef\u7528\u7684\u65f6\u95f4\u5c31\u662f \\(\\dfrac{MTTF}{MTTF+MTTR}\\)</p> <p><code>\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5305\u62ec\u4e0a\u4e00\u4e2a\u6545\u969c\u7684\u4fee\u590d\u65f6\u95f4+\u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4\u3002\u5728\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5185\uff0c\u53ef\u7528\u7684\u65f6\u95f4\u4ec5\u5305\u62ec\u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4\uff0c\u5728\u4fee\u590d\u65f6\u662f\u4e0d\u53ef\u7528\u7684</code></p> <p>improve MTTF</p> <ul> <li> <p>Fault avoidance </p> <p>preventing fault occurrence by construction  \u5728\u786c\u76d8\u5bff\u547d\u5230\u8fbe\u524d\u66ff\u6362\u786c\u76d8</p> </li> <li> <p>Fault tolerance </p> <p>**using redundancy to allow the service to comply with the service specification despite faults occurring, which applies primarily to hardware faults **</p> <p>\u4f7f\u7528\u5197\u4f59\u5141\u8bb8\u670d\u52a1\u5728\u53d1\u751f\u6545\u969c\u65f6\u4ecd\u7b26\u5408\u670d\u52a1\u89c4\u8303\uff0c\u4e3b\u8981\u9002\u7528\u4e8e\u786c\u4ef6\u6545\u969c</p> <p>eg <code>\u591a\u4e2a\u5730\u65b9\u5907\u4efd,\u591a\u4e2aCPU\u540c\u65f6\u8ba1\u7b97</code></p> </li> <li> <p>Fault forecasting </p> <p>predicting the presence and creation of faults, which applies to hardware and software faults \u9884\u6d4b\u6545\u969c\u7684\u5b58\u5728\u548c\u4ea7\u751f\uff0c\u9002\u7528\u4e8e\u786c\u4ef6\u548c\u8f6f\u4ef6\u6545\u969c </p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#626-redundant-arrays-of-inexpensive-disks","title":"6.2.6 Redundant Arrays of (Inexpensive) Disks","text":"<p>\u4e0d\u540c\u8bbe\u5907\u5bf9\u786c\u76d8\u7684\u9700\u6c42\u91cf\u4e0d\u540c\u3002 </p> <p>\u80fd\u4e0d\u80fd\u7528\u5c0f\u786c\u76d8\u7ec4\u5408\u6210\u5927\u786c\u76d8\uff1f </p> <p></p> <p></p> <p>\u597d\u5904\u662f\u53ef\u4ee5\u6709\u591a\u4e2a\u8bfb\u5199\u53e3\uff0c\u540c\u65f6\u8bbf\u95ee\u3002\u574f\u5904\u662f\u574f\u6389\u7684\u6982\u7387\u66f4\u5927\uff08\u53ea\u8981\u4e00\u4e2a\u5c0f\u78c1\u76d8\u574f\u4e86\uff0c\u6574\u4e2a\u5c31\u574f\u4e86\uff09\u3002</p> <p><code>Hot spares support reconstruction in parallel with access: very high media availability can be achieved.   \u70ed\u5907\u4efd\u53ef\u4ee5\u652f\u6301\u6570\u636e\u91cd\u5efa\u3002</code></p> <p><code>RAID: Redundant Arrays of Inexpensive Disks</code></p> <ul> <li> <p>Files are \"striped\" across multiple disks  \u6587\u4ef6\u4fdd\u5b58\u5728\u591a\u4e2a\u78c1\u76d8\u4e2d</p> </li> <li> <p>Redundancy yields high data availability  </p> </li> <li> <p>Disks will still fail</p> </li> <li> <p>Contents reconstructed from data redundantly stored in the array  </p> <p>\u6570\u636e\u53ef\u4ee5\u4ece\u5197\u4f59\u7684\u7528\u4e8e\u5907\u4efd\u7684\u786c\u76d8\u91cc\u6062\u590d\uff0c\u4ee3\u4ef7\u662f\u5bb9\u91cf\u4f1a\u6709\u635f\u5931\u3002</p> </li> <li> <p><code>\u7f3a\u70b9\uff1a</code></p> <p>Capacity penalty to store redundant info \u5b58\u50a8\u5197\u4f59\u4fe1\u606f\u7684\u5bb9\u91cf\u635f\u5931</p> <p>Bandwidth penalty to update redundant info \u66f4\u65b0\u5197\u4f59\u4fe1\u606f\u7684\u5e26\u5bbd\u635f\u5931</p> </li> </ul> <p><code>widely used: Block-interleaved distributed parity,\u80fd\u591f\u5fcd\u53d7\u4e00\u4e2a\u78c1\u76d8\u7684\u9519\u8bef\uff0c\u9700\u8981\u4e00\u4e2a\u78c1\u76d8\u8fdb\u884c\u68c0\u67e5</code></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-0-no-redundancy","title":"RAID 0: No Redundancy","text":"<p><code>Data is striped across a disk array but there is no redundancy to tolerate disk failure.</code> </p> <p>\u6570\u636e\u88ab\u653e\u5728\u591a\u4e2a\u76d8\u91cc\u63d0\u9ad8\u5e76\u884c\uff0c\u901f\u5ea6\u53ef\u4ee5\u63d0\u9ad8\uff08\u56e0\u4e3a\u80fd\u540c\u65f6\u8bbf\u95ee\uff09</p> <p>RAID 0 something of a misnomer as there is no Redundancy</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-1-disk-mirroringshadowing","title":"RAID 1: Disk Mirroring/Shadowing","text":"<ul> <li> <p>Each disk is fully duplicated onto its \u201cmirror\u201d  </p> <p>\u6bcf\u4e00\u4e2a\u76d8\u7684\u5185\u5bb9\u90fd\u88ab\u590d\u5236\u653e\u5230\u53e6\u4e00\u4e2a\u76d8\u91cc\u3002</p> </li> <li> <p>Bandwidth sacrifice on write  </p> <p>\u5199\u7684\u65f6\u5019\u9700\u8981\u540c\u65f6\u5199\u4e24\u4e2a\u76d8\uff0c\u8bfb\u53ef\u80fd\u88ab\u4f18\u5316\u3002</p> </li> <li> <p>Most expensive solution: 100% capacity overhead</p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-3-bit-interleaved-parity-disk","title":"RAID 3: Bit-Interleaved Parity Disk","text":"<p>P contains sum of other disks per stripe mod 2 (\u201cparity\u201d)  </p> <p>\u5982\u7b2c 1\u30012\u30013 \u4e2a\u76d8\u7684\u7b2c\u4e00\u4e2a bit \u505a\u5947\u5076\u6821\u9a8c\u653e\u5728\u7b2c 4 \u4e2a\u76d8\u3002</p> <p><code>\u5f53\u5176\u4e2d\u4e00\u4e2a\u76d8\u6302\u6389\u7684\u65f6\u5019\uff0c\u8bfb\u51fa\u5176\u4ed6\u76d8\u7684\u6570\u636e\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u539f\u6765\u76d8\u7684\u6570\u636e\u3002</code> </p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-4-block-interleaved-parity","title":"RAID 4: Block-Interleaved Parity","text":"<p>RAID 3 relies on parity disk to discover errors on Read</p> <p>RAID 3 \u4f9d\u9760\u5947\u5076\u6821\u9a8c\u78c1\u76d8\u6765\u53d1\u73b0\u8bfb\u53d6\u65f6\u7684\u9519\u8bef</p> <p><code>RAID 4 \u7684\u6539\u8fdb\u4e4b\u5904\uff1a</code></p> <ul> <li> <p>Every sector has an error detection field</p> </li> <li> <p>Relies on error detection field to catch errors on read, not on the parity disk</p> </li> <li> <p>Allows independent reads to different disks simultaneously</p> </li> </ul> <p><code>\u5141\u8bb8\u540c\u65f6\u5bf9\u4e0d\u540c\u78c1\u76d8\u8fdb\u884c\u72ec\u7acb\u8bfb\u53d6</code></p> <p>\u6211\u4eec\u5e0c\u671b\u81ea\u5df1\u7684\u76d8\u6709\u81ea\u5df1\u7684 error detection, \u4e0d\u9700\u8981\u6821\u9a8c\u76d8\u6765\u68c0\u9a8c\u81ea\u5df1\u5bf9\u4e0d\u5bf9\uff0c\u76d8\u4e0e\u76d8\u4e4b\u95f4\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002<code>\u4e5f\u5c31\u662f\u8bf4\u81ea\u5df1\u77e5\u9053\u81ea\u5df1\u662f\u5426\u51fa\u9519</code></p> <p><code>\u8bf7\u6ce8\u610f\uff1a\u4ee5\u4e0b\u4e00\u4e2a\u5217\u8868\u793a\u4e00\u4e2adisk\uff0c\u4e00\u4e2adisk\u7531\u5f88\u591a\u7684block\u7ec4\u6210\uff0c\u6bcf\u4e00\u4e2ablock\u90fd\u6709\u6821\u9a8c\u4f4d</code></p> <p>\u6bcf\u4e2a block \u505a\u6821\u9a8c\u4f4d(<code>\u4e0e\u5176\u4ed6\u76d8\u65e0\u5173\uff0c\u7eb5\u5411\u8ba1\u7b97\u6821\u9a8c\u4f4d</code>)\uff0c\u653e\u5230\u5907\u4efd\u76d8\u4e2d\u3002</p> <p>\u5f53\u6211\u4eec\u540c\u65f6\u8bfb D0, D5 \u65f6 Parity bit \u4f1a\u88ab\u8bfb\u4e24\u6b21\u3002  </p> <p>small write algorithm </p> <p><code>\u7528new data D0\u66ff\u6362\u539f\u5148\u7684D0</code></p> <ul> <li> <p><code>\u65b9\u6cd5\u4e00\uff1a\u8bfb\u53d6D1\uff0cD2\uff0cD3\uff0c\u548cD0\u8fdb\u884cXOR\uff0c\u5c06new data D0\u5199\u5165D0\uff0c\u6821\u9a8c\u7ed3\u679c\u5199\u5165P</code></p> </li> <li> <p><code>\u65b9\u6cd5\u4e8c\uff1a\u9700\u8981\u8bfb\u53d6\u539f\u6570\u636eD0\uff0c\u548cnew data D0\u8fdb\u884c\u6bd4\u8f83\uff0c\u5f97\u5230\u53d8\u5316\u7684bit\u5728\u54ea\u4e00\u4f4d\uff08XOR\uff09\uff0c\u7136\u540e\u8bfb\u53d6P\uff0c\u66f4\u65b0\u53d8\u5316\u7684bit\uff08XOR 1\u53d6\u53cd\uff09\uff0c\u5c06\u7ed3\u679c\u5199\u56deP</code></p> </li> </ul> <p>\u6240\u4ee5logical write = 2 reads + 2 writes</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-5-high-io-rate-interleaved-parity","title":"RAID 5: High I/O Rate Interleaved Parity","text":"<p><code>\u4e0d\u80fd\u540c\u65f6\u5199D0\u548cD5\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u9700\u8981\u5199P disk\uff0c\u9020\u6210\u51b2\u7a81\uff0c\u4f46\u662f\u5bf9\u4e8e\u540c\u65f6\u8bfb\u6ca1\u6709\u95ee\u9898</code></p> <p><code>\u4fee\u6539\u8fc7\u540e\uff0c\u5b58\u50a8\u6821\u9a8c\u4f4d\u4e0d\u518d\u5c40\u9650\u4e8e\u67d0\u4e00\u4e2adisk\uff0c\u800c\u662f\u5206\u6563\u5f00\u3002\u4f8b\u5982block D4\uff0cD5\uff0cD6\uff0cD7\u7684\u6821\u9a8c\u4f4d\u653e\u5728Disk3\u7684block P\u3002\u8fd9\u6837\u540c\u65f6\u5199D0\uff0cD5\u65f6\uff0c\u5373\u4f7f\u4fee\u6539P\uff0c\u4e5f\u662f\u4fee\u6539\u4e0d\u540c\u7684disk</code></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#raid-6-pq-redundancy","title":"RAID 6: P+Q Redundancy","text":"<p>\u6709 P, Q \u4e24\u4f4d\uff0c\u53ef\u4ee5\u6062\u590d\u51fa\u4e24\u4e2a\u76d8\u7684\u5185\u5bb9\u3002</p> <p>\u5f53\u5355\u4e2a\u6545\u969c\u6821\u6b63\u4e0d\u591f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5947\u5076\u6821\u9a8c\u63a8\u5e7f\u4e3a\u5bf9\u6570\u636e\u8fdb\u884c\u7b2c\u4e8c\u6b21\u8ba1\u7b97\u548c\u53e6\u4e00\u4e2a\u4fe1\u606f\u68c0\u67e5\u76d8\u3002</p> <p>Summary \"RAID Techniques\"</p> <p> </p> <p></p> <p><code>3. \u5bf9\u4e8esmall write\uff0c\u56e0\u4e3aRAID3\u662f\u4f4d\u4ea4\u53c9\uff0c\u6240\u6709\u7684disk\u90fd\u8981read\uff0c\u7136\u540e\u8ba1\u7b97\u6821\u9a8c\u7801\uff0c\u5199\u5165\u5230\u5bf9\u5e94\u7684disk\u4e2d\uff0c\u6240\u4ee5RAID\u7684\u901f\u5ea6\u6700\u6162\u3002\u5bf9\u4e8eRAID4\uff0c\u4e0d\u80fd\u5b9e\u73b0\u5e76\u884c\u5199\u5165\uff0c\u4f46\u662fRAID5\u80fd\u591f\u5b9e\u73b0\u540c\u65f6\u5199\u5165\uff0c\u6240\u4ee5RAID5\u7684throughput\u6700\u5927\u3002</code></p> <p><code>4. \u5bf9\u4e8elarge write\uff0cRAID3\uff0c4\uff0c5\u5177\u6709\u76f8\u540c\u7684throughput\uff0c\u56e0\u4e3a\u6240\u6709\u7684disk\u90fd\u9700\u8981read</code></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#63-buses-and-other-connections-between-processors-memory-and-io-devices","title":"6.3 Buses and Other Connections between Processors Memory, and I/O Devices","text":"<p>Bus: Shared communication link (one or more wires)  </p> <p>\u5404\u79cd\u8bbe\u5907\u901a\u8fc7\u5b83\u8fdb\u884c\u901a\u8baf</p> <p>Difficult Design:</p> <ul> <li> <p>may be bottleneck  </p> <p>\u5f88\u5bb9\u6613\u6210\u4e3a\u6027\u80fd\u7684 bottleneck(\u74f6\u9888).</p> </li> <li> <p>length of the bus\uff08<code>\u5f71\u54cd\u4f20\u8f93\u7684\u901f\u5ea6</code>\uff09</p> </li> <li> <p>number of devices</p> </li> <li> <p>tradeoffs (fast bus accesses and high bandwidth)</p> </li> <li> <p>support for many different devices</p> </li> <li> <p>cost</p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#631-bus-basics","title":"6.3.1 Bus Basics","text":"<p>\u603b\u7ebf\u4e0d\u662f\u4e00\u6761\u7ebf\uff0c\u800c\u662f\u591a\u6761\u7ebf\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u628a\u5404\u79cd\u8def\u3001\u8bbe\u5907\u8fde\u63a5\u8d77\u6765\u3002</p> <p><code>A bus contains two types of lines</code></p> <ul> <li> <p>Control lines: </p> <p>signal requests and acknowledgments, and to indicate what types of information is on the data lines.  </p> <p>\u6bd4\u5982\u7ed9\u5916\u8bbe\u53d1\u9001\u8bfb\u53d6\u547d\u4ee4\uff0c\u5916\u8bbe\u53d1\u9001\u53ef\u4ee5\u8bfb\u7684\u4fe1\u53f7\u3002</p> </li> <li> <p>Data lines:</p> <p>carry information (e.g., data, addresses, and complex commands) between the source and the destination.</p> </li> </ul> <p><code>Bus transaction</code> </p> <p>sending the address and receiving or sending the data   </p> <p>\u603b\u7ebf\u4f20\u8f93\u7684\u4e24\u90e8\u5206\uff0c\u9001\u5730\u5740\uff0c\u9001\u6570\u636e\u3002</p> <p>include two parts: sending the address and receiving or sending the data</p> <ul> <li>input: inputting data from the device to memory</li> <li>output: outputting data to a device from memory</li> </ul> <p><code>\u7ad9\u5728memory\u7684\u89d2\u5ea6\uff0cmomory\u83b7\u5f97\u6570\u636e\u6210\u4e3ainput\uff0cmomory\u8f93\u51fa\u6570\u636e\u5230device\u6210\u4e3aoutput</code></p> <p></p> <ol> <li><code>\u521d\u59cb\u5316\u5728\u5185\u5b58\u4e2d\u7684read\uff0ccontrol line\u4f20\u8f93\u4e00\u4e2aread\u4fe1\u53f7\uff0cdata line\u4f20\u51faread\u7684\u5730\u5740address</code></li> <li><code>momory \u6839\u636e\u5730\u5740\u53d6\u51fa\u6570\u636e\uff0c\u7136\u540e\u544a\u8bc9\u5904\u7406\u5668\u81ea\u5df1\u51c6\u5907\u597d\u4e86</code></li> <li><code>memory\u4f20\u8f93\u63a7\u5236\u4fe1\u53f7\u548c\u6570\u636e\uff0cdevices\u63a5\u53d7\u603b\u7ebf\u4e0a\u7684\u6570\u636e</code></li> </ol> <p></p> <ol> <li><code>\u5904\u7406\u5668\u5411\u5185\u5b58\u53d1\u9001write\u4fe1\u53f7\uff0cdata line\u4f20\u8f93 write \u7684\u5730\u5740</code></li> <li><code>\u5f53\u5185\u5b58\u51c6\u5907\u5c31\u7eea\u65f6\uff0c\u5b83\u4f1a\u5411\u8bbe\u5907\u53d1\u51fa\u4fe1\u53f7\uff0c\u7136\u540e\u8bbe\u5907\u4f20\u8f93\u6570\u636e\u3002\u5185\u5b58\u5c06\u5728\u63a5\u6536\u6570\u636e\u65f6\u5b58\u50a8\u6570\u636e\u3002\u8bbe\u5907\u65e0\u9700\u7b49\u5f85\u5b58\u50a8\u5b8c\u6210\u3002</code></li> </ol> <p>Types of buses</p> <ul> <li> <p>processor-memory : short high speed, custom design)  </p> <p>CPU\u548cmemory\u4e4b\u95f4\u7684\u603b\u7ebf</p> </li> <li> <p>backplane : high speed, often standardized, e.g., PCI)</p> <p>\u6240\u6709\u7684IO\u8bbe\u5907\u8fde\u63a5\u5230backplane\uff0c\u7136\u540e\u901a\u8fc7backplane\u548cCPU\u8fdb\u884c\u4ea4\u4e92</p> </li> <li> <p>I/O : lengthy, different devices, standardized, e.g., SCSI)</p> <p>IO\u8bbe\u5907\u76f4\u63a5\u548cCPU\u8fdb\u884c\u8fde\u63a5</p> </li> </ul> <ol> <li> <p>Older PCs often use a single bus for processor\u2010to\u2010memory communication, as well as communication between I/O devices and memory.</p> <p><code>\u8f83\u65e7\u7684 PC \u901a\u5e38\u4f7f\u7528\u5355\u603b\u7ebf(backplane)\u8fdb\u884c\u5904\u7406\u5668\u5230\u5185\u5b58\u7684\u901a\u4fe1\uff0c\u4ee5\u53ca I/O \u8bbe\u5907\u548c\u5185\u5b58\u4e4b\u95f4\u7684\u901a\u4fe1\u3002IO\u8bbe\u5907\u76f4\u63a5\u8fde\u63a5\u5230backplane\u4e0a\uff0c\u4ed6\u4eec\u7684\u901f\u5ea6\u9700\u8981\u9075\u5b88\u4e00\u6837\u7684\u534f\u8bae\u3002\u901f\u5ea6\u6162</code></p> <p>\u7531\u4e8e\u53ea\u6709\u4e00\u6761bus\uff0c\u6240\u4ee5processor\u548c\u67d0\u4e00\u4e2adevice\u901a\u4fe1\u7684\u65f6\u5019\uff0c\u4fbf\u4e0d\u80fd\u548c\u5176\u4ed6\u8bbe\u5907\u901a\u4fe1\uff0c\u540c\u7406\u5176\u4ed6\u8bbe\u5907\u548c\u5176\u4ed6\u8bbe\u5907\u4e4b\u95f4\u4e5f\u4e0d\u884c</p> </li> <li> <p>A separate bus is used for processor memory traffic. The I/O bus use a bus adapter to interface to the processor memory bus.</p> <p><code>memory\u548cprocess\u4e4b\u95f4\u7684\u4f20\u8f93\u4f9d\u9760processor-memory bus\uff0cI/O bus \u4f7f\u7528bus adapter\u8fde\u63a5\u5230\u5904\u7406\u5668\u548c\u5185\u5b58\u7684\u4e3b\u7ebf</code></p> <p>\u9075\u5faa\u4e0d\u540c\u534f\u8bae\uff0c\u901f\u5ea6\u6709\u5feb\u6709\u6162</p> </li> <li> <p>A separate bus is used for processor memory traffic. A small number of backplane buses tap into the processor memory bus.</p> <p><code>\u57282\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0backplane\u80cc\u677f\u603b\u7ebf\uff0cI/O\u8bbe\u5907\u540c\u610f\u901a\u8fc7bus adapter\u8fde\u63a5\u5230backplane\uff0c\u7136\u540ebackplane\u8fde\u63a5\u5230\u5904\u7406\u5668\u548c\u5185\u5b58\u7684\u4e3b\u7ebf</code></p> </li> </ol>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#632-synchronous-vs-asynchronous","title":"6.3.2 Synchronous vs. Asynchronous","text":"<p>\u540c\u6b65\u603b\u7ebf\u6216\u8005\u5f02\u6b65\u603b\u7ebf</p> <ul> <li> <p>Synchronous bus: use a clock and a fixed protocol, fast and small but every device must operate at same rate and clock skew requires the bus to be short  </p> <p>\u540c\u6b65\u603b\u7ebf\uff1a<code>\u4f7f\u7528\u65f6\u949f\u548c\u56fa\u5b9a\u7684\u534f\u8bae</code>\uff0c\u5feb\u901f\u4e14\u5c0f\u5de7\uff0c\u4f46\u6bcf\u4e2a\u8bbe\u5907\u5fc5\u987b\u4ee5\u76f8\u540c\u7684\u901f\u7387\u8fd0\u884c\uff0c\u7531\u4e8e\u65f6\u949f\u504f\u79fb\u7684\u5b58\u5728\u8981\u6c42\u603b\u7ebf\u77ed</p> <p>clock skew, \u5373\u4e0a\u5347\u6cbf\u65e0\u6cd5\u5bf9\u9f50\uff08<code>\u603b\u7ebf\u77ed\uff0c\u4f20\u8f93\u5ef6\u8fdf\u4f4e\uff0c\u59cb\u7ec8\u504f\u5dee\u5c0f</code>\uff09</p> </li> <li> <p>Asynchronous bus: don\u2019t use a clock and instead use handshaking </p> <p>\u5f02\u6b65\u603b\u7ebf\uff1a<code>\u4e0d\u8981\u4f7f\u7528\u65f6\u949f</code>\uff0c\u800c\u662f\u4f7f\u7528\u63e1\u624b\u534f\u8bae</p> <p>Handshaking protocol\uff1aA serial of steps used to coordinate asynchronous bus transfers.  </p> <p>\u7528\u4e8e\u534f\u8c03\u5f02\u6b65\u603b\u7ebf\u4f20\u8f93\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u3002 </p> <p>Asynchronous example \u5f02\u6b65\u4f20\u8f93\u7684\u4f8b\u5b50</p> <p> </p> <ol> <li> <p>When memory sees the ReadReq line, it reads the address from the data bus, begin the memory read operation\uff0cthen raises Ack to tell the device that the ReadReq signal has been seen.  </p> <p>\u8bfb\u6570\u636e\u65f6, CPU \u628a read request \u62c9\u8d77\u6765\u3002\u5185\u5b58\u770b\u5230\u540e\uff0c\u4f1a\u628a Data \u603b\u7ebf\u4e0a\u7684\u6570\u636e\u8bfb\u8d70\uff08\u5373\u5730\u5740\uff09\uff0c\u968f\u540e\u8fdb\u884c\u5185\u5b58\u8bfb\u53d6\uff0c\u540c\u65f6\u628a Ack \u4fe1\u53f7\u62c9\u8d77\u6765\uff0c\u544a\u8bc9 IO \u8bbe\u5907\u6211\u4eec\u5df2\u7ecf\u63a5\u6536\u5230 read request \u4e86. </p> </li> <li> <p>I/O device sees the Ack line high and releases the ReadReq data lines.  </p> <p>IO \u8bbe\u5907\u770b\u5230 Ack \u540e\u628a\u81ea\u5df1\u7684 read request \u653e\u4e0b</p> </li> <li> <p>Memory sees that ReadReq is low and drops the Ack line.  </p> <p>\u5185\u5b58\u770b\u5230 read request \u653e\u4e0b\u540e\uff0c\u628a Ack \u4e5f\u653e\u4e0b</p> </li> <li> <p>When the memory has the data ready, it places the data on the data lines and raises DataRdy.  </p> <p>\u5185\u5b58\u8bfb\u51fa\u6570\u636e\u540e\uff0c\u4f1a\u628a data ready \u62c9\u8d77\u6765\uff0c\u628a\u6570\u636e\u653e\u5728 data line \u4e0a</p> </li> <li> <p>The I/O device sees DataRdy, reads the data from the bus , and signals that it has the data by raising ACK.   </p> <p>IO \u8bbe\u5907\u770b\u5230 data ready \u540e\u4f1a\u628a\u6570\u636e\u53d6\u8d70\uff0c\u5e76\u628a Ack \u4fe1\u53f7\u62c9\u8d77</p> </li> <li> <p>The memory sees Ack signals, drops DataRdy, and releases the data lines.  </p> <p>\u5185\u5b58\u770b\u5230 Ack \u4fe1\u53f7\u540e\u4f1a\u653e\u4e0b data ready \u4fe1\u53f7</p> </li> <li> <p>Finally, the I/O device, seeing DataRdy go low, drops the ACK line, which indicates that the transmission is completed.  </p> <p>\u968f\u540e IO \u8bbe\u5907\u653e\u4e0b ack \u4fe1\u53f7</p> </li> </ol> <p></p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#633-bus-arbitration","title":"6.3.3 Bus Arbitration","text":"<p>multiple device desiring to communicate could each try to assert the control and data lines for different transfers.  </p> <p>a bus master is needed. Bus masters initiate and control all bus requests.  </p> <p><code>\u603b\u7ebf\u4e0a\u6709\u5f88\u591a\u8bbe\u5907\uff0c\u591a\u4e2a\u8bbe\u5907\u8981\u8bbf\u95ee\u540c\u4e00\u4e2a\u5185\u5b58\u65f6\uff0c\u9700\u8981\u603b\u7ebf\u4ef2\u88c1\uff0c\u83b7\u5f97\u603b\u7ebf\u7684\u6240\u6709\u6743\u3002</code> </p> <p>\u5b9e\u9645\u4e0a\u73b0\u5728 master \u7684\u8bbe\u5907\u4e5f\u6709\u591a\u4e2a\uff0c\u4e0d\u540c master \u4e4b\u95f4\u4e5f\u6709\u7ade\u4e89\uff08CPU, \u663e\u5b58\u7b49\u90fd\u662f\u4e00\u4e2a master\uff09\u3002</p> <ol> <li> <p>First, the device generates a <code>bus request</code> to indicate to the processor that it wants to use the bus.</p> <p>\u9996\u5148\uff0c\u8bbe\u5907\u751f\u6210\u603b\u7ebf\u8bf7\u6c42\uff0c\u5411\u5904\u7406\u5668\u6307\u793a\u5b83\u8981\u4f7f\u7528\u603b\u7ebf\u3002</p> </li> <li> <p>The processor responds and generates appropriate <code>bus control signals</code>. For example, if the devices wants to perform output from memory, the processor asserts the read request lines to memory.</p> <p>\u5904\u7406\u5668\u54cd\u5e94\u5e76\u751f\u6210\u9002\u5f53\u7684\u603b\u7ebf\u63a7\u5236\u4fe1\u53f7\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u5907\u60f3\u8981\u4ece\u5185\u5b58\u6267\u884c\u8f93\u51fa\uff0c\u5219\u5904\u7406\u5668\u4f1a\u5c06\u8bfb\u53d6\u8bf7\u6c42\u884c\u7f6e\u4f4d\u5230\u5185\u5b58\u3002</p> </li> <li> <p>The processor also notifies the device that its bus request is being processed; as a result, the device knows it can use the bus and places the address for the request on the bus.</p> <p>\u5904\u7406\u5668\u8fd8\u901a\u77e5\u8bbe\u5907\u5176\u603b\u7ebf\u8bf7\u6c42\u6b63\u5728\u5904\u7406\u4e2d;\u56e0\u6b64\uff0c\u8bbe\u5907\u77e5\u9053\u5b83\u53ef\u4ee5\u4f7f\u7528\u603b\u7ebf\uff0c\u5e76\u5c06\u8bf7\u6c42\u7684\u5730\u5740\u653e\u5728\u603b\u7ebf\u4e0a\u3002</p> </li> </ol> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a CPU \u662f master, \u53ef\u4ee5\u5360\u9886\u603b\u7ebf\uff0c\u5e76\u8ba9 IO \u8bbe\u5907\u6267\u884c\u64cd\u4f5c\u3002</p> <p>\u80fd\u4e3b\u52a8\u53d1\u8d77\u64cd\u4f5c\uff08\u64cd\u4f5c Bus\uff09\u7684\u8bbe\u5907\u53eb\u505a Bus Master, \u4e00\u822c\u662f CPU. </p> <p>\u51b3\u5b9a\u54ea\u4e2a master \u80fd\u591f\u64cd\u4f5c\u603b\u7ebf\u7684\u8bbe\u5907\u53eb\u505a\u603b\u7ebf\u4ef2\u88c1\u3002 </p> <p><code>\u4e00\u822c\u90fd\u662f\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e00\u6761\u603b\u7ebf\u8fdb\u884c\u6570\u636e\u901a\u4fe1\uff0c\u5176\u4e2d\u5982\u679c\u591a\u4e2a\u8bbe\u5907\u540c\u65f6\u53d1\u9001\u63a5\u6536\u6570\u636e\u7684\u8bdd\uff0c\u4ece\u800c\u4ea7\u751f\u603b\u7ebf\u7ade\u4e89\uff0c\u4f1a\u5bfc\u81f4\u901a\u4fe1\u51b2\u7a81\u5bfc\u81f4\u901a\u4fe1\u5931\u8d25\uff0c\u6240\u4ee5\u5728\u603b\u7ebf\u4e0a\u8981\u5f15\u5165\u4e00\u4e2a\u4ef2\u88c1\u673a\u5236\u6765\u51b3\u5b9a\u4ec0\u4e48\u65f6\u95f4\u8c01\u6765\u5360\u7528\u603b\u7ebf\u7684\u901a\u4fe1</code></p> <p>Deciding which device gets to use the bus next</p> <p>four bus arbitration schemes:</p> <ul> <li>daisy chain arbitration (not very fair):  \u9760\u8fd1master\u7684\u4f18\u5148\u5360\u7528\u603b\u7ebf</li> <li>centralized, parallel arbitration (requires an arbiter), e.g., PCI</li> <li>self selection, e.g., NuBus used in Macintosh</li> <li>collision detection, e.g., Ethernet</li> </ul> <p>Two factors in choosing which device to grant the bus:</p> <ul> <li> <p>bus priority</p> </li> <li> <p>fairness  </p> </li> </ul> <p>\u516c\u5e73\u6027\uff0c\u4e0d\u8ba9\u67d0\u4e2a\u8bbe\u5907\u4e00\u76f4\u5360\u7528\u603b\u7ebf\u3002</p> <p></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#performance-analysis-of-synchronous-versus-asynchronous-buses","title":"Performance analysis of Synchronous versus Asynchronous buses","text":"<p>\u8bc4\u4ef7\u603b\u7ebf\u7684\u6027\u80fd - \u5e26\u5bbd  bandwidth</p> <p>Example</p> <p><code>200-ns memory \u8868\u793a\u5185\u5b58\u4ece\u6536\u5230\u5730\u5740\u5230\u51c6\u5907\u597d\u6570\u636e\u9700\u8981200ns</code></p> <p><code>\u4e00\u6b21\u4f20\u8f9332bits,\u4e5f\u5c31\u662f4Bytes\uff0c\u5bf9\u5e94\u7684\u65f6\u95f4\u5305\u62ec\u53d1\u9001\u5730\u574050ns\uff0c\u5bfb\u627e\u6570\u636e200ns\uff0c\u53d1\u9001\u6570\u636e\u5230\u8bbe\u590750\uff0c\u4e00\u5171300ns\uff0c\u7136\u540e\u8ba1\u7b97\u5e26\u5bbd</code></p> <p><code>\u63e1\u624b\u65f6\u95f4\u548c\u5728\u5185\u5b58\u4e2d\u5bfb\u627e\u6570\u636e\u7684\u65f6\u95f4\u5b58\u5728\u7740\u91cd\u53e0\u3002\u5f02\u6b65\u65f6\u949f step1 \u7ed3\u675f\u65f6\u5185\u5b58\u5df2\u7ecf\u62ff\u5230\u5730\u5740\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d step234 \u53ef\u4ee5\u540c\u65f6\u505a\u3002</code></p> <p><code>\u4e5f\u5c31\u662f\u8bf4step1\u662f\u53d1\u9001\u5730\u5740\u63a5\u6536\u5730\u5740\uff0cstep234\u662f\u5728\u5185\u5b58\u4e2d\u5bfb\u627e\u6570\u636e\uff0cstep567\u662f\u8fd4\u56de\u5bf9\u5e94\u7684\u6570\u636e\u3002per handshake\u7684\u65f6\u95f4\u662f40ns\u3002\u5176\u4e2d\u5728\u5185\u5b58\u4e2d\u627e\u6570\u636e\u9700\u8981\u4e0e200ns memory\u6bd4\u8f83</code></p> <p><code>\u4e00\u5171\u5c31\u662f40 + 200 + 120 = 360ns</code></p> <ol> <li> <p>When memory sees the ReadReq line, it reads the address from the data bus, begin the memory read operation\uff0cthen raises Ack to tell the device that the ReadReq signal has been seen.  </p> <p>\u8bfb\u6570\u636e\u65f6, CPU \u628a read request \u62c9\u8d77\u6765\u3002\u5185\u5b58\u770b\u5230\u540e\uff0c\u4f1a\u628a Data \u603b\u7ebf\u4e0a\u7684\u6570\u636e\u8bfb\u8d70\uff08\u5373\u5730\u5740\uff09\uff0c\u968f\u540e\u8fdb\u884c\u5185\u5b58\u8bfb\u53d6\uff0c\u540c\u65f6\u628a Ack \u4fe1\u53f7\u62c9\u8d77\u6765\uff0c\u544a\u8bc9 IO \u8bbe\u5907\u6211\u4eec\u5df2\u7ecf\u63a5\u6536\u5230 read request \u4e86. </p> </li> <li> <p>I/O device sees the Ack line high and releases the ReadReq data lines.  </p> <p>IO \u8bbe\u5907\u770b\u5230 Ack \u540e\u628a\u81ea\u5df1\u7684 read request \u653e\u4e0b</p> </li> <li> <p>Memory sees that ReadReq is low and drops the Ack line.  </p> <p>\u5185\u5b58\u770b\u5230 read request \u653e\u4e0b\u540e\uff0c\u628a Ack \u4e5f\u653e\u4e0b</p> </li> <li> <p>When the memory has the data ready, it places the data on the data lines and raises DataRdy.  </p> <p>\u5185\u5b58\u8bfb\u51fa\u6570\u636e\u540e\uff0c\u4f1a\u628a data ready \u62c9\u8d77\u6765\uff0c\u628a\u6570\u636e\u653e\u5728 data line \u4e0a</p> </li> <li> <p>The I/O device sees DataRdy, reads the data from the bus , and signals that it has the data by raising ACK.   </p> <p>IO \u8bbe\u5907\u770b\u5230 data ready \u540e\u4f1a\u628a\u6570\u636e\u53d6\u8d70\uff0c\u5e76\u628a Ack \u4fe1\u53f7\u62c9\u8d77</p> </li> <li> <p>The memory sees Ack signals, drops DataRdy, and releases the data lines.  </p> <p>\u5185\u5b58\u770b\u5230 Ack \u4fe1\u53f7\u540e\u4f1a\u653e\u4e0b data ready \u4fe1\u53f7</p> </li> <li> <p>Finally, the I/O device, seeing DataRdy go low, drops the ACK line, which indicates that the transmission is completed.  </p> <p>\u968f\u540e IO \u8bbe\u5907\u653e\u4e0b ack \u4fe1\u53f7</p> </li> </ol> <ul> <li> <p>Increasing data bus width</p> </li> <li> <p>Use separate address and data lines</p> </li> <li> <p>transfer multiple words  </p> </li> </ul> <p>\u4e00\u6b21\u4f20\u8f93\u591a\u4e2a\u6570\u636e</p> <p>Increasing the Bus Bandwidth</p> <p><code>1\u4e2ablock\u80fd\u591f\u5b58\u50a84\u523016\u4e2awords\uff0c\u4f20\u8f93\u4ee5block\u4e3a\u5355\u4f4d</code></p> <p><code>\u540c\u6b65\u603b\u7ebf\u4f20\u8f93\u7684\u4f4d\u6570\u662f64\u4f4d\uff0c\u4f20\u8f93\u5730\u5740\u548c\u4f20\u8f93\u6570\u636e\u6240\u9700\u65f6\u95f4\u4e3a1\u4e2aclock cycle</code></p> <p><code>\u6bcf\u4e00\u4e2abus operation\u4e2d\u95f4\u9700\u8981\u95f4\u96942\u4e2acycle</code></p> <p><code>memory access time\u5728\u5185\u5b58\u4e2d\u5bfb\u627e\u6570\u636e\u7684\u65f6\u95f4\uff0c\u5bf9\u4e8e\u524d\u56db\u4e2awords\uff0c\u9700\u8981\u4f7f\u7528200ns\uff0c\u540e\u7eed\u6bcf\u56db\u4e2awords\u53ea\u9700\u898120ns\uff0c\u4e5f\u5c31\u662f\u8bf4\u8d77\u6b65\u6162\uff0c\u540e\u7eed\u5feb</code></p> <p>burst \u4f20\u8f93\uff0c\u5730\u5740\u53d1\u4e00\u6b21\uff0c\u8bfb\u591a\u4e2a\u6570\u636e\u3002\u5982\u8bfb\u5730\u5740 4, \u6211\u4eec\u53ef\u4ee5\u8fd4\u56de 4 5 6 7 \u7684\u6570\u636e\u3002  </p> <ul> <li>the 4-word block transfers</li> </ul> <p><code>\u5730\u5740\u53ea\u9700\u8981\u4f20\u8f93\u4e00\u6b21\uff0c\u5c31\u80fd\u591f\u8bfb\u53d6\u591a\u4e2a\u6570\u636e\u3002\u7531\u4e8e\u603b\u7ebf\u4e00\u4e2acycle\u53ea\u80fd\u4f20\u8f9364bits\uff0c\u6240\u4ee54\u4e2awords\u9700\u89812\u4e2acycle\uff0c\u5df2\u77e5\u603b\u7ebf\u9891\u7387\u662f200MHz\uff0c\u5bf9\u5e94\u7684\u4e00\u4e2acycle\u7684\u65f6\u95f4\u5c31\u662f5ns\uff0c\u5c31\u80fd\u8ba1\u7b97\u51faread memory\u6240\u9700\u7684\u65f6\u95f4\u4e3a40cycles\u3002\u5bf9\u4e8e4\u4e2aword\uff0c\u5c31\u9700\u89811+40+2+2 = 45cycles\u3002\u4e00\u5171\u670964\u4e2ablock</code></p> <ul> <li>the 16-word block transfers</li> </ul> <p><code>read memory \u548c transfer data\u80fd\u591f\u91cd\u53e0</code></p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#64-interfacing-io-devices-to-the-memory-processor-and-operating-system","title":"6.4 Interfacing I/O Devices to the Memory, Processor, and Operating System","text":"<p><code>Three characteristics of I/O systems</code></p> <ul> <li> <p>shared by multiple programs using the processor.</p> </li> <li> <p>often use interrupts to communicate information about I/O operations.</p> <p>\u901a\u5e38\u4f7f\u7528\u4e2d\u65ad\u6765\u4f20\u8fbe\u6709\u5173 I/O \u64cd\u4f5c\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>The low\u2010level control of I/O devices is complex</p> </li> </ul> <p><code>Three types of communication are required:</code></p> <p>IO \u8bbe\u5907\uff08\u9700\u8981\u9a71\u52a8\uff09\u600e\u4e48\u548c OS \u901a\u4fe1  </p> <ul> <li> <p>The OS must be able to give commands to the I/O devices.  </p> <p>OS \u8981\u80fd\u7ed9 IO \u8bbe\u5907\u53d1\u51fa\u547d\u4ee4\uff0c\u6bd4\u5982\u542f\u52a8\u3001\u5173\u673a\u3002</p> </li> <li> <p>The device must be able to notify the OS, when I/O device completed an operation or has encountered an error.  </p> <p>IO \u6709\u65b9\u5f0f\uff0c\u5728\u8bbe\u5907\u5b8c\u6210\u64cd\u4f5c\u6216\u8005\u9047\u5230\u9519\u8bef\u65f6\uff0c\u8981\u80fd\u901a\u77e5 OS. </p> <p>\u6bd4\u5982\u6253\u5370\u7ed3\u675f\uff0c\u53ef\u4ee5\u7ee7\u7eed\u4f20\u8f93\u6570\u636e\u4e86\u3002</p> </li> <li> <p>Data must be transferred between memory and an I/O device.  </p> <p>\u6570\u636e\u8981\u80fd\u5728\u5185\u5b58\u548c IO \u8bbe\u5907\u4e4b\u95f4\u4f20\u8f93\u3002</p> </li> </ul> <p><code>Give commands to I/O Devices</code></p> <p>CPU \u8981\u80fd\u8bbf\u95ee\u5230 IO \u8bbe\u5907\uff0c\u9700\u8981\u6709\u4e00\u4e2a\u5730\u5740\u3002\uff08\u6ce8\u610f\u8fd9\u4e2a\u5730\u5740\u4e0d\u80fd\u8fdb\u5165 cache, \u5426\u5219\u6211\u4eec\u5c31\u65e0\u6cd5\u83b7\u5f97 IO \u8bbe\u5907\u7684\u6700\u65b0\u72b6\u6001\u4e86\uff09</p> <ul> <li> <p>memory-mapped I/O  </p> <p>\u628a\u5185\u5b58\u5730\u5740\u4e2d\u7684\u4e00\u90e8\u5206\u5206\u51fa\u6765\u7ed9 IO \u8bbe\u5907\u7528\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528 ld sd \u6765\u8bbf\u95ee\u3002</p> </li> <li> <p>special I/O instructions  </p> <p>e.g. x86 \u4e2d in al,port out port,al. RISC-V \u4e2d\u6ca1\u6709</p> </li> </ul> <p>IO \u8bbe\u5907\u9700\u8981\u6709\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u5b58\u50a8\u72b6\u6001  </p> <ul> <li>The Status register (a done bit, an error bit...)</li> <li>The Data register, The command register</li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#641-communication-with-the-processor","title":"6.4.1 Communication with the Processor","text":"<ul> <li> <p>Polling: The processor periodically checks status bit to see if it is time for the next I/O operation.  </p> <p>\u5904\u7406\u5668\u5b9a\u671f\u68c0\u67e5\u72b6\u6001\u4f4d\u4ee5\u67e5\u770b\u662f\u5426\u5230\u4e86\u8fdb\u884c\u4e0b\u4e00\u6b21 I/O \u64cd\u4f5c\u7684\u65f6\u95f4\u3002\u4f46\u662f\u4f1a\u5360\u7528 CPU. </p> </li> <li> <p>Interrupt: When an I/O device wants to notify processor that it has completed some operation or needs attentions, it causes processor to be interrupted.  </p> <p>\u5f53 IO \u8bbe\u5907\u5b8c\u6210\u64cd\u4f5c\u7ed9 CPU \u4e00\u4e2a\u4e2d\u65ad\uff0c\u7b49\u5f85\u5176\u54cd\u5e94\u3002\u597d\u5904\u662f CPU \u53ef\u4ee5\u4e00\u76f4\u505a\u81ea\u5df1\u7684\u4e8b\u60c5\u3002</p> </li> <li> <p>DMA (direct memory access): the device controller transfer data directly to or from memory without involving processor.  </p> <p>DMA\uff08\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff09\uff1a\u8bbe\u5907\u63a7\u5236\u5668\u65e0\u9700\u5904\u7406\u5668\u5373\u53ef\u76f4\u63a5\u5411\u5185\u5b58\u4f20\u8f93\u6570\u636e\u6216\u4ece\u5185\u5b58\u4f20\u8f93\u6570\u636e\uff0c\u4e0d\u9700\u8981 CPU \u53c2\u4e0e\u3002</p> </li> </ul>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#interrupt-driven-io-mode","title":"Interrupt-Driven I/O mode","text":"<p>\u5047\u8bbe IO \u662f\u4e2a\u6253\u5370\u673a\u3002\u6bcf\u6b21\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u4f1a\u7ed9 CPU \u53d1\u4e00\u4e2a\u4e2d\u65ad\u3002CPU \u4f1a\u53bb\u8bfb\u53d6\u6253\u5370\u673a\u7684\u72b6\u6001\uff0c\u770b\u662f\u5426\u5b8c\u6210\u3002\u5b8c\u6210\u540e CPU \u7ee7\u7eed\u505a\u81ea\u5df1\u7684\u4e8b\u60c5\u3002</p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#dma-transfer-mode","title":"DMA transfer mode","text":"<p>CPU \u9700\u8981\u914d\u7f6e DMA. DMA \u4f1a\u548c IO \u8bbe\u5907\u4ea4\u4e92\uff0c\u628a\u6570\u636e\u642c\u5230\u5185\u5b58\uff0c\u4e0d\u9700\u8981 CPU \u53c2\u4e0e\u3002</p> <p>A DMA transfer need three steps:</p> <ul> <li> <p>The processor sets up the DMA by supplying some information, including the identity of the device, the operation, the memory address that is the source or destination of the data to be transferred, and the number of bytes to transfer.   </p> <p>CPU \u914d\u7f6e DMA\uff0c\u5305\u62ec\u54ea\u4e2a\u8bbe\u5907\u3001\u505a\u4ec0\u4e48\u64cd\u4f5c\u3001\u5185\u5b58\u5730\u5740\u3001\u6570\u636e\u5927\u5c0f\u7b49\u3002</p> </li> <li> <p>The DMA starts the operation on the device and arbitrates for the bus. If the request requires more than one transfer on the bus, the DMA unit generates the next memory address and initiates the next transfer.  </p> <p>DMA \u5f00\u59cb\u64cd\u4f5c\u8bbe\u5907\uff0c\u5360\u7528\u603b\u7ebf\u3002\u5982\u679c\u9700\u8981\u591a\u6b21\u4f20\u8f93\uff0cDMA \u4f1a\u751f\u6210\u4e0b\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u5f00\u59cb\u4e0b\u4e00\u6b21\u4f20\u8f93\u3002  DMA \u4e5f\u662f\u6302\u5728\u603b\u7ebf\u4e0a\u7684 master, \u4f18\u5148\u7ea7\u6ca1\u6709 CPU \u9ad8\u3002\u56e0\u6b64\u4ed6\u4f1a\u8d81 CPU \u7a7a\u95f2\u7684\u65f6\u5019\u642c\u8fd0\u6570\u636e\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u603b\u7ebf\u3002</p> </li> <li> <p>Once the DMA transfer is complete, the controller interrupts the processor, which then examines whether errors occur.   </p> <p>DMA \u5b8c\u6210\u540e\uff0c\u7ed9 CPU \u53d1\u4e2d\u65ad\uff0cCPU \u68c0\u67e5\u662f\u5426\u6709\u9519\u8bef\u3002</p> </li> </ul> <p>Note \"Compare polling, interrupts, DMA\"</p> <ul> <li> <p>The disadvantage of polling is that it wastes a lot of processor time. When the CPU polls the I/O device periodically, the I/O devices maybe have no request or have not get ready.  </p> <p>polling \u7684\u574f\u5904\u662f\u6d6a\u8d39\u4e86\u5927\u91cf\u7684 CPU \u7684\u65f6\u95f4\u3002CPU \u5b9a\u671f\u8f6e\u8be2 IO \u8bbe\u5907\u53ef\u80fd\u6ca1\u6709\u8bf7\u6c42\u6216\u8005\u6ca1\u6709\u51c6\u5907\u597d\u3002  </p> </li> <li> <p>If the I/O operations is interrupt driven, the OS can work on other tasks while data is being read from or written to the device.  </p> <p>\u5982\u679c IO \u64cd\u4f5c\u662f\u4e2d\u65ad\u9a71\u52a8\u7684\uff0cOS \u53ef\u4ee5\u5728\u6570\u636e\u4ece\u8bbe\u5907\u8bfb\u53d6\u6216\u5199\u5165\u65f6\u5904\u7406\u5176\u4ed6\u4efb</p> </li> <li> <p>Because DMA doesn\u2019t need the control of processor, it will not consume much of processor time.  </p> <p>DMA \u4e0d\u9700\u8981 CPU \u63a7\u5236\uff0c\u4e0d\u4f1a\u6d88\u8017 CPU \u65f6\u95f4\u3002  </p> <p>\u4f46 DMA \u5176\u5b9e\u53ea\u662f\u642c\u8fd0\u6570\u636e\u65f6\u6709\u7528\uff0c\u5176\u5b9e\u548c polling interrupt \u4e0d\u5bf9\u7acb\u3002</p> </li> </ul> Overhead of Polling in an I/O System <p> </p> Overhead of Interrupt-Driven I/O <p> </p> <p>polling \u5fc5\u987b\u65f6\u65f6\u523b\u523b\u67e5\u8be2\uff0c\u4e2d\u65ad\u53ea\u9700\u8981\u5728\u771f\u6b63\u6709\u6570\u636e\u4f20\u8f93\uff08\u6bd4\u5982 5% \u7684\u65f6\u95f4\uff09\u65f6\u518d\u53bb\u5904\u7406\u3002</p> Overhead of I/O Using DMA <p> </p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#65-io-performance-measures-examples-from-disk-and-file-systems","title":"6.5 I/O Performance Measures: Examples from Disk and File Systems","text":"<p>CPU \u6709 benchmark, IO \u4e5f\u6709 benchmark \u6765\u8861\u91cf\u6027\u80fd\u3002</p> <p><code>I/O rate: the number of disk access per second, as opposed to data rate</code> </p>"},{"location":"CO/6.%20Storage%2C%20Networks%20and%20Other%20Peripherals/#designing-an-io-system","title":"Designing an I/O system","text":"<p>\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf CPU+bus+I/O  </p> <ul> <li> <p>Find the weakest link in the I/O system, which is the component in the I/O path that will constrain the design. Both the workload and configuration limits may dictate where the weakest link is located.  </p> <p>\u627e\u5230 I/O \u7cfb\u7edf\u4e2d\u6700\u8584\u5f31\u7684\u73af\u8282\uff0c\u5373 I/O \u8def\u5f84\u4e2d\u4f1a\u9650\u5236\u8bbe\u8ba1\u7684\u7ec4\u4ef6\u3002\u5de5\u4f5c\u8d1f\u8f7d\u548c\u914d\u7f6e\u9650\u5236\u90fd\u53ef\u80fd\u51b3\u5b9a\u6700\u8584\u5f31\u7684\u73af\u8282\u4f4d\u4e8e\u4f55\u5904\u3002</p> <p>\u901f\u5ea6\u7531\u6700\u6162\u7684\u51b3\u5b9a\u3002  \u770b\u54ea\u4e2a\u90e8\u5206\u6700\u5f31\uff0c\u5176\u4ed6\u90e8\u5206\u4fdd\u8bc1\u53ef\u4ee5\u6ee1\u8db3\u6700\u5f31\u7684\u6761\u4ef6\u5373\u53ef\u3002</p> </li> <li> <p>Configure this component to sustain the required bandwidth.  </p> </li> <li> <p>Determine the requirements for the rest of the system and configure them to support this bandwidth.  </p> </li> </ul> Example <p> </p>"},{"location":"CV/","title":"EECS 498-007 / 598-005 Deep Learning for Computer Vision - Fall 2019","text":"<p> \u7ea6 467 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u6b22\u8fce\u6765\u5230 EECS 498-007 / 598-005 - Deep Learning for Computer Vision (Fall 2019) \u8bfe\u7a0b\u7684\u7b14\u8bb0\u4e3b\u9875\uff01\u8fd9\u4e9b\u7b14\u8bb0\u57fa\u4e8e\u7531 Justin Johnson \u6388\u8bfe\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6df1\u5ea6\u5b66\u4e60\u8bfe\u7a0b\uff0c\u8bfe\u7a0b\u65f6\u95f4\u4e3a 2019 \u5e74\u79cb\u5b63\u5b66\u671f\u3002\u6b64\u8bfe\u7a0b\u6df1\u5165\u63a2\u8ba8\u4e86\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u5e94\u7528\u3002</p>"},{"location":"CV/#\u8bfe\u7a0b\u63cf\u8ff0","title":"\u8bfe\u7a0b\u63cf\u8ff0","text":"<p>\u8ba1\u7b97\u673a\u89c6\u89c9\u5728\u5f53\u4eca\u793e\u4f1a\u7684\u5404\u4e2a\u9886\u57df\u4e2d\u5df2\u7ecf\u65e0\u5904\u4e0d\u5728\uff0c\u6d89\u53ca\u5230\u7684\u5e94\u7528\u5305\u62ec\u641c\u7d22\u3001\u56fe\u50cf\u7406\u89e3\u3001\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u3001\u5730\u56fe\u7ed8\u5236\u3001\u533b\u5b66\u3001\u65e0\u4eba\u673a\u6280\u672f\u53ca\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3002\u5176\u4e2d\u8bb8\u591a\u5e94\u7528\u7684\u6838\u5fc3\u662f\u89c6\u89c9\u8bc6\u522b\u4efb\u52a1\uff0c\u5982\u56fe\u50cf\u5206\u7c7b\u548c\u7269\u4f53\u68c0\u6d4b\u3002\u8fd1\u5e74\u6765\uff0c\u795e\u7ecf\u7f51\u7edc\u65b9\u6cd5\u7684\u53d1\u5c55\u6781\u5927\u5730\u63a8\u52a8\u4e86\u6700\u5148\u8fdb\u7684\u89c6\u89c9\u8bc6\u522b\u7cfb\u7edf\u7684\u6027\u80fd\u63d0\u5347\u3002\u672c\u8bfe\u7a0b\u6df1\u5165\u63a2\u8ba8\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u3002</p> <p>\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u5b66\u751f\u5c06\u5b66\u4e60\u5982\u4f55\u5b9e\u73b0\u3001\u8bad\u7ec3\u548c\u8c03\u8bd5\u81ea\u5df1\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u83b7\u5f97\u5bf9\u8ba1\u7b97\u673a\u89c6\u89c9\u524d\u6cbf\u7814\u7a76\u7684\u8be6\u7ec6\u7406\u89e3\u3002\u8bfe\u7a0b\u5185\u5bb9\u5305\u62ec\u5b66\u4e60\u7b97\u6cd5\u3001\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff0c\u4ee5\u53ca\u7528\u4e8e\u89c6\u89c9\u8bc6\u522b\u4efb\u52a1\u7684\u7f51\u7edc\u8bad\u7ec3\u4e0e\u5fae\u8c03\u7684\u5b9e\u7528\u5de5\u7a0b\u6280\u5de7\u3002</p>"},{"location":"CV/#\u8bfe\u7a0b\u4fe1\u606f","title":"\u8bfe\u7a0b\u4fe1\u606f","text":"<ul> <li>\u8bfe\u7a0b\u4ee3\u7801: EECS 498-007 / 598-005</li> <li>\u8bfe\u7a0b\u540d\u79f0: Deep Learning for Computer Vision</li> <li>\u5b66\u671f: 2019 \u5e74\u79cb\u5b63</li> <li>\u8bb2\u5e08: Justin Johnson</li> <li>\u7814\u7a76\u751f\u52a9\u6559: Yunseok Jang, Kibok Lee, Luowei Zhou</li> </ul>"},{"location":"CV/#\u8bfe\u7a0b\u8d44\u6e90","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u6559\u5b66\u5927\u7eb2: \u8be6\u89c1\u8bfe\u7a0b\u653f\u7b56</li> <li>\u8bfe\u7a0b\u5b89\u6392: \u5305\u542b\u8bb2\u5ea7\u5e7b\u706f\u7247\u548c\u63a8\u8350\u9605\u8bfbschedule</li> <li>\u529e\u516c\u65f6\u95f4: \u89c1 Google Calendar</li> <li>\u8bb2\u5ea7\u89c6\u9891: YouTube</li> <li>\u4f5c\u4e1a: A1 A2 A3 A4 A5 A6</li> </ul>"},{"location":"CV/#\u7b14\u8bb0\u5185\u5bb9","title":"\u7b14\u8bb0\u5185\u5bb9","text":"<p>\u672c\u7b14\u8bb0\u6574\u7406\u4e86\u8be5\u8bfe\u7a0b\u7684\u5173\u952e\u5185\u5bb9\u3001\u5b66\u4e60\u6750\u6599\u53ca\u8ba8\u8bba\u8981\u70b9\uff0c\u65e8\u5728\u4e3a\u540c\u5b66\u4eec\u590d\u4e60\u8bfe\u7a0b\u548c\u51c6\u5907\u8003\u8bd5\u63d0\u4f9b\u5e2e\u52a9\u3002</p>"},{"location":"CV/Lecture1_Introduction/","title":"Introduction","text":"<p> \u7ea6 962 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"CV/Lecture1_Introduction/#\u8ba1\u7b97\u673a\u89c6\u89c9\u8d77\u6e90\u751f\u7269\u795e\u7ecf\u4fe1\u53f7\u7684\u4f20\u8f93","title":"\u8ba1\u7b97\u673a\u89c6\u89c9\u8d77\u6e90\uff1a\u751f\u7269\u795e\u7ecf\u4fe1\u53f7\u7684\u4f20\u8f93","text":"<p>\u5b9e\u9645\u4e0a\u5f88\u96be\u627e\u5230\u4e00\u4e2a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u8d77\u6e90\uff0c\u56e0\u4e3a\u6839\u636e Justin \u6240\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u90fd\u6709\u5176\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6536\u5230\u4e4b\u524d\u5de5\u4f5c\u7684\u542f\u53d1\uff0c\u6240\u4ee5\u53ea\u80fd\u627e\u4e00\u4e2a\u53ef\u4ee5\u8bf4\u6709\u5212\u65f6\u4ee3\u610f\u4e49\u7684\u8282\u70b9\u6765\u4f5c\u4e3a\u6240\u8c13\u7684\u8d77\u6e90\uff0c\u4e2d\u8282\u70b9\u5c31\u662f 1959 \u5e74\u7684\u5b9e\u9a8c\uff0c</p> <ul> <li>1959 \u5e74\u7684\u5b9e\u9a8c\u5185\u5bb9\uff0c\u5c31\u662f\u751f\u7269\u5b66\u5bb6\u60f3\u4e86\u89e3\u751f\u7269\u7684\u89c6\u89c9\u795e\u7ecf\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ed6\u4eec\u5c06\u4e00\u4e9b\u7535\u6781\u63d2\u5165\u732b\u7684\u89c6\u89c9\u76ae\u5c42\u4e2d\uff0c\u53ef\u4ee5\u7528\u6765\u8bb0\u5f55\u89c6\u89c9\u76ae\u5c42\u4e2d\u5355\u4e2a\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\uff0c\u4ed6\u4eec\u5411\u732b\u5c55\u793a\u4e0d\u540c\u7684\u5e7b\u706f\u7247\u3002</li> </ul> <p>\u4ed6\u4eec\u7684\u5047\u8bbe\uff1a\u89c6\u89c9\u76ae\u5c42\u4e2d\u4e0d\u540c\u795e\u7ecf\u5143\u4f1a\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u89c6\u89c9\u523a\u6fc0\u505a\u51fa\u54cd\u5e94\u3002\u6240\u4ee5\u4ed6\u4eec\u5411\u732b\u5c55\u793a\u4e0d\u540c\u7684\u7c7b\u578b\u7684\u56fe\u50cf\uff0c\u6765\u8bb0\u5f55\u732b\u7684\u795e\u7ecf\u5143\u5bf9\u6b64\u505a\u51fa\u4ec0\u4e48\u54cd\u5e94\u3002</p> <p>\u6b64\u9879\u7814\u7a76\u5728 1981 \u5e74\u83b7\u5f97\u8bfa\u8d1d\u5c14\u751f\u7269\u5b66\u5956\uff0c\u4e5f\u6210\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u7684\u5f00\u521b\u9f3b\u7956</p>"},{"location":"CV/Lecture1_Introduction/#\u4e00\u7bc7\u5173\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u535a\u58eb\u8bba\u6587","title":"\u4e00\u7bc7\u5173\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u535a\u58eb\u8bba\u6587","text":"<p>1963 \u5e74\uff0cLarry Robert \u4ece MIT \u6bd5\u4e1a\uff0c\u5176\u535a\u58eb\u8bba\u6587\u53ef\u4ee5\u79f0\u5f97\u4e0a\u662f\u7b2c\u4e00\u7bc7\u8ba1\u7b97\u673a\u89c6\u89c9\u65b9\u9762\u7684\u535a\u58eb\u8bba\u6587\uff0c\u5f53\u7136\u90a3\u65f6\u5019\u60f3\u4f7f\u7528\u8ba1\u7b97\u673a\u8fdb\u884c\u8ba1\u7b97\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u5305\u62ec\u4f7f\u7528\u76f8\u673a\u8fdb\u884c\u62cd\u6444\u4e5f\u9ebb\u70e6\uff0c\u6240\u4ee5\u8bba\u6587\u5f88\u5927\u4e00\u90e8\u5206\u90fd\u662f\u5728\u56f4\u7ed5\u6444\u5f71\u4fe1\u606f\u5982\u4f55\u8f93\u5165\u5230\u8ba1\u7b97\u673a\u4e2d\uff0c\u5f53\u7136\uff0c\u5176\u4e2d\u4e5f\u63d0\u5230\u4e86\u5f88\u591a\u5173\u4e8e\u8fb9\u7f18\u68c0\u6d4b\u65b9\u9762\u7684\u65b9\u6cd5</p> <p>\u5728 1966 \u5e74\uff0cMIT \u7684\u4e3e\u529e\u4e86\u4e00\u4e2a\u89c6\u89c9\u590f\u4ee4\u8425\uff0c\u60f3\u4e0e\u4e94\u4e2a\u672c\u79d1\u751f\u4e00\u8d77\u5728\u4e00\u4e2a\u590f\u5929\u5b9e\u73b0\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u5185\u5bb9\uff0c\u5f53\u7136\uff0c\u76f4\u5230\u73b0\u5728\uff0c\u8fd9\u4e2a\u4efb\u52a1\u90fd\u6ca1\u6709\u5706\u6ee1\u5b8c\u6210</p> <p>\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u68c0\u6d4b\u8fb9\u7f18\u548c\u7b80\u5355\u51e0\u4f55\u5f62\u72b6</p>"},{"location":"CV/Lecture1_Introduction/#\u65b0\u9636\u6bb5","title":"\u65b0\u9636\u6bb5","text":"<ul> <li>1970 \u5e74\u540e\uff0c\u5165\u95e8\u5f00\u59cb\u5bf9\u7269\u4f53\u8bc6\u522b\u9886\u57df\u611f\u5174\u8da3\uff0c\u5f00\u59cb\u601d\u8003\u6784\u5efa\u8ba1\u7b97\u673a\u7cfb\u7edf</li> </ul> <p>\u7269\u4f53\u8bc6\u522b\u9886\u57df\u5f00\u59cb\u5c1d\u8bd5\u65b0\u7684\u65b9\u5411\uff0c\u8bc6\u522b\u66f4\u590d\u6742\u7684\u7269\u4f53\u2014\u2014\u6bd4\u5982\u4eba\uff0c\u6240\u4ee5\u6709\u4e86\u4e00\u4e9b\u5173\u4e8e\u5706\u67f1\u4f53\u548c\u5706\u5f62\u7ed3\u6784\u7684\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5c1d\u8bd5\u5c06\u4eba\u8bc6\u522b\u4e3a\u5e26\u6709\u67d0\u79cd\u5df2\u77e5</p> <p>\u62d3\u6251\u7ed3\u6784\u7684\u521a\u6027\u90e8\u4ef6\u7684\u53ef\u53d8\u5f62\u914d\u7f6e</p> <ul> <li>1980 \u5e74\u4ee3\uff0c\u8ba1\u7b97\u80fd\u529b\u5f00\u59cb\u53d1\u5c55\uff08camera \u53d1\u5c55\uff09\uff0c\u4e3b\u9898\u662f\u901a\u8fc7\u8fb9\u7f18\u68c0\u6d4b\u6765\u8bc6\u522b\u7269\u4f53</li> </ul> <p>John Canny \u548c David Lowe \u7b49\u4eba\u53d1\u8868\u4e86\u4e00\u4e9b\u5173\u4e8e\u5f3a\u5927\u7684\u8fb9\u7f18\u68c0\u6d4b\u65b9\u6cd5\u65b9\u9762\u7684\u8bba\u6587</p> <p>\u56fe\u7247\u4e0e\u6a21\u677f\u56fe\u7247\u7684 matching</p> <ul> <li>1990 \u5e74\u4ee3\uff0c\u4eba\u4eec\u60f3\u6784\u5efa\u66f4\u590d\u6742\u7684\u56fe\u50cf\u548c\u573a\u666f\uff0c\u4e3b\u9898\uff1a\u5c1d\u8bd5\u901a\u8fc7\u5206\u7ec4\u6765\u8bc6\u522b\u5bf9\u8c61</li> <li>2000 \u5e74\uff0c<code>sift</code> \u8f93\u5165\u56fe\u7247\uff0c\u68c0\u67e5\u56fe\u50cf\u4e2d\u5173\u952e\u70b9\u548c\u4e0d\u540c\u4f4d\u7f6e,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u7279\u5f81\u5411\u91cf\u8868\u793a\u5173\u952e\u70b9\u7684 appearance\uff0c\u901a\u8fc7\u5bf9\u7279\u5f81\u5411\u91cf\u7f16\u7801\u4e0d\u540c\u7c7b\u578b\u7684\u4e0d\u53d8\u6027\uff08invariances\uff09\uff0c\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u7684\u65cb\u8f6c\uff0c\u4eae\u6697\u8c03\u6574\uff08\u70b9\u5bf9\u70b9\u7684\u6620\u5c04\uff09</li> <li>2001 \u5e74\uff0cViola and Jones\uff0c\u63d0\u51fa\u56fe\u50cf\u4eba\u8138\u8bc6\u522b\u7684\u7b97\u6cd5</li> <li>\u4f7f\u7528 machine learning \u548c computer vision\uff0cthe boosted decision trees \u80fd\u591f\u5b66\u4e60\u7279\u5f81\u7684\u6b63\u786e\u7ec4\u5408</li> <li>\u5546\u4e1a\u5316\u5feb\uff0c\u6570\u7801\u76f8\u673a\u81ea\u52a8\u5bf9\u7126</li> </ul>"},{"location":"CV/Lecture1_Introduction/#\u6df1\u5ea6\u5b66\u4e60\u7a81\u7834\u65f6\u523b","title":"\u6df1\u5ea6\u5b66\u4e60\u7a81\u7834\u65f6\u523b","text":"<ul> <li> <p>imageNet\uff1a\u5916\u5305\u6570\u636e\u6807\u6ce8\uff0c\u6570\u636e\u96c6\u5927</p> </li> <li> <p>2012 \u5e74\uff0cAlexNet \u7684\u51fa\u73b0\uff0c\u6807\u5fd7\u7740\u6df1\u5ea6\u5b66\u4e60\u7684\u8bde\u751f\uff0c\u5c06\u56fe\u50cf\u5206\u7c7b\u7684\u9519\u8bef\u7387\u4ece 25 \u964d\u4f4e\u5230\u4e86 16\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8fdb\u6b65</p> </li> </ul>"},{"location":"CV/Lecture1_Introduction/#\u53d1\u5c55\u5386\u53f2","title":"\u53d1\u5c55\u5386\u53f2","text":"<p>Maxpooling\uff1aYamaguchi \u9996\u6b21\u63d0\u51fa\u7528\u4e8e\u58f0\u97f3\u4fe1\u53f7\u8bc6\u522b\uff081990\uff09</p> <p>LeNet\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u9f3b\u7956\uff0c\u53ef\u4ee5\u8bc6\u522b 32x32 \u7684\u7f51\u7edc\uff0c1998</p> <p>AlexNet\uff1a\u9996\u4e2a GPU \u4f18\u5316\u7684\u6df1\u5c42 CNN\uff0c\u5728\u8fd9\u4e4b\u524d\u786c\u4ef6\u7684\u7b97\u529b\u65e0\u6cd5\u652f\u6301\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\uff0c\u6240\u4ee5\u5927\u5bb6\u611f\u89c9\u8fd9\u662f\u4e00\u4e2a\u5f88\u6162\u7684\u6a21\u578b\uff0c\u6240\u4ee5 AlexNet \u4e5f\u662f\u8fd9\u4e2a\u5c40\u9762\u7684\u5206\u754c\u70b9</p>"},{"location":"CV/Lecture2_Image_Classification/","title":"Image_Classification","text":"<p> \u7ea6 8023 \u4e2a\u5b57  63 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 41 \u5206\u949f</p>"},{"location":"CV/Lecture2_Image_Classification/#\u6982\u5ff5","title":"\u6982\u5ff5","text":"<p>\u76ee\u6807\uff1a\u8fd9\u4e00\u8282\u6211\u4eec\u5c06\u4ecb\u7ecd\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\u3002<code>\u6240\u8c13\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\uff0c\u5c31\u662f\u5df2\u6709\u56fa\u5b9a\u7684\u5206\u7c7b\u6807\u7b7e\u96c6\u5408\uff0c\u7136\u540e\u5bf9\u4e8e\u8f93\u5165\u7684\u56fe\u50cf\uff0c\u4ece\u5206\u7c7b\u6807\u7b7e\u96c6\u5408\u4e2d\u627e\u51fa\u4e00\u4e2a\u5206\u7c7b\u6807\u7b7e\uff0c\u6700\u540e\u628a\u5206\u7c7b\u6807\u7b7e\u5206\u914d\u7ed9\u8be5\u8f93\u5165\u56fe\u50cf\uff0c\u6216\u8005\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u56fe\u50cf\uff0c\u9884\u6d4b\u5b83\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\uff08\u6216\u8005\u7ed9\u51fa\u5c5e\u4e8e\u4e00\u7cfb\u5217\u4e0d\u540c\u6807\u7b7e\u7684\u53ef\u80fd\u6027\uff09\u3002</code> \u867d\u7136\u770b\u8d77\u6765\u633a\u7b80\u5355\u7684\uff0c\u4f46\u8fd9\u53ef\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u7684\u6838\u5fc3\u95ee\u9898\u4e4b\u4e00\uff0c\u5e76\u4e14\u6709\u7740\u5404\u79cd\u5404\u6837\u7684\u5b9e\u9645\u5e94\u7528\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u9762\u4e34\u7684\u6311\u6218\u5c31\u662f \u8bed\u4e49\u9e3f\u6c9f(semantic gap)\u3002\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u4e2d\u5f88\u591a\u770b\u4f3c\u4e0d\u540c\u7684\u95ee\u9898\uff08\u6bd4\u5982\u7269\u4f53\u68c0\u6d4b\u548c\u5206\u5272\uff09\uff0c\u90fd\u53ef\u4ee5\u88ab\u5f52\u7ed3\u4e3a\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\u3002</p> <p>\u4f8b\u5b50\uff1a\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\uff0c\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\u8bfb\u53d6\u8be5\u56fe\u7247\uff0c\u5e76\u751f\u6210\u8be5\u56fe\u7247\u5c5e\u4e8e\u96c6\u5408 {cat, dog, hat, mug}\u4e2d\u5404\u4e2a\u6807\u7b7e\u7684\u6982\u7387\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u56fe\u50cf\u662f\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u5de8\u5927\u7684 3 \u7ef4\u6570\u7ec4\uff08\u5728\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u4e2d\uff0c\u56fe\u50cf\u5c31\u662f\u4e00\u4e2a\u4e09\u7ef4\u5f20\u91cf\uff09\u3002\u5728\u4e0b\u56fe\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u732b\u7684\u56fe\u50cf\u5927\u5c0f\u662f\u5bbd 248 \u50cf\u7d20\uff0c\u9ad8 400 \u50cf\u7d20\uff0c\u6709 3 \u4e2a\u989c\u8272\u901a\u9053\uff0c\u5206\u522b\u662f\u7ea2\u3001\u7eff\u548c\u84dd\uff08\u7b80\u79f0 RGB\uff09\u3002</p> <p>\u5982\u6b64\uff0c\u8be5\u56fe\u50cf\u5c31\u5305\u542b\u4e86 \\(248\\times400\\times3 = 297600\\) \u4e2a\u6570\u5b57\uff0c\u6bcf\u4e2a\u6570\u5b57\u90fd\u662f\u5728\u8303\u56f4 0-255 \u4e4b\u95f4\u7684\u6574\u578b\uff0c\u5176\u4e2d 0 \u8868\u793a\u5168\u9ed1\uff0c255 \u8868\u793a\u5168\u767d\u3002\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u628a\u8fd9\u4e9b\u4e0a\u767e\u4e07\u7684\u6570\u5b57\u53d8\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u6807\u7b7e\uff0c\u6bd4\u5982 \"\u732b\"\u3002\u6216\u8005\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9\u67d0\u79cd\u65b9\u6cd5\u5c06\u8fd9\u4e2a\u539f\u59cb\u6570\u5b57\u7f51\u7edc\u8f6c\u53d8\u4e3a\u76f8\u5e94\u7684\u6709\u610f\u4e49\u7684\u8bed\u4e49\u2014\u2014\u6bd4\u5982\u8bf4\u201c\u732b\u201d\u6807\u7b7e</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#\u56f0\u96be\u548c\u6311\u6218","title":"\u56f0\u96be\u548c\u6311\u6218","text":"<p>\u5bf9\u4e8e\u4eba\u6765\u8bf4\uff0c\u8bc6\u522b\u51fa\u4e00\u4e2a\u50cf \"\u732b\" \u4e00\u6837\u89c6\u89c9\u6982\u5ff5\u662f\u7b80\u5355\u81f3\u6781\u7684\uff0c\u7136\u800c\u4ece\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\u7684\u89d2\u5ea6\u6765\u770b\u5c31\u503c\u5f97\u6df1\u601d\u4e86\u3002\u6211\u4eec\u5728\u4e0b\u9762\u5217\u4e3e\u4e86\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\u5728\u56fe\u50cf\u8bc6\u522b\u65b9\u9762\u9047\u5230\u7684\u4e00\u4e9b\u56f0\u96be</p> <ul> <li>\u89c6\u89d2\u53d8\u5316\uff08 Viewpoint variation \uff09\uff1a\u540c\u4e00\u4e2a\u7269\u4f53\uff0c\u6444\u50cf\u673a\u53ef\u4ee5\u4ece <code>\u591a\u4e2a\u89d2\u5ea6\u6765\u5c55\u73b0</code>\uff0c\u5c3d\u7ba1\u53ef\u80fd\u89d2\u5ea6\u7684\u53d8\u5316\u5f88\u8f7b\u5fae\uff0c\u4f46\u662f\u53ef\u80fd\u4f7f\u5f97\u8fd9\u4e9b\u6570\u5b57\u53d1\u751f\u4e0d\u76f4\u89c2\u7684\u67d0\u79cd\u6539\u53d8</li> <li>\u7c7b\u5185\u5dee\u5f02\uff08 Intra-class variation \uff09\uff1a\u4e00\u7c7b\u7269\u4f53\u7684\u4e2a\u4f53\u4e4b\u95f4\u7684\u5916\u5f62\u5dee\u5f02\u5f88\u5927\uff0c\u6bd4\u5982\u6905\u5b50\u3002<code>\u8fd9\u4e00\u7c7b\u7269\u4f53\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u90fd\u6709\u81ea\u5df1\u7684\u5916\u5f62</code>\u3002\u6bd4\u5982\u8bf4\u732b\u5c31\u662f\u4e00\u79cd\u5f88\u4f1a\u53d8\u5f62\u7684\u751f\u7269</li> <li>\u76f8\u4f3c\u7c7b\uff08 Fine-Grained Categories \uff09\uff1a\u4e0d\u540c\u7c7b\u7269\u4f53\u7684\u4e2a\u4f53\u4e4b\u95f4\u7684\u5916\u5f62\u5dee\u5f02\u5c0f</li> <li>\u80cc\u666f\u5e72\u6270\uff08 Background clutter \uff09\uff1a\u7269\u4f53\u53ef\u80fd <code>\u6df7\u5165\u80cc\u666f\u4e4b\u4e2d</code>\uff0c\u4f7f\u4e4b\u96be\u4ee5\u88ab\u8fa8\u8ba4</li> <li>\u5149\u7167\u6761\u4ef6\uff08 Illumination conditions \uff09\uff1a\u5728\u50cf\u7d20\u5c42\u9762\u4e0a\uff0c\u5149\u7167\u7684\u5f71\u54cd\u975e\u5e38\u5927\uff0c\u6bd4\u5982\u8bf4 <code>\u5149\u7167\u548c\u660f\u6697\u60c5\u51b5</code> \u4e0b\u56fe\u50cf\u4f1a\u6709\u4e0d\u540c\u60c5\u51b5</li> <li>\u5f62\u53d8\uff08 Deformation \uff09\uff1a\u5f88\u591a\u4e1c\u897f\u7684\u5f62\u72b6\u5e76\u975e\u4e00\u6210\u4e0d\u53d8\uff0c\u4f1a\u6709\u5f88\u5927\u53d8\u5316\u3002</li> <li>\u906e\u6321\uff08 Occlusion \uff09\uff1a<code>\u76ee\u6807\u7269\u4f53\u53ef\u80fd\u88ab\u6321\u4f4f</code>\u3002\u6709\u65f6\u5019\u53ea\u6709\u7269\u4f53\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u53ef\u4ee5\u5c0f\u5230\u51e0\u4e2a\u50cf\u7d20\uff09\u662f\u53ef\u89c1\u7684\uff0c\u6bd4\u5982\u8bf4\u732b\u9690\u85cf\u5728\u8349\u4e1b\u4e2d\uff0c\u5e76\u4e0d\u660e\u663e</li> <li>\u5927\u5c0f\u53d8\u5316\uff08 Scale variation \uff09\uff1a\u7269\u4f53\u53ef\u89c6\u7684\u5927\u5c0f\u901a\u5e38\u662f\u4f1a\u53d8\u5316\u7684\uff08\u4e0d\u4ec5\u662f\u5728\u56fe\u7247\u4e2d\uff0c\u5728\u771f\u5b9e\u4e16\u754c\u4e2d\u5927\u5c0f\u4e5f\u662f\u53d8\u5316\u7684\uff09\u3002</li> </ul> <p>\u9762\u5bf9\u4ee5\u4e0a\u6240\u6709\u53d8\u5316\u53ca\u5176\u7ec4\u5408\uff0c\u597d\u7684\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\u80fd\u591f\u5728\u7ef4\u6301\u5206\u7c7b\u7ed3\u8bba\u7a33\u5b9a\u7684\u540c\u65f6\uff0c\u4fdd\u6301\u5bf9 <code>\u7c7b\u5185\u5dee\u5f02</code> \u8db3\u591f\u654f\u611f\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u56fe\u50cf\u5206\u7c7b\u6709\u4e0d\u540c\u7684\u5883\u754c</p> <p></p> <p>\u901a\u7528\u7684\u591a\u7c7b\u522b\u5206\u7c7b\uff0c\u662f\u5728\u4e0d\u540c\u7269\u79cd\u7684\u5c42\u6b21\u4e0a\u8fdb\u884c\u5206\u7c7b\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u533a\u5206\u51fa\u732b\u548c\u72d7\u5373\u53ef</p> <p>\u5b50\u7c7b\u7ec6\u7c92\u5ea6\u5206\u7c7b\u662f\u5bf9\u4e00\u4e2a\u5927\u7c7b\u4e2d\u7684\u5b50\u7c7b\u8fdb\u884c\u5212\u5206\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u533a\u5206\u4e86\u732b\u72d7\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u533a\u522b\u662f\u4ec0\u4e48\u54c1\u79cd\u7684\u732b\u548c\u72d7</p> <p>\u6700\u9ad8\u7684\u662f\u5b9e\u4f8b\u7ea7\u5206\u7c7b\uff0c\u4e00\u4e2a\u4e2a\u4f53\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u79cd\u7684\u7ec6\u7c92\u5ea6\u6700\u9ad8</p>"},{"location":"CV/Lecture2_Image_Classification/#\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898","title":"\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898","text":"<p>\u5982\u679c\u4e0d\u540c\u7c7b\u522b\u4e0b\u6837\u672c\u6570\u91cf\u76f8\u5dee\u5f88\u5927\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5206\u7c7b\u6a21\u578b\u7684\u6027\u80fd\u53d8\u5dee\uff0c\u5c31\u4e0e\u5b66\u751f\u6781\u5ea6\u504f\u79d1\u4e00\u6837\uff0c\u603b\u5206\u65e0\u6cd5\u7279\u522b\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u65b9\u9762\u7684\u65b9\u6cd5\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#\u6837\u672c\u6570\u91cf\u5c11\u95ee\u9898","title":"\u6837\u672c\u6570\u91cf\u5c11\u95ee\u9898","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u6837\u672c\u6570\u91cf\u5f88\u5c11\u7684\u7c7b\u522b\uff0c\u968f\u673a\u8fdb\u884c\u4e00\u4e9b\u63d2\u503c\uff0c\u6bd4\u5982\u8bf4\u968f\u673a\u9009\u62e9\u4e00\u4e9b\u56fe\u7247\u8fdb\u884c\u590d\u5236\u6dfb\u52a0\u5230\u8be5\u7c7b\u522b\u5305\u542b\u7684\u56fe\u50cf\u5185\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u4e00\u79cd\u63d2\u503c\u65b9\u5f0f</p> <p></p> <p>\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4ee5\u7ed3\u679c\u4e3a\u5bfc\u5411\u8fdb\u884c\u63d0\u9ad8\uff0c\u5220\u9664\u4e00\u4e9b\u5206\u7c7b\u597d\u7684\u7c7b\u522b\u7684\u6837\u672c\uff0c\u590d\u5236\u4e00\u4e9b\u6bd4\u8f83\u5dee\u7684\u6837\u672c\u7684\u7c7b\u522b</p> <p></p> <p>\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b97\u6cd5\u672c\u8eab\u8fdb\u884c\u6539\u8fdb\uff0c\u5148\u6784\u5efa\u4e00\u4e2a\u6bd4\u8f83\u5747\u8861\u7684\u6570\u636e\u96c6\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u4e0a\u9762\u8fdb\u884c\u9884\u8bad\u7ec3\uff0c\u540e\u9762\u8fdb\u884c\u5fae\u8c03\uff0c\u4e5f\u53ef\u4ee5\u6709\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u63d0\u9ad8</p> <p></p> <p>\u4e5f\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u6837\u672c\u6570\u91cf\u7684\u81ea\u9002\u5e94\u52a0\u6743\uff0c\u63d0\u9ad8\u6570\u91cf\u5c11\u7684\u7c7b\u522b\u7684\u6743\u91cd</p> <p>\u7814\u7a76\u7c7b\u522b\u6570\u91cf\u4e0d\u5747\u8861\u7684\u95ee\u9898\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u7279\u5b9a\u6837\u672c\u96be\u4ee5\u83b7\u53d6\u7684\u4efb\u52a1\u4e0a\uff0c\u6837\u672c\u6570\u91cf\u51e0\u4e4e\u662f\u5fc5\u5b9a\u6781\u4e3a\u4e0d\u5747\u8861\u7684\uff0c\u6bd4\u5982\u8bf4\u533b\u7597\u89c6\u89c9\u6a21\u578b\u4efb\u52a1\u4e2d\uff0c\u4e00\u4e9b\u7f55\u89c1\u75c5\u7684\u5f71\u50cf\u6570\u91cf\u5f88\u5c11</p> <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u8fc1\u79fb\u5b66\u4e60\u89e3\u51b3\uff0c\u5982\u679c\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u8bad\u7ec3\u6570\u636e\u8db3\u591f\u5927\uff0c\u5e76\u4e14\u4e0e\u672c\u4efb\u52a1\u76f8\u5339\u914d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9884\u8bad\u7ec3\u6a21\u578b\u6240\u5b66\u7684\u7279\u5f81\u5c31\u4f1a\u5177\u6709\u4e00\u5b9a\u7684\u901a\u7528\u6027\uff0c\u6bd4\u5982\u8bf4\u7528\u9014\u5e7f\u6cdb\u7684 ImageNet \u6570\u636e\u96c6</p> <p>\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u589e\u5f3a\u65b9\u5f0f\uff0c\u4eba\u4e3a\u6269\u5145\u6570\u636e\u96c6\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u6570\u636e\u96c6\u7684\u95ee\u9898</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1","title":"\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1","text":"<p>\u5f53\u7136\uff0c\u8ba1\u7b97\u673a\u89c6\u89c9\u4e0d\u6b62\u6709\u56fe\u50cf\u5206\u7c7b\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u76f8\u5173\u7684\u4efb\u52a1\u2014\u2014<code>\u76ee\u6807\u68c0\u6d4b\uff08object detection\uff09</code>\uff0c\u8fd9\u4e2a\u4efb\u52a1\u6211\u4eec\u9700\u8981\u5c06\u56fe\u50cf\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u5708\u51fa\u6765</p> <p>\u7ed3\u679c\u8bc1\u660e\uff0c\u56fe\u50cf\u5206\u7c7b\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u57fa\u7840\uff0c\u53ef\u4ee5\u7528\u6765\u6784\u5efa\u66f4\u591a\u66f4\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982\u8bf4\u76ee\u6807\u68c0\u6d4b\uff0c\u6839\u636e\u56fe\u7247\u751f\u6210 caption \u6ce8\u91ca\uff08\u4f8b\u5982\u4e0b\u56fe\u53ef\u4ee5\u751f\u6210 man ride horse\uff09\uff0c\u7b49 </p> <p>\u60f3\u6cd5\uff1a\u5982\u4f55\u5b9e\u73b0\u56fe\u50cf\u5206\u7c7b\uff1f</p> <p>\u6839\u636e\u4e4b\u524d\u6240\u4e86\u89e3\u5230\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u80fd\u9996\u5148\u60f3\u5230\u901a\u8fc7\u5bf9\u7167\u7247\u8fdb\u884c <code>\u8fb9\u7f18\u68c0\u6d4b(edge detection)</code> \u6765\u63d0\u53d6\u7279\u5f81\uff0c\u5982\u4f55\u5c1d\u8bd5\u627e\u5230\u89d2\u70b9\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u53ef\u89e3\u91ca\u6a21\u5f0f\uff0c\u6bd4\u5982\u8bf4\u732b\u6709\u4e09\u89d2\u5f62\u5c16\u8033\u6735\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u68c0\u6d4b\u8fd9\u65b9\u9762\u7684\u8fb9\u7f18\u4fe1\u606f\uff0c\u6216\u8005\u6211\u4eec\u77e5\u9053\u732b\u6709\u80e1\u987b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u80e1\u987b\u7684\u8fb9\u7f18\u4fe1\u606f\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\u6765\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u68c0\u6d4b\u4ed6\u4eec</p> <p>\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u8bf4\u4f1a\u6709\u6ca1\u6709\u80e1\u987b\u7684\u732b\uff0c\u4f1a\u6709\u6ca1\u6709\u5c16\u8033\u6735\u7684\u732b\uff0c\u6216\u8005\u6709\u65f6\u5019\u8fb9\u7f18\u68c0\u6d4b\u5668\u4f1a\u5931\u6548\u4ece\u800c\u65e0\u6cd5\u6b63\u5e38\u63d0\u4ea4\u6240\u9700\u7684\u8fb9\u7f18\uff0c\u800c\u4e14\u8fd9\u5f88\u96be\u8fdb\u884c\u8fc1\u79fb\u2014\u2014\u5f53\u6211\u4eec\u53ef\u4ee5\u6210\u529f\u8bc6\u522b\u732b\u7684\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5c06\u5176\u7528\u5230\u5176\u4ed6\u65b9\u9762\uff0c\u6bd4\u5982\u8bf4\u8bc6\u522b\u72d7\uff0c\u90a3\u4e48\u4e4b\u524d\u7684\u5de5\u4f5c\u5c06\u6beb\u65e0\u610f\u4e49\uff0c<code>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u5177\u6709\u53ef\u6269\u5c55\u6027\u7684\u7b97\u6cd5</code></p>"},{"location":"CV/Lecture2_Image_Classification/#\u6570\u636e\u9a71\u52a8\u65b9\u6cd5-data-driven-approach","title":"\u6570\u636e\u9a71\u52a8\u65b9\u6cd5 Data-Driven Approach","text":"<ol> <li>Collect a dataset of images and labels</li> <li>Use machine learning to train a classifier</li> <li>Evaluate the classifier on new images</li> </ol> <p>3 \u4e2a\u91cd\u8981\u7684\u73af\u8282\uff1a</p> <ul> <li> <p>input\uff1a\u8f93\u5165\u662f\u5305\u542b N \u4e2a\u56fe\u50cf\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u56fe\u50cf\u7684\u6807\u7b7e\u662f K \u79cd\u5206\u7c7b\u6807\u7b7e\u4e2d\u7684\u4e00\u79cd\u3002\u8fd9\u4e2a\u96c6\u5408\u79f0\u4e3a\u8bad\u7ec3\u96c6\u3002</p> </li> <li> <p>train\uff1a \u8f93\u5165\u56fe\u50cf\u6570\u636e\u96c6\u4ee5\u53ca\u76f8\u5173\u6807\u7b7e\u96c6\u5408\uff0c\u4f7f\u7528\u67d0\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u8fd4\u56de\u7edf\u8ba1\u6a21\u578b</p> </li> <li>predict\uff1a\u8ba9\u5206\u7c7b\u5668\u6765\u9884\u6d4b\u5b83\u672a\u66fe\u89c1\u8fc7\u7684\u56fe\u50cf\u7684\u5206\u7c7b\u6807\u7b7e\uff0c\u5e76\u4ee5\u6b64\u6765\u8bc4\u4ef7\u5206\u7c7b\u5668\u7684\u8d28\u91cf\u3002</li> </ul> <p>\u4f20\u7edf\u7684\u56fe\u50cf\u5206\u7c7b\u662f\u7531\u4e13\u5bb6\u53bb\u624b\u52a8\u8bbe\u8ba1\u7279\u5f81\u53bb\u63d0\u53d6\uff08\u4f9d\u9760\u4eba\u7c7b\u73b0\u6709\u7684\u7ea6\u5b9a\u4fd7\u6210\u7684\u77e5\u8bc6\uff09\uff0c\u6df1\u5ea6\u5b66\u4e60\u5206\u7c7b\u65b9\u6cd5\u5219\u662f\u8ba9\u673a\u5668\u81ea\u52a8\u53bb\u5b66\u4e60\u5982\u4f55\u63d0\u53d6\u7279\u5f81\u548c\u54ea\u4e9b\u63d0\u53d6\u7279\u5f81\uff0c\u4eba\u7c7b\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u6295\u5582\u5927\u91cf\u7684\u76ee\u6807 label \u7684\u56fe\u50cf\u3002</p> <p></p> <p>\u5982\u4f55\u5199\u4e00\u4e2a\u56fe\u50cf\u5206\u7c7b\u7684\u7b97\u6cd5\u5462\uff1f\u8fd9\u548c\u5199\u4e2a\u6392\u5e8f\u7b97\u6cd5\u53ef\u662f\u5927\u4e0d\u4e00\u6837\u3002\u600e\u4e48\u5199\u4e00\u4e2a\u4ece\u56fe\u50cf\u4e2d\u8ba4\u51fa\u732b\u7684\u7b97\u6cd5\uff1f\u641e\u4e0d\u6e05\u695a\u3002\u56e0\u6b64\uff0c<code>\u4e0e\u5176\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u5199\u660e\u5404\u7c7b\u7269\u4f53\u5230\u5e95\u770b\u8d77\u6765\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u5012\u4e0d\u5982\u8bf4\u6211\u4eec\u91c7\u53d6\u7684\u65b9\u6cd5\u548c\u6559\u5c0f\u5b69\u513f\u770b\u56fe\u8bc6\u7269\u7c7b\u4f3c\uff1a\u7ed9\u8ba1\u7b97\u673a\u5f88\u591a\u6570\u636e\uff0c\u7136\u540e\u5b9e\u73b0\u5b66\u4e60\u7b97\u6cd5\uff0c\u8ba9\u8ba1\u7b97\u673a\u5b66\u4e60\u5230\u6bcf\u4e2a\u7c7b\u7684\u5916\u5f62\u3002</code> \u8fd9\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u4f7f\u7528\u62e5\u6709\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u5982\u4f55\u8bc6\u522b\u4e0d\u540c\u7c7b\u578b\u5bf9\u8c61\u4e0e\u56fe\u50cf\u7684\u7b97\u6cd5\u3002\u65e2\u7136\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u6536\u96c6\u5927\u91cf\u5df2\u7ecf\u505a\u597d\u5206\u7c7b\u6807\u6ce8\u7684\u56fe\u7247\u6765\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u90a3\u4e48\u4e0b\u9762\u5c31\u770b\u770b\u6570\u636e\u96c6\u5230\u5e95\u957f\u4ec0\u4e48\u6837\uff1a</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#\u6570\u636e\u96c6","title":"\u6570\u636e\u96c6","text":""},{"location":"CV/Lecture2_Image_Classification/#mnist-\u6570\u636e\u96c6\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u679c\u8747","title":"MNIST \u6570\u636e\u96c6\uff1a\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u679c\u8747","text":"<p>MNIST \u6570\u636e\u96c6\u662f\u4e00\u79cd\u624b\u5199\u6570\u5b57\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u7684\u6bcf\u5f20\u56fe\u7247\u90fd\u5305\u62ec\u4e00\u4e2a\u4e0d\u540c\u7684\u624b\u5199\u6570\u5b57\uff0c\u5927\u5c0f\u7edf\u4e00\u4e3a 28 \\(\\times\\) 28\uff0c\u5341\u4e2a\u7c7b\u522b\uff0c\u6709\u4e94\u4e07\u5f20\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u548c\u4e00\u4e07\u5f20\u4f5c\u4e3a\u6d4b\u8bd5\u96c6</p> <p>\u5b83\u66f4\u50cf\u4e00\u79cd\u73a9\u5177\u6570\u636e\u96c6\uff0c\u6216\u8005\u4e5f\u88ab\u79f0\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u679c\u8747\uff0c\u53ef\u4ee5\u505a\u5f88\u591a\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u96c6\u5f88\u5c0f\u800c\u4e14\u7b80\u5355\uff0c\u53ef\u4ee5\u5feb\u901f\u9a8c\u8bc1\u65b0\u60f3\u6cd5</p>"},{"location":"CV/Lecture2_Image_Classification/#cifar-\u6570\u636e\u96c6","title":"CIFAR \u6570\u636e\u96c6","text":"<p>CIFAR-10\uff1a\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\u662f [CIFAR-10][15]\u3002\u8fd9\u4e2a\u6570\u636e\u96c6\u5305\u542b\u4e86 60000 \u5f20 32X32 \u7684\u5c0f\u56fe\u50cf\u3002\u6bcf\u5f20\u56fe\u50cf\u90fd\u6709 10 \u79cd\u5206\u7c7b\u6807\u7b7e\u4e2d\u7684\u4e00\u79cd\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u4e3b\u4f53\u5bf9\u8c61\u3002\u8fd9 60000 \u5f20\u56fe\u50cf\u88ab\u5206\u4e3a\u5305\u542b 50000 \u5f20\u56fe\u50cf\u7684\u8bad\u7ec3\u96c6\u548c\u5305\u542b 10000 \u5f20\u56fe\u50cf\u7684\u6d4b\u8bd5\u96c6\u3002\u53ef\u4ee5\u89c6\u4f5c MNIST \u7684\u5f69\u8272\u589e\u5f3a\u7248</p> <p>\u5728\u4e0b\u56fe\u4e2d\u4f60\u53ef\u4ee5\u770b\u89c1 10 \u4e2a\u7c7b\u7684 10 \u5f20\u968f\u673a\u56fe\u7247\u3002</p> <p></p> <p>\u5de6\u8fb9\uff1a\u4ece [CIFAR-10][15] \u6570\u636e\u5e93\u6765\u7684\u6837\u672c\u56fe\u50cf\u3002\u53f3\u8fb9\uff1a\u7b2c\u4e00\u5217\u662f\u6d4b\u8bd5\u56fe\u50cf\uff0c\u7136\u540e\u7b2c\u4e00\u5217\u7684\u6bcf\u4e2a\u6d4b\u8bd5\u56fe\u50cf\u53f3\u8fb9\u662f\u4f7f\u7528 Nearest Neighbor \u7b97\u6cd5\uff0c\u6839\u636e\u50cf\u7d20\u5dee\u5f02\uff0c\u4ece\u8bad\u7ec3\u96c6\u4e2d\u9009\u51fa\u7684 10 \u5f20\u6700\u7c7b\u4f3c\u7684\u56fe\u7247\u3002</p> <p>\u6b64\u5916\u8fd8\u6709 CIFAR100 \u6570\u636e\u96c6\uff08100 \u7c7b\uff09\uff0c\u7ec6\u7c92\u5ea6\u66f4\u9ad8\uff0c\u6709\u4e00\u767e\u4e2a\u7c7b\uff0c\u5e76\u4e14\u6bcf\u4e94\u4e2a\u7c7b\u7ec4\u6210\u4e00\u4e2a\u8d85\u7c7b\u6bcf\u4e2a\u7c7b\u6709 600 \u4e2a\u56fe\u50cf\uff0c\u5e76\u4e14\u6bcf\u4e2a\u56fe\u50cf\u6709\u4e24\u4e2a\u6807\u7b7e\u2014\u2014\u4e00\u4e2a\u662f\u7cbe\u7ec6\u7684\u7c7b\u6807\u7b7e\uff0c\u4e00\u4e2a\u662f\u7c97\u7cd9\u7684\u8d85\u7c7b\u6807\u7b7e\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#imagenet\u9ec4\u91d1\u6570\u636e\u96c6","title":"ImageNet\uff1a\u9ec4\u91d1\u6570\u636e\u96c6","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u636e\uff0c\u6709\u4e24\u4e07\u79cd\u7c7b\u522b\uff0c\u540c\u65f6\u6709\u5343\u4e07\u5f20\u56fe\u7247\uff08\u6bcf\u4e2a\u7c7b\u522b 1300 \u5f20\uff09\uff0c\u767e\u4e07\u6807\u6ce8\u6846\uff0c\u56fe\u50cf\u5927\u5c0f\u4e0d\u7edf\u4e00\uff0c\u4ee5\u5176\u547d\u540d\u7684 ImageNet \u5206\u7c7b\u7ade\u8d5b\u4f7f\u7528\u4e86\u5176\u4e2d\u4e00\u5343\u4e2a\u7c7b\u7684\u5b50\u96c6\uff0c\u5728\u6b64\u7ade\u8d5b\u4e2d\u51fa\u73b0\u4e86\u5927\u91cf\u7ecf\u5178\u5de5\u4f5c\uff0c\u5982 AlexNet \u7b49 </p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u4e2a\u56fe\u7247\u7684\u6807\u6ce8\u53ef\u4ee5\u5206\u4e3a\u5f88\u591a\u4e2a\u7ea7\u522b\uff0c\u9897\u7c92\u5ea6\u8d8a\u6765\u8d8a\u5c0f\uff08\u6216\u8005\u8bf4\u4e00\u4e2a\u56fe\u7247\u6709\u591a\u4e2a\u6807\u7b7e\u5e76\u4e14\u5448\u5305\u542b\u5173\u7cfb\uff09</p> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#nearest-neighbor-\u5206\u7c7b\u5668","title":"Nearest Neighbor \u5206\u7c7b\u5668","text":"<p>\u4f5c\u4e3a\u8bfe\u7a0b\u4ecb\u7ecd\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a Nearest Neighbor \u5206\u7c7b\u5668\u3002\u867d\u7136\u8fd9\u4e2a\u5206\u7c7b\u5668\u548c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5b9e\u9645\u4e2d\u4e5f\u6781\u5c11\u4f7f\u7528\u800c\u4e14\u5176\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u901a\u8fc7\u5b9e\u73b0\u5b83\uff0c\u53ef\u4ee5\u8ba9\u8bfb\u8005\u5bf9\u4e8e\u89e3\u51b3\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\u7684\u65b9\u6cd5\u6709\u4e2a\u57fa\u672c\u7684\u8ba4\u8bc6\uff0c\u4e5f\u5c31\u662f\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u4e24\u4e2a\u57fa\u672c\u90e8\u5206\u2014\u2014\u8bad\u7ec3\u3001\u9884\u6d4b\u3002</p> <p><code>\u5176\u4e2d\uff0c\u8bad\u7ec3\u51fd\u6570\uff0c\u5c31\u662f\u8bb0\u4f4f\u6240\u6709\u7684\u6570\u636e\u548c\u6807\u7b7e\uff08\u6216\u8005\u8bf4\u8fdb\u884c\u5b66\u4e60\uff09\uff0c\u9884\u6d4b\u51fd\u6570\uff0c\u5c31\u662f\u9884\u6d4b\u51fa\u56fe\u50cf\u6700\u53ef\u80fd\u7684\u6807\u7b7e</code></p> <p>\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u6709 CIFAR-10 \u7684 50000 \u5f20\u56fe\u7247\uff08\u6bcf\u79cd\u5206\u7c7b 5000 \u5f20\uff09\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u4f59\u4e0b\u7684 10000 \u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u5e76\u7ed9\u4ed6\u4eec\u6253\u4e0a\u6807\u7b7e\u3002Nearest Neighbor \u7b97\u6cd5\u5c06\u4f1a\u62ff\u7740\u6d4b\u8bd5\u56fe\u7247\u548c\u8bad\u7ec3\u96c6\u4e2d\u6bcf\u4e00\u5f20\u56fe\u7247\u53bb\u6bd4\u8f83\uff0c\u7136\u540e\u5c06\u5b83\u8ba4\u4e3a\u6700\u76f8\u4f3c\u7684\u90a3\u4e2a\u8bad\u7ec3\u96c6\u56fe\u7247\u7684\u6807\u7b7e\u8d4b\u7ed9\u8fd9\u5f20\u6d4b\u8bd5\u56fe\u7247\u3002</p> <p>\u90a3\u4e48\u5177\u4f53\u5982\u4f55\u6bd4\u8f83\u4e24\u5f20\u56fe\u7247\u7684\u76f8\u4f3c\u7a0b\u5ea6\u5462\uff08\u6216\u8005\u53ef\u4ee5\u5c06\u76f8\u4f3c\u7a0b\u5ea6\u7406\u89e3\u4e3a\u8ddd\u79bb\uff0c\u8ddd\u79bb\u8d8a\u8fd1\uff0c\u56fe\u7247\u8d8a\u76f8\u4f3c\uff09\uff1f\u5728\u672c\u4f8b\u4e2d\uff0c\u5c31\u662f\u6bd4\u8f83 32x32x3 \u7684\u50cf\u7d20\u5757\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u9010\u4e2a\u50cf\u7d20\u6bd4\u8f83\uff0c\u6700\u540e\u5c06\u5dee\u5f02\u503c\u5168\u90e8\u52a0\u8d77\u6765\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c06\u4e24\u5f20\u56fe\u7247\u5148\u8f6c\u5316\u4e3a\u4e24\u4e2a\u5411\u91cf \\(I_1, I_2\\)\uff0c\u7136\u540e\u8ba1\u7b97\u4ed6\u4eec\u7684 L1 \u8ddd\u79bb\uff08\u66fc\u54c8\u987f\u8ddd\u79bb\uff09\uff1a</p> <p></p> <p>\u8fd9\u91cc\u7684\u6c42\u548c\u662f\u9488\u5bf9\u6240\u6709\u7684\u50cf\u7d20\u3002\u4e0b\u9762\u662f\u6574\u4e2a\u6bd4\u8f83\u6d41\u7a0b\u7684\u56fe\u4f8b\uff1a</p> <p></p> <p>\u4ee5\u56fe\u7247\u4e2d\u7684\u4e00\u4e2a\u989c\u8272\u901a\u9053\u4e3a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\u3002\u4e24\u5f20\u56fe\u7247\u4f7f\u7528 L1 \u8ddd\u79bb\u6765\u8fdb\u884c\u6bd4\u8f83\u3002\u9010\u4e2a\u50cf\u7d20\u6c42\u5dee\u503c\uff0c\u7136\u540e\u5c06\u6240\u6709\u5dee\u503c\u52a0\u8d77\u6765\u5f97\u5230\u4e00\u4e2a\u6570\u503c\u3002\u5982\u679c\u4e24\u5f20\u56fe\u7247\u4e00\u6a21\u4e00\u6837\uff0c\u90a3\u4e48 L1 \u8ddd\u79bb\u4e3a 0\uff0c\u4f46\u662f\u5982\u679c\u4e24\u5f20\u56fe\u7247\u5f88\u662f\u4e0d\u540c\uff0c\u90a3 L1 \u503c\u5c06\u4f1a\u975e\u5e38\u5927\u3002</p> <p>\u4e0b\u9762\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u7528\u4ee3\u7801\u6765\u5b9e\u73b0\u8fd9\u4e2a\u5206\u7c7b\u5668\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06 CIFAR-10 \u7684\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u5206\u6210 4 \u4e2a\u6570\u7ec4\uff1a\u8bad\u7ec3\u6570\u636e\u548c\u6807\u7b7e\uff0c\u6d4b\u8bd5\u6570\u636e\u548c\u6807\u7b7e\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0cXtr\uff08\u5927\u5c0f\u662f \\(50000\\times32\\times32\\times3\\)\uff09\u5b58\u6709\u8bad\u7ec3\u96c6\u4e2d\u6240\u6709\u7684\u56fe\u50cf\uff0cYtr \u662f\u5bf9\u5e94\u7684\u957f\u5ea6\u4e3a 50000 \u7684 1 \u7ef4\u6570\u7ec4\uff0c\u5b58\u6709\u56fe\u50cf\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\uff08\u4ece 0 \u5230 9\uff09\uff1a</p> <pre><code>Xtr, Ytr, Xte, Yte = load_CIFAR10('data/cifar10/') # a magifunction we provide\n# flatten out all images to be one-dimensional\nXtr_rows = Xtr.reshape(Xtr.shape[0], 32 * 32 * 3) # Xtr_row becomes 50000 x 3072\nXte_rows = Xte.reshape(Xte.shape[0], 32 * 32 * 3) # Xte_row becomes 10000 x 3072\n</code></pre> <ul> <li><code>Xtr.shape[0]</code> \u83b7\u53d6 <code>Xtr</code> \u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\uff0c\u5373\u6837\u672c\u7684\u6570\u91cf\u3002</li> <li> <p><code>reshape</code> \u65b9\u6cd5\u7528\u4e8e\u5c06\u6bcf\u4e2a 32x32 \u7684\u5f69\u8272\u56fe\u50cf\uff083 \u4e2a\u901a\u9053\u5206\u522b\u5bf9\u5e94 RGB\uff09\u8f6c\u6362\u4e3a\u4e00\u4e2a 3072 \u7ef4\u7684 1 \u7ef4\u5411\u91cf\uff0832 _ 32 _ 3 = 3072\uff09\u3002</p> </li> <li> <p><code>Xtr_rows</code> \u548c <code>Xte_rows</code> \u7684\u5f62\u72b6\u5206\u522b\u4e3a <code>(50000, 3072)</code> \u548c <code>(10000, 3072)</code>\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u5c55\u5e73\u7684\u56fe\u50cf\u3002</p> </li> </ul> <p>\u901a\u8fc7 <code>Xtr.shape[0]</code>\uff0c\u4f60\u83b7\u5f97\u4e86\u6837\u672c\u6570\u91cf\uff0850000\uff09\uff0c\u5e76\u5728 <code>reshape</code> \u65b9\u6cd5\u4e2d\u5c06\u6bcf\u5f20\u56fe\u50cf\u5c55\u5e73\u6210\u4e00\u4e2a 3072 \u7ef4\u7684\u5411\u91cf\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5c55\u5e73\u540e\u7684\u6570\u7ec4\u4ecd\u7136\u5305\u542b 50000 \u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u6709 3072 \u4e2a\u7279\u5f81\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5f97\u5230\u6240\u6709\u7684\u56fe\u50cf\u6570\u636e\uff0c\u5e76\u4e14\u628a\u4ed6\u4eec\u62c9\u957f\u6210\u4e3a\u884c\u5411\u91cf\u4e86\u3002\u63a5\u4e0b\u6765\u5c55\u793a\u5982\u4f55\u8bad\u7ec3\u5e76\u8bc4\u4ef7\u4e00\u4e2a\u5206\u7c7b\u5668\uff1a</p> <pre><code>    nn = NearestNeighbor() # create a Nearest Neighbor classifier class\n    nn.train(Xtr_rows, Ytr) # train the classifier on the training images and labels\n    Yte_predict = nn.predict(Xte_rows) # predict labels on the test images\n    # and now print the classification accuracy, which is the average number\n    # of examples that are correctly predicted (i.e. label matches)\n    print 'accuracy: %f' % ( np.mean(Yte_predict == Yte) )\n</code></pre> <ol> <li>\u5e38\u89c1\u6700\u8fd1\u90bb\u5206\u7c7b\u5668</li> </ol> <p>\u8fd9\u91cc\u7684 <code>NearestNeighbor</code> \u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u6709\u65b9\u6cd5\u6765\u8bad\u7ec3\u6a21\u578b\u548c\u8fdb\u884c\u9884\u6d4b</p> <ol> <li>\u8bad\u7ec3\u5206\u7c7b\u5668</li> </ol> <p><code>train()</code> \u65b9\u6cd5\u5c06\u5206\u7c7b\u5668\u8bad\u7ec3\u5728\u8bad\u7ec3\u96c6\u4e0a\u3002\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a</p> <ul> <li><code>Xtr_rows</code>\uff1a\u5c55\u5e73\u540e\u7684\u8bad\u7ec3\u56fe\u50cf\u6570\u636e\uff0850000 x 3072\uff09\u3002</li> <li><code>Ytr</code>\uff1a\u8bad\u7ec3\u56fe\u50cf\u7684\u6807\u7b7e\u3002</li> </ul> <p>\u5728\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u4e2d\uff0c\u8bad\u7ec3\u901a\u5e38\u53ea\u662f\u5c06\u8bad\u7ec3\u6570\u636e\u5b58\u50a8\u8d77\u6765\uff0c\u56e0\u4e3a\u9884\u6d4b\u65f6\u53ea\u9700\u8981\u627e\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u8bad\u7ec3\u6837\u672c\u3002</p> <ol> <li>\u8fdb\u884c\u9884\u6d4b</li> </ol> <p><code>predict()</code> \u65b9\u6cd5\u4f7f\u7528\u6700\u8fd1\u90bb\u7b97\u6cd5\u5bf9\u6d4b\u8bd5\u96c6 <code>Xte_rows</code> \u8fdb\u884c\u9884\u6d4b\u3002\u5b83\u5c06\u4e3a\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u627e\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u6807\u7b7e\u3002</p> <ol> <li>\u8ba1\u7b97\u5e76\u6253\u5370\u4e86\u5206\u7c7b\u5668\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u3002</li> </ol> <p><code>Yte_predict == Yte</code> \u4f1a\u751f\u6210\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u8868\u793a\u9884\u6d4b\u6807\u7b7e\u4e0e\u5b9e\u9645\u6807\u7b7e\u662f\u5426\u5339\u914d\u3002</p> <p><code>np.mean()</code> \u8ba1\u7b97\u8be5\u5e03\u5c14\u6570\u7ec4\u4e2d <code>True</code> \u7684\u6bd4\u4f8b\uff08\u5373\u5206\u7c7b\u6b63\u786e\u7684\u6837\u672c\u5360\u6bd4\uff09\uff0c\u4f5c\u4e3a\u51c6\u786e\u7387\u3002</p> <pre><code>import numpy as np\n\nclass NearestNeighbor:\n    def __init__(self):\n        pass\n\n    def train(self, X, y):\n        # X \u662f\u5f62\u72b6\u4e3a N x D \u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u793a\u4f8b\uff0cy \u662f N \u957f\u5ea6\u7684\u4e00\u7ef4\u6807\u7b7e\u6570\u7ec4\n        # \u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u53ea\u9700\u8981\u8bb0\u4f4f\u6240\u6709\u7684\u8bad\u7ec3\u6570\u636e\n        self.Xtr = X\n        self.Ytr = y\n\n    def predict(self, X):\n        # X \u662f\u5f62\u72b6\u4e3a N x D \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u6211\u4eec\u60f3\u9884\u6d4b\u6807\u7b7e\u7684\u793a\u4f8b\n        num_test = X.shape[0]\n        # \u786e\u4fdd\u8f93\u51fa\u7c7b\u578b\u4e0e\u8f93\u5165\u7c7b\u578b\u5339\u914d\n        Ypred = np.zeros(num_test, dtype=self.Ytr.dtype)\n\n        # \u904d\u5386\u6240\u6709\u6d4b\u8bd5\u6837\u672c\n        for i in range(num_test):\n            # \u627e\u5230\u4e0e\u7b2c i \u4e2a\u6d4b\u8bd5\u6837\u672c\u6700\u8fd1\u7684\u8bad\u7ec3\u6837\u672c\n            # \u4f7f\u7528 L1 \u8ddd\u79bb\uff08\u7edd\u5bf9\u503c\u5dee\u7684\u548c\uff09\n            distances = np.sum(np.abs(self.Xtr - X[i, :]), axis=1)\n            # \u83b7\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684\u7d22\u5f15\n            min_index = np.argmin(distances)\n            # \u9884\u6d4b\u6700\u8fd1\u6837\u672c\u7684\u6807\u7b7e\n            Ypred[i] = self.Ytr[min_index]\n\n        return Ypred\n</code></pre> <p>\u5982\u679c\u4f60\u7528\u8fd9\u6bb5\u4ee3\u7801\u8dd1 CIFAR-10\uff0c\u4f60\u4f1a\u53d1\u73b0\u51c6\u786e\u7387\u80fd\u8fbe\u5230 38.6%\u3002\u8fd9\u6bd4\u968f\u673a\u731c\u6d4b\u7684 10%\u8981\u597d\uff0c\u4f46\u662f\u6bd4\u4eba\u7c7b\u8bc6\u522b\u7684\u6c34\u5e73\uff08[\u636e\u7814\u7a76\u63a8\u6d4b\u662f 94%__][21]\uff09\u548c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u80fd\u8fbe\u5230\u7684 95%\u8fd8\u662f\u5dee\u591a\u4e86\u3002\u70b9\u51fb\u67e5\u770b\u57fa\u4e8e CIFAR-10 \u6570\u636e\u7684[Kaggle \u7b97\u6cd5\u7ade\u8d5b\u6392\u884c\u699c__][22]\u3002</p> <p>\u8ddd\u79bb\u9009\u62e9\uff1a\u8ba1\u7b97\u5411\u91cf\u95f4\u7684\u8ddd\u79bb\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u53e6\u4e00\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u662f L2 \u8ddd\u79bb\uff0c\u4ece\u51e0\u4f55\u5b66\u7684\u89d2\u5ea6\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b83\u5728\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u95f4\u7684\u6b27\u5f0f\u8ddd\u79bb\u3002L2 \u8ddd\u79bb\u7684\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u4f9d\u65e7\u662f\u5728\u8ba1\u7b97\u50cf\u7d20\u95f4\u7684\u5dee\u503c\uff0c\u53ea\u662f\u5148\u6c42\u5176\u5e73\u65b9\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5e73\u65b9\u5168\u90e8\u52a0\u8d77\u6765\uff0c\u6700\u540e\u5bf9\u8fd9\u4e2a\u548c\u5f00\u65b9\u3002\u5728 Numpy \u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66ff\u6362\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 1 \u884c\u4ee3\u7801\u5c31\u884c\uff1a</p> <pre><code>    distances = np.sqrt(np.sum(np.square(self.Xtr - X[i,:]), axis = 1))\n</code></pre> <p>\u6ce8\u610f\u5728\u8fd9\u91cc\u4f7f\u7528\u4e86 np.sqrt\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u4e2d\u53ef\u80fd\u4e0d\u7528\u3002\u56e0\u4e3a\u6c42\u5e73\u65b9\u6839\u51fd\u6570\u662f\u4e00\u4e2a\u5355\u8c03\u51fd\u6570\uff0c\u5b83\u5bf9\u4e0d\u540c\u8ddd\u79bb\u7684\u7edd\u5bf9\u503c\u6c42\u5e73\u65b9\u6839\u867d\u7136\u6539\u53d8\u4e86\u6570\u503c\u5927\u5c0f\uff0c\u4f46\u4f9d\u7136\u4fdd\u6301\u4e86\u4e0d\u540c\u8ddd\u79bb\u5927\u5c0f\u7684\u987a\u5e8f\u3002\u6240\u4ee5\u7528\u4e0d\u7528\u5b83\uff0c\u90fd\u80fd\u591f\u5bf9\u50cf\u7d20\u5dee\u5f02\u7684\u5927\u5c0f\u8fdb\u884c\u6b63\u786e\u6bd4\u8f83\u3002\u5982\u679c\u4f60\u5728 CIFAR-10 \u4e0a\u9762\u8dd1\u8fd9\u4e2a\u6a21\u578b\uff0c\u6b63\u786e\u7387\u662f 35.4%\uff0c\u6bd4\u521a\u624d\u4f4e\u4e86\u4e00\u70b9\u3002</p>"},{"location":"CV/Lecture2_Image_Classification/#k-nearest-neighbor-\u5206\u7c7b\u5668","title":"k-Nearest Neighbor \u5206\u7c7b\u5668","text":"<p>\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u4e3a\u4ec0\u4e48\u53ea\u7528\u6700\u76f8\u4f3c\u7684 1 \u5f20\u56fe\u7247\u7684\u6807\u7b7e\u6765\u4f5c\u4e3a\u6d4b\u8bd5\u56fe\u50cf\u7684\u6807\u7b7e\u5462\uff1f\u8fd9\u4e0d\u662f\u5f88\u5947\u602a\u5417\uff01\u662f\u7684\uff0c\u4f7f\u7528 k-Nearest Neighbor \u5206\u7c7b\u5668 \u5c31\u80fd\u505a\u5f97\u66f4\u597d\u3002\u5b83\u7684\u601d\u60f3\u5f88\u7b80\u5355\uff1a\u4e0e\u5176\u53ea\u627e\u6700\u76f8\u8fd1\u7684\u90a3 1 \u4e2a\u56fe\u7247\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u627e\u6700\u76f8\u4f3c\u7684 k \u4e2a\u56fe\u7247\u7684\u6807\u7b7e\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u9488\u5bf9\u6d4b\u8bd5\u56fe\u7247\u8fdb\u884c\u6295\u7968\uff0c\u6700\u540e\u628a\u7968\u6570\u6700\u9ad8\u7684\u6807\u7b7e\u4f5c\u4e3a\u5bf9\u6d4b\u8bd5\u56fe\u7247\u7684\u9884\u6d4b\u3002\u6240\u4ee5\u5f53 k = 1 \u7684\u65f6\u5019\uff0ck-Nearest Neighbor \u5206\u7c7b\u5668\u5c31\u662f Nearest Neighbor \u5206\u7c7b\u5668\u3002\u4ece\u76f4\u89c2\u611f\u53d7\u4e0a\u5c31\u53ef\u4ee5\u770b\u5230\uff0c\u66f4\u9ad8\u7684 k \u503c\u53ef\u4ee5\u8ba9\u5206\u7c7b\u7684\u6548\u679c\u66f4\u5e73\u6ed1\uff0c\u4f7f\u5f97\u5206\u7c7b\u5668\u5bf9\u4e8e\u5f02\u5e38\u503c\u66f4\u6709\u62b5\u6297\u529b\u3002</p> <p> \u4e0a\u9762\u793a\u4f8b\u5c55\u793a\u4e86 Nearest Neighbor \u5206\u7c7b\u5668\u548c 5-Nearest Neighbor \u5206\u7c7b\u5668\u7684\u533a\u522b\u3002\u4f8b\u5b50\u4f7f\u7528\u4e86 2 \u7ef4\u7684\u70b9\u6765\u8868\u793a\uff0c\u5206\u6210 3 \u7c7b\uff08\u7ea2\u3001\u84dd\u548c\u7eff\uff09\u3002\u4e0d\u540c\u989c\u8272\u533a\u57df\u4ee3\u8868\u7684\u662f\u4f7f\u7528 L2 \u8ddd\u79bb\u7684\u5206\u7c7b\u5668\u7684 \u51b3\u7b56\u8fb9\u754c\u3002\u767d\u8272\u7684\u533a\u57df\u662f\u5206\u7c7b\u6a21\u7cca\u7684\u4f8b\u5b50\uff08\u5373\u56fe\u50cf\u4e0e\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5206\u7c7b\u6807\u7b7e\u7ed1\u5b9a\uff09\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 NN \u5206\u7c7b\u5668\u4e2d\uff0c\u5f02\u5e38\u7684\u6570\u636e\u70b9\uff08\u6bd4\u5982\uff1a\u5728\u84dd\u8272\u533a\u57df\u4e2d\u7684\u7eff\u70b9\uff09\u5236\u9020\u51fa\u4e00\u4e2a\u4e0d\u6b63\u786e\u9884\u6d4b\u7684\u5b64\u5c9b\u30025-NN \u5206\u7c7b\u5668\u5c06\u8fd9\u4e9b\u4e0d\u89c4\u5219\u90fd\u5e73\u6ed1\u4e86\uff0c\u4f7f\u5f97\u5b83\u9488\u5bf9\u6d4b\u8bd5\u6570\u636e\u7684 \u6cdb\u5316\uff08generalization\uff09 \u80fd\u529b\u66f4\u597d\uff08\u4f8b\u5b50\u4e2d\u672a\u5c55\u793a\uff09\u3002\u6ce8\u610f\uff0c5-NN \u4e2d\u4e5f\u5b58\u5728\u4e00\u4e9b\u7070\u8272\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u662f\u56e0\u4e3a\u8fd1\u90bb\u6807\u7b7e\u7684\u6700\u9ad8\u7968\u6570\u76f8\u540c\u5bfc\u81f4\u7684\uff08\u6bd4\u5982\uff1a2 \u4e2a\u90bb\u5c45\u662f\u7ea2\u8272\uff0c2 \u4e2a\u90bb\u5c45\u662f\u84dd\u8272\uff0c\u8fd8\u6709 1 \u4e2a\u662f\u7eff\u8272)\u3002</p>"},{"location":"CV/Lecture2_Image_Classification/#\u7528\u4e8e\u8d85\u53c2\u6570\u8c03\u4f18\u7684\u9a8c\u8bc1\u96c6","title":"\u7528\u4e8e\u8d85\u53c2\u6570\u8c03\u4f18\u7684\u9a8c\u8bc1\u96c6","text":"<p>k-NN \u5206\u7c7b\u5668\u9700\u8981\u8bbe\u5b9a k \u503c\uff0c\u90a3\u4e48\u9009\u62e9\u54ea\u4e2a k \u503c\u6700\u5408\u9002\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u8ddd\u79bb\u51fd\u6570\uff0c\u6bd4\u5982 L1 \u8303\u6570\u548c L2 \u8303\u6570\u7b49\uff0c\u90a3\u4e48\u9009\u54ea\u4e2a\u597d\uff1f\u8fd8\u6709\u4e0d\u5c11\u9009\u62e9\u6211\u4eec\u751a\u81f3\u8fde\u8003\u8651\u90fd\u6ca1\u6709\u8003\u8651\u5230\uff08\u6bd4\u5982\uff1a\u70b9\u79ef\uff09\u3002\u6240\u6709\u8fd9\u4e9b\u9009\u62e9\uff0c\u88ab\u79f0\u4e3a \u8d85\u53c2\u6570\uff08hyperparameter\uff09\u3002\u5728\u57fa\u4e8e\u6570\u636e\u8fdb\u884c\u5b66\u4e60\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8bbe\u8ba1\u4e2d\uff0c\u8d85\u53c2\u6570\u662f\u5f88\u5e38\u89c1\u7684\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u8fd9\u4e9b\u8d85\u53c2\u6570\u5177\u4f53\u600e\u4e48\u8bbe\u7f6e\u6216\u53d6\u503c\u5e76\u4e0d\u662f\u663e\u800c\u6613\u89c1\u7684\u3002</p> <p></p> <p><code>\u4f60\u53ef\u80fd\u4f1a\u5efa\u8bae\u5c1d\u8bd5\u4e0d\u540c\u7684\u503c\uff0c\u770b\u54ea\u4e2a\u503c\u8868\u73b0\u6700\u597d\u5c31\u9009\u54ea\u4e2a\u3002</code></p> <ul> <li>choose hyperparameters that work best on the data</li> </ul> <p><code>K = 1 always works perfectly on training data</code></p> <ul> <li>Split data into train and test\uff0cchoose hyperparameters that work best on the test data</li> </ul> <p><code>No idea how algorithm will perform on new data</code></p> <p>\u7279\u522b\u6ce8\u610f\uff1a<code>\u51b3\u4e0d\u80fd\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8fdb\u884c\u8c03\u4f18</code>\u3002\u5f53\u4f60\u5728\u8bbe\u8ba1\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u628a\u6d4b\u8bd5\u96c6\u770b\u505a\u975e\u5e38\u73cd\u8d35\u7684\u8d44\u6e90\uff0c\u4e0d\u5230\u6700\u540e\u4e00\u6b65\uff0c\u7edd\u4e0d\u4f7f\u7528\u5b83\u3002\u5982\u679c\u4f60\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8c03\u4f18\uff0c\u800c\u4e14\u7b97\u6cd5\u770b\u8d77\u6765\u6548\u679c\u4e0d\u9519\uff0c\u90a3\u4e48\u771f\u6b63\u7684\u5371\u9669\u5728\u4e8e\uff1a\u7b97\u6cd5\u5b9e\u9645\u90e8\u7f72\u540e\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u8fdc\u4f4e\u4e8e\u9884\u671f\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u79f0\u4e4b\u4e3a\u7b97\u6cd5\u5bf9\u6d4b\u8bd5\u96c6 <code>\u8fc7\u62df\u5408</code>\u3002\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u5982\u679c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8c03\u4f18\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u6d4b\u8bd5\u96c6\u5f53\u505a\u8bad\u7ec3\u96c6\uff0c\u7531\u6d4b\u8bd5\u96c6\u8bad\u7ec3\u51fa\u6765\u7684\u7b97\u6cd5\u518d\u8dd1\u6d4b\u8bd5\u96c6\uff0c\u81ea\u7136\u6027\u80fd\u770b\u8d77\u6765\u4f1a\u5f88\u597d\u3002\u8fd9\u5176\u5b9e\u662f\u8fc7\u4e8e\u4e50\u89c2\u4e86\uff0c\u5b9e\u9645\u90e8\u7f72\u8d77\u6765\u6548\u679c\u5c31\u4f1a\u5dee\u5f88\u591a\u3002\u6240\u4ee5\uff0c\u6700\u7ec8\u6d4b\u8bd5\u7684\u65f6\u5019\u518d\u4f7f\u7528\u6d4b\u8bd5\u96c6\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u8fd1\u4f3c\u5ea6\u91cf\u4f60\u6240\u8bbe\u8ba1\u7684\u5206\u7c7b\u5668\u7684\u6cdb\u5316\u6027\u80fd\uff08\u5728\u63a5\u4e0b\u6765\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u6709\u5f88\u591a\u5173\u4e8e\u6cdb\u5316\u6027\u80fd\u7684\u8ba8\u8bba\uff09\u3002</p> <p>\u6d4b\u8bd5\u6570\u636e\u96c6\u53ea\u4f7f\u7528\u4e00\u6b21\uff0c\u5373\u5728\u8bad\u7ec3\u5b8c\u6210\u540e\u8bc4\u4ef7\u6700\u7ec8\u7684\u6a21\u578b\u65f6\u4f7f\u7528\u3002</p> <p>\u4f46\u662f\u53ea\u6709\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u4e0d\u77e5\u9053\u7b97\u6cd5\u5728\u65b0\u6570\u636e\u4e0a\u8868\u73b0\u5982\u4f55\u3002 \u89e3\u51b3\u601d\u8def\u662f\uff1a<code>\u4ece\u8bad\u7ec3\u96c6\u4e2d\u53d6\u51fa\u4e00\u90e8\u5206\u6570\u636e\u7528\u6765\u8c03\u4f18\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9a8c\u8bc1\u96c6\uff08validation set\uff09\u3002</code> \u4ee5 CIFAR-10 \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 49000 \u4e2a\u56fe\u50cf\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u7528 1000 \u4e2a\u56fe\u50cf\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u3002\u9a8c\u8bc1\u96c6\u5176\u5b9e\u5c31\u662f\u4f5c\u4e3a\u5047\u7684\u6d4b\u8bd5\u96c6\u6765\u8c03\u4f18</p> <p>\u4e0b\u9762\u5c31\u662f\u4ee3\u7801\uff1a</p> <pre><code>    # assume we have Xtr_rows, Ytr, Xte_rows, Yte as before\n    # recall Xtr_rows is 50,000 x 3072 matrix\n    Xval_rows = Xtr_rows[:1000, :] # take first 1000 for validation\n    Yval = Ytr[:1000]\n    Xtr_rows = Xtr_rows[1000:, :] # keep last 49,000 for train\n    Ytr = Ytr[1000:]\n\n    # find hyperparameters that work best on the validation set\n    validation_accuracies = []\n    for k in [1, 3, 5, 10, 20, 50, 100]:\n\n      # use a particular value of k and evaluation on validation data\n      nn = NearestNeighbor()\n      nn.train(Xtr_rows, Ytr)\n      # here we assume a modified NearestNeighbor class that can take a k as input\n      Yval_predict = nn.predict(Xval_rows, k = k)\n      acc = np.mean(Yval_predict == Yval)\n      print 'accuracy: %f' % (acc,)\n\n      # keep track of what works on the validation set\n      validation_accuracies.append((k, acc))\n</code></pre> <p>\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u4f1a\u4f5c\u56fe\u5206\u6790\u51fa\u54ea\u4e2a k \u503c\u8868\u73b0\u6700\u597d\uff0c\u7136\u540e\u7528\u8fd9\u4e2a k \u503c\u6765\u8dd1\u771f\u6b63\u7684\u6d4b\u8bd5\u96c6\uff0c\u5e76\u4f5c\u51fa\u5bf9\u7b97\u6cd5\u7684\u8bc4\u4ef7\u3002 \u628a\u8bad\u7ec3\u96c6\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u3002\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6765\u5bf9\u6240\u6709\u8d85\u53c2\u6570\u8c03\u4f18\u3002\u6700\u540e\u53ea\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8dd1\u4e00\u6b21\u5e76\u62a5\u544a\u7ed3\u679c\u3002</p> <p></p> <p>\u4ea4\u53c9\u9a8c\u8bc1\u3002\u6709\u65f6\u5019\uff0c\u8bad\u7ec3\u96c6\u6570\u91cf\u8f83\u5c0f\uff08\u56e0\u6b64\u9a8c\u8bc1\u96c6\u7684\u6570\u91cf\u66f4\u5c0f\uff09\uff0c\u4eba\u4eec\u4f1a\u4f7f\u7528\u4e00\u79cd\u88ab\u79f0\u4e3a \u4ea4\u53c9\u9a8c\u8bc1 \u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u52a0\u590d\u6742\u4e9b\u3002\u8fd8\u662f\u7528\u521a\u624d\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u662f\u4ea4\u53c9\u9a8c\u8bc1\u96c6\uff0c\u6211\u4eec\u5c31\u4e0d\u662f\u53d6 1000 \u4e2a\u56fe\u50cf\uff0c\u800c\u662f\u5c06\u8bad\u7ec3\u96c6\u5e73\u5747\u5206\u6210 5 \u4efd\uff0c\u5176\u4e2d 4 \u4efd\u7528\u6765\u8bad\u7ec3\uff0c1 \u4efd\u7528\u6765\u9a8c\u8bc1\u3002\u7136\u540e\u6211\u4eec\u5faa\u73af\u7740\u53d6\u5176\u4e2d 4 \u4efd\u6765\u8bad\u7ec3\uff0c\u5176\u4e2d 1 \u4efd\u6765\u9a8c\u8bc1\uff0c\u6700\u540e\u53d6\u6240\u6709 5 \u6b21\u9a8c\u8bc1\u7ed3\u679c\u7684\u5e73\u5747\u503c\u4f5c\u4e3a\u7b97\u6cd5\u9a8c\u8bc1\u7ed3\u679c\u3002</p> <p> \u5e38\u7528\u7684\u6570\u636e\u5206\u5272\u6a21\u5f0f\u3002\u7ed9\u51fa\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u540e\uff0c\u8bad\u7ec3\u96c6\u4e00\u822c\u4f1a\u88ab\u5747\u5206\u3002\u8fd9\u91cc\u662f\u5206\u6210 5 \u4efd\u3002\u524d\u9762 4 \u4efd\u7528\u6765\u8bad\u7ec3\uff0c\u9ec4\u8272\u90a3\u4efd\u7528\u4f5c\u9a8c\u8bc1\u96c6\u8c03\u4f18\u3002\u5982\u679c\u91c7\u53d6\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u90a3\u5c31\u5404\u4efd\u8f6e\u6d41\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u3002\u6700\u540e\u6a21\u578b\u8bad\u7ec3\u5b8c\u6bd5\uff0c\u8d85\u53c2\u6570\u90fd\u5b9a\u597d\u4e86\uff0c\u8ba9\u6a21\u578b\u8dd1\u4e00\u6b21\uff08\u800c\u4e14\u53ea\u8dd1\u4e00\u6b21)\u6d4b\u8bd5\u96c6\uff0c\u4ee5\u6b64\u6d4b\u8bd5\u7ed3\u679c\u8bc4\u4ef7\u7b97\u6cd5\u3002</p> <p></p> <p>\u8fd9\u5c31\u662f 5 \u4efd\u4ea4\u53c9\u9a8c\u8bc1\u5bf9 k \u503c\u8c03\u4f18\u7684\u4f8b\u5b50\u3002\u9488\u5bf9\u6bcf\u4e2a k \u503c\uff0c\u5f97\u5230 5 \u4e2a\u51c6\u786e\u7387\u7ed3\u679c\uff0c\u53d6\u5176\u5e73\u5747\u503c\uff0c\u7136\u540e\u5bf9\u4e0d\u540c k \u503c\u7684\u5e73\u5747\u8868\u73b0\u753b\u7ebf\u8fde\u63a5\u3002\u672c\u4f8b\u4e2d\uff0c\u5f53 k = 7 \u7684\u65f6\u7b97\u6cd5\u8868\u73b0\u6700\u597d\uff08\u5bf9\u5e94\u56fe\u4e2d\u7684\u51c6\u786e\u7387\u5cf0\u503c\uff09\u3002\u5982\u679c\u6211\u4eec\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u66f4\u591a\u4efd\u6570\uff0c\u76f4\u7ebf\u4e00\u822c\u4f1a\u66f4\u52a0\u5e73\u6ed1\uff08\u566a\u97f3\u66f4\u5c11\uff09\u3002</p> <p>\u968f\u7740 training samples \u7684\u6570\u91cf\u8d8b\u4e8e\u65e0\u7a77\uff0cnearest neighbor \u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u51fd\u6570</p> <p></p> <p>\u4f46\u662f\u968f\u7740\u7ef4\u6570\u7684\u589e\u957f\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u8986\u76d6\u6d4b\u8bd5\u96c6\uff0c\u6d4b\u8bd5\u70b9\u7684\u6570\u91cf\u6307\u6570\u7ea7\u589e\u957f</p>"},{"location":"CV/Lecture2_Image_Classification/#nearest-neighbor-\u5206\u7c7b\u5668\u7684\u4f18\u52a3","title":"Nearest Neighbor \u5206\u7c7b\u5668\u7684\u4f18\u52a3","text":"<p>\u73b0\u5728\u5bf9 Nearest Neighbor \u5206\u7c7b\u5668\u7684\u4f18\u7f3a\u70b9\u8fdb\u884c\u601d\u8003\u3002\u9996\u5148\uff0cNearest Neighbor \u5206\u7c7b\u5668\u6613\u4e8e\u7406\u89e3\uff0c\u5b9e\u73b0\u7b80\u5355\u3002\u5176\u6b21\uff0c<code>\u7b97\u6cd5\u7684\u8bad\u7ec3\u4e0d\u9700\u8981\u82b1\u65f6\u95f4\uff0c\u56e0\u4e3a\u5176\u8bad\u7ec3\u8fc7\u7a0b\u53ea\u662f\u5c06\u8bad\u7ec3\u96c6\u6570\u636e\u5b58\u50a8\u8d77\u6765\u3002\u7136\u800c\u6d4b\u8bd5\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u8ba1\u7b97\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6d4b\u8bd5\u56fe\u50cf\u9700\u8981\u548c\u6240\u6709\u5b58\u50a8\u7684\u8bad\u7ec3\u56fe\u50cf\u8fdb\u884c\u6bd4\u8f83</code>\uff0c\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u7f3a\u70b9\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u5173\u6ce8\u6d4b\u8bd5\u6548\u7387\u8fdc\u8fdc\u9ad8\u4e8e\u8bad\u7ec3\u6548\u7387\u3002</p> <p>\u5176\u5b9e\uff0c\u6211\u4eec\u540e\u7eed\u8981\u5b66\u4e60\u7684 <code>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc</code> \u5728\u8fd9\u4e2a\u6743\u8861\u4e0a\u8d70\u5230\u4e86\u53e6\u4e00\u4e2a\u6781\u7aef\uff1a<code>\u867d\u7136\u8bad\u7ec3\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\uff0c\u4f46\u662f\u4e00\u65e6\u8bad\u7ec3\u5b8c\u6210\uff0c\u5bf9\u65b0\u7684\u6d4b\u8bd5\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u975e\u5e38\u5feb</code>\u3002\u8fd9\u6837\u7684\u6a21\u5f0f\u5c31\u7b26\u5408\u5b9e\u9645\u4f7f\u7528\u9700\u6c42\u3002</p> <p>Nearest Neighbor \u5206\u7c7b\u5668\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u7814\u7a76\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u7814\u7a76\u9886\u57df\uff0c\u82e5\u5e72 Approximate Nearest Neighbor (ANN)\u7b97\u6cd5\u548c\u5e93\u7684\u4f7f\u7528\u53ef\u4ee5\u63d0\u5347 Nearest Neighbor \u5206\u7c7b\u5668\u5728\u6570\u636e\u4e0a\u7684\u8ba1\u7b97\u901f\u5ea6\uff08\u6bd4\u5982\uff1a[FLANN__][14]\uff09\u3002\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u5728\u51c6\u786e\u7387\u548c\u65f6\u7a7a\u590d\u6742\u5ea6\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\uff0c\u5e76\u901a\u5e38\u4f9d\u8d56\u4e00\u4e2a\u9884\u5904\u7406/\u7d22\u5f15\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e00\u822c\u5305\u542b kd \u6811\u7684\u521b\u5efa\u548c k-means \u7b97\u6cd5\u7684\u8fd0\u7528\u3002</p> <p>Nearest Neighbor \u5206\u7c7b\u5668\u5728\u67d0\u4e9b\u7279\u5b9a\u60c5\u51b5\uff08\u6bd4\u5982\u6570\u636e\u7ef4\u5ea6\u8f83\u4f4e\uff09\u4e0b\uff0c\u53ef\u80fd\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002\u4f46\u662f\u5728\u5b9e\u9645\u7684\u56fe\u50cf\u5206\u7c7b\u5de5\u4f5c\u4e2d\uff0c\u5f88\u5c11\u4f7f\u7528\u3002</p> <ol> <li>\u56fe\u50cf\u90fd\u662f\u9ad8\u7ef4\u5ea6\u6570\u636e\uff08\u4ed6\u4eec\u901a\u5e38\u5305\u542b\u5f88\u591a\u50cf\u7d20\uff09\uff0c\u8981\u60f3\u6027\u80fd\u597d\uff0c\u8bad\u7ec3\u96c6\u6307\u6570\u589e\u957f\u9700\u8981\u8db3\u591f\u5e9e\u5927</li> <li>\u6d4b\u8bd5\u65f6\u95f4\u8fc7\u4e8e\u6f2b\u957f</li> <li>\u800c\u9ad8\u7ef4\u5ea6\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\u901a\u5e38\u662f\u53cd\u76f4\u89c9\u7684\u3002\u4e0b\u9762\u7684\u56fe\u7247\u5c55\u793a\u4e86\u57fa\u4e8e\u50cf\u7d20\u7684\u76f8\u4f3c\u548c\u57fa\u4e8e\u611f\u5b98\u7684\u76f8\u4f3c\u662f\u6709\u5f88\u5927\u4e0d\u540c\u7684\uff1a</li> </ol> <p></p> <p>\u5728\u9ad8\u7ef4\u5ea6\u6570\u636e\u4e0a\uff0c\u57fa\u4e8e\u50cf\u7d20\u7684\u7684\u8ddd\u79bb\u548c\u611f\u5b98\u4e0a\u7684\u975e\u5e38\u4e0d\u540c\u3002\u4e0a\u56fe\u4e2d\uff0c\u53f3\u8fb9 3 \u5f20\u56fe\u7247\u548c\u5de6\u8fb9\u7b2c 1 \u5f20\u539f\u59cb\u56fe\u7247\u7684 L2 \u8ddd\u79bb\u662f\u4e00\u6837\u7684\u3002\u5f88\u663e\u7136\uff0c\u57fa\u4e8e\u50cf\u7d20\u6bd4\u8f83\u7684\u76f8\u4f3c\u548c\u611f\u5b98\u4e0a\u4ee5\u53ca\u8bed\u4e49\u4e0a\u7684\u76f8\u4f3c\u662f\u4e0d\u540c\u7684\u3002</p>"},{"location":"CV/Lecture2_Image_Classification/#\u5c0f\u7ed3","title":"\u5c0f\u7ed3","text":"<ul> <li>\u4ecb\u7ecd\u4e86 \u56fe\u50cf\u5206\u7c7b \u95ee\u9898\u3002\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7531\u88ab\u6807\u6ce8\u4e86\u5206\u7c7b\u6807\u7b7e\u7684\u56fe\u50cf\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u8981\u6c42\u7b97\u6cd5\u80fd\u9884\u6d4b\u6ca1\u6709\u6807\u7b7e\u7684\u56fe\u50cf\u7684\u5206\u7c7b\u6807\u7b7e\uff0c\u5e76\u6839\u636e\u7b97\u6cd5\u9884\u6d4b\u51c6\u786e\u7387\u8fdb\u884c\u8bc4\u4ef7\u3002</li> <li>\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u50cf\u5206\u7c7b\u5668\uff1a\u6700\u8fd1\u90bb\u5206\u7c7b\u5668(Nearest Neighbor classifier)\u3002\u5206\u7c7b\u5668\u4e2d\u5b58\u5728\u4e0d\u540c\u7684\u8d85\u53c2\u6570(\u6bd4\u5982 k \u503c\u6216\u8ddd\u79bb\u7c7b\u578b\u7684\u9009\u53d6)\uff0c\u8981\u60f3\u9009\u53d6\u597d\u7684\u8d85\u53c2\u6570\u4e0d\u662f\u4e00\u4ef6\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u3002</li> <li>\u9009\u53d6\u8d85\u53c2\u6570\u7684\u6b63\u786e\u65b9\u6cd5\u662f\uff1a\u5c06\u539f\u59cb\u8bad\u7ec3\u96c6\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c \u9a8c\u8bc1\u96c6\uff0c\u6211\u4eec\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5c1d\u8bd5\u4e0d\u540c\u7684\u8d85\u53c2\u6570\uff0c\u6700\u540e\u4fdd\u7559\u8868\u73b0\u6700\u597d\u90a3\u4e2a\u3002</li> <li>\u5982\u679c\u8bad\u7ec3\u6570\u636e\u91cf\u4e0d\u591f\uff0c\u4f7f\u7528 \u4ea4\u53c9\u9a8c\u8bc1 \u65b9\u6cd5\uff0c\u5b83\u80fd\u5e2e\u52a9\u6211\u4eec\u5728\u9009\u53d6\u6700\u4f18\u8d85\u53c2\u6570\u7684\u65f6\u5019\u51cf\u5c11\u566a\u97f3\u3002</li> <li>\u4e00\u65e6\u627e\u5230\u6700\u4f18\u7684\u8d85\u53c2\u6570\uff0c\u5c31\u8ba9\u7b97\u6cd5\u4ee5\u8be5\u53c2\u6570\u5728\u6d4b\u8bd5\u96c6\u8dd1\u4e14\u53ea\u8dd1\u4e00\u6b21\uff0c\u5e76\u6839\u636e\u6d4b\u8bd5\u7ed3\u679c\u8bc4\u4ef7\u7b97\u6cd5\u3002</li> <li>\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u80fd\u591f\u5728 CIFAR-10 \u4e0a\u5f97\u5230\u5c06\u8fd1 40%\u7684\u51c6\u786e\u7387\u3002\u8be5\u7b97\u6cd5\u7b80\u5355\u6613\u5b9e\u73b0\uff0c\u4f46\u9700\u8981\u5b58\u50a8\u6240\u6709\u8bad\u7ec3\u6570\u636e\uff0c\u5e76\u4e14\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u8fc7\u4e8e\u8017\u8d39\u8ba1\u7b97\u80fd\u529b\u3002</li> <li>\u6700\u540e\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u4ec5\u4ec5\u4f7f\u7528 L1 \u548c L2 \u8303\u6570\u6765\u8fdb\u884c\u50cf\u7d20\u6bd4\u8f83\u662f\u4e0d\u591f\u7684\uff0c\u56fe\u50cf\u66f4\u591a\u7684\u662f\u6309\u7167\u80cc\u666f\u548c\u989c\u8272\u88ab\u5206\u7c7b\uff0c\u800c\u4e0d\u662f\u8bed\u4e49\u4e3b\u4f53\u5206\u8eab\u3002</li> </ul> <p>\u5728\u63a5\u4e0b\u6765\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e13\u6ce8\u4e8e\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u548c\u6311\u6218\uff0c\u5e76\u6700\u7ec8\u80fd\u591f\u5f97\u5230\u8d85\u8fc7 90%\u51c6\u786e\u7387\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8be5\u65b9\u6848\u80fd\u591f\u5728\u5b8c\u6210\u5b66\u4e60\u5c31\u4e22\u6389\u8bad\u7ec3\u96c6\uff0c\u5e76\u5728\u4e00\u6beb\u79d2\u4e4b\u5185\u5c31\u5b8c\u6210\u4e00\u5f20\u56fe\u7247\u7684\u5206\u7c7b\u3002</p>"},{"location":"CV/Lecture2_Image_Classification/#\u5c0f\u7ed3\u5b9e\u9645\u5e94\u7528-k-nn","title":"\u5c0f\u7ed3\uff1a\u5b9e\u9645\u5e94\u7528 k-NN","text":"<p>\u5982\u679c\u4f60\u5e0c\u671b\u5c06 k-NN \u5206\u7c7b\u5668\u7528\u5230\u5b9e\u5904\uff08\u6700\u597d\u522b\u7528\u5230\u56fe\u50cf\u4e0a\uff0c\u82e5\u662f\u4ec5\u4ec5\u4f5c\u4e3a\u7ec3\u624b\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6d41\u7a0b\uff1a</p> <ol> <li>\u9884\u5904\u7406\u4f60\u7684\u6570\u636e\uff1a\u5bf9\u4f60\u6570\u636e\u4e2d\u7684\u7279\u5f81\u8fdb\u884c\u5f52\u4e00\u5316\uff08normalize\uff09\uff0c\u8ba9\u5176\u5177\u6709\u96f6\u5e73\u5747\u503c\uff08zero mean\uff09\u548c\u5355\u4f4d\u65b9\u5dee\uff08unit variance\uff09\u3002\u5728\u540e\u9762\u7684\u5c0f\u8282\u6211\u4eec\u4f1a\u8ba8\u8bba\u8fd9\u4e9b\u7ec6\u8282\u3002\u672c\u5c0f\u8282\u4e0d\u8ba8\u8bba\uff0c\u662f\u56e0\u4e3a\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u90fd\u662f\u540c\u8d28\u7684\uff0c\u4e0d\u4f1a\u8868\u73b0\u51fa\u8f83\u5927\u7684\u5dee\u5f02\u5206\u5e03\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u6807\u51c6\u5316\u5904\u7406\u4e86\u3002</li> <li>\u5982\u679c\u6570\u636e\u662f\u9ad8\u7ef4\u6570\u636e\uff0c\u8003\u8651\u4f7f\u7528\u964d\u7ef4\u65b9\u6cd5\uff0c\u6bd4\u5982 PCA([wiki ref __][18], [CS229ref__][19], [blog ref __][20])\u6216[\u968f\u673a\u6295\u5f71__][21]\u3002</li> <li>\u5c06\u6570\u636e\u968f\u673a\u5206\u5165\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u3002\u6309\u7167\u4e00\u822c\u89c4\u5f8b\uff0c70%-90% \u6570\u636e\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u3002\u8fd9\u4e2a\u6bd4\u4f8b\u6839\u636e\u7b97\u6cd5\u4e2d\u6709\u591a\u5c11\u8d85\u53c2\u6570\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u8d85\u53c2\u6570\u5bf9\u4e8e\u7b97\u6cd5\u7684\u9884\u671f\u5f71\u54cd\u6765\u51b3\u5b9a\u3002\u5982\u679c\u9700\u8981\u9884\u6d4b\u7684\u8d85\u53c2\u6570\u5f88\u591a\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u4f7f\u7528\u66f4\u5927\u7684\u9a8c\u8bc1\u96c6\u6765\u6709\u6548\u5730\u4f30\u8ba1\u5b83\u4eec\u3002\u5982\u679c\u62c5\u5fc3\u9a8c\u8bc1\u96c6\u6570\u91cf\u4e0d\u591f\uff0c\u90a3\u4e48\u5c31\u5c1d\u8bd5\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5\u3002\u5982\u679c\u8ba1\u7b97\u8d44\u6e90\u8db3\u591f\uff0c\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u603b\u662f\u66f4\u52a0\u5b89\u5168\u7684\uff08\u4efd\u6570\u8d8a\u591a\uff0c\u6548\u679c\u8d8a\u597d\uff0c\u4e5f\u66f4\u8017\u8d39\u8ba1\u7b97\u8d44\u6e90\uff09\u3002</li> <li>\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8c03\u4f18\uff0c\u5c1d\u8bd5\u8db3\u591f\u591a\u7684 k \u503c\uff0c\u5c1d\u8bd5 L1 \u548c L2 \u4e24\u79cd\u8303\u6570\u8ba1\u7b97\u65b9\u5f0f\u3002</li> <li>\u5982\u679c\u5206\u7c7b\u5668\u8dd1\u5f97\u592a\u6162\uff0c\u5c1d\u8bd5\u4f7f\u7528 Approximate Nearest Neighbor \u5e93\uff08\u6bd4\u5982[FLANN__][14]\uff09\u6765\u52a0\u901f\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5176\u4ee3\u4ef7\u662f\u964d\u4f4e\u4e00\u4e9b\u51c6\u786e\u7387\u3002</li> <li>\u5bf9\u6700\u4f18\u7684\u8d85\u53c2\u6570\u505a\u8bb0\u5f55\u3002\u8bb0\u5f55\u6700\u4f18\u53c2\u6570\u540e\uff0c\u662f\u5426\u5e94\u8be5\u8ba9\u4f7f\u7528\u6700\u4f18\u53c2\u6570\u7684\u7b97\u6cd5\u5728\u5b8c\u6574\u7684\u8bad\u7ec3\u96c6\u4e0a\u8fd0\u884c\u5e76\u518d\u6b21\u8bad\u7ec3\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u628a\u9a8c\u8bc1\u96c6\u91cd\u65b0\u653e\u56de\u5230\u8bad\u7ec3\u96c6\u4e2d\uff08\u81ea\u7136\u8bad\u7ec3\u96c6\u7684\u6570\u636e\u91cf\u5c31\u53c8\u53d8\u5927\u4e86\uff09\uff0c\u6709\u53ef\u80fd\u6700\u4f18\u53c2\u6570\u53c8\u4f1a\u6709\u6240\u53d8\u5316\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u4e0d\u8981\u8fd9\u6837\u505a\u3002\u5343\u4e07\u4e0d\u8981\u5728\u6700\u7ec8\u7684\u5206\u7c7b\u5668\u4e2d\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6570\u636e\uff0c\u8fd9\u6837\u505a\u4f1a\u7834\u574f\u5bf9\u4e8e\u6700\u4f18\u53c2\u6570\u7684\u4f30\u8ba1\u3002\u76f4\u63a5\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u6d4b\u8bd5\u7528\u6700\u4f18\u53c2\u6570\u8bbe\u7f6e\u597d\u7684\u6700\u4f18\u6a21\u578b\uff0c\u5f97\u5230\u6d4b\u8bd5\u96c6\u6570\u636e\u7684\u5206\u7c7b\u51c6\u786e\u7387\uff0c\u5e76\u4ee5\u6b64\u4f5c\u4e3a\u4f60\u7684 kNN \u5206\u7c7b\u5668\u5728\u8be5\u6570\u636e\u4e0a\u7684\u6027\u80fd\u8868\u73b0\u3002</li> </ol>"},{"location":"CV/Lecture2_Image_Classification/#\u8bc4\u4ef7\u6307\u6807","title":"\u8bc4\u4ef7\u6307\u6807","text":""},{"location":"CV/Lecture2_Image_Classification/#\u6b63\u8d1f\u6837\u672c","title":"\u6b63\u8d1f\u6837\u672c","text":"<p>\u6307\u6807\u9996\u5148\u662f\u7edf\u8ba1\u6b63\u8d1f\u6837\u672c</p> <ol> <li>\u6b63\u6837\u672c\uff08Positive Samples\uff09\uff1a</li> <li>\u6b63\u6837\u672c\u662f\u6307\u90a3\u4e9b\u6807\u7b7e\u6216\u8f93\u51fa\u662f\u6b63\u7c7b\u7684\u6570\u636e\u70b9\u3002\u5728\u4e8c\u5143\u5206\u7c7b\u4e2d\uff0c\u201c\u6b63\u201d\u901a\u5e38\u610f\u5473\u7740\u6211\u4eec\u611f\u5174\u8da3\u7684\u7c7b\u522b\uff0c\u6216\u8005\u662f\u6211\u4eec\u5e0c\u671b\u6a21\u578b\u68c0\u6d4b\u6216\u9884\u6d4b\u7684\u7c7b\u522b\u3002</li> <li>\u4f8b\u5982\uff0c\u5728\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u95ee\u9898\u4e2d\uff0c\u5783\u573e\u90ae\u4ef6\u662f\u6b63\u6837\u672c\uff0c\u56e0\u4e3a\u6a21\u578b\u7684\u4efb\u52a1\u662f\u8bc6\u522b\u51fa\u5783\u573e\u90ae\u4ef6\u3002</li> <li>\u8d1f\u6837\u672c\uff08Negative Samples\uff09\uff1a</li> <li>\u8d1f\u6837\u672c\u662f\u6307\u90a3\u4e9b\u6807\u7b7e\u6216\u8f93\u51fa\u662f\u8d1f\u7c7b\u7684\u6570\u636e\u70b9\u3002\u5728\u4e8c\u5143\u5206\u7c7b\u4e2d\uff0c\u201c\u8d1f\u201d\u901a\u5e38\u610f\u5473\u7740\u975e\u76ee\u6807\u7c7b\u522b\uff0c\u5373\u6211\u4eec\u4e0d\u5e0c\u671b\u6a21\u578b\u68c0\u6d4b\u6216\u9884\u6d4b\u7684\u7c7b\u522b\u3002</li> <li>\u5728\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u7684\u4f8b\u5b50\u4e2d\uff0c\u975e\u5783\u573e\u90ae\u4ef6\u662f\u8d1f\u6837\u672c\u3002</li> </ol> <p></p>"},{"location":"CV/Lecture2_Image_Classification/#pr-\u66f2\u7ebf","title":"PR \u66f2\u7ebf","text":"<ol> <li>Precision\uff1a\u4e5f\u53eb\u67e5\u51c6\u7387\uff0c\u8868\u793a\u6240\u6709\u88ab\u6a21\u578b\u5224\u5b9a\u4e3a\u6b63\u6837\u672c\u4e2d\uff0c\u771f\u6b63\u7684\u6b63\u6837\u672c\u7684\u6bd4\u4f8b\u3002</li> <li>Recall\uff1a\u4e5f\u53eb\u67e5\u5168\u7387\u6216\u8005\u53ec\u56de\u7387\uff0c\u8868\u793a\u6240\u6709\u771f\u6b63\u7684\u6b63\u6837\u672c\u4e2d\uff0c\u88ab\u6a21\u578b\u5224\u5b9a\u4e3a\u6b63\u6837\u672c\u7684\u6bd4\u4f8b\u3002</li> </ol> <p>\u901a\u5e38\u4f1a\u4e3a\u6bcf\u4e2a\u7269\u4f53\u7c7b\u522b\u7ed8\u5236\u4e00\u4e2a PR \u66f2\u7ebf\uff08Precision-Recall \u66f2\u7ebf\uff09\uff0c\u7136\u540e\u8ba1\u7b97\u8be5\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff0c\u5373 AP\uff08Average Precision\uff0c\u5e73\u5747\u7cbe\u5ea6\uff09\u3002AP \u503c\u8d8a\u9ad8\uff0c\u8bf4\u660e\u6a21\u578b\u5728\u8be5\u7c7b\u522b\u7684\u68c0\u6d4b\u6027\u80fd\u8d8a\u597d\u3002</p> <p>\u4e0d\u8fc7\u7cbe\u5ea6\u548c\u53ec\u56de\u7387\u662f\u76f8\u4e92\u77db\u76fe\u7684\uff0c\u53ec\u56de\u7387\u8d8a\u9ad8\uff0c\u6a21\u578b\u8d8a\u503e\u5411\u4e8e\u628a\u66f4\u591a\u6837\u672c\u5f52\u7c7b\u4e3a\u6b63\u6837\u672c\uff0c\u5c31\u5bb9\u6613\u8bef\u5224</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7efc\u5408\u8003\u8651\uff0c\u4e5f\u5c31\u662f PR \u66f2\u7ebf\u7684\u9762\u79ef\u8d8a\u5927\uff0c\u6027\u80fd\u5c31\u8d8a\u597d\uff0c\u4f46\u662f PR \u66f2\u7ebf\u5bf9\u6b63\u8d1f\u6837\u672c\u4e0d\u5747\u8861\u5f88\u654f\u611f\uff0cPR \u66f2\u7ebf\u66f4\u5173\u6ce8\u6b63\u6837\u672c\u7684\u9884\u6d4b\u51c6\u786e\u6027\uff0c\u56e0\u6b64\u5728\u6b63\u6837\u672c\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u6027\u80fd\u7684\u5fae\u5c0f\u53d8\u5316\u4e5f\u4f1a\u5728 PR \u66f2\u7ebf\u4e0a\u8868\u73b0\u5f97\u975e\u5e38\u660e\u663e\u3002</p> <p></p> <p>\u6240\u4ee5\u6211\u4eec\u4e5f\u4f1a\u4f7f\u7528 ROC \u66f2\u7ebf\u8fdb\u884c\u66f4\u5168\u9762\u7684\u5224\u65ad</p>"},{"location":"CV/Lecture2_Image_Classification/#roc-\u66f2\u7ebf\u4e0e-auc","title":"ROC \u66f2\u7ebf\u4e0e AUC","text":"<p>AUC \u5c31\u662f ROC \u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff0cAUC \u66f2\u7ebf\u5bf9\u6b63\u8d1f\u6837\u672c\u4e0d\u5e73\u8861\u7684\u654f\u611f\u5ea6\u8f83\u4f4e\u3002\u5373\u4f7f\u5728\u8d1f\u6837\u672c\u6570\u91cf\u8fdc\u8d85\u6b63\u6837\u672c\u7684\u60c5\u51b5\u4e0b\uff0cAUC \u4ecd\u80fd\u63d0\u4f9b\u8f83\u4e3a\u5408\u7406\u7684\u6027\u80fd\u8bc4\u4f30\u3002\u8fd9\u662f\u56e0\u4e3a AUC \u8003\u8651\u4e86\u6240\u6709\u53ef\u80fd\u7684\u5206\u7c7b\u9608\u503c\uff0c\u5e76\u4e14 FPR \u7684\u8ba1\u7b97\u62b5\u6d88\u4e86\u8d1f\u6837\u672c\u6570\u91cf\u591a\u7684\u5f71\u54cd\u3002</p>"},{"location":"CV/Lecture2_Image_Classification/#\u6df7\u6dc6\u77e9\u9635","title":"\u6df7\u6dc6\u77e9\u9635","text":"<p>\u5bf9\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u6709 K \u7c7b\uff0c\u5c31\u6709\u4e00\u4e2a KxK \u7684\u6df7\u6dc6\u77e9\u9635\uff0c\u5143\u7d20 \\(c_{ij}\\) \u8868\u793a\u7b2c i \u7c7b\u6837\u672c\u88ab\u5206\u7c7b\u5668\u5224\u5b9a\u4e3a\u7b2c j \u7c7b\u7684\u6570\u91cf\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u662f\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u6df7\u6dc6\u77e9\u9635\uff0c\u5224\u65ad\u54ea\u4e9b\u7c7b\u66f4\u5bb9\u6613\u6df7\u6dc6</p> <p></p>"},{"location":"CV/Lecture3_Linear_Classifiers/","title":"Linear_Classifier","text":"<p> \u7ea6 9930 \u4e2a\u5b57  57 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 50 \u5206\u949f</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u6982\u8ff0","title":"\u6982\u8ff0","text":"<p>\u4e0a\u4e00\u7bc7\u7b14\u8bb0\u4ecb\u7ecd\u4e86\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\u3002<code>\u56fe\u50cf\u5206\u7c7b\u7684\u4efb\u52a1\uff0c\u5c31\u662f\u4ece\u5df2\u6709\u7684\u56fa\u5b9a\u5206\u7c7b\u6807\u7b7e\u96c6\u5408\u4e2d\u9009\u62e9\u4e00\u4e2a\u5e76\u5206\u914d\u7ed9\u4e00\u5f20\u56fe\u50cf\u3002\u6211\u4eec\u8fd8\u4ecb\u7ecd\u4e86k-Nearest Neighbor \uff08k-NN\uff09\u5206\u7c7b\u5668\uff0c\u8be5\u5206\u7c7b\u5668\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u5c06\u6d4b\u8bd5\u56fe\u50cf\u4e0e\u8bad\u7ec3\u96c6\u5e26\u6807\u7b7e\u7684\u56fe\u50cf\u8fdb\u884c\u6bd4\u8f83\uff0c\u6765\u7ed9\u6d4b\u8bd5\u56fe\u50cf\u6253\u4e0a\u5206\u7c7b\u6807\u7b7e</code>\u3002</p> <p>k-Nearest Neighbor \u5206\u7c7b\u5668\u5b58\u5728\u4ee5\u4e0b\u4e0d\u8db3\uff1a</p> <ul> <li>\u5206\u7c7b\u5668\u5fc5\u987b\u8bb0\u4f4f\u6240\u6709\u8bad\u7ec3\u6570\u636e\u5e76\u5c06\u5176\u5b58\u50a8\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u672a\u6765\u6d4b\u8bd5\u6570\u636e\u7528\u4e8e\u6bd4\u8f83\u3002\u8fd9\u5728\u5b58\u50a8\u7a7a\u95f4\u4e0a\u662f\u4f4e\u6548\u7684\uff0c\u56e0\u4e3a\u6570\u636e\u96c6\u7684\u5927\u5c0f\u5f88\u5bb9\u6613\u5c31\u4ee5 GB \u8ba1\u7b97\u3002</li> <li>\u5bf9\u4e00\u4e2a\u6d4b\u8bd5\u56fe\u50cf\u8fdb\u884c\u5206\u7c7b\u9700\u8981 <code>\u548c\u6240\u6709\u8bad\u7ec3\u56fe\u50cf\u4f5c\u6bd4\u8f83</code>\uff0c\u7b97\u6cd5\u8ba1\u7b97\u8d44\u6e90\u8017\u8d39\u9ad8\u3002</li> </ul> <p>\u6240\u6709\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u5e7f\u6cdb\u7684\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u53c2\u6570\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u60f3\u6cd5\u662f <code>\u53c2\u6570\u53ef\u5b66\u4e60\uff08parametric approach\uff09</code></p> <p>\u6982\u8ff0\uff1a\u6211\u4eec\u5c06\u8981\u5b9e\u73b0\u4e00\u79cd\u66f4\u5f3a\u5927\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u81ea\u7136\u5730\u5ef6\u4f38\u5230\u795e\u7ecf\u7f51\u7edc\u548c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e0a\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3b\u8981\u6709\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <p><code>\u4e00\u4e2a\u662f\u8bc4\u5206\u51fd\u6570\uff08score function\uff09\uff0c\u5b83\u662f\u539f\u59cb\u56fe\u50cf\u6570\u636e\u5230\u7c7b\u522b\u5206\u503c\u7684\u6620\u5c04\u3002</code></p> <p><code>\u53e6\u4e00\u4e2a\u662f\u635f\u5931\u51fd\u6570\uff08loss function\uff09\uff0c\u5b83\u662f\u7528\u6765\u91cf\u5316\u9884\u6d4b\u5206\u7c7b\u6807\u7b7e\u7684\u5f97\u5206\u4e0e\u771f\u5b9e\u6807\u7b7e\u4e4b\u95f4\u4e00\u81f4\u6027\u7684\u3002</code></p> <p>\u8be5\u65b9\u6cd5\u53ef\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u5728\u6700\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u901a\u8fc7\u66f4\u65b0\u8bc4\u5206\u51fd\u6570\u7684\u53c2\u6570\u6765\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u503c\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u4ece\u56fe\u50cf\u5230\u6807\u7b7e\u5206\u503c\u7684\u53c2\u6570\u5316\u6620\u5c04","title":"\u4ece\u56fe\u50cf\u5230\u6807\u7b7e\u5206\u503c\u7684\u53c2\u6570\u5316\u6620\u5c04","text":"<p>\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u90e8\u5206\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a\u8bc4\u5206\u51fd\u6570 score function\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u56fe\u50cf\u7684\u50cf\u7d20\u503c\u6620\u5c04\u4e3a\u5404\u4e2a\u5206\u7c7b\u7c7b\u522b\u7684\u5f97\u5206\uff0c\u5f97\u5206\u9ad8\u4f4e\u4ee3\u8868\u56fe\u50cf\u5c5e\u4e8e\u8be5\u7c7b\u522b\u7684\u53ef\u80fd\u6027\u9ad8\u4f4e\u3002</p> <p>\u4e0b\u9762\u4f1a\u5229\u7528\u4e00\u4e2a\u5177\u4f53\u4f8b\u5b50\u6765\u5c55\u793a\u8be5\u65b9\u6cd5\u3002\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u4e2a\u5305\u542b\u5f88\u591a\u56fe\u50cf\u7684\u8bad\u7ec3\u96c6\\(x_{i}\\in R^{D}\\)\uff0c\u6bcf\u4e2a\u56fe\u50cf\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\\(y_{i}\\)\u3002\u8fd9\u91cc\\(i=1,2,3...N\\)\u5e76\u4e14\\(y_{i}\\in 1...K\\)\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6709 N \u4e2a\u56fe\u50cf\u6837\u4f8b\uff0c\u6bcf\u4e2a\u56fe\u50cf\u7684\u7ef4\u5ea6\u662f D\uff0c\u5171\u6709 K \u79cd\u4e0d\u540c\u7684\u5206\u7c7b\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5728 CIFAR-10 \u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a N = 50000 \u7684\u8bad\u7ec3\u96c6\uff0c\u6bcf\u4e2a\u56fe\u50cf\u6709\\(D=32\\times32\\times3=3072\\)\u4e2a\u50cf\u7d20\uff0c\u800c K = 10\uff0c\u8fd9\u662f\u56e0\u4e3a\u56fe\u7247\u88ab\u5206\u4e3a 10 \u4e2a\u4e0d\u540c\u7684\u7c7b\u522b\uff08\u72d7\uff0c\u732b\uff0c\u6c7d\u8f66\u7b49\uff09\u3002\u6211\u4eec\u73b0\u5728\u5b9a\u4e49\u8bc4\u5206\u51fd\u6570\u4e3a\uff1a\\(f:R^{D}\\rightarrow R^{K}\\)\uff0c\u8be5\u51fd\u6570\u662f\u539f\u59cb\u56fe\u50cf\u50cf\u7d20\u5230\u5206\u7c7b\u5206\u503c\u7684\u6620\u5c04\u3002</p> <p>\u7ebf\u6027\u5206\u7c7b\u5668\uff1a\u5728\u672c\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u6982\u7387\u51fd\u6570\u5f00\u59cb\uff0c\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\uff1a</p> \\[f(x_{i},W,b)=Wx_{i}+b\\] <p>\u5728\u4e0a\u9762\u7684\u516c\u5f0f\u4e2d\uff0c\u5047\u8bbe\u6bcf\u4e2a\u56fe\u50cf\u6570\u636e\u90fd\u88ab\u62c9\u957f\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a D \u7684\u5217\u5411\u91cf\uff0c\u5927\u5c0f\u4e3a [D x 1]\u3002\u5176\u4e2d\u5927\u5c0f\u4e3a\\([K \\times D]\\)\u7684\u77e9\u9635 W \u548c\u5927\u5c0f\u4e3a [K x 1] \u5217\u5411\u91cf b \u4e3a\u8be5\u51fd\u6570\u7684 \u53c2\u6570\uff08parameters\uff09\u3002</p> <p>\u4ee5 CIFAR-10 \u4e3a\u4f8b\uff0c\u7b2c i \u4e2a\u56fe\u50cf\u7684\u6240\u6709\u50cf\u7d20\u4fe1\u606f\u88ab\u62c9\u6210\u4e3a\u4e00\u4e2a [3072 x 1] \u7684\u5217\u5411\u91cf\uff0cW \u5927\u5c0f\u4e3a [10x3072]\uff0cb \u7684\u5927\u5c0f\u4e3a [10x1]\u3002\u56e0\u6b64\uff0c3072 \u4e2a\u6570\u5b57\uff08\u539f\u59cb\u50cf\u7d20\u6570\u503c\uff09\u8f93\u5165\u51fd\u6570\uff0c\u51fd\u6570\u8f93\u51fa 10 \u4e2a\u6570\u5b57\uff08\u4e0d\u540c\u5206\u7c7b\u5f97\u5230\u7684\u5206\u503c\uff09\u3002\u53c2\u6570 W \u88ab\u79f0\u4e3a \u6743\u91cd\uff08weights\uff09\u3002b \u88ab\u79f0\u4e3a \u504f\u5dee\u5411\u91cf\uff08bias vector\uff09</p> <p></p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9\uff1a</p> <ul> <li> <p>\u4e00\u4e2a\u5355\u72ec\u7684\u77e9\u9635\u4e58\u6cd5\\(W{x_{i}}\\)\u5c31\u9ad8\u6548\u5730\u5e76\u884c\u8bc4\u4f30 10 \u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff08\u6bcf\u4e2a\u5206\u7c7b\u5668\u9488\u5bf9\u4e00\u4e2a\u5206\u7c7b\uff09\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7c7b\u7684\u5206\u7c7b\u5668\u5c31\u662f W \u7684\u4e00\u4e2a\u884c\u5411\u91cf\u3002</p> </li> <li> <p>\u8f93\u5165\u6570\u636e\\((x_{i},y_{i})\\)\u662f\u7ed9\u5b9a\u4e14\u4e0d\u53ef\u6539\u53d8\u7684\uff0c<code>\u4f46\u53c2\u6570W\u548cb\u662f\u53ef\u63a7\u5236\u6539\u53d8\u7684</code>\u3002\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u901a\u8fc7\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u4f7f\u5f97\u8ba1\u7b97\u51fa\u6765\u7684\u5206\u7c7b\u5206\u503c\u60c5\u51b5\u548c\u8bad\u7ec3\u96c6\u4e2d\u56fe\u50cf\u6570\u636e\u7684\u771f\u5b9e\u7c7b\u522b\u6807\u7b7e\u76f8\u7b26\u3002</p> </li> <li> <p>\u4f18\u52bf\uff1a</p> </li> <li> <p>\u8bad\u7ec3\u6570\u636e\u662f\u7528\u6765\u5b66\u4e60\u5230\u53c2\u6570 W \u548c b \u7684\uff0c\u4e00\u65e6\u8bad\u7ec3\u5b8c\u6210\uff0c\u8bad\u7ec3\u6570\u636e\u5c31\u53ef\u4ee5\u4e22\u5f03\uff0c\u7559\u4e0b\u5b66\u4e60\u5230\u7684\u53c2\u6570\u5373\u53ef</p> </li> <li> <p>\u53ea\u9700\u8981\u505a\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\u548c\u4e00\u4e2a\u77e9\u9635\u52a0\u6cd5\u5c31\u80fd\u5bf9\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u5206\u7c7b\uff0c\u8fd9\u6bd4 k-NN \u4e2d\u5c06\u6d4b\u8bd5\u56fe\u50cf\u548c\u6240\u6709\u8bad\u7ec3\u6570\u636e\u505a\u6bd4\u8f83\u7684\u65b9\u6cd5\u5feb</p> </li> <li> <p>\u53ef\u4ee5\u5c06\u504f\u5dee b \u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u5b66\u4e60\u53c2\u6570\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5408\u5e76\uff0c\u5c06\u5176\u5408\u5e76\u5230\u6743\u91cd\u77e9\u9635\u4e4b\u4e2d\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u65e0\u975e\u5c31\u662f\u7ed9\u6743\u91cd\u77e9\u9635\u6269\u5f20\u4e00\u4e0b\u5217\u5411\u91cf\uff0c\u5e76\u4e14\u7ed9\u8f93\u5165\u5411\u91cf\u589e\u52a0\u4e00\u4e2a\u5e38\u91cf\u7ef4\u5ea6</p> </li> </ul> <p></p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u7406\u89e3\u7ebf\u6027\u5206\u7c7b\u5668","title":"\u7406\u89e3\u7ebf\u6027\u5206\u7c7b\u5668","text":"<ol> <li>\u7ebf\u6027\u5206\u7c7b\u5668\u8ba1\u7b97\u56fe\u50cf\u4e2d 3 \u4e2a\u989c\u8272\u901a\u9053\u4e2d\u6240\u6709\u50cf\u7d20\u7684\u503c\u4e0e\u6743\u91cd\u7684\u77e9\u9635\u4e58\uff0c\u4ece\u800c\u5f97\u5230\u5206\u7c7b\u5206\u503c\u3002\u6839\u636e\u6211\u4eec\u5bf9\u6743\u91cd\u8bbe\u7f6e\u7684\u503c\uff0c\u5bf9\u4e8e\u56fe\u50cf\u4e2d\u7684\u67d0\u4e9b\u4f4d\u7f6e\u7684\u67d0\u4e9b\u989c\u8272\uff0c\u51fd\u6570\u8868\u73b0\u51fa\u559c\u597d\u6216\u8005\u538c\u6076\uff08\u6839\u636e\u6bcf\u4e2a\u6743\u91cd\u7684\u7b26\u53f7\u800c\u5b9a\uff09\u3002</li> </ol> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u53ef\u4ee5\u60f3\u8c61 \"\u8239\" \u5206\u7c7b\u5c31\u662f\u88ab\u5927\u91cf\u7684\u84dd\u8272\u6240\u5305\u56f4\uff08\u5bf9\u5e94\u7684\u5c31\u662f\u6c34\uff09\u3002\u90a3\u4e48 \"\u8239\" \u5206\u7c7b\u5668\u5728\u84dd\u8272\u901a\u9053\u4e0a\u7684\u6743\u91cd\u5c31\u6709\u5f88\u591a\u7684\u6b63\u6743\u91cd\uff08\u5b83\u4eec\u7684\u51fa\u73b0\u63d0\u9ad8\u4e86 \"\u8239\" \u5206\u7c7b\u7684\u5206\u503c\uff09\uff0c\u800c\u5728\u7eff\u8272\u548c\u7ea2\u8272\u901a\u9053\u4e0a\u7684\u6743\u91cd\u4e3a\u8d1f\u7684\u5c31\u6bd4\u8f83\u591a\uff08\u5b83\u4eec\u7684\u51fa\u73b0\u964d\u4f4e\u4e86 \"\u8239\" \u5206\u7c7b\u7684\u5206\u503c\uff09\u3002</p> <ol> <li>\u7ebf\u6027\u5206\u7c7b\u5668\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a category\uff0c\u751f\u6210\u4e00\u4e2a\u7c7b\u6a21\u677f\u3002\u6b64\u65f6\u4e0d\u518d\u5c06\u56fe\u50cf\u6570\u636e\u62c9\u4f38\u4e3a\u5217\u5411\u91cf\uff0c\u76f8\u5e94\u7684\u6539\u53d8\u6743\u91cd\u77e9\u9635\u9002\u5e94\u56fe\u50cf\u6570\u636e\u7684\u7ef4\u6570\u3002\u6539\u53d8\u540e\u7684\u6743\u91cd\u77e9\u9635\u7c7b\u4f3c\u4e8e\u6a21\u677f\uff0c\u540e\u7eed\u5c31\u662f\u8ba1\u7b97\u5185\u79ef\uff0c\u8fdb\u884c\u6a21\u677f\u7684\u5339\u914d\u3002</li> </ol> <p>\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8fd8\u662f\u5728\u9ad8\u6548\u5730\u4f7f\u7528 k-NN\uff0c\u4e0d\u540c\u7684\u662f\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u6240\u6709\u7684\u8bad\u7ec3\u96c6\u7684\u56fe\u50cf\u6765\u6bd4\u8f83 <code>\uff0c\u800c\u662f\u6bcf\u4e2a\u7c7b\u522b\u53ea\u7528\u4e86\u4e00\u5f20\u56fe\u7247\uff08\u8fd9\u5f20\u56fe\u7247\u662f\u6211\u4eec\u5b66\u4e60\u5230\u7684\uff0c\u800c\u4e0d\u662f\u8bad\u7ec3\u96c6\u4e2d\u7684\u67d0\u4e00\u5f20\uff09</code>\uff0c\u800c\u4e14\u6211\u4eec\u4f1a\u4f7f\u7528\u5185\u79ef\u6765\u8ba1\u7b97\u5411\u91cf\u95f4\u7684\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 L1 \u6216\u8005 L2 \u8ddd\u79bb\u3002</p> <p></p> <ul> <li>\u8239\u7684\u6a21\u677f\u5982\u671f\u671b\u7684\u90a3\u6837\u6709\u5f88\u591a\u84dd\u8272\u50cf\u7d20\u3002\u5982\u679c\u56fe\u50cf\u662f\u4e00\u8258\u8239\u884c\u9a76\u5728\u5927\u6d77\u4e0a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6a21\u677f\u5229\u7528\u5185\u79ef\u8ba1\u7b97\u56fe\u50cf\u5c06\u7ed9\u51fa\u5f88\u9ad8\u7684\u5206\u6570\u3002</li> <li>\u53ef\u4ee5\u770b\u5230\u9a6c\u7684\u6a21\u677f\u770b\u8d77\u6765\u4f3c\u4e4e\u662f\u4e24\u4e2a\u5934\u7684\u9a6c\uff0c\u8fd9\u662f\u56e0\u4e3a\u8bad\u7ec3\u96c6\u4e2d\u7684\u9a6c\u7684\u56fe\u50cf\u4e2d\u9a6c\u5934\u671d\u5411\u5404\u6709\u5de6\u53f3\u9020\u6210\u7684\u3002\u7ebf\u6027\u5206\u7c7b\u5668\u5c06\u8fd9\u4e24\u79cd\u60c5\u51b5\u878d\u5408\u5230\u4e00\u8d77\u4e86\u3002\u7c7b\u4f3c\u7684\uff0c\u6c7d\u8f66\u7684\u6a21\u677f\u770b\u8d77\u6765\u4e5f\u662f\u5c06\u51e0\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u878d\u5408\u5230\u4e86\u4e00\u4e2a\u6a21\u677f\u4e2d\uff0c\u5e76\u4ee5\u6b64\u6765\u5206\u8fa8\u4e0d\u540c\u65b9\u5411\u4e0d\u540c\u989c\u8272\u7684\u6c7d\u8f66\u3002\u8fd9\u4e2a\u6a21\u677f\u4e0a\u7684\u8f66\u662f\u7ea2\u8272\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a CIFAR-10 \u4e2d\u8bad\u7ec3\u96c6\u7684\u8f66\u5927\u591a\u662f\u7ea2\u8272\u7684\u3002</li> </ul> <p>\u7ebf\u6027\u5206\u7c7b\u5668\u5bf9\u4e8e\u4e0d\u540c\u989c\u8272\u7684\u8f66\u7684\u5206\u7c7b\u80fd\u529b\u662f\u5f88\u5f31\u7684\uff0c\u4f46\u662f\u540e\u9762\u53ef\u4ee5\u770b\u5230\u795e\u7ecf\u7f51\u7edc\u662f\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u7684\u3002<code>\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5728\u5b83\u7684\u9690\u85cf\u5c42\u4e2d\u5b9e\u73b0\u4e2d\u95f4\u795e\u7ecf\u5143\u6765\u63a2\u6d4b\u4e0d\u540c\u79cd\u7c7b\u7684\u8f66\uff08\u6bd4\u5982\u7eff\u8272\u8f66\u5934\u5411\u5de6\uff0c\u84dd\u8272\u8f66\u5934\u5411\u524d\u7b49\uff09\u3002\u800c\u4e0b\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u901a\u8fc7\u8ba1\u7b97\u4e0d\u540c\u7684\u6c7d\u8f66\u63a2\u6d4b\u5668\u7684\u6743\u91cd\u548c\uff0c\u5c06\u8fd9\u4e9b\u5408\u5e76\u4e3a\u4e00\u4e2a\u66f4\u7cbe\u786e\u7684\u6c7d\u8f66\u5206\u7c7b\u5206\u503c\u3002</code></p> <ol> <li>\u56fe\u50cf\u7a7a\u95f4\u7684\u793a\u610f\u56fe\u3002\u5176\u4e2d\u6bcf\u4e2a\u56fe\u50cf\u662f\u4e00\u4e2a\u70b9\uff0c\u6709 3 \u4e2a\u5206\u7c7b\u5668\u3002\u4ee5\u7ea2\u8272\u7684\u6c7d\u8f66\u5206\u7c7b\u5668\u4e3a\u4f8b\uff0c\u7ea2\u7ebf\u8868\u793a\u7a7a\u95f4\u4e2d\u6c7d\u8f66\u5206\u7c7b\u5206\u6570\u4e3a 0 \u7684\u70b9\u7684\u96c6\u5408\uff0c\u7ea2\u8272\u7684\u7bad\u5934\u8868\u793a\u5206\u503c\u4e0a\u5347\u7684\u65b9\u5411\u3002\u6240\u6709\u7ea2\u7ebf\u53f3\u8fb9\u7684\u70b9\u7684\u5206\u6570\u503c\u5747\u4e3a\u6b63\uff0c\u4e14\u7ebf\u6027\u5347\u9ad8\u3002\u7ea2\u7ebf\u5de6\u8fb9\u7684\u70b9\u5206\u503c\u4e3a\u8d1f\uff0c\u4e14\u7ebf\u6027\u964d\u4f4e\u3002</li> </ol> <p>\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0cW \u7684\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u5206\u7c7b\u7c7b\u522b\u7684\u5206\u7c7b\u5668\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u6570\u5b57\u7684\u51e0\u4f55\u89e3\u91ca\u662f\uff1a<code>\u5982\u679c\u6539\u53d8\u5176\u4e2d\u4e00\u884c\u7684\u6570\u5b57\uff0c\u4f1a\u770b\u89c1\u5206\u7c7b\u5668\u5728\u7a7a\u95f4\u4e2d\u5bf9\u5e94\u7684\u76f4\u7ebf\u5f00\u59cb\u5411\u7740\u4e0d\u540c\u65b9\u5411\u65cb\u8f6c\u3002\u800c\u504f\u5deeb\uff0c\u5219\u5141\u8bb8\u5206\u7c7b\u5668\u5bf9\u5e94\u7684\u76f4\u7ebf\u5e73\u79fb\u3002</code> \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6ca1\u6709\u504f\u5dee\uff0c\u65e0\u8bba\u6743\u91cd\u5982\u4f55\uff0c\u5206\u7c7b\u5206\u503c\u59cb\u7ec8\u4e3a 0\u3002\u8fd9\u6837\u6240\u6709\u5206\u7c7b\u5668\u7684\u7ebf\u90fd\u4e0d\u5f97\u4e0d\u7a7f\u8fc7\u539f\u70b9\u3002</p> <p></p> <p>summary:</p> <p></p> <p>\u56fe\u50cf\u6570\u636e\u9884\u5904\u7406\uff1a\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u56fe\u50cf\u90fd\u662f\u4f7f\u7528\u7684\u539f\u59cb\u50cf\u7d20\u503c\uff08\u4ece 0 \u5230 255\uff09\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684\u7279\u5f81\u505a\u5f52\u4e00\u5316\uff08normalization\uff09\u5904\u7406\u662f\u5e38\u89c1\u7684\u5957\u8def\u3002\u800c\u5728\u56fe\u50cf\u5206\u7c7b\u7684\u4f8b\u5b50\u4e2d\uff0c\u56fe\u50cf\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u7279\u5f81\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7279\u5f81\u51cf\u53bb\u5e73\u5747\u503c\u6765 \u4e2d\u5fc3\u5316 \u6570\u636e\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5728\u8fd9\u4e9b\u56fe\u7247\u7684\u4f8b\u5b50\u4e2d\uff0c\u8be5\u6b65\u9aa4\u610f\u5473\u7740\u6839\u636e\u8bad\u7ec3\u96c6\u4e2d\u6240\u6709\u7684\u56fe\u50cf\u8ba1\u7b97\u51fa\u4e00\u4e2a\u5e73\u5747\u56fe\u50cf\u503c\uff0c\u7136\u540e\u6bcf\u4e2a\u56fe\u50cf\u90fd\u51cf\u53bb\u8fd9\u4e2a\u5e73\u5747\u503c\uff0c\u8fd9\u6837\u56fe\u50cf\u7684\u50cf\u7d20\u503c\u5c31\u5927\u7ea6\u5206\u5e03\u5728 [-127, 127] \u4e4b\u95f4\u4e86\u3002\u4e0b\u4e00\u4e2a\u5e38\u89c1\u6b65\u9aa4\u662f\uff0c\u8ba9\u6240\u6709\u6570\u503c\u5206\u5e03\u7684\u533a\u95f4\u53d8\u4e3a [-1, 1]\u3002\u96f6\u5747\u503c\u7684\u4e2d\u5fc3\u5316 \u662f\u5f88\u91cd\u8981\u7684\uff0c\u7b49\u6211\u4eec\u7406\u89e3\u4e86\u68af\u5ea6\u4e0b\u964d\u540e\u518d\u6765\u8be6\u7ec6\u89e3\u91ca\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u635f\u5931\u51fd\u6570-loss-function","title":"\u635f\u5931\u51fd\u6570 Loss function","text":"<p>\u5728\u4e0a\u4e00\u8282\u5b9a\u4e49\u4e86\u4ece\u56fe\u50cf\u50cf\u7d20\u503c\u5230\u6240\u5c5e\u7c7b\u522b\u7684\u8bc4\u5206\u51fd\u6570\uff08score function\uff09\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u6743\u91cd\u77e9\u9635 W\u3002\u5728\u51fd\u6570\u4e2d\uff0c\u6570\u636e(\\(x_i, y_i\\))\u662f\u7ed9\u5b9a\u7684\uff0c\u4e0d\u80fd\u4fee\u6539\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u8c03\u6574\u6743\u91cd\u77e9\u9635\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f7f\u5f97\u8bc4\u5206\u51fd\u6570\u7684\u7ed3\u679c\u4e0e\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u56fe\u50cf\u7684\u771f\u5b9e\u7c7b\u522b\u4e00\u81f4\uff0c\u5373\u8bc4\u5206\u51fd\u6570\u5728\u6b63\u786e\u7684\u5206\u7c7b\u7684\u4f4d\u7f6e\u5e94\u5f53\u5f97\u5230\u6700\u9ad8\u7684\u8bc4\u5206\uff08score\uff09\u3002</p> <p>\u6211\u4eec\u5c06\u4f7f\u7528 \u635f\u5931\u51fd\u6570\uff08Loss Function\uff09\uff08\u6709\u65f6\u4e5f\u53eb \u4ee3\u4ef7\u51fd\u6570 Cost Function \u6216 \u76ee\u6807\u51fd\u6570 Objective function\uff09\u6765\u8861\u91cf\u6211\u4eec\u5bf9\u7ed3\u679c\u7684\u4e0d\u6ee1\u610f\u7a0b\u5ea6\u3002\u76f4\u89c2\u5730\u8bb2\uff0c\u5f53\u8bc4\u5206\u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u4e4b\u95f4\u5dee\u5f02\u8d8a\u5927\uff0c\u635f\u5931\u51fd\u6570\u8f93\u51fa\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002</p> <ul> <li> <p>Loss for a single example is\\(L_i(f_i(x_i, W),y_i)\\)</p> </li> <li> <p>Loss for the dataset is average of per-example losses :\\(L = \\dfrac{1}{N}\\sum L_i(f(x_i,W),y_i)\\)</p> </li> </ul>"},{"location":"CV/Lecture3_Linear_Classifiers/#0-1-\u635f\u5931","title":"0-1 \u635f\u5931","text":"<p>\u8fd9\u662f\u4e00\u79cd\u6700\u5b8c\u7f8e\u7684\u635f\u5931\u51fd\u6570\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u8981\uff0c\u627e\u5230\u6700\u4f73\u7684\u4f18\u5316\u76ee\u6807\uff0c\u4f46\u662f\u6ca1\u529e\u6cd5\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0.</p> <p>\u53ea\u770b\u5206\u7c7b\u7684\u5bf9\u4e0e\u9519\uff0c\u5f53\u6807\u7b7e\u4e0e\u9884\u6d4b\u7c7b\u522b\u76f8\u7b49\u65f6\uff0closs = 0\uff0c\u5426\u5219\u4e3a 1</p> \\[ L(f_i(x_i, W), y_i) = \\begin{cases}     0   &amp; if \\ y_i = f_i(x_i, W)\\\\     1   &amp; if \\ y_i != f_i(x_i, W) \\end{cases} \\]"},{"location":"CV/Lecture3_Linear_Classifiers/#\u4ea4\u53c9\u71b5\u635f\u5931","title":"\u4ea4\u53c9\u71b5\u635f\u5931","text":"<p>\u71b5\u8868\u793a\u70ed\u529b\u5b66\u7cfb\u7edf\u7684\u65e0\u5e8f\u7a0b\u5ea6\uff0c\u5728\u4fe1\u606f\u5b66\u4e2d\u53ef\u4ee5\u8868\u793a\u4fe1\u606f\u7684\u65e0\u5e8f\u7a0b\u5ea6\uff0c\u5728\u56fe\u50cf\u5206\u7c7b\u4e2d\uff0c\u771f\u5b9e\u6807\u7b7e\u5411\u91cf\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e3a 1\uff0c\u8fd9\u79cd\u60c5\u51b5\u65e0\u5e8f\u7a0b\u5ea6\u6700\u4f4e\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u671f\u671b\u6a21\u578b\u8f93\u51fa\u53ef\u4ee5\u8fbe\u5230\u7684\u7a0b\u5ea6\u3002</p> \\[ entropy = -\\sum_{i = 0}^i p_ilogp_i \\] <p>\u4ea4\u53c9\u71b5\u635f\u5931\u53ef\u4ee5\u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u5dee\u5f02\u7a0b\u5ea6\uff0c\u5e76\u4e14\u53ea\u5173\u5fc3\u6b63\u786e\u5206\u7c7b\u7684\u95ee\u9898\uff0c\u4e0d\u4f1a\u53bb\u5173\u5fc3\u9519\u8bef\u5206\u7c7b\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6a21\u578b\u66f4\u4e13\u6ce8\u4e8e\u5f3a\u5316\u6b63\u786e\u5206\u7c7b\u7684\u6982\u7387</p> <p>\\(y_{ij}\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u6837\u672c\u5c5e\u4e8e\u7b2c\\(j\\)\u7c7b\u6807\u7b7e\u7684\u6982\u7387\uff080 \u6216 1\uff09\uff0c\\(f(x_{ij})\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u6837\u672c\u88ab\u9884\u6d4b\u4e3a\u7b2c\\(j\\)\u7c7b\u6807\u7b7e\u7684\u6982\u7387</p> \\[ l(f, y) = -\\sum_i^n \\sum_j^m y_{ij}logf(x_{ij}) \\] <p>\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u5728\u5ea6\u91cf\u5b9e\u9645\u5206\u7c7b\u4e0e\u9884\u6d4b\u5206\u7c7b\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u5f53\u5b9e\u9645\u5206\u7c7b\u548c\u9884\u6d4b\u5206\u7c7b\u5dee\u5f02\u589e\u5927\u65f6\uff0c\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u7684\u503c\u4f1a\u589e\u52a0\uff0c\u53cd\u4e4b\u51cf\u5c11\u3002</p> <ul> <li>\u71b5\u589e\uff08\u635f\u5931\u589e\u5927\uff09\uff1a\u5f53\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\\(f(x_{ij})\\)\u504f\u79bb\u771f\u5b9e\u5206\u5e03\\(y_{ij}\\)\u65f6\uff08\u5373\u9884\u6d4b\u9519\u8bef\uff09\uff0c\u635f\u5931\u51fd\u6570\u503c\u4f1a\u589e\u5927\u3002\u4f8b\u5982\uff0c\u5982\u679c\\(y_{ij} = 1\\)\u4f46\\(f(x_{ij})\\)\u975e\u5e38\u63a5\u8fd1 0\uff0c\u90a3\u4e48\\(\\log f(x_{ij})\\)\u4f1a\u8d8b\u5411\u4e8e\u8d1f\u65e0\u7a77\u5927\uff0c\u4ece\u800c\u5bfc\u81f4\u635f\u5931\u51fd\u6570\u503c\u589e\u5927\u3002</li> <li>\u71b5\u51cf\uff08\u635f\u5931\u51cf\u5c0f\uff09\uff1a\u5f53\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\\(f(x_{ij}\\)) \u8d8a\u63a5\u8fd1\u771f\u5b9e\u5206\u5e03\\(y_{ij}\\)\u65f6\uff08\u5373\u9884\u6d4b\u6b63\u786e\uff09\uff0c\u635f\u5931\u51fd\u6570\u503c\u4f1a\u51cf\u5c0f\u3002\u4f8b\u5982\uff0c\u5982\u679c\\(y*{ij} = 1\\)\u4e14\\(f(x*{ij})\\)\u8d8a\u63a5\u8fd1 1\uff0c\u90a3\u4e48\\(\\log f(x_{ij})\\)\u4e5f\u4f1a\u63a5\u8fd1 0\uff0c\u4ece\u800c\u4f7f\u5f97\u635f\u5931\u503c\u51cf\u5c0f\u3002</li> </ul>"},{"location":"CV/Lecture3_Linear_Classifiers/#kl-\u6563\u5ea6","title":"KL \u6563\u5ea6","text":"<p>KL \u6563\u5ea6\uff08Kullback-Leibler Divergence\uff0c\u4e5f\u79f0\u4e3a\u76f8\u5bf9\u71b5\uff09\u662f\u7528\u6765\u8861\u91cf\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u5dee\u5f02\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5728\u4fe1\u606f\u8bba\u4e2d\uff0cKL \u6563\u5ea6\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u4ece\u4e00\u4e2a\u5206\u5e03\u9884\u6d4b\u53e6\u4e00\u4e2a\u5206\u5e03\u7684\u4ee3\u4ef7\u3002</p> <p>\u5047\u8bbe\u6709\u4e24\u4e2a\u6982\u7387\u5206\u5e03 P \u548c Q\uff0c\u5176\u4e2d P \u662f\u771f\u5b9e\u5206\u5e03\uff0cQ \u662f\u9884\u6d4b\u5206\u5e03\u3002KL \u6563\u5ea6\u5b9a\u4e49\u4e3a\uff1a</p> \\[ D_{KL}(P \\parallel Q) = \\sum_i P(i) \\log \\frac{P(i)}{Q(i)} \\] <p>\u6216\u8005\u5728\u8fde\u7eed\u60c5\u51b5\u4e0b\uff1a</p> \\[ D_{KL}(P \\parallel Q) = \\int P(x) \\log \\frac{P(x)}{Q(x)} \\, dx \\] <p>KL \u6563\u5ea6\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4f7f\u7528\u5206\u5e03 Q \u4ee3\u66ff\u5206\u5e03 P \u65f6\u589e\u52a0\u7684\u201c\u989d\u5916\u4fe1\u606f\u201d\u6216\u201c\u4fe1\u606f\u635f\u5931\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cKL \u6563\u5ea6\u91cf\u5316\u4e86\u5728\u4f7f\u7528 Q \u6765\u63cf\u8ff0\u6570\u636e\u800c\u4e0d\u662f P \u65f6\u6240\u4ed8\u51fa\u7684\u4ee3\u4ef7\u3002\u8d8a\u5927\u7684 KL \u6563\u5ea6\u8868\u793a Q \u8d8a\u4e0d\u63a5\u8fd1 P\uff0c\u9884\u6d4b\u8bef\u5dee\u8d8a\u5927\u3002</p> <p>\u4ea4\u53c9\u71b5\u548c KL \u6563\u5ea6\u4e4b\u95f4\u6709\u5bc6\u5207\u7684\u5173\u7cfb\u3002\u4ea4\u53c9\u71b5\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ H(P, Q) = H(P) + D_{KL}(P \\parallel Q) \\] <p>\u5176\u4e2d\uff0cH(P) \u662f\u5206\u5e03 P \u7684\u71b5\uff0c\u800c H(P, Q) \u662f P \u548c Q \u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u3002\u4ea4\u53c9\u71b5\u7b49\u4e8e\u771f\u5b9e\u5206\u5e03\u7684\u71b5\u52a0\u4e0a KL \u6563\u5ea6\uff0c\u56e0\u6b64\u6700\u5c0f\u5316\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u4e5f\u5728\u6700\u5c0f\u5316 KL \u6563\u5ea6\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u591a\u7c7b\u652f\u6301\u5411\u91cf\u673a\u635f\u5931-multiclass-support-vector-machine-loss","title":"\u591a\u7c7b\u652f\u6301\u5411\u91cf\u673a\u635f\u5931 Multiclass Support Vector Machine Loss","text":"<p>\u4ecb\u7ecd\u5e38\u7528\u7684\u591a\u7c7b\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u635f\u5931\u51fd\u6570\u3002SVM \u7684\u76ee\u6807\u662f\u786e\u4fdd\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206\u6bd4\u4e0d\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206\u9ad8\u51fa\u81f3\u5c11\u4e00\u4e2a\u8fb9\u754c\u503c\\(\\Delta\\)\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\uff0c\u5c31\u4f1a\u4ea7\u751f\u635f\u5931\u3002</p> <p>\u7b2c i \u4e2a\u6570\u636e\u4e2d\u5305\u542b\u56fe\u50cf\\(x_i\\)\u7684\u50cf\u7d20\u6570\u636e\u548c\u4ee3\u8868\u6b63\u786e\u7c7b\u522b\u7684\u6807\u7b7e\\(y_i\\)\u3002\u8bc4\u5206\u51fd\u6570\u8f93\u5165\u50cf\u7d20\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7\u516c\u5f0f\\(f(x_i,W)\\)\u6765\u8ba1\u7b97\u4e0d\u540c\u5206\u7c7b\u7c7b\u522b\u7684\u5206\u503c\u3002\u8fd9\u91cc\u6211\u4eec\u5c06\u5206\u503c\u7b80\u5199\u4e3a s\u3002\u6bd4\u5982\uff0c\u9488\u5bf9\u7b2c j \u4e2a\u7c7b\u522b\u7684\u5f97\u5206\u5c31\u662f\u7b2c j \u4e2a\u5143\u7d20\uff1a\\(s_{j}=f(x_{i},W)_{j}\\)\u3002\u9488\u5bf9\u7b2c i \u4e2a\u6570\u636e\u7684\u591a\u7c7b SVM \u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ L_i =\\sum_{j\\not = y_i}\\max(0, s_j-s_{y_i}+\\Delta) \\] <p>\u4e3e\u4f8b\uff1a\u7528\u4e00\u4e2a\u4f8b\u5b50\u6f14\u793a\u516c\u5f0f\u662f\u5982\u4f55\u8ba1\u7b97\u7684\u3002\u5047\u8bbe\u6709 3 \u4e2a\u5206\u7c7b\uff0c\u5e76\u4e14\u5f97\u5230\u4e86\u5206\u503c\\(s = [13,-7,11]\\)\u3002\u5176\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u522b\u662f\u6b63\u786e\u7c7b\u522b\uff0c\u5373\\(y_i=0\\)\u3002\u540c\u65f6\u5047\u8bbe\\(\\Delta\\)\u662f 10\uff08\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u8d85\u53c2\u6570\uff09\u3002\u4e0a\u9762\u7684\u516c\u5f0f\u662f\u5c06\u6240\u6709\u4e0d\u6b63\u786e\u5206\u7c7b\uff08\\(j\\not=y_i\\)\uff09\u52a0\u8d77\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e24\u4e2a\u90e8\u5206\uff1a</p> \\[ L_i =\\max(0,-7-13+10)+\\max(0,11-13+10) \\] <p>\u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u4e2a\u90e8\u5206\u7ed3\u679c\u662f 0\uff0c\u8fd9\u662f\u56e0\u4e3a [-7-13+10] \u5f97\u5230\u7684\u662f\u8d1f\u6570\uff0c\u7ecf\u8fc7\\(\\max(0,-)\\)\u51fd\u6570\u5904\u7406\u540e\u5f97\u5230 0\u3002\u8fd9\u4e00\u5bf9\u7c7b\u522b\u5206\u6570\u548c\u6807\u7b7e\u7684\u635f\u5931\u503c\u662f 0\uff0c\u8fd9\u662f\u56e0\u4e3a\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206 13 \u4e0e\u9519\u8bef\u5206\u7c7b\u7684\u5f97\u5206-7 \u7684\u5dee\u4e3a 20\uff0c\u9ad8\u4e8e\u8fb9\u754c\u503c 10\u3002\u800c SVM \u53ea\u5173\u5fc3\u5dee\u8ddd\u81f3\u5c11\u8981\u5927\u4e8e 10\uff0c\u66f4\u5927\u7684\u5dee\u503c\u8fd8\u662f\u7b97\u4f5c\u635f\u5931\u503c\u4e3a 0\u3002\u7b2c\u4e8c\u4e2a\u90e8\u5206\u8ba1\u7b97 [11-13+10] \u5f97\u5230 8\u3002\u867d\u7136\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206\u6bd4\u4e0d\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206\u8981\u9ad8\uff0813 &gt; 11\uff09\uff0c\u4f46\u662f\u6bd4 10 \u7684\u8fb9\u754c\u503c\u8fd8\u662f\u5c0f\u4e86\uff0c\u5206\u5dee\u53ea\u6709 2\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u635f\u5931\u503c\u7b49\u4e8e 8\u3002<code>\u7b80\u800c\u8a00\u4e4b\uff0cSVM \u7684\u635f\u5931\u51fd\u6570\u60f3\u8981\u6b63\u786e\u5206\u7c7b\u7c7b\u522b$y_i$\u7684\u5206\u6570\u6bd4\u4e0d\u6b63\u786e\u7c7b\u522b\u5206\u6570\u9ad8\uff0c\u800c\u4e14\u81f3\u5c11\u8981\u9ad8$\\Delta$\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u70b9\uff0c\u5c31\u5f00\u59cb\u8ba1\u7b97\u635f\u5931\u503c\u3002</code></p> <p>\u90a3\u4e48\u5728\u8fd9\u6b21\u7684\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u9762\u5bf9\u7684\u662f\u7ebf\u6027\u8bc4\u5206\u51fd\u6570\uff08\\(f(x_i,W)=Wx_i\\)\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u635f\u5931\u51fd\u6570\u7684\u516c\u5f0f\u7a0d\u5fae\u6539\u5199\u4e00\u4e0b\uff1a</p> \\[ L_i =\\sum_{j\\not = y_i}\\max(0, w^T_jx_i-w^T_{y_i}x_i+\\Delta) \\] <p>\u5176\u4e2d\\(w_j\\)\u662f\u6743\u91cd\\(W\\)\u7684\u7b2c j \u884c\uff0c\u88ab\u53d8\u5f62\u4e3a\u5217\u5411\u91cf\u3002\u7136\u800c\uff0c\u4e00\u65e6\u5f00\u59cb\u8003\u8651\u66f4\u590d\u6742\u7684\u8bc4\u5206\u51fd\u6570\\(f\\)\u516c\u5f0f\uff0c\u8fd9\u6837\u505a\u5c31\u4e0d\u662f\u5fc5\u987b\u7684\u4e86\u3002</p> <p>\u5728\u7ed3\u675f\u8fd9\u4e00\u5c0f\u8282\u524d\uff0c\u8fd8\u5fc5\u987b\u63d0\u4e00\u4e0b\u7684\u5c5e\u4e8e\u662f\u5173\u4e8e 0 \u7684\u9600\u503c\uff1a\\(\\max(0,-)\\)\u51fd\u6570\uff0c\u5b83\u5e38\u88ab\u79f0\u4e3a \u6298\u53f6\u635f\u5931\uff08hinge loss\uff09\u3002\u6709\u65f6\u5019\u4f1a\u542c\u5230\u4eba\u4eec\u4f7f\u7528\u5e73\u65b9\u6298\u53f6\u635f\u5931 SVM\uff08\u5373 L2-SVM\uff09\uff0c\u5b83\u4f7f\u7528\u7684\u662f\\(\\max(0,-)^2\\)\uff0c\u5c06\u66f4\u5f3a\u70c8\uff08\u5e73\u65b9\u5730\u800c\u4e0d\u662f\u7ebf\u6027\u5730\uff09\u5730\u60e9\u7f5a\u8fc7\u754c\u7684\u8fb9\u754c\u503c\u3002\u4e0d\u4f7f\u7528\u5e73\u65b9\u662f\u66f4\u6807\u51c6\u7684\u7248\u672c\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u6570\u636e\u96c6\u4e2d\uff0c\u5e73\u65b9\u6298\u53f6\u635f\u5931\u4f1a\u5de5\u4f5c\u5f97\u66f4\u597d\u3002\u53ef\u4ee5\u901a\u8fc7 \u4ea4\u53c9\u9a8c\u8bc1 \u6765\u51b3\u5b9a\u5230\u5e95\u4f7f\u7528\u54ea\u4e2a\u3002</p> <p></p> <p></p> <p>\u591a\u7c7b SVM \"\u60f3\u8981\" \u6b63\u786e\u7c7b\u522b\u7684\u5206\u7c7b\u5206\u6570\u6bd4\u5176\u4ed6\u4e0d\u6b63\u786e\u5206\u7c7b\u7c7b\u522b\u7684\u5206\u6570\u8981\u9ad8\uff0c\u800c\u4e14\u81f3\u5c11\u9ad8\u51fa delta \u7684\u8fb9\u754c\u503c\u3002\u5982\u679c\u5176\u4ed6\u5206\u7c7b\u5206\u6570\u8fdb\u5165\u4e86\u7ea2\u8272\u7684\u533a\u57df\uff0c\u751a\u81f3\u66f4\u9ad8\uff0c\u90a3\u4e48\u5c31\u5f00\u59cb\u8ba1\u7b97\u635f\u5931\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u60c5\u51b5\uff0c\u635f\u5931\u503c\u4e3a 0\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e9b\u6743\u91cd\uff0c\u5b83\u4eec\u65e2\u80fd\u591f\u8ba9\u8bad\u7ec3\u96c6\u4e2d\u7684\u6570\u636e\u6837\u4f8b\u6ee1\u8db3\u8fd9\u4e9b\u9650\u5236\uff0c\u4e5f\u80fd\u8ba9\u603b\u7684\u635f\u5931\u503c\u5c3d\u53ef\u80fd\u5730\u4f4e\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u6b63\u5219\u5316-regularization","title":"\u6b63\u5219\u5316 Regularization","text":"<p><code>\u6b63\u5219\u5316\uff08Regularization\uff09\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u5e38\u7528\u7684\u6280\u672f\uff0c\u7528\u6765\u9632\u6b62\u6a21\u578b\u8fc7\u62df\u5408\u5e76\u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u3002\u5728\u591a\u7c7b SVM \u7684\u80cc\u666f\u4e0b\uff0c\u6b63\u5219\u5316\u901a\u8fc7\u589e\u52a0\u60e9\u7f5a\u9879\u6765\u63a7\u5236\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u4ece\u800c\u51cf\u5c11\u6743\u91cd\u7684\u6a21\u7cca\u6027\u548c\u907f\u514d\u8fc7\u5ea6\u4f9d\u8d56\u67d0\u4e9b\u7279\u5b9a\u7684\u8f93\u5165\u7ef4\u5ea6\u3002</code></p> <p>\u6b63\u5219\u5316\uff08Regularization\uff09\u52a8\u673a\uff1a \u4e0a\u9762\u635f\u5931\u51fd\u6570\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u5047\u8bbe\u6709\u4e00\u4e2a\u6570\u636e\u96c6\u548c\u4e00\u4e2a\u6743\u91cd\u96c6 W \u80fd\u591f\u6b63\u786e\u5730\u5206\u7c7b\u6bcf\u4e2a\u6570\u636e\uff08\u5373\u6240\u6709\u7684\u8fb9\u754c\u90fd\u6ee1\u8db3\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 i \u90fd\u6709\\(L_i=0\\)\uff09\u3002\u95ee\u9898\u5728\u4e8e\u8fd9\u4e2a W \u5e76\u4e0d\u552f\u4e00\uff1a\u53ef\u80fd\u6709\u5f88\u591a\u76f8\u4f3c\u7684 W \u90fd\u80fd\u6b63\u786e\u5730\u5206\u7c7b\u6240\u6709\u7684\u6570\u636e\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5982\u679c W \u80fd\u591f\u6b63\u786e\u5206\u7c7b\u6240\u6709\u6570\u636e\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u636e\uff0c\u635f\u5931\u503c\u90fd\u662f 0\u3002\u90a3\u4e48\u5f53\\(\\lambda &gt;1\\)\u65f6\uff0c\u4efb\u4f55\u6570\u4e58\\(\\lambda W\\)\u90fd\u80fd\u4f7f\u5f97\u635f\u5931\u503c\u4e3a 0\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u53d8\u5316\u5c06\u6240\u6709\u5206\u503c\u7684\u5927\u5c0f\u90fd\u5747\u7b49\u5730\u6269\u5927\u4e86\uff0c\u6240\u4ee5\u5b83\u4eec\u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u503c\u4e5f\u6269\u5927\u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u786e\u5206\u7c7b\u7684\u5206\u503c\u548c\u4e3e\u4f8b\u5b83\u6700\u8fd1\u7684\u9519\u8bef\u5206\u7c7b\u7684\u5206\u503c\u7684\u5dee\u8ddd\u662f 15\uff0c\u5bf9 W \u4e58\u4ee5 2 \u5c06\u4f7f\u5f97\u5dee\u8ddd\u53d8\u6210 30\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u5411\u67d0\u4e9b\u7279\u5b9a\u7684\u6743\u91cd W \u6dfb\u52a0\u4e00\u4e9b\u504f\u597d\uff0c\u5bf9\u5176\u4ed6\u6743\u91cd\u5219\u4e0d\u6dfb\u52a0\uff0c\u4ee5\u6b64\u6765\u6d88\u9664\u6a21\u7cca\u6027\u3002\u8fd9\u4e00\u70b9\u662f\u80fd\u591f\u5b9e\u73b0\u7684\uff0c\u65b9\u6cd5\u662f\u5411\u635f\u5931\u51fd\u6570\u589e\u52a0\u4e00\u4e2a \u6b63\u5219\u5316\u60e9\u7f5a\uff08regularization penalty\uff09\\(R(W)\\)]\u90e8\u5206\u3002</p> <p>\u6700\u5e38\u7528\u7684\u6b63\u5219\u5316\u60e9\u7f5a\u662f L2 \u8303\u5f0f\uff0cL2 \u8303\u5f0f\u901a\u8fc7\u5bf9\u6240\u6709\u53c2\u6570\u8fdb\u884c\u9010\u5143\u7d20\u7684\u5e73\u65b9\u60e9\u7f5a\u6765\u6291\u5236\u5927\u6570\u503c\u7684\u6743\u91cd\uff1a\\(R(W)=\\sum_k\\sum_lW^2_{k,l}\\)</p> <p>\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5c06\\(W\\)\u4e2d\u6240\u6709\u5143\u7d20\u5e73\u65b9\u540e\u6c42\u548c\u3002\u6ce8\u610f\u6b63\u5219\u5316\u51fd\u6570\u4e0d\u662f\u6570\u636e\u7684\u51fd\u6570\uff0c\u4ec5\u57fa\u4e8e\u6743\u91cd\u3002\u5305\u542b\u6b63\u5219\u5316\u60e9\u7f5a\u540e\uff0c\u5c31\u80fd\u591f\u7ed9\u51fa\u5b8c\u6574\u7684\u591a\u7c7b SVM \u635f\u5931\u51fd\u6570\u4e86\uff0c\u5b83\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\u6570\u636e\u635f\u5931\uff08data loss\uff09\uff0c\u5373\u6240\u6709\u6837\u4f8b\u7684\u7684\u5e73\u5747\u635f\u5931\\(L_i\\)\uff0c\u4ee5\u53ca \u6b63\u5219\u5316\u635f\u5931\uff08regularization loss\uff09\u3002\u5b8c\u6574\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> \\[ L = \\underbrace{ \\frac{1}{N}\\sum_i L_i}_{data   loss}+\\underbrace{\\lambda R(W)}_{regularization  loss} \\] <p>\u5c06\u5176\u5c55\u5f00\u5b8c\u6574\u516c\u5f0f\u662f\uff1a</p> \\[ L = \\frac{1}{N}\\sum_i\\sum_{j\\not = y_i} \\left [ \\max(0, f(x_i; W)_j-f(x_i; W)_{y_i}+\\Delta )\\right] + \\lambda\\sum_k\\sum_l W_{k, l}^2 \\] <p>\u5176\u4e2d\uff0c\\(N\\)\u662f\u8bad\u7ec3\u96c6\u7684\u6570\u636e\u91cf\u3002\u73b0\u5728\u6b63\u5219\u5316\u60e9\u7f5a\u6dfb\u52a0\u5230\u4e86\u635f\u5931\u51fd\u6570\u91cc\u9762\uff0c\u5e76\u7528\u8d85\u53c2\u6570\\(\\lambda\\)\u6765\u8ba1\u7b97\u5176\u6743\u91cd\u3002\u8be5\u8d85\u53c2\u6570\u65e0\u6cd5\u7b80\u5355\u786e\u5b9a\uff0c\u9700\u8981\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u83b7\u53d6\u3002</p> <p>\u6b63\u5219\u5316\u6709\u8bb8\u591a\u91cd\u8981\u4f5c\u7528\uff1a</p> <ul> <li>\u63a7\u5236\u6a21\u578b\u590d\u6742\u5ea6\uff1a\u901a\u8fc7\u60e9\u7f5a\u5927\u6743\u91cd\uff0cL2 \u6b63\u5219\u5316\u6291\u5236\u6a21\u578b\u7684\u590d\u6742\u6027(prefe simple models)\uff0c\u9f13\u52b1\u6743\u91cd\u503c\u66f4\u5c0f\u4e14\u66f4\u5747\u5300\u5730\u5206\u5e03\u5728\u5404\u4e2a\u7ef4\u5ea6\u4e0a\u3002</li> </ul> <p></p> <ul> <li> <p>\u63d0\u5347\u6cdb\u5316\u80fd\u529b\uff1a\u907f\u514d\u6a21\u578b\u4f9d\u8d56\u4e8e\u5c11\u6570\u51e0\u4e2a\u7279\u5f81\uff0c\u4ece\u800c\u51cf\u5c11\u8fc7\u62df\u5408\u73b0\u8c61\u3002</p> </li> <li> <p>\u6700\u5927\u8fb9\u754c\u6027\u8d28\uff1a\u5728 SVM \u4e2d\uff0c\u6b63\u5219\u5316\u4fc3\u4f7f\u6a21\u578b\u5bfb\u627e\u6700\u5927\u5316\u5206\u7c7b\u8fb9\u754c\u7684\u89e3\uff0c\u8fd9\u589e\u5f3a\u4e86\u6a21\u578b\u7684\u7a33\u5b9a\u6027\u548c\u9c81\u68d2\u6027\u3002</p> </li> </ul> <p>\u5176\u4e2d\u6700\u597d\u7684\u6027\u8d28\u5c31\u662f\u5bf9\u5927\u6570\u503c\u6743\u91cd\u8fdb\u884c\u60e9\u7f5a\uff0c\u53ef\u4ee5\u63d0\u5347\u5176\u6cdb\u5316\u80fd\u529b\uff0c\u56e0\u4e3a\u8fd9\u5c31\u610f\u5473\u7740\u6ca1\u6709\u54ea\u4e2a\u7ef4\u5ea6\u80fd\u591f\u72ec\u81ea\u5bf9\u4e8e\u6574\u4f53\u5206\u503c\u6709\u8fc7\u5927\u7684\u5f71\u54cd\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u8f93\u5165\u5411\u91cf\\(x = [1,1,1,1]\\)\uff0c\u4e24\u4e2a\u6743\u91cd\u5411\u91cf\\(w_1=[1,0,0,0]\\)\uff0c\\(w_2=[0.25,0.25,0.25,0.25]\\)\u3002\u90a3\u4e48\\(w^T_1x=w^T_2x=1\\)\uff0c\u4e24\u4e2a\u6743\u91cd\u5411\u91cf\u90fd\u5f97\u5230\u540c\u6837\u7684\u5185\u79ef\uff0c\u4f46\u662f\\(w_1\\)\u7684 L2 \u60e9\u7f5a\u662f 1.0\uff0c\u800c\\(w_2\\)\u7684 L2 \u60e9\u7f5a\u662f 0.25\u3002\u56e0\u6b64\uff0c\u6839\u636e L2 \u60e9\u7f5a\u6765\u770b\uff0c\\(w_2\\)\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u7684\u6b63\u5219\u5316\u635f\u5931\u66f4\u5c0f\u3002</p> <p>\u4ece\u76f4\u89c2\u4e0a\u6765\u770b\uff0c\u8fd9\u662f\u56e0\u4e3a\\(w_2\\)\u7684\u6743\u91cd\u503c\u66f4\u5c0f\u4e14\u66f4\u5206\u6563\u3002\u65e2\u7136 L2 \u60e9\u7f5a\u503e\u5411\u4e8e\u66f4\u5c0f\u66f4\u5206\u6563\u7684\u6743\u91cd\u5411\u91cf\uff0c\u8fd9\u5c31\u4f1a\u9f13\u52b1\u5206\u7c7b\u5668\u6700\u7ec8\u5c06\u6240\u6709\u7ef4\u5ea6\u4e0a\u7684\u7279\u5f81\u90fd\u7528\u8d77\u6765\uff0c\u800c\u4e0d\u662f\u5f3a\u70c8\u4f9d\u8d56\u5176\u4e2d\u5c11\u6570\u51e0\u4e2a\u7ef4\u5ea6\u3002\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e00\u6548\u679c\u5c06\u4f1a\u63d0\u5347\u5206\u7c7b\u5668\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u5e76\u907f\u514d <code>\u8fc7\u62df\u5408</code>\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u548c\u6743\u91cd\u4e0d\u540c\uff0c\u504f\u5dee\u6ca1\u6709\u8fd9\u6837\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e76\u4e0d\u63a7\u5236\u8f93\u5165\u7ef4\u5ea6\u4e0a\u7684\u5f71\u54cd\u5f3a\u5ea6\u3002\u56e0\u6b64\u901a\u5e38\u53ea\u5bf9\u6743\u91cd\\(W\\)\u6b63\u5219\u5316\uff0c\u800c\u4e0d\u6b63\u5219\u5316\u504f\u5dee\\(b\\)\u3002\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u53ef\u53d1\u73b0\u8fd9\u4e00\u64cd\u4f5c\u7684\u5f71\u54cd\u53ef\u5ffd\u7565\u4e0d\u8ba1\u3002\u6700\u540e\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u60e9\u7f5a\u7684\u5b58\u5728\uff0c\u4e0d\u53ef\u80fd\u5728\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\u5f97\u5230 0 \u7684\u635f\u5931\u503c\uff0c\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53\\(W=0\\)\u7684\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u5f97\u5230\u635f\u5931\u503c\u4e3a 0\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u975e\u5411\u91cf\u5316","title":"\u975e\u5411\u91cf\u5316","text":"<p>\u4ee3\u7801\u7247\u6bb5\u5c55\u793a\u4e86\u8ba1\u7b97\u591a\u7c7b SVM \u635f\u5931\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a\u975e\u5411\u91cf\u5316\uff08<code>L_i</code>\uff09\u3001\u90e8\u5206\u5411\u91cf\u5316\uff08<code>L_i_vectorized</code>\uff09\u548c\u5b8c\u5168\u5411\u91cf\u5316\uff08<code>L</code>\uff09\u3002\u6bcf\u4e2a\u5b9e\u73b0\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u6837\u672c\u96c6\u4e0a\u7684\u591a\u7c7b SVM \u635f\u5931\u3002</p> <pre><code>def L_i(x, y, W):\n    delta = 1.0\n    scores = W.dot(x)  # \u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u5f97\u5206\n    correct_class_score = scores[y]  # \u83b7\u53d6\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\n    D = W.shape[0]  # \u7c7b\u522b\u6570\u91cf\uff0c\u4f8b\u5982\u5728 CIFAR-10 \u4e2d\u4e3a 10\n    loss_i = 0.0\n    for j in xrange(D):  # \u904d\u5386\u6240\u6709\u7c7b\u522b\n        if j == y:\n            continue  # \u8df3\u8fc7\u6b63\u786e\u7c7b\u522b\n        # \u8ba1\u7b97\u6bcf\u4e2a\u9519\u8bef\u7c7b\u522b\u7684\u635f\u5931\uff0c\u5e76\u7d2f\u52a0\n        loss_i += max(0, scores[j] - correct_class_score + delta)\n    return loss_i\n</code></pre> <ul> <li> <p><code>W.dot(x)</code>\uff1a\u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u5f97\u5206\uff0c\u8fd9\u91cc <code>W</code> \u662f\u6743\u91cd\u77e9\u9635\uff0c<code>x</code> \u662f\u6837\u672c\u5411\u91cf\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>[D, 1]</code> \u7684\u5411\u91cf\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a\u7c7b\u522b\u7684\u5f97\u5206\u3002</p> </li> <li> <p><code>correct_class_score</code>\uff1a\u63d0\u53d6\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\u3002</p> </li> <li> <p><code>for j in xrange(D)</code>\uff1a\u904d\u5386\u6240\u6709\u7c7b\u522b\uff0c\u8ba1\u7b97\u9519\u8bef\u7c7b\u522b\u7684\u635f\u5931\uff0c\u5ffd\u7565\u6b63\u786e\u7c7b\u522b\u7684\u635f\u5931\u3002</p> </li> <li> <p><code>loss_i += max(0, scores[j] - correct_class_score + delta)</code>\uff1a\u4f7f\u7528\u6298\u53f6\u635f\u5931\uff08hinge loss\uff09\uff0c\u5982\u679c\u9519\u8bef\u7c7b\u522b\u7684\u5f97\u5206\u9ad8\u4e8e\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\u52a0\u4e0a\u4e00\u4e2a <code>delta</code>\uff08\u8fb9\u754c\u503c\uff09\uff0c\u5219\u4ea7\u751f\u635f\u5931\u3002</p> </li> </ul> <p>\u53cc\u91cd\u5faa\u73af\uff1a\u5916\u5c42\u5faa\u73af\u904d\u5386\u6240\u6709\u6837\u672c\uff0c\u5185\u5c42\u5faa\u73af\u904d\u5386\u6240\u6709\u7c7b\u522b\u3002</p> <p>\u4f4e\u6548\uff1a\u5f53\u6837\u672c\u91cf\u548c\u7c7b\u522b\u6570\u91cf\u8f83\u5927\u65f6\uff0c\u8ba1\u7b97\u901f\u5ea6\u6162\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u90e8\u5206\u5411\u91cf\u5316","title":"\u90e8\u5206\u5411\u91cf\u5316","text":"<pre><code>def L_i_vectorized(x, y, W):\n    delta = 1.0\n    scores = W.dot(x)  # \u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u5f97\u5206\n    margins = np.maximum(0, scores - scores[y] + delta)  # \u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u8fb9\u8ddd\n    margins[y] = 0  # \u6b63\u786e\u7c7b\u522b\u7684\u8fb9\u8ddd\u8bbe\u4e3a 0\uff0c\u4e0d\u8ba1\u5165\u635f\u5931\n    loss_i = np.sum(margins)  # \u8ba1\u7b97\u603b\u635f\u5931\n    return loss_i\n</code></pre> <ul> <li><code>margins = np.maximum(0, scores - scores[y] + delta)</code>\uff1a\u4e00\u6b21\u6027\u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u8fb9\u8ddd\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u7c7b\u522b\u5e94\u7528\u6298\u53f6\u635f\u5931\u3002</li> <li><code>margins[y] = 0</code>\uff1a\u5c06\u6b63\u786e\u7c7b\u522b\u7684\u8fb9\u8ddd\u8bbe\u7f6e\u4e3a 0\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5e94\u8be5\u4ea7\u751f\u635f\u5931\u3002</li> <li><code>loss_i = np.sum(margins)</code>\uff1a\u5c06\u6240\u6709\u9519\u8bef\u7c7b\u522b\u7684\u635f\u5931\u52a0\u603b\u3002</li> </ul> <ul> <li> <p>\u6548\u7387\u63d0\u9ad8\uff1a\u5229\u7528 NumPy \u7684\u77e2\u91cf\u5316\u64cd\u4f5c\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u7684\u5185\u90e8\u5faa\u73af\u3002</p> </li> <li> <p>\u6bd4\u975e\u5411\u91cf\u5316\u9ad8\u6548\uff1a\u51cf\u5c11\u4e86\u5185\u90e8\u5faa\u73af\u3002</p> </li> </ul>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u5b8c\u5168\u5411\u91cf\u5316","title":"\u5b8c\u5168\u5411\u91cf\u5316","text":"<pre><code>def L(X, y, W):\n    \"\"\"\n    \u5168\u5411\u91cf\u5316\u5b9e\u73b0\u7684\u591a\u7c7b SVM \u635f\u5931\u51fd\u6570\u3002\n    - X \u4fdd\u5b58\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u5217\u5411\u91cf\uff08\u4f8b\u5982\uff0c\u5728 CIFAR-10 \u6570\u636e\u96c6\u4e2d\uff0cX \u7684\u5f62\u72b6\u4e3a 3073 x 50,000\uff09\n    - y \u662f\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u6307\u5b9a\u6b63\u786e\u7c7b\u522b\u7684\u7d22\u5f15\uff08\u4f8b\u5982\uff0c\u957f\u5ea6\u4e3a 50,000 \u7684\u6570\u7ec4\uff09\n    - W \u662f\u6743\u91cd\u77e9\u9635\uff08\u4f8b\u5982\uff0c\u5728 CIFAR-10 \u6570\u636e\u96c6\u4e2d\uff0cW \u7684\u5f62\u72b6\u4e3a 10 x 3073\uff09\n    \"\"\"\n\n    delta = 1.0  # \u8fb9\u754c\u8d85\u53c2\u6570\n    num_train = X.shape[1]  # \u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\n\n    # \u7b2c\u4e00\u6b65\uff1a\u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u5f97\u5206\n    scores = W.dot(X)  # \u8ba1\u7b97\u5f97\u5206\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a [\u7c7b\u522b\u6570\u91cf, \u8bad\u7ec3\u6837\u672c\u6570\u91cf]\n\n    # \u7b2c\u4e8c\u6b65\uff1a\u4ece\u5f97\u5206\u77e9\u9635\u4e2d\u63d0\u53d6\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\n    correct_class_scores = scores[y, np.arange(num_train)]  # \u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\uff0c\u5f62\u72b6\u4e3a [1, \u8bad\u7ec3\u6837\u672c\u6570\u91cf]\n\n    # \u7b2c\u4e09\u6b65\uff1a\u8ba1\u7b97\u6240\u6709\u7c7b\u522b\u7684\u8fb9\u8ddd\n    margins = np.maximum(0, scores - correct_class_scores + delta)  # \u8ba1\u7b97\u8fb9\u8ddd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a [\u7c7b\u522b\u6570\u91cf, \u8bad\u7ec3\u6837\u672c\u6570\u91cf]\n\n    # \u7b2c\u56db\u6b65\uff1a\u4e0d\u8003\u8651\u6b63\u786e\u7c7b\u522b\u7684\u635f\u5931\uff08\u5c06\u5176\u8fb9\u8ddd\u8bbe\u4e3a 0\uff09\n    margins[y, np.arange(num_train)] = 0  # \u5bf9\u6b63\u786e\u7c7b\u522b\u7684\u8fb9\u8ddd\u8bbe\u4e3a 0\n\n    # \u7b2c\u4e94\u6b65\uff1a\u8ba1\u7b97\u6240\u6709\u6837\u672c\u7684\u5e73\u5747\u603b\u635f\u5931\n    loss = np.sum(margins) / num_train  # \u8ba1\u7b97\u603b\u635f\u5931\n\n    # \u7b2c\u516d\u6b65\uff1a\u5c06\u6b63\u5219\u5316\u9879\u6dfb\u52a0\u5230\u635f\u5931\u4e2d\n    regularization_strength = 0.5  # \u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u8d85\u53c2\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\n    loss += regularization_strength * np.sum(W * W)  # \u6dfb\u52a0\u6b63\u5219\u5316\u635f\u5931\n\n    return loss  # \u8fd4\u56de\u6700\u7ec8\u7684\u635f\u5931\u503c\n</code></pre> <ul> <li> <p><code>scores</code> \u77e9\u9635\u7684\u5f62\u72b6\u4e3a <code>[num_classes, num_train]</code>\uff0c\u5373\u6bcf\u4e00\u5217\u5bf9\u5e94\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u7c7b\u522b\u7684\u5f97\u5206\u3002</p> </li> <li> <p><code>correct_class_scores</code> \u63d0\u53d6\u51fa\u6bcf\u4e2a\u6837\u672c\u7684\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\uff0c\u5f62\u72b6\u4e3a <code>[1, num_train]</code>\u3002</p> </li> </ul> <p><code>y</code> \u662f\u6b63\u786e\u7c7b\u522b\u7684\u7d22\u5f15\u6570\u7ec4\uff0c\u901a\u8fc7 <code>scores[y, np.arange(num_train)]</code> \u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u51fa\u5bf9\u5e94\u5217\u4e2d\u7684\u6b63\u786e\u7c7b\u522b\u5f97\u5206\u3002</p> <ul> <li><code>margins</code> \u77e9\u9635\u7684\u5f62\u72b6\u4e0e <code>scores</code> \u76f8\u540c\uff0c\u4e3a <code>[num_classes, num_train]</code>\u3002</li> </ul> <p>\u5bf9\u6bcf\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u5b83\u7684\u6240\u6709\u7c7b\u522b\u7684\u8fb9\u8ddd\u503c\uff0c\u5e76\u901a\u8fc7 <code>np.maximum</code> \u5c06\u8d1f\u7684\u8fb9\u8ddd\u503c\u8bbe\u4e3a 0\u3002</p> <ul> <li> <p>\u5c06 <code>margins</code> \u4e2d\u6b63\u786e\u7c7b\u522b\u7684\u8fb9\u8ddd\u503c\u8bbe\u4e3a 0\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u5b83\u4eec\u7684\u635f\u5931\u3002</p> </li> <li> <p>\u5bf9\u6240\u6709\u6837\u672c\u548c\u7c7b\u522b\u7684\u8fb9\u8ddd\u503c\u6c42\u548c\uff0c\u7136\u540e\u9664\u4ee5\u6837\u672c\u603b\u6570\uff0c\u5f97\u5230\u5e73\u5747\u635f\u5931\u3002</p> </li> <li> <p>\u5c06\u6b63\u5219\u5316\u635f\u5931\u52a0\u5230\u603b\u635f\u5931\u4e2d\u3002\u6b63\u5219\u5316\u9879\u662f\u6743\u91cd\u77e9\u9635\u7684 L2 \u8303\u6570\u7684\u5e73\u65b9\u3002</p> </li> </ul> <p>\u5b8c\u5168\u5411\u91cf\u5316\u5b9e\u73b0 (<code>L</code>)\uff1a\u5bf9\u6240\u6709\u6837\u672c\u548c\u7c7b\u522b\u4e00\u6b21\u6027\u5b8c\u6210\u8ba1\u7b97\uff0c\u6548\u7387\u6700\u9ad8\uff0c\u9002\u5408\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002</p> <p>\u6700\u9ad8\u6548\uff1a\u4f7f\u7528 NumPy \u7684\u5e7f\u64ad\u673a\u5236\u548c\u77e2\u91cf\u5316\u64cd\u4f5c\uff0c\u5b8c\u5168\u6d88\u9664\u4e86\u663e\u5f0f\u7684\u5faa\u73af\u3002</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#\u5b9e\u9645\u8003\u8651","title":"\u5b9e\u9645\u8003\u8651","text":"<p>\u8bbe\u7f6e Delta\uff1a\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e0a\u9762\u7684\u5185\u5bb9\u5bf9\u8d85\u53c2\u6570\\(Delta\\)\u53ca\u5176\u8bbe\u7f6e\u662f\u4e00\u7b14\u5e26\u8fc7\uff0c\u90a3\u4e48\u5b83\u5e94\u8be5\u88ab\u8bbe\u7f6e\u6210\u4ec0\u4e48\u503c\uff1f\u9700\u8981\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6c42\u5f97\u5417\uff1f\u73b0\u5728\u770b\u6765\uff0c\u8be5\u8d85\u53c2\u6570\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8bbe\u4e3a\\(Delta=1.0\\)\u90fd\u662f\u5b89\u5168\u7684\u3002\u8d85\u53c2\u6570\\(\\Delta\\)\u548c\\(\\lambda\\)\u770b\u8d77\u6765\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u8d85\u53c2\u6570\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u4eec\u4e00\u8d77\u63a7\u5236\u540c\u4e00\u4e2a\u6743\u8861\uff1a\u5373\u635f\u5931\u51fd\u6570\u4e2d\u7684\u6570\u636e\u635f\u5931\u548c\u6b63\u5219\u5316\u635f\u5931\u4e4b\u95f4\u7684\u6743\u8861\u3002 \u7406\u89e3\u8fd9\u4e00\u70b9\u7684\u5173\u952e\u662f\u8981\u77e5\u9053\uff0c<code>\u6743\u91cd$W$\u7684\u5927\u5c0f\u5bf9\u4e8e\u5206\u7c7b\u5206\u503c\u6709\u76f4\u63a5\u5f71\u54cd</code>\uff08\u5f53\u7136\u5bf9\u4ed6\u4eec\u7684\u5dee\u5f02\u4e5f\u6709\u76f4\u63a5\u5f71\u54cd\uff09\uff1a\u5f53\u6211\u4eec\u5c06\\(W\\)\u4e2d\u503c\u7f29\u5c0f\uff0c\u5206\u7c7b\u5206\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u4e5f\u53d8\u5c0f\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002<code>\u56e0\u6b64\uff0c\u4e0d\u540c\u5206\u7c7b\u5206\u503c\u4e4b\u95f4\u7684\u8fb9\u754c\u7684\u5177\u4f53\u503c</code>\uff08\u6bd4\u5982\\(\\Delta=1\\)\u6216\\(\\Delta=100\\)\uff09<code>\u4ece\u67d0\u4e9b\u89d2\u5ea6\u6765\u770b\u662f\u6ca1\u610f\u4e49\u7684</code>\uff0c\u56e0\u4e3a\u6743\u91cd\u81ea\u5df1\u5c31\u53ef\u4ee5\u63a7\u5236\u5dee\u5f02\u53d8\u5927\u548c\u7f29\u5c0f\u3002\u4e5f\u5c31\u662f\u8bf4 \uff0c<code>\u771f\u6b63\u7684\u6743\u8861\u662f\u6211\u4eec\u5141\u8bb8\u6743\u91cd\u80fd\u591f\u53d8\u5927\u5230\u4f55\u79cd\u7a0b\u5ea6\uff08\u901a\u8fc7\u6b63\u5219\u5316\u5f3a\u5ea6$\\lambda$\u6765\u63a7\u5236\uff09\u3002</code></p> <p>\u4e0e\u4e8c\u5143\u652f\u6301\u5411\u91cf\u673a\uff08 Binary Support Vector Machine \uff09\u7684\u5173\u7cfb\uff1a\u5728\u5b66\u4e60\u672c\u8bfe\u7a0b\u524d\uff0c\u4f60\u53ef\u80fd\u5bf9\u4e8e\u4e8c\u5143\u652f\u6301\u5411\u91cf\u673a\u6709\u4e9b\u7ecf\u9a8c\uff0c\u5b83\u5bf9\u4e8e\u7b2c i \u4e2a\u6570\u636e\u7684\u635f\u5931\u8ba1\u7b97\u516c\u5f0f\u662f\uff1a</p> \\[L_i=C\\max(0,1-y_iw^Tx_i)+R(W)\\] <p>\u5176\u4e2d\uff0c\\(C\\)\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u5e76\u4e14\\(y_i\\in{\\left\\{-1,1\\right\\}}\\)\u3002\u53ef\u4ee5\u8ba4\u4e3a\u672c\u7ae0\u8282\u4ecb\u7ecd\u7684 SVM \u516c\u5f0f\u5305\u542b\u4e86\u4e0a\u8ff0\u516c\u5f0f\uff0c\u4e0a\u8ff0\u516c\u5f0f\u662f\u591a\u7c7b\u652f\u6301\u5411\u91cf\u673a\u516c\u5f0f\u53ea\u6709\u4e24\u4e2a\u5206\u7c7b\u7c7b\u522b\u7684\u7279\u4f8b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u8981\u5206\u7c7b\u7684\u7c7b\u522b\u53ea\u6709\u4e24\u4e2a\uff0c\u90a3\u4e48\u516c\u5f0f\u5c31\u5316\u4e3a\u4e8c\u5143 SVM \u516c\u5f0f\u3002\u8fd9\u4e2a\u516c\u5f0f\u4e2d\u7684\\(C\\)\u548c\u591a\u7c7b SVM \u516c\u5f0f\u4e2d\u7684\\(\\lambda\\)\u90fd\u63a7\u5236\u7740\u540c\u6837\u7684\u6743\u8861\uff0c\u800c\u4e14\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\\(C\\propto\\frac{1}{\\lambda}\\)</p>"},{"location":"CV/Lecture3_Linear_Classifiers/#softmax-\u5206\u7c7b\u5668","title":"Softmax \u5206\u7c7b\u5668","text":"<p>SVM \u662f\u6700\u5e38\u7528\u7684\u4e24\u4e2a\u5206\u7c7b\u5668\u4e4b\u4e00\uff0c\u800c\u53e6\u4e00\u4e2a\u5c31\u662f Softmax \u5206\u7c7b\u5668\uff0c \u5b83\u7684\u635f\u5931\u51fd\u6570\u4e0e SVM \u7684\u635f\u5931\u51fd\u6570\u4e0d\u540c\u3002\u5bf9\u4e8e\u5b66\u4e60\u8fc7\u4e8c\u5143\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u7684\u8bfb\u8005\u6765\u8bf4\uff0c<code>Softmax \u5206\u7c7b\u5668\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u9762\u5bf9\u591a\u4e2a\u5206\u7c7b\u7684\u4e00\u822c\u5316\u5f52\u7eb3</code>\u3002SVM \u5c06\u8f93\u51fa\\(f(x_i, W)\\)\u4f5c\u4e3a\u6bcf\u4e2a\u5206\u7c7b\u7684\u8bc4\u5206\uff08\u56e0\u4e3a\u65e0\u5b9a\u6807\uff0c\u6240\u4ee5\u96be\u4ee5\u76f4\u63a5\u89e3\u91ca\uff09\u3002</p> <p></p> <p>\u5728 Softmax \u5206\u7c7b\u5668\u4e2d\uff0c\u51fd\u6570\u6620\u5c04\\(f(x_i; W)= Wx_i\\)\u4fdd\u6301\u4e0d\u53d8\uff0c\u5176\u8f93\u51fa\u662f\u7ebf\u6027\u5206\u7c7b\u5668\u9884\u6d4b\u7684\u539f\u59cb\u5206\u6570\uff0c\u4f46\u5c06\u8fd9\u4e9b\u8bc4\u5206\u503c\u89c6\u4e3a\u6bcf\u4e2a\u5206\u7c7b\u7684\u672a\u5f52\u4e00\u5316\u7684\u5bf9\u6570\u6982\u7387\uff08\u6216\u8005\u53eb\u505a\u975e\u6807\u51c6\u5316\u7684\u5bf9\u6570\u6982\u7387\uff09\uff0c\u8fdb\u884c\u6307\u6570\u8ba1\u7b97\u4e4b\u540e\uff0c\u6240\u6709\u7684\u5206\u6570\u8f6c\u5316\u4e3a\u6b63\u6570\uff0c\u5e76\u4e14\u5c06\u6298\u53f6\u635f\u5931\uff08hinge loss\uff09\u66ff\u6362\u4e3a \u4ea4\u53c9\u71b5\u635f\u5931\uff08cross-entropy loss\uff09\u3002</p> \\[ entropy = -\\sum_{i = 0}^i p_ilogp_i \\\\ l(f, y) = -\\sum_i^n \\sum_j^m y_{ij}logf(x_{ij}) \\] <p>Softmax \u5206\u7c7b\u5668\u4f7f\u7528 \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 \u6765\u8861\u91cf\u6a21\u578b\u8f93\u51fa\u7684\u6982\u7387\u5206\u5e03\u4e0e\u5b9e\u9645\u6807\u7b7e\u7684\u5dee\u8ddd\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165\u6837\u672c xix_ixi \u53ca\u5176\u5bf9\u5e94\u7684\u771f\u5b9e\u6807\u7b7e yiy_iyi\uff0c\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u5199\u4f5c\uff1a</p> <p>\\(Li=\u2212log\u2061P(y_i\u2223x_i)\\)\u5176\u4e2d\\(P(y_i\u2223x_i)\\)\u662f\u6a21\u578b\u5bf9\u6837\u672c\\(x_i\\)\u7684\u6b63\u786e\u7c7b\u522b\\(y_i\\)\u9884\u6d4b\u7684\u6982\u7387\u3002</p> <p>\u516c\u5f0f\u5982\u4e0b\uff1a\\(Li =-log(\\dfrac{e^{f_{y_i}}}{\\sum_je^{f_j}})\\)\u6216\u7b49\u4ef7\u7684\\(L_i =-f_{y_i}+log(\\sum_je^{f_j})\\)</p> <p>\u5728\u4e0a\u5f0f\u4e2d\uff0c\u4f7f\u7528\\(f_j\\)\u6765\u8868\u793a\u5206\u7c7b\u8bc4\u5206\u5411\u91cf\\(f\\)\u4e2d\u7684\u7b2c\\(j\\)\u4e2a\u5143\u7d20(\\(f_j = W_j \\cdot x_i\\))\u3002\u548c\u4e4b\u524d\u4e00\u6837\uff0c\u6574\u4e2a\u6570\u636e\u96c6\u7684\u635f\u5931\u503c\u662f\u6570\u636e\u96c6\u4e2d\u6240\u6709\u6837\u672c\u6570\u636e\u7684\u635f\u5931\u503c\\(L_i\\)\u7684\u5747\u503c\u4e0e\u6b63\u5219\u5316\u635f\u5931\\(R(W)\\)\u4e4b\u548c\u3002\u5176\u4e2d\u51fd\u6570\\(f_j(z)= \\dfrac{e^{z_j}}{\\sum_ke^{z_k}}\\)\u88ab\u79f0\u4f5c softmax \u51fd\u6570\uff1a\u5176\u8f93\u5165\u503c\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5411\u91cf\u4e2d\u5143\u7d20\u4e3a\u4efb\u610f\u5b9e\u6570\u7684\u8bc4\u5206\u503c\\(z\\)\u4e2d\u7684\uff09\uff0c\u51fd\u6570\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\uff0c\u8f93\u51fa\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u503c\u5728 0 \u5230 1 \u4e4b\u95f4\uff0c\u4e14\u6240\u6709\u5143\u7d20\u4e4b\u548c\u4e3a 1\u3002</p> <p>\u56e0\u4e3a\u539f\u59cb\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u8f93\u51fa\u7684\u662f\u539f\u59cb\u5206\u6570\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u975e\u6807\u51c6\u5316/\u672a\u5f52\u4e00\u5316\u7684\u5bf9\u6570\u6982\u7387\uff0c\u7136\u540e\u53d6\u6307\u6570\uff0c\u5f97\u5230\u975e\u6807\u51c6\u5316/\u672a\u5f52\u4e00\u5316\u6982\u7387\uff0c\u7136\u540e\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7c7b\u7684\u79bb\u6563\u6982\u7387\u5206\u5e03</p> <p>\u4fe1\u606f\u7406\u8bba\u89c6\u89d2\uff1a\u5728 \"\u771f\u5b9e\" \u5206\u5e03\\(p\\)\u548c\u4f30\u8ba1\u5206\u5e03\\(q\\)\u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u5b9a\u4e49\u5982\u4e0b\uff1a\\(H(p, q)=-\\sum_xp(x) logq(x)\\)</p> <p>-\\(p(x)\\)\u662f\u771f\u5b9e\u5206\u5e03\uff08\u901a\u5e38\u662f\u72ec\u70ed\u7f16\u7801\uff0c\u5373\u5728\u6b63\u786e\u7c7b\u522b\u4f4d\u7f6e\u4e0a\u4e3a 1\uff0c\u5176\u4ed6\u4f4d\u7f6e\u4e3a 0\uff09\u3002</p> <p>-\\(q(x)\\)\u662f\u6a21\u578b\u7684\u9884\u6d4b\u5206\u5e03\uff08Softmax \u8f93\u51fa\u7684\u5f52\u4e00\u5316\u6982\u7387\uff09\u3002</p> <p>\u56e0\u6b64\uff0cSoftmax \u5206\u7c7b\u5668\u6240\u505a\u7684\u5c31\u662f <code>\u6700\u5c0f\u5316</code> \u5728\u4f30\u8ba1\u5206\u7c7b\u6982\u7387\uff08 \u5c31\u662f\u4e0a\u9762\u7684\\(e^{f_{y_i}}/\\sum_{j}e^{f_j}\\)\uff09\u548c \"\u771f\u5b9e\" \u5206\u5e03\u4e4b\u95f4\u7684 \u4ea4\u53c9\u71b5\uff0c\u5728\u8fd9\u4e2a\u89e3\u91ca\u4e2d\uff0c\"\u771f\u5b9e\" \u5206\u5e03\u5c31\u662f\u6240\u6709\u6982\u7387\u5bc6\u5ea6\u90fd\u5206\u5e03\u5728\u6b63\u786e\u7684\u7c7b\u522b\u4e0a\uff08\u6bd4\u5982\uff1a\\(p = [0, \\cdots,1,\\cdots,0]\\)\u4e2d\u5728\\(y_i\\)\u7684\u4f4d\u7f6e\u5c31\u6709\u4e00\u4e2a\u5355\u72ec\u7684 1\uff09\u3002\u8fd8\u6709\uff0c\u65e2\u7136\u4ea4\u53c9\u71b5\u53ef\u4ee5\u5199\u6210\u71b5\u548c\u76f8\u5bf9\u71b5\uff08Kullback-Leibler divergence\uff09\\(H(p, q)= H(p)+D_{KL}(p||q)\\)\uff0c\u5e76\u4e14 delta \u51fd\u6570\\(p\\)\u7684\u71b5\u662f 0\uff0c\u90a3\u4e48\u5c31\u80fd\u7b49\u4ef7\u7684\u770b\u505a\u662f\u5bf9\u4e24\u4e2a\u5206\u5e03\u4e4b\u95f4\u7684\u76f8\u5bf9\u71b5\u505a\u6700\u5c0f\u5316\u64cd\u4f5c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c<code>\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 \"\u60f3\u8981\" \u9884\u6d4b\u5206\u5e03\u7684\u6240\u6709_\u6982\u7387\u5bc6\u5ea6_\u90fd\u5728\u6b63\u786e\u5206\u7c7b\u4e0a\u3002</code></p> <p>\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b50\u7406\u89e3\uff0cW \u8868\u793a\u6743\u91cd\uff0cx \u8868\u793a\u8f93\u5165\uff0cz \u8868\u793a\u8f93\u51fa\uff0c\u5f53\u4e09\u8005\u90fd\u4e3a\u5411\u91cf\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b9e\u9645\u4e0a\u4f18\u5316\u9884\u6d4b\u6982\u7387\u5c31\u662f\u5728\u4f18\u5316\u5411\u91cf\u5939\u89d2</p> <p></p> <p>\u5982\u56fe\u6240\u793a\uff0c\u5982\u679c\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u7684\u5939\u89d2\u8d8a\u5927\uff0c\u5219\u8d8a\u5bb9\u6613\u8fdb\u884c\u533a\u5206\uff0c\u5982\u679c\u7c7b\u6240\u5360\u533a\u57df\u7684\u5939\u89d2\u5f88\u5c0f\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u7c7b\u5185\u66f4\u52a0\u7d27\u51d1\uff0c\u7c7b\u95f4\u66f4\u5bb9\u6613\u5206\u79bb\uff0c\u90a3\u4e48\u5206\u7c7b\u5668\u5b66\u4e60\u8d77\u6765\u66f4\u5bb9\u6613</p> <p></p> <p><code>\u7c7b\u5185\u7d27\u51d1\u6027\u4e0e\u7c7b\u95f4\u5206\u79bb:</code></p> <p>\u5f53\u7c7b\u522b\u4e4b\u95f4\u7684\u5939\u89d2\u5f88\u5c0f\u65f6\uff0c\u8bf4\u660e\u4e0d\u540c\u7c7b\u522b\u7684\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u8f83\u9ad8\uff0c\u8fd9\u4f1a\u589e\u52a0\u5206\u7c7b\u7684\u96be\u5ea6\u3002\u4f46\u5982\u679c\u7c7b\u5185\u7684\u6570\u636e\u5206\u5e03\u975e\u5e38\u7d27\u51d1\uff0c\u7c7b\u95f4\u7684\u5206\u79bb\u4ecd\u7136\u8f83\u4e3a\u660e\u663e\uff0c\u5219\u5206\u7c7b\u5668\u4e5f\u80fd\u627e\u5230\u6709\u6548\u7684\u51b3\u7b56\u8fb9\u754c\u3002</p> <ul> <li>\u7c7b\u5185\u7d27\u51d1\u6027\uff1a\u6307\u7684\u662f\u76f8\u540c\u7c7b\u522b\u7684\u6837\u672c\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u5206\u5e03\u5f97\u975e\u5e38\u96c6\u4e2d\u3002\u7c7b\u5185\u8d8a\u7d27\u51d1\uff0c\u5206\u7c7b\u5668\u8d8a\u5bb9\u6613\u6355\u6349\u5230\u7c7b\u522b\u7684\u7279\u5f81\u4e2d\u5fc3\uff0c\u63d0\u5347\u5206\u7c7b\u6027\u80fd\u3002</li> <li>\u7c7b\u95f4\u5206\u79bb\uff1a\u5982\u679c\u7c7b\u95f4\u7684\u8ddd\u79bb\u8f83\u5927\uff0c\u5373\u4f7f\u5939\u89d2\u8f83\u5c0f\uff0c\u5206\u7c7b\u5668\u4ecd\u7136\u80fd\u627e\u5230\u8f83\u597d\u7684\u8fb9\u754c\u6765\u533a\u5206\u4e0d\u540c\u7c7b\u522b\u3002</li> </ul> <p>\u6982\u7387\u8bba\u89e3\u91ca\uff1a\u5148\u770b\u4e0b\u9762\u7684\u516c\u5f0f\uff1a</p> \\[ P(y_i|x_i, W)= \\dfrac{e^{f_{y_i}}}{\\sum_je^{f_j}} \\] <p>\u53ef\u4ee5\u89e3\u91ca\u4e3a\u662f\u7ed9\u5b9a\u56fe\u50cf\u6570\u636e\\(x_i\\)\uff0c\u4ee5\\(W\\)\u4e3a\u53c2\u6570\uff0c\u5206\u914d\u7ed9\u6b63\u786e\u5206\u7c7b\u6807\u7b7e\\(y_i\\)\u7684\u5f52\u4e00\u5316\u6982\u7387\u3002\u7528\\(W \\cdot x_i\\)\u5f97\u5230\u7684\u7ed3\u679c\u505a\u6307\u6570\u51fd\u6570\u7684\u5e42\u5c31\u5f97\u5230\u4e86\u6ca1\u6709\u5f52\u4e00\u5316\u7684\u6982\u7387\uff0c\u800c\u9664\u6cd5\u64cd\u4f5c\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u5f52\u4e00\u5316\u5904\u7406\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u6982\u7387\u7684\u548c\u4e3a 1\u3002\u4ece\u6982\u7387\u8bba\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff0c\u6211\u4eec\u5c31\u662f\u5728\u6700\u5c0f\u5316\u6b63\u786e\u5206\u7c7b\u7684\u8d1f\u5bf9\u6570\u6982\u7387\uff0c\u8fd9\u53ef\u4ee5\u770b\u505a\u662f\u5728\u8fdb\u884c\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff09\u3002\u8be5\u89e3\u91ca\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u635f\u5931\u51fd\u6570\u4e2d\u7684\u6b63\u5219\u5316\u90e8\u5206\\(R(W)\\)\u53ef\u4ee5\u88ab\u770b\u505a\u662f\u6743\u91cd\u77e9\u9635\\(W\\)\u7684\u9ad8\u65af\u5148\u9a8c\uff0c\u8fd9\u91cc\u8fdb\u884c\u7684\u662f\u6700\u5927\u540e\u9a8c\u4f30\u8ba1\uff08MAP\uff09\u800c\u4e0d\u662f\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u3002</p> <p>\u5b9e\u64cd\u4e8b\u9879\uff1a\u6570\u503c\u7a33\u5b9a\u3002 \u7f16\u7a0b\u5b9e\u73b0 softmax \u51fd\u6570\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u4e2d\u95f4\u9879\\(e^{f_{y_i}}\\)\u548c\\(\\sum_j e^{f_j}\\)\u56e0\u4e3a\u5b58\u5728\u6307\u6570\u51fd\u6570\uff0c\u6240\u4ee5\u6570\u503c\u53ef\u80fd\u975e\u5e38\u5927\u3002\u9664\u4ee5\u5927\u6570\u503c\u53ef\u80fd\u5bfc\u81f4\u6570\u503c\u8ba1\u7b97\u7684\u4e0d\u7a33\u5b9a\uff0c\u6240\u4ee5\u5b66\u4f1a\u4f7f\u7528\u5f52\u4e00\u5316\u6280\u5de7\u975e\u5e38\u91cd\u8981\u3002\u5982\u679c\u5728\u5206\u5f0f\u7684\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u4e58\u4ee5\u4e00\u4e2a\u5e38\u6570\\(C\\)\uff0c\u5e76\u628a\u5b83\u53d8\u6362\u5230\u6c42\u548c\u4e4b\u4e2d\uff0c\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u4ece\u6570\u5b66\u4e0a\u7b49\u4ef7\u7684\u516c\u5f0f\uff1a</p> \\[ \\dfrac{e^{f_{y_i}}}{\\sum_je^{f_j}}= \\dfrac{Ce^{f_{y_i}}}{C\\sum_je^{f_j}}=\\dfrac{e^{f_{y_i}+logC}}{\\sum_je^{f_j+logC}} \\] <p>\\(C\\)\u7684\u503c\u53ef\u81ea\u7531\u9009\u62e9\uff0c\u4e0d\u4f1a\u5f71\u54cd\u8ba1\u7b97\u7ed3\u679c\uff0c\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u63d0\u9ad8\u8ba1\u7b97\u4e2d\u7684\u6570\u503c\u7a33\u5b9a\u6027\u3002\u901a\u5e38\u5c06\\(C\\)\u8bbe\u4e3a\\(logC =-maxf_j\\)\u3002\u8be5\u6280\u5de7\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u5e94\u8be5\u5c06\u5411\u91cf\\(f\\)\u4e2d\u7684\u6570\u503c\u8fdb\u884c\u5e73\u79fb\uff0c\u4f7f\u5f97\u6700\u5927\u503c\u4e3a 0\u3002\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>    f = np.array([123, 456, 789]) # \u4f8b\u5b50\u4e2d\u67093\u4e2a\u5206\u7c7b\uff0c\u6bcf\u4e2a\u8bc4\u5206\u7684\u6570\u503c\u90fd\u5f88\u5927\n    p = np.exp(f) / np.sum(np.exp(f)) # \u4e0d\u5999\uff1a\u6570\u503c\u95ee\u9898\uff0c\u53ef\u80fd\u5bfc\u81f4\u6570\u503c\u7206\u70b8\n\n    # \u90a3\u4e48\u5c06f\u4e2d\u7684\u503c\u5e73\u79fb\u5230\u6700\u5927\u503c\u4e3a0\uff1a\n    f -= np.max(f) # f becomes [-666, -333, 0]\n    p = np.exp(f) / np.sum(np.exp(f)) # \u73b0\u5728OK\u4e86\uff0c\u5c06\u7ed9\u51fa\u6b63\u786e\u7ed3\u679c\n</code></pre>"},{"location":"CV/Lecture3_Linear_Classifiers/#1-svm\u652f\u6301\u5411\u91cf\u673a","title":"1. SVM\uff08\u652f\u6301\u5411\u91cf\u673a\uff09","text":"<ul> <li>\u635f\u5931\u51fd\u6570: SVM \u4f7f\u7528\u7684\u662f Hinge Loss\uff08\u6298\u53f6\u635f\u5931\uff09\u3002</li> <li>\u8f93\u51fa: SVM \u7684\u8f93\u51fa\u662f\u6bcf\u4e2a\u7c7b\u522b\u7684\u539f\u59cb\u5206\u6570\uff0c\u8fd9\u4e9b\u5206\u6570\u5e76\u4e0d\u80fd\u76f4\u63a5\u89e3\u91ca\u4e3a\u6982\u7387\u3002</li> <li>\u5206\u7c7b\u51b3\u7b56: \u901a\u8fc7\u6700\u5927\u5316\u7c7b\u522b\u95f4\u7684\u8fb9\u754c\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u5373\u4f7f\u5f97\u6b63\u786e\u5206\u7c7b\u7684\u5206\u6570\u4e0e\u5176\u4ed6\u6240\u6709\u9519\u8bef\u5206\u7c7b\u7684\u5206\u6570\u4e4b\u95f4\u6709\u4e00\u4e2a\u9884\u5b9a\u7684\u95f4\u9694\uff08<code>delta</code>\uff09\u3002</li> <li>\u6b63\u5219\u5316: \u901a\u5e38\u901a\u8fc7\u5728\u635f\u5931\u51fd\u6570\u4e2d\u6dfb\u52a0 L2 \u6b63\u5219\u5316\u9879\u6765\u63a7\u5236\u6743\u91cd\u7684\u5927\u5c0f\uff0c\u9632\u6b62\u8fc7\u62df\u5408\u3002</li> </ul>"},{"location":"CV/Lecture3_Linear_Classifiers/#2-softmax-\u5206\u7c7b\u5668","title":"2. Softmax \u5206\u7c7b\u5668","text":"<ul> <li>\u635f\u5931\u51fd\u6570: Softmax \u5206\u7c7b\u5668\u4f7f\u7528\u7684\u662f Cross-Entropy Loss\uff08\u4ea4\u53c9\u71b5\u635f\u5931\uff09\uff0c\u8be5\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u662f\u9884\u6d4b\u6982\u7387\u5206\u5e03\u4e0e\u771f\u5b9e\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</li> <li>\u8f93\u51fa: Softmax \u5206\u7c7b\u5668\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u8868\u793a\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6982\u7387\u7684\u603b\u548c\u4e3a 1\u3002</li> <li>\u5206\u7c7b\u51b3\u7b56: \u901a\u8fc7\u6700\u5927\u5316\u6b63\u786e\u7c7b\u522b\u7684\u6982\u7387\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u786e\u4fdd\u6a21\u578b\u5bf9\u6bcf\u4e2a\u6837\u672c\u9884\u6d4b\u7684\u6b63\u786e\u7c7b\u522b\u6982\u7387\u5c3d\u53ef\u80fd\u9ad8\u3002</li> <li>\u6982\u7387\u89e3\u91ca: Softmax \u5206\u7c7b\u5668\u7684\u8f93\u51fa\u662f\u76f4\u89c2\u7684\u6982\u7387\u503c\uff0c\u4fbf\u4e8e\u7406\u89e3\u548c\u89e3\u91ca\u3002</li> </ul>"},{"location":"CV/Lecture3_Linear_Classifiers/#svm-\u548c-softmax-\u7684\u6bd4\u8f83","title":"SVM \u548c Softmax \u7684\u6bd4\u8f83","text":"<p>\u4e0b\u56fe\u6709\u52a9\u4e8e\u533a\u5206\u8fd9 Softmax \u548c SVM \u8fd9\u4e24\u79cd\u5206\u7c7b\u5668\uff1a</p> <p></p> <p>\u9488\u5bf9\u4e00\u4e2a\u6570\u636e\u70b9\uff0cSVM \u548c Softmax \u5206\u7c7b\u5668\u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\u7684\u4f8b\u5b50\u3002\u4e24\u4e2a\u5206\u7c7b\u5668\u90fd\u8ba1\u7b97\u4e86\u540c\u6837\u7684\u5206\u503c\u5411\u91cf f\uff08\u672c\u8282\u4e2d\u662f\u901a\u8fc7\u77e9\u9635\u4e58\u6765\u5b9e\u73b0\uff09\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5bf9 f \u4e2d\u5206\u503c\u7684\u89e3\u91ca\uff1aSVM \u5206\u7c7b\u5668\u5c06\u5b83\u4eec\u770b\u505a\u662f\u5206\u7c7b\u8bc4\u5206\uff0c\u5b83\u7684\u635f\u5931\u51fd\u6570\u9f13\u52b1\u6b63\u786e\u7684\u5206\u7c7b\uff08\u672c\u4f8b\u4e2d\u662f\u84dd\u8272\u7684\u7c7b\u522b 2\uff09\u7684\u5206\u503c\u6bd4\u5176\u4ed6\u5206\u7c7b\u7684\u5206\u503c\u9ad8\u51fa\u81f3\u5c11\u4e00\u4e2a\u8fb9\u754c\u503c\u3002Softmax \u5206\u7c7b\u5668\u5c06\u8fd9\u4e9b\u6570\u503c\u770b\u505a\u662f\u6bcf\u4e2a\u5206\u7c7b\u6ca1\u6709\u5f52\u4e00\u5316\u7684 \u5bf9\u6570\u6982\u7387\uff0c\u9f13\u52b1\u6b63\u786e\u5206\u7c7b\u7684\u5f52\u4e00\u5316\u7684\u5bf9\u6570\u6982\u7387\u53d8\u9ad8\uff0c\u5176\u4f59\u7684\u53d8\u4f4e\u3002 SVM \u7684\u6700\u7ec8\u7684\u635f\u5931\u503c\u662f 1.58\uff0cSoftmax \u7684\u6700\u7ec8\u7684\u635f\u5931\u503c\u662f 0.452\uff0c\u4f46\u8981\u6ce8\u610f\u8fd9\u4e24\u4e2a\u6570\u503c\u6ca1\u6709\u53ef\u6bd4\u6027\u3002\u53ea\u5728\u7ed9\u5b9a\u540c\u6837\u6570\u636e\uff0c\u5728\u540c\u6837\u7684\u5206\u7c7b\u5668\u7684\u635f\u5931\u503c\u8ba1\u7b97\u4e2d\uff0c\u5b83\u4eec\u624d\u6709\u610f\u4e49\u3002</p> <p>Softmax \u5206\u7c7b\u5668\u4e3a\u6bcf\u4e2a\u5206\u7c7b\u63d0\u4f9b\u4e86 \"\u53ef\u80fd\u6027\"\uff1aSVM \u7684\u8ba1\u7b97\u662f\u65e0\u6807\u5b9a\u7684\uff0c\u800c\u4e14\u96be\u4ee5\u9488\u5bf9\u6240\u6709\u5206\u7c7b\u7684\u8bc4\u5206\u503c\u7ed9\u51fa\u76f4\u89c2\u89e3\u91ca\u3002Softmax \u5206\u7c7b\u5668\u5219\u4e0d\u540c\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u8ba1\u7b97\u51fa\u5bf9\u4e8e\u6240\u6709\u5206\u7c7b\u6807\u7b7e\u7684\u53ef\u80fd\u6027\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u9488\u5bf9\u7ed9\u51fa\u7684\u56fe\u50cf\uff0cSVM \u5206\u7c7b\u5668\u53ef\u80fd\u7ed9\u4f60\u7684\u662f\u4e00\u4e2a [12.5, 0.6, -23.0] \u5bf9\u5e94\u5206\u7c7b \"\u732b\"\uff0c\"\u72d7\"\uff0c\"\u8239\"\u3002\u800c softmax \u5206\u7c7b\u5668\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u4e09\u4e2a\u6807\u7b7e\u7684 \"\u53ef\u80fd\u6027\" \u662f [0.9, 0.09, 0.01]\uff0c\u8fd9\u5c31\u8ba9\u4f60\u80fd\u770b\u51fa\u5bf9\u4e8e\u4e0d\u540c\u5206\u7c7b\u51c6\u786e\u6027\u7684\u628a\u63e1\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u5728 \"\u53ef\u80fd\u6027\" \u4e0a\u9762\u6253\u5f15\u53f7\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u53ef\u80fd\u6027\u5206\u5e03\u7684\u96c6\u4e2d\u6216\u79bb\u6563\u7a0b\u5ea6\u662f\u7531\u6b63\u5219\u5316\u53c2\u6570 \u03bb \u76f4\u63a5\u51b3\u5b9a\u7684\uff0c\u03bb \u662f\u4f60\u80fd\u76f4\u63a5\u63a7\u5236\u7684\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe 3 \u4e2a\u5206\u7c7b\u7684\u539f\u59cb\u5206\u6570\u662f [1, -2, 0]\uff0c\u90a3\u4e48 softmax \u51fd\u6570\u5c31\u4f1a\u8ba1\u7b97\uff1a</p> \\[ [1,-2,0]\\rightarrow [e^1, e^{-2}, e^0] = [2.71,0.14,1]\\rightarrow [0.7,0.04,0.26] \\] <p>\u73b0\u5728\uff0c\u5982\u679c\u6b63\u5219\u5316\u53c2\u6570 \u03bb \u66f4\u5927\uff0c\u90a3\u4e48\u6743\u91cd W \u5c31\u4f1a\u88ab\u60e9\u7f5a\u7684\u66f4\u591a\uff0c\u7136\u540e\u4ed6\u7684\u6743\u91cd\u6570\u503c\u5c31\u4f1a\u66f4\u5c0f\u3002\u8fd9\u6837\u7b97\u51fa\u6765\u7684\u5206\u6570\u4e5f\u4f1a\u66f4\u5c0f\uff0c\u5047\u8bbe\u5c0f\u4e86\u4e00\u534a [0.5, -1, 0]\uff0c\u90a3\u4e48 softmax \u51fd\u6570\u7684\u8ba1\u7b97\u5c31\u662f\uff1a</p> \\[ [0.5,-1,0]\\rightarrow [e^{0.5}, e^{-1}, e^0] = [1.65,0.73,1]\\rightarrow [0.55,0.12,0.33] \\] <p>\u968f\u7740\u6b63\u5219\u5316\u53c2\u6570 \u03bb \u4e0d\u65ad\u589e\u5f3a\uff0c\u6743\u91cd\u6570\u503c\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6700\u540e\u8f93\u51fa\u7684\u6982\u7387\u4f1a\u63a5\u8fd1\u4e8e\u5747\u5300\u5206\u5e03\u3002</p> <p>SVM \u7684\u5c40\u90e8\u76ee\u6807\u5316\uff1a</p> <ul> <li>SVM \u5206\u7c7b\u5668\u4e3b\u8981\u5173\u6ce8\u6b63\u786e\u7c7b\u522b\u4e0e\u5176\u4ed6\u7c7b\u522b\u4e4b\u95f4\u7684 \u76f8\u5bf9\u5dee\u5f02\u3002\u53ea\u8981\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u9ad8\u4e8e\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\uff0c\u5e76\u4e14\u8d85\u8fc7\u4e00\u5b9a\u7684\u8fb9\u754c\uff08\u5373 \u0394\uff09\uff0cSVM \u5c31\u4f1a\u8ba4\u4e3a\u635f\u5931\u4e3a 0\uff0c\u4e0d\u518d\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</li> <li>\u4f8b\u5982\uff0c\u5bf9\u4e8e [10, -2, 3] \u7684\u8bc4\u5206\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5206\u7c7b\u662f\u6b63\u786e\u7684\uff0cSVM \u8ba4\u4e3a\u5206\u6570\u5df2\u7ecf\u6ee1\u8db3\u4e86\u8fb9\u754c\u6761\u4ef6\uff08\u5047\u8bbe \u0394 = 1\uff09\uff0c\u56e0\u6b64\u4e0d\u4f1a\u518d\u4f18\u5316\u8be5\u6837\u672c\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u800c\u4e14\uff0c\u65e0\u8bba\u5206\u6570\u662f [10, -100, -100] \u8fd8\u662f [10, 9, 9]\uff0c\u53ea\u8981\u6ee1\u8db3\u4e86\u8fb9\u754c\u6761\u4ef6\uff0cSVM \u7684\u635f\u5931\u503c\u90fd\u662f 0\u3002</li> </ul> <p>Softmax \u7684\u5168\u5c40\u4f18\u5316\uff1a</p> <ul> <li>Softmax \u5206\u7c7b\u5668\u5219\u4e0d\u540c\uff0c\u5b83\u5bf9\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5206\u6570\u90fd\u8fdb\u884c\u8003\u8651\uff0c\u5e76\u4e14 \u59cb\u7ec8\u8bd5\u56fe\u6700\u5927\u5316\u6b63\u786e\u7c7b\u522b\u7684\u6982\u7387\u3002Softmax \u4e0d\u4f1a\u56e0\u4e3a\u5206\u6570\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u800c\u505c\u6b62\u4f18\u5316\uff0c\u5b83\u4f1a\u4e0d\u65ad\u5c1d\u8bd5\u8ba9\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u66f4\u9ad8\u3001\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u66f4\u4f4e\u3002</li> <li>\u5728 [10, 9, 9] \u548c [10, -100, -100] \u7684\u60c5\u51b5\u4e0b\uff0cSoftmax \u4f1a\u7ed9\u51fa\u4e0d\u540c\u7684\u635f\u5931\u503c\uff1a\u524d\u8005\u635f\u5931\u503c\u8f83\u9ad8\uff0c\u56e0\u4e3a\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u8f83\u9ad8\uff1b\u800c\u540e\u8005\u635f\u5931\u503c\u8f83\u4f4e\uff0c\u56e0\u4e3a\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u5df2\u7ecf\u975e\u5e38\u4f4e\u3002</li> </ul> <p><code>SVM \u7684\u7279\u6027\u548c\u5c40\u9650</code></p> <ul> <li>\u7279\u6027\uff1aSVM \u4e13\u6ce8\u4e8e\u6b63\u786e\u7c7b\u522b\u548c\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5dee\u8ddd\u662f\u5426\u8d85\u8fc7\u4e00\u5b9a\u7684\u9608\u503c\u3002\u5f53\u8fd9\u4e2a\u9608\u503c\u88ab\u6ee1\u8db3\u65f6\uff0cSVM \u4e0d\u518d\u5173\u6ce8\u5177\u4f53\u7684\u5206\u6570\u7ec6\u8282\u3002\u56e0\u6b64\uff0c\u5b83\u5728\u9762\u5bf9\u4e0d\u9700\u8981\u8fc7\u5ea6\u533a\u5206\u7684\u7b80\u5355\u5206\u7c7b\u4efb\u52a1\u65f6\u53ef\u4ee5\u8868\u73b0\u5f97\u5f88\u597d\u3002\u4f8b\u5982\uff0c\u5728\u6c7d\u8f66\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0cSVM \u53ef\u80fd\u4f1a\u5c06\u66f4\u591a\u7684\u6ce8\u610f\u529b\u653e\u5728\u533a\u5206\u76f8\u4f3c\u7684\u6c7d\u8f66\u7c7b\u578b\u4e0a\uff0c\u800c\u4e0d\u4f1a\u5728\u660e\u663e\u4e0d\u540c\u7684\u7269\u4f53\uff08\u5982\u9752\u86d9\uff09\u4e0a\u82b1\u8d39\u592a\u591a\u7cbe\u529b\u3002</li> <li>\u5c40\u9650\uff1a\u8fd9\u79cd\u201c\u5c40\u90e8\u76ee\u6807\u5316\u201d\u7684\u65b9\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u5b83\u5ffd\u7565\u4e86\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\u673a\u4f1a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e24\u4e2a\u4e0d\u6b63\u786e\u7c7b\u522b\u7684\u5206\u6570\u63a5\u8fd1\u6b63\u786e\u7c7b\u522b\uff0cSVM \u53ef\u80fd\u4f1a\u8ba4\u4e3a\u635f\u5931\u5df2\u7ecf\u8db3\u591f\u5c0f\uff0c\u800c\u4e0d\u518d\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u5206\u7c7b\u5668\u5728\u9762\u5bf9\u590d\u6742\u4efb\u52a1\u65f6\u8868\u73b0\u4e0d\u5982 Softmax\u3002</li> </ul> <p><code>Softmax \u7684\u4f18\u70b9\u548c\u7f3a\u70b9</code></p> <ul> <li>\u4f18\u70b9\uff1aSoftmax \u5206\u7c7b\u5668\u603b\u662f\u5c1d\u8bd5\u6700\u5c0f\u5316\u5206\u7c7b\u635f\u5931\uff0c\u5373\u4f7f\u5bf9\u4e8e\u90a3\u4e9b\u5df2\u7ecf\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u7684\u6837\u672c\uff0c\u5b83\u4e5f\u4f1a\u7ee7\u7eed\u4f18\u5316\u3002\u8fd9\u4f7f\u5f97 Softmax \u80fd\u591f\u5728\u590d\u6742\u7684\u5206\u7c7b\u4efb\u52a1\u4e2d\u63d0\u4f9b\u66f4\u7cbe\u7ec6\u7684\u533a\u5206\u80fd\u529b\u3002</li> <li>\u7f3a\u70b9\uff1a\u7531\u4e8e Softmax \u5206\u7c7b\u5668\u603b\u662f\u4e0d\u65ad\u4f18\u5316\uff0c\u5b83\u53ef\u80fd\u5728\u4e00\u4e9b\u7b80\u5355\u7684\u4efb\u52a1\u4e2d\u6d6a\u8d39\u8ba1\u7b97\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0cSoftmax \u53ef\u80fd\u4f1a\u8fc7\u5ea6\u5173\u6ce8\u4e00\u4e9b\u65e0\u5173\u7d27\u8981\u7684\u7ec6\u8282\uff08\u5982\u5982\u4f55\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e00\u4e2a\u5df2\u7ecf\u5f88\u4f4e\u7684\u9519\u8bef\u5206\u7c7b\u5206\u6570\uff09\uff0c\u800c\u8fd9\u4e9b\u5e76\u4e0d\u4f1a\u663e\u8457\u63d0\u9ad8\u5206\u7c7b\u6027\u80fd\u3002</li> </ul>"},{"location":"CV/Lecture4_Optimization/","title":"Optimization","text":"<p> \u7ea6 6893 \u4e2a\u5b57  143 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 36 \u5206\u949f</p> <p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u4e24\u4e2a\u5173\u952e\u90e8\u5206\uff1a</p> <ol> <li>\u57fa\u4e8e\u53c2\u6570\u7684 \u8bc4\u5206\u51fd\u6570\u3002</li> </ol> <p>\u8bc4\u5206\u51fd\u6570\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u56fe\u50cf\u7684\u50cf\u7d20\u6620\u5c04\u5230\u5206\u7c7b\u8bc4\u5206\u503c\uff0c\u8fd9\u4e9b\u8bc4\u5206\u503c\u7528\u4e8e\u5224\u65ad\u56fe\u50cf\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002\u6700\u5e38\u89c1\u7684\u8bc4\u5206\u51fd\u6570\u662f\u7ebf\u6027\u6a21\u578b\uff0c\u5176\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <p>\\(f(x;W,b)=Wx+b\\)</p> <ul> <li>x \u662f\u8f93\u5165\u56fe\u50cf\u7684\u50cf\u7d20\u503c\u5411\u91cf\u3002</li> <li>W \u662f\u6743\u91cd\u77e9\u9635\uff0c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u7c7b\u522b\u3002</li> <li>b \u662f\u504f\u7f6e\u5411\u91cf\u3002</li> </ul> <p>\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8f93\u51fa\u6bcf\u4e2a\u7c7b\u522b\u7684\u8bc4\u5206\u503c\uff08\u5373\u5f97\u5206\uff09\u3002\u8fd9\u4e9b\u5f97\u5206\u5e76\u4e0d\u76f4\u63a5\u4ee3\u8868\u6982\u7387\uff0c\u800c\u662f\u7528\u4e8e\u51b3\u5b9a\u54ea\u4e2a\u7c7b\u522b\u7684\u5f97\u5206\u6700\u9ad8\uff0c\u56e0\u800c\u8ba4\u4e3a\u8be5\u56fe\u50cf\u5c5e\u4e8e\u8be5\u7c7b\u522b\u3002</p> <ol> <li>\u635f\u5931\u51fd\u6570\u3002\u635f\u5931\u51fd\u6570\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u7684\u9884\u6d4b\u4e0e\u5b9e\u9645\u6807\u7b7e\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5e76\u5f15\u5bfc\u6a21\u578b\u53c2\u6570\u7684\u66f4\u65b0\u3002\u635f\u5931\u51fd\u6570\u901a\u8fc7\u8861\u91cf\u5206\u7c7b\u8bc4\u5206\u548c\u5b9e\u9645\u5206\u7c7b\u7684\u4e00\u81f4\u6027\uff0c\u6765\u8bc4\u4f30\u53c2\u6570\u7684\u597d\u574f\u3002\u4e24\u79cd\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u662f SVM Loss \u548c Softmax Loss\u3002</li> </ol> <p></p> <p>SVM \u635f\u5931\u51fd\u6570\u7684\u76ee\u6807\u662f\u6700\u5927\u5316\u6b63\u786e\u5206\u7c7b\u7684\u5f97\u5206\u4e0e\u5176\u4ed6\u7c7b\u522b\u7684\u5f97\u5206\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002SVM \u635f\u5931\u51fd\u6570\u901a\u5e38\u8868\u8fbe\u4e3a\uff1a</p> \\[ L = \\dfrac{1}{N}\\sum_{i}\\sum_{j!= y_i}[max(0, f(x_i, W)_j - f(x_i, W)_{y_i} + \\Delta)] + \\alpha R(W)\\\\  L_i = \\sum_{j \\neq y_i} \\max(0, s_j - s_{y_i} + \\Delta) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(y_i\\)\u662f\u6b63\u786e\u7c7b\u522b\u7684\u7d22\u5f15\u3002</li> <li>\\(s_j\\)\u662f\u7b2c \\( j \\) \u7c7b\u7684\u5f97\u5206\u3002</li> <li>\\(\\Delta\\)\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u63a7\u5236\u5f97\u5206\u5dee\u8ddd\u7684\u5bb9\u5fcd\u5ea6\u3002</li> </ul> <p>SVM \u635f\u5931\u51fd\u6570\u5e0c\u671b\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\u6bd4\u5176\u4ed6\u7c7b\u522b\u7684\u5f97\u5206\u9ad8\u81f3\u5c11 \\(\\Delta\\)\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u635f\u5931\u3002</p> <p>Softmax \u635f\u5931\u51fd\u6570\u5c06\u5f97\u5206\u8f6c\u5316\u4e3a\u6982\u7387\u5206\u5e03\uff0c\u5e76\u4f7f\u7528\u4ea4\u53c9\u71b5\u6765\u8861\u91cf\u9884\u6d4b\u6982\u7387\u4e0e\u5b9e\u9645\u6807\u7b7e\u5206\u5e03\u7684\u5dee\u5f02\u3002\u5176\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[ L_i = -\\log \\left(\\dfrac{e^{s_{y_i}}}{\\sum_j e^{s_j}} \\right) \\] <ul> <li>\\(s_{y_i}\\)\u662f\u6b63\u786e\u7c7b\u522b\u7684\u5f97\u5206\u3002</li> <li>\\(\\sum_j e^{s_j}\\)\u662f\u6240\u6709\u7c7b\u522b\u5f97\u5206\u7684\u6307\u6570\u548c\u3002</li> </ul> <p>Softmax \u635f\u5931\u51fd\u6570\u5e0c\u671b\u6b63\u786e\u7c7b\u522b\u7684\u6982\u7387\u63a5\u8fd1 1\uff0c\u540c\u65f6\u5176\u4ed6\u7c7b\u522b\u7684\u6982\u7387\u63a5\u8fd1 0\u3002</p> <p>\u5bf9\u4e8e\u56fe\u50cf\u6570\u636e \\(x_i\\)\uff0c\u5982\u679c\u57fa\u4e8e\u53c2\u6570\u96c6 \\(W\\)\u505a\u51fa\u7684\u5206\u7c7b\u9884\u6d4b\u4e0e\u771f\u5b9e\u60c5\u51b5\u6bd4\u8f83\u4e00\u81f4\uff0c\u90a3\u4e48\u8ba1\u7b97\u51fa\u6765\u7684\u635f\u5931\u503c \\(L\\)\u5c31\u5f88\u4f4e\u3002\u73b0\u5728\u4ecb\u7ecd\u7b2c\u4e09\u4e2a\uff0c\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u5173\u952e\u90e8\u5206\uff1a<code>\u6700\u4f18\u5316Optimization\u3002\u6700\u4f18\u5316\u662f\u5bfb\u627e\u80fd\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u503c\u6700\u5c0f\u5316\u7684\u53c2\u6570$W$\u7684\u8fc7\u7a0b\u3002</code></p> <p>\u94fa\u57ab\uff1a\u4e00\u65e6\u7406\u89e3\u4e86\u8fd9\u4e09\u4e2a\u90e8\u5206\u662f\u5982\u4f55\u76f8\u4e92\u8fd0\u4f5c\u7684\uff0c\u6211\u4eec\u5c06\u4f1a\u56de\u5230\u7b2c\u4e00\u4e2a\u90e8\u5206\uff08\u57fa\u4e8e\u53c2\u6570\u7684\u51fd\u6570\u6620\u5c04\uff09\uff0c\u7136\u540e\u5c06\u5176\u62d3\u5c55\u4e3a\u4e00\u4e2a\u8fdc\u6bd4\u7ebf\u6027\u51fd\u6570\u590d\u6742\u7684\u51fd\u6570\uff1a\u9996\u5148\u662f\u795e\u7ecf\u7f51\u7edc\uff0c\u7136\u540e\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u800c\u635f\u5931\u51fd\u6570\u548c\u6700\u4f18\u5316\u8fc7\u7a0b\u8fd9\u4e24\u4e2a\u90e8\u5206\u5c06\u4f1a\u4fdd\u6301\u76f8\u5bf9\u7a33\u5b9a\u3002</p>"},{"location":"CV/Lecture4_Optimization/#41-\u635f\u5931\u51fd\u6570\u53ef\u89c6\u5316","title":"4.1 \u635f\u5931\u51fd\u6570\u53ef\u89c6\u5316","text":"<p>\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u50cf\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u635f\u5931\u51fd\u6570\u662f\u96be\u4ee5\u76f4\u63a5\u53ef\u89c6\u5316\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6d89\u53ca\u5927\u91cf\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e CIFAR-10 \u56fe\u50cf\u5206\u7c7b\u4e2d\u7684\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u5176\u6743\u91cd\u77e9\u9635\u6709 30,730 \u4e2a\u53c2\u6570\uff08\u5bf9\u4e8e\u6bcf\u4e2a\u7c7b 3,073 \u4e2a\u53c2\u6570\uff0c\u5171 10 \u4e2a\u7c7b\uff09\u3002\u7136\u800c\uff0c\u901a\u8fc7\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u5bf9\u9ad8\u7ef4\u635f\u5931\u51fd\u6570\u8fdb\u884c\u5207\u7247\uff0c\u53ef\u4ee5\u83b7\u53d6\u5176\u7ed3\u6784\u7684\u76f4\u89c2\u7406\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u80fd\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u635f\u5931\u51fd\u6570\u7684\u590d\u6742\u6027\u53ca\u5176\u5bf9\u4e0d\u540c\u53c2\u6570\u7684\u654f\u611f\u5ea6\u3002</p> <ol> <li>\u5355\u7ef4\u5ea6\u7684\u5207\u7247\u53ef\u89c6\u5316</li> </ol> <p>\u53ef\u4ee5 \u9009\u53d6\u4e00\u4e2a\u968f\u673a\u65b9\u5411 \u5e76\u6cbf\u8be5\u65b9\u5411\u8fdb\u884c\u63a2\u7d22\uff0c\u751f\u6210\u4e00\u7ef4\u56fe\u50cf\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684\u6743\u91cd\u77e9\u9635 W \u4f5c\u4e3a\u8d77\u70b9\u3002</li> <li>\u7136\u540e\uff0c\u6cbf\u67d0\u4e2a\u968f\u673a\u65b9\u5411 \\(W_1\\)\u524d\u8fdb\uff0c\u8bb0\u5f55\u635f\u5931\u503c \\(L(W + aW_1)\\)\u968f a \u53d8\u5316\u7684\u60c5\u51b5\u3002</li> </ul> <p>\u5de6\u56fe \u5c55\u793a\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff1ax \u8f74\u8868\u793a\u6b65\u957f a\uff0cy \u8f74\u8868\u793a\u5bf9\u5e94\u7684\u635f\u5931\u503c\u3002\u7531\u4e8e SVM \u635f\u5931\u51fd\u6570\u7684\u5206\u6bb5\u7ebf\u6027\u6027\u8d28\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u591a\u4e2a\u7ebf\u6027\u6bb5\u8fde\u63a5\u5f62\u6210\u7684\u56fe\u50cf\uff0c\u53cd\u6620\u4e86\u6a21\u578b\u5bf9\u4e0d\u540c\u6743\u91cd\u914d\u7f6e\u7684\u654f\u611f\u5ea6\u3002</p> <ol> <li>\u53cc\u7ef4\u5ea6\u7684\u5207\u7247\u53ef\u89c6\u5316</li> </ol> <p>\u4e3a\u4e86\u83b7\u5f97\u66f4\u4e30\u5bcc\u7684\u7ed3\u6784\u4fe1\u606f\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u5bf9\u635f\u5931\u51fd\u6570\u8fdb\u884c\u5207\u7247\uff1a</p> <ul> <li>\u751f\u6210\u4e24\u4e2a\u968f\u673a\u65b9\u5411 \\(W_1\\)\u548c \\(W_2\\)\u3002</li> <li>\u8ba1\u7b97\u4e0d\u540c \\(a, b\\)\u7ec4\u5408\u4e0b\u7684\u635f\u5931\u503c \\(L(W + aW_1 + bW_2)\\)</li> </ul> <p>\u4e2d\u56fe\u548c\u53f3\u56fe \u5c55\u793a\u4e86\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u5207\u7247\u7ed3\u679c\u3002x \u8f74\u548c y \u8f74\u5206\u522b\u4ee3\u8868 a \u548c b \u7684\u503c\uff0c\u989c\u8272\u4ee3\u8868\u635f\u5931\u503c\u7684\u5927\u5c0f\u3002\u84dd\u8272\u533a\u57df\u8868\u793a\u635f\u5931\u8f83\u4f4e\uff0c\u7ea2\u8272\u533a\u57df\u8868\u793a\u635f\u5931\u8f83\u9ad8\u3002</p> <p></p> <p>\u4e00\u4e2a\u65e0\u6b63\u5219\u5316\u7684\u591a\u7c7b SVM \u7684\u635f\u5931\u51fd\u6570\u7684\u56fe\u793a\u3002\u5de6\u8fb9\u548c\u4e2d\u95f4\u53ea\u6709\u4e00\u4e2a\u6837\u672c\u6570\u636e\uff0c\u53f3\u8fb9\u662f CIFAR-10 \u4e2d\u7684 100 \u4e2a\u6570\u636e\u3002\u5de6\uff1aa \u503c\u53d8\u5316\u5728\u67d0\u4e2a\u7ef4\u5ea6\u65b9\u5411\u4e0a\u5bf9\u5e94\u7684\u7684\u635f\u5931\u503c\u53d8\u5316\u3002\u4e2d\u548c\u53f3\uff1a\u4e24\u4e2a\u7ef4\u5ea6\u65b9\u5411\u4e0a\u7684\u635f\u5931\u503c\u5207\u7247\u56fe\uff0c\u84dd\u8272\u90e8\u5206\u662f\u4f4e\u635f\u5931\u503c\u533a\u57df\uff0c\u7ea2\u8272\u90e8\u5206\u662f\u9ad8\u635f\u5931\u503c\u533a\u57df\u3002</p> <p>\u5f53\u53ea\u4f7f\u7528\u4e00\u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff08\u5982\u5de6\u56fe\u548c\u4e2d\u56fe\uff09\uff0c\u635f\u5931\u51fd\u6570\u5177\u6709\u660e\u663e\u7684 <code>\u5206\u6bb5\u7ebf\u6027\u7279\u5f81</code>\uff0c\u53cd\u6620\u4e86 SVM \u7684\u6027\u8d28\u3002\u800c\u5f53\u4f7f\u7528 <code>\u66f4\u591a\u6837\u672c</code> \u65f6\uff08\u5982\u53f3\u56fe\uff09\uff0c\u635f\u5931\u51fd\u6570\u7684\u56fe\u50cf\u53d8\u5f97\u66f4\u52a0\u5e73\u6ed1\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6837\u672c\u7684\u5206\u6bb5\u7ebf\u6027\u7279\u5f81\u88ab\u5e73\u5747\u5316\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u201c\u7897\u72b6\u201d\u7684\u7ed3\u6784\u3002<code>\u8fd9\u79cd\u5e73\u6ed1\u7684\u201c\u7897\u201d\u7ed3\u6784\u6709\u52a9\u4e8e\u7406\u89e3\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u503c\u5904\u4e8e\u4f55\u5904\uff0c\u5373\u6a21\u578b\u627e\u5230\u4e00\u4e2a\u5bf9\u6240\u6709\u6837\u672c\u90fd\u8868\u73b0\u826f\u597d\u7684\u6743\u91cd\u914d\u7f6e</code>\u3002</p> <p>\u7ebf\u6027\u7ed3\u6784\u662f\u7531\u6bcf\u4e2a\u6837\u672c\u7684\u635f\u5931\u503c\u901a\u8fc7 <code>max(0, -)</code> \u51fd\u6570\u8ba1\u7b97\u5f97\u51fa\u7684\uff0c\u5b83\u5c06\u7ebf\u6027\u51fd\u6570\u7684\u7ed3\u679c\u4e0e 0 \u8fdb\u884c\u6bd4\u8f83\uff0c\u4ece\u800c\u4ea7\u751f\u591a\u4e2a\u5206\u6bb5\u7ebf\u6027\u90e8\u5206\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5355\u4e2a\u6570\u636e\u70b9\u7684\u635f\u5931\u51fd\u6570 \\(L_i\\)\u800c\u8a00\uff0c\u5b83\u662f\u6240\u6709\u5176\u4ed6\u7c7b\u522b\u7684\u5f97\u5206\u51cf\u53bb\u6b63\u786e\u7c7b\u522b\u5f97\u5206\u518d\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\uff08\u901a\u5e38\u4e3a 1\uff09\u7684\u6700\u5927\u503c\u7684\u548c\u3002\u56e0\u6b64\uff0c<code>\u635f\u5931\u51fd\u6570\u662f W \u7684\u7ebf\u6027\u51fd\u6570\u7684\u603b\u548c</code>\uff0c\u6bcf\u4e2a\u7ebf\u6027\u90e8\u5206\u901a\u8fc7 <code>max</code> \u64cd\u4f5c\u88ab\u622a\u65ad\u5728\u96f6\u503c\u4ee5\u4e0a\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\uff0c\u6709\u635f\u5931\u51fd\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ L_i = \\sum_{j!= y_i}[max(0, w_j^Tx_i - w_{y_i}^Tx_i + 1)] \\] <p>\u901a\u8fc7\u516c\u5f0f\u53ef\u89c1\uff0c\u6bcf\u4e2a\u6837\u672c\u7684\u6570\u636e\u635f\u5931\u503c\u662f\u4ee5 \\(W\\)\u4e3a\u53c2\u6570\u7684\u7ebf\u6027\u51fd\u6570\u7684\u603b\u548c\uff08\u96f6\u9608\u503c\u6765\u6e90\u4e8e \\(max(0,-)\\)\u51fd\u6570\uff09\u3002\\(W\\)\u7684\u6bcf\u4e00\u884c\uff08\u5373 \\(W_j\\)\uff09\uff0c\u6709\u65f6\u5019\u5b83\u524d\u9762\u662f\u4e00\u4e2a\u6b63\u53f7\uff08\u6bd4\u5982\u5f53\u5b83\u5bf9\u5e94\u9519\u8bef\u5206\u7c7b\u7684\u65f6\u5019\uff09\uff0c\u6709\u65f6\u5019\u5b83\u524d\u9762\u662f\u4e00\u4e2a\u8d1f\u53f7\uff08\u6bd4\u5982\u5f53\u5b83\u662f\u662f\u6b63\u786e\u5206\u7c7b\u7684\u65f6\u5019\uff09\u3002\u4e3a\u8fdb\u4e00\u6b65\u9610\u660e\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u6709 3 \u4e2a\u53ea\u6709 1 \u4e2a\u7ef4\u5ea6\u7684\u70b9\uff0c\u6570\u636e\u96c6\u6570\u636e\u70b9\u6709 3 \u4e2a\u7c7b\u522b\u3002\u90a3\u4e48\u5b8c\u6574\u7684\u65e0\u6b63\u5219\u5316 SVM \u7684\u635f\u5931\u503c\u8ba1\u7b97\u5982\u4e0b\uff1a</p> \\[ L_0 = max(0, w^T_1x_0-w^T_0x_0+1)+max(0, w^T_2x_0-w^T_0x_0+1)\\\\ L_1 = max(0, w^T_0x_1-w^T_1x_1+1)+max(0, w^T_2x_1-w^T_1x_1+1)\\\\ L_2 = max(0, w^T_0x_2-w^T_2x_2+1)+max(0, w^T_1x_2-w^T_2x_2+1)\\\\ L =(L_0+L_1+L_2)/3 \\] <p>\u56e0\u4e3a\u8fd9\u4e9b\u4f8b\u5b50\u90fd\u662f\u4e00\u7ef4\u7684\uff0c\u6240\u4ee5\u6570\u636e \\(x_i\\)\u548c\u6743\u91cd \\(w_j\\)\u90fd\u662f\u6570\u5b57\u3002\u89c2\u5bdf \\(w_0\\)\uff0c\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u5f0f\u5b50\u4e2d\u4e00\u4e9b\u9879\u662f \\(W_0\\)\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u4e14\u6bcf\u4e00\u9879\u90fd\u4f1a\u4e0e 0 \u6bd4\u8f83\uff0c\u53d6\u4e24\u8005\u7684\u6700\u5927\u503c\u3002\u53ef\u4f5c\u56fe\u5982\u4e0b\uff1a\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014</p> <p></p> <p>\u4ece\u4e00\u4e2a\u7ef4\u5ea6\u65b9\u5411\u4e0a\u5bf9\u6570\u636e\u635f\u5931\u503c\u7684\u5c55\u793a\u3002x \u8f74\u65b9\u5411\u5c31\u662f\u4e00\u4e2a\u6743\u91cd\uff0cy \u8f74\u5c31\u662f\u635f\u5931\u503c\u3002\u6570\u636e\u635f\u5931\u662f\u591a\u4e2a\u90e8\u5206\u7ec4\u5408\u800c\u6210\u3002\u5176\u4e2d\u6bcf\u4e2a\u90e8\u5206\u8981\u4e48\u662f\u67d0\u4e2a\u6743\u91cd\u7684\u72ec\u7acb\u90e8\u5206\uff0c\u8981\u4e48\u662f\u8be5\u6743\u91cd\u7684\u7ebf\u6027\u51fd\u6570\u4e0e 0 \u9608\u503c\u7684\u6bd4\u8f83\u3002\u5b8c\u6574\u7684 SVM \u6570\u636e\u635f\u5931\u5c31\u662f\u8fd9\u4e2a\u5f62\u72b6\u7684 30730 \u7ef4\u7248\u672c\u3002</p> <p>\u5728\u591a\u7ef4\u60c5\u51b5\u4e0b\uff0c\u7c7b\u4f3c\u7684\u5206\u6bb5\u7ebf\u6027\u7ed3\u6784\u4f1a\u51fa\u73b0\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\uff0c\u4ece\u800c\u6784\u6210\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u51f8\u5f62\u72b6\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cSVM \u635f\u5931\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u8fd9\u4f7f\u5f97\u5176\u4f18\u5316\u95ee\u9898\u5728\u6570\u5b66\u4e0a\u662f\u53ef\u89e3\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e94\u7528\u6709\u6548\u7684\u51f8\u4f18\u5316\u7b97\u6cd5\u3002\u4f46\u662f\u4e00\u65e6\u6211\u4eec\u5c06\u51fd\u6570 \\(f\\)\u6269\u5c55\u5230\u795e\u7ecf\u7f51\u7edc\uff0c\u76ee\u6807\u51fd\u6570\u5c31\u5c31\u4e0d\u518d\u662f\u51f8\u51fd\u6570\u4e86\uff0c\u56fe\u50cf\u4e5f\u4e0d\u4f1a\u50cf\u4e0a\u9762\u90a3\u6837\u662f\u4e2a\u7897\u72b6\uff0c\u800c\u662f\u51f9\u51f8\u4e0d\u5e73\u7684\u590d\u6742\u5730\u5f62\u5f62\u72b6\u3002</p>"},{"location":"CV/Lecture4_Optimization/#42-\u6700\u4f18\u5316-optimization","title":"4.2 \u6700\u4f18\u5316 Optimization","text":"<p>\u5728\u51f8\u4f18\u5316\u4e2d\uff0c\u50cf SVM \u635f\u5931\u51fd\u6570\u8fd9\u6837\u7684\u51f8\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6216\u5176\u4ed6\u51f8\u4f18\u5316\u7b97\u6cd5\u6709\u6548\u5730\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u8f6c\u5411\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u635f\u5931\u51fd\u6570\u901a\u5e38\u662f\u975e\u51f8\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5c40\u90e8\u6781\u5c0f\u503c\u3001\u978d\u70b9\u4ee5\u53ca\u590d\u6742\u7684\u5730\u5f62\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6807\u51c6\u7684\u51f8\u4f18\u5316\u65b9\u6cd5\u53ef\u80fd\u4e0d\u518d\u9002\u7528\uff0c\u6211\u4eec\u9700\u8981\u66f4\u590d\u6742\u7684\u4f18\u5316\u7b56\u7565\uff0c\u5982\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09\u3001\u52a8\u91cf\u65b9\u6cd5\u3001\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u4f18\u5316\u5668\uff08\u5982 Adam\uff09\u7b49\u3002</p>"},{"location":"CV/Lecture4_Optimization/#421-\u7b56\u7565-1\u968f\u673a\u641c\u7d22-random-search","title":"4.2.1 \u7b56\u7565 1\uff1a\u968f\u673a\u641c\u7d22 Random Search","text":"<p>\u968f\u673a\u641c\u7d22\u7684\u7b56\u7565\uff1a\u901a\u8fc7\u968f\u673a\u751f\u6210\u5927\u91cf\u4e0d\u540c\u7684\u6743\u91cd\u77e9\u9635\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6743\u91cd\u77e9\u9635\u7684\u635f\u5931\u503c\uff0c\u5e76\u9009\u53d6\u635f\u5931\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\u6743\u91cd\u77e9\u9635\u4f5c\u4e3a\u6700\u7ec8\u7684\u6a21\u578b\u3002</p> <pre><code># \u5047\u8bbe X_train \u7684\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a\u6570\u636e\u6837\u672c\uff08\u5f62\u72b6\u4e3a 3073 x 50000\uff09\n# \u5047\u8bbe Y_train \u662f\u5bf9\u5e94\u7684\u6807\u7b7e\u6570\u7ec4\uff08\u957f\u5ea6\u4e3a 50000\uff09\n# \u5047\u8bbe\u51fd\u6570 L \u8ba1\u7b97\u7ed9\u5b9a\u6743\u91cd W \u7684\u635f\u5931\u503c\n\nbestloss = float(\"inf\")  # \u521d\u59cb\u5316\u6700\u5c0f\u635f\u5931\u503c\u4e3a\u6b63\u65e0\u7a77\nfor num in range(1000):  # \u8fdb\u884c 1000 \u6b21\u968f\u673a\u641c\u7d22\n    # \u751f\u6210\u4e00\u4e2a\u5f62\u72b6\u4e3a 10x3073 \u7684\u968f\u673a\u6743\u91cd\u77e9\u9635\uff0c\u5e76\u7f29\u653e\u3002\u6743\u91cd\u77e9\u9635\u4e2d\u7684\u503c\u7531\u6807\u51c6\u6b63\u6001\u5206\u5e03\u751f\u6210\uff0c\u5e76\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u6570\uff080.0001\uff09\u4ee5\u786e\u4fdd\u521d\u59cb\u6743\u91cd\u8f83\u5c0f\n    W = np.random.randn(10, 3073) * 0.0001\n    loss = L(X_train, Y_train, W)  # \u8ba1\u7b97\u5f53\u524d\u6743\u91cd W \u5bf9\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u635f\u5931\u503c\n    # \u66f4\u65b0\u6700\u4f73\u635f\u5931\u548c\u6700\u4f73\u6743\u91cd\n    if loss &lt; bestloss:  # \u5982\u679c\u5f53\u524d\u635f\u5931\u503c\u5c0f\u4e8e\u8bb0\u5f55\u7684\u6700\u5c0f\u635f\u5931\u503c\n        bestloss = loss  # \u66f4\u65b0\u6700\u5c0f\u635f\u5931\u503c\n        bestW = W  # \u66f4\u65b0\u6700\u4f73\u6743\u91cd\u77e9\u9635\n    print('\u5728\u7b2c %d \u6b21\u5c1d\u8bd5\u4e2d\u7684\u635f\u5931\u503c\u4e3a %f\uff0c\u5f53\u524d\u6700\u5c0f\u635f\u5931\u503c\u4e3a %f' % (num, loss, bestloss))\n\n# \u8f93\u51fa\u793a\u4f8b\uff1a\n# \u5728\u7b2c 0 \u6b21\u5c1d\u8bd5\u4e2d\u7684\u635f\u5931\u503c\u4e3a 9.401632\uff0c\u5f53\u524d\u6700\u5c0f\u635f\u5931\u503c\u4e3a 9.401632\n# \u5728\u7b2c 1 \u6b21\u5c1d\u8bd5\u4e2d\u7684\u635f\u5931\u503c\u4e3a 8.959668\uff0c\u5f53\u524d\u6700\u5c0f\u635f\u5931\u503c\u4e3a 8.959668\n# ... (\u6b64\u5904\u7701\u7565\uff0c\u4ee3\u7801\u4f1a\u6301\u7eed\u8f93\u51fa 1000 \u884c)\n\n# \u4f7f\u7528\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u6700\u597d\u7684\u6743\u91cd\u77e9\u9635 W \u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u9884\u6d4b\n# \u5047\u8bbe X_test \u5f62\u72b6\u4e3a 3073 x 10000\uff0cY_test \u4e3a\u957f\u5ea6\u4e3a 10000 \u7684\u6807\u7b7e\u6570\u7ec4\nscores = bestW.dot(Xte_cols)  # \u8ba1\u7b97\u6240\u6709\u6d4b\u8bd5\u6837\u672c\u7684\u5206\u7c7b\u5f97\u5206\uff08\u5f62\u72b6\u4e3a 10 x 10000\uff09\nYte_predict = np.argmax(scores, axis=0)  # \u9009\u62e9\u6bcf\u4e2a\u6837\u672c\u5f97\u5206\u6700\u9ad8\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\naccuracy = np.mean(Yte_predict == Yte)  # \u8ba1\u7b97\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u6807\u7b7e\u7684\u5339\u914d\u6bd4\u4f8b\uff08\u51c6\u786e\u7387\uff09\n# \u8fd4\u56de\u7684\u51c6\u786e\u7387\u4e3a 0.1555\n</code></pre> <p>\u6838\u5fc3\u601d\u8def\uff1a\u8fed\u4ee3\u4f18\u5316</p> <ul> <li>\u5c40\u9650\u6027\uff1a\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u975e\u5e38\u56f0\u96be\uff0c\u5c24\u5176\u662f\u5728\u53c2\u6570\u7a7a\u95f4\u7ef4\u5ea6\u975e\u5e38\u9ad8\u7684\u60c5\u51b5\u4e0b\uff08\u5982\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\uff09\u3002</li> <li>\u6539\u8fdb\u601d\u8def\uff1a<code>\u5c06\u4f18\u5316\u95ee\u9898\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u66f4\u5c0f\u7684\u3001\u8fed\u4ee3\u7684\u6b65\u9aa4\uff0c\u6bcf\u4e00\u6b65\u90fd\u8bd5\u56fe\u7565\u5fae\u51cf\u5c11\u635f\u5931\u503c\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u76f4\u63a5\u627e\u5230\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u9010\u6b65\u6539\u8fdb\u6743\u91cd\u77e9\u9635\uff0c\u635f\u5931\u503c\u4f1a\u9010\u6e10\u51cf\u5c11\uff0c\u4ece\u800c\u8fbe\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002</code></li> </ul>"},{"location":"CV/Lecture4_Optimization/#422-\u7b56\u7565-2\u968f\u673a\u672c\u5730\u641c\u7d22","title":"4.2.2 \u7b56\u7565 2\uff1a\u968f\u673a\u672c\u5730\u641c\u7d22","text":"<p>\u7b2c\u4e00\u4e2a\u7b56\u7565\u53ef\u4ee5\u770b\u505a\u662f\u6bcf\u8d70\u4e00\u6b65\u90fd\u5c1d\u8bd5\u51e0\u4e2a\u968f\u673a\u65b9\u5411\uff0c\u5982\u679c\u67d0\u4e2a\u65b9\u5411\u662f\u5411\u5c71\u4e0b\u7684\uff0c\u5c31\u5411\u8be5\u65b9\u5411\u8d70\u4e00\u6b65\u3002\u8fd9\u4e2a\u7b56\u7565\u57fa\u4e8e\u5c40\u90e8\u63a2\u7d22\uff0c\u901a\u8fc7\u5fae\u8c03\u521d\u59cb\u968f\u673a\u6743\u91cd\u77e9\u9635\u6765\u51cf\u5c11\u635f\u5931\u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ece\u4e00\u4e2a\u968f\u673a\u6743\u91cd\u77e9\u9635 \\(W\\)\u5f00\u59cb\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a\u5c0f\u6270\u52a8 \\(\\delta W\\)\uff0c\u751f\u6210\u65b0\u7684\u6743\u91cd\u77e9\u9635 \\(W_{\\text{try}} = W + \\delta W\\)\u3002\u5982\u679c\u65b0\u6743\u91cd\u7684\u635f \u5931\u503c\u6bd4\u5f53\u524d\u6700\u4f18\u503c\u66f4\u5c0f\uff0c\u5c31\u66f4\u65b0\u6743\u91cd \\(W\\)\u4e3a \\(W_{\\text{try}}\\)\u3002\u6bcf\u6b21\u5c1d\u8bd5\u968f\u673a\u79fb\u52a8\u4e00\u70b9\uff0c\u53ea\u5728\u627e\u5230\u66f4\u4f4e\u635f\u5931\u65f6\u66f4\u65b0\u4f4d\u7f6e\u3002</p> <p></p> <pre><code>W  = np.random.randn(10, 3073) * 0.001  # \u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u521d\u59cb\u6743\u91cd\u77e9\u9635 W\nbestloss = float(\"inf\")  # \u521d\u59cb\u5316\u6700\u5c0f\u635f\u5931\u503c\u4e3a\u6b63\u65e0\u7a77\n\nfor i in range(1000):  # \u8fdb\u884c 1000 \u6b21\u5c40\u90e8\u641c\u7d22\n    step_size = 0.0001  # \u8bbe\u7f6e\u6b65\u957f\uff0c\u63a7\u5236\u6270\u52a8\u7684\u5927\u5c0f\n    # \u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u751f\u6210\u4e00\u4e2a\u4e0e\u5f53\u524d\u6743\u91cd\u540c\u7ef4\u5ea6\u7684\u968f\u673a\u6270\u52a8 Wtry\uff0c\u5e76\u901a\u8fc7\u6b65\u957f step_size \u6765\u63a7\u5236\u6270\u52a8\u7684\u5e45\u5ea6\u3002\u8fd9\u79cd\u5c0f\u5e45\u5ea6\u7684\u6270\u52a8\u786e\u4fdd\u4e86\u6a21\u578b\u5728\u6bcf\u4e00\u6b65\u4e2d\u4ec5\u5bf9\u53c2\u6570\u8fdb\u884c\u5fae\u8c03\u3002\n    Wtry = W + np.random.randn(10, 3073) * step_size  # \u5728\u5f53\u524d\u6743\u91cd\u57fa\u7840\u4e0a\u6dfb\u52a0\u968f\u673a\u6270\u52a8\n    loss = L(Xtr_cols, Ytr, Wtry)  # \u8ba1\u7b97\u6270\u52a8\u540e\u6743\u91cd\u7684\u635f\u5931\u503c\n\n    if loss &lt; bestloss:  # \u5982\u679c\u65b0\u7684\u635f\u5931\u503c\u6bd4\u4e4b\u524d\u66f4\u5c0f\n        W = Wtry  # \u66f4\u65b0\u6743\u91cd\u77e9\u9635\u4e3a\u65b0\u7684\u6743\u91cd\n        bestloss = loss  # \u66f4\u65b0\u6700\u5c0f\u635f\u5931\u503c\n\n    print('\u7b2c %d \u6b21\u8fed\u4ee3\u7684\u635f\u5931\u503c\u4e3a %f' % (i, bestloss))\n</code></pre> <p>\u4f7f\u7528\u540c\u6837\u7684\u6570\u636e\uff081000\uff09\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230 21.4% \u7684\u5206\u7c7b\u51c6\u786e\u7387\u3002\u8fd9\u4e2a\u6bd4\u7b56\u7565\u4e00\u597d\uff0c\u4f46\u662f\u4f9d\u7136\u8fc7\u4e8e\u6d6a\u8d39\u8ba1\u7b97\u8d44\u6e90\u3002</p>"},{"location":"CV/Lecture4_Optimization/#423-\u7b56\u7565-3\u8ddf\u968f\u68af\u5ea6","title":"4.2.3 \u7b56\u7565 3\uff1a\u8ddf\u968f\u68af\u5ea6","text":"<p>\u5728\u4e4b\u524d\u7684\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u968f\u673a\u5bfb\u627e\u4e00\u4e2a\u80fd\u964d\u4f4e\u635f\u5931\u7684\u65b9\u5411\uff0c\u800c\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u8ba1\u7b97\u51fa\u6700\u9661\u5ced\u7684\u4e0b\u964d\u65b9\u5411\u2014\u2014\u635f\u5931\u51fd\u6570\u7684 \u68af\u5ea6\u3002\u68af\u5ea6\u544a\u8bc9\u6211\u4eec\u5728\u591a\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u5404\u4e2a\u65b9\u5411\u4e0a\u7684\u53d8\u5316\u7387\uff0c\u901a\u8fc7\u6cbf\u7740\u68af\u5ea6\u65b9\u5411\u66f4\u65b0\u53c2\u6570\uff0c\u6211\u4eec\u80fd\u591f\u66f4\u5feb\u901f\u5730\u63a5\u8fd1\u6700\u4f18\u89e3\u3002</p> <p>\u5728\u4e00\u7ef4\u51fd\u6570\u4e2d\uff0c\u659c\u7387\u662f\u51fd\u6570\u5728\u67d0\u4e00\u70b9\u7684\u77ac\u65f6\u53d8\u5316\u7387\u3002\u68af\u5ea6\u662f\u51fd\u6570\u7684\u659c\u7387\u7684\u4e00\u822c\u5316\u8868\u8fbe\uff0c\u5b83\u4e0d\u662f\u4e00\u4e2a\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u5411\u91cf\u3002\u5728\u8f93\u5165\u7a7a\u95f4\u4e2d\uff0c\u68af\u5ea6\u662f\u5404\u4e2a\u7ef4\u5ea6\u7684\u659c\u7387\u7ec4\u6210\u7684\u5411\u91cf\uff08\u6216\u8005\u79f0\u4e3a\u5bfc\u6570 derivatives\uff09\u3002\u5bf9\u4e00\u7ef4\u51fd\u6570\u7684\u6c42\u5bfc\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\dfrac{df(x)}{dx}= lim_{h \\rightarrow 0}\\dfrac{f(x+h)-f(x)}{h} \\] <p>\u5f53\u51fd\u6570\u6709\u591a\u4e2a\u53c2\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u79f0\u5bfc\u6570\u4e3a\u504f\u5bfc\u6570\u3002\u800c\u68af\u5ea6\u5c31\u662f\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u504f\u5bfc\u6570\u6240\u5f62\u6210\u7684\u5411\u91cf\u3002</p>"},{"location":"CV/Lecture4_Optimization/#43-\u68af\u5ea6\u8ba1\u7b97","title":"4.3 \u68af\u5ea6\u8ba1\u7b97","text":"<p>\u8ba1\u7b97\u68af\u5ea6\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u4e00\u4e2a\u662f\u7f13\u6162\u7684\u8fd1\u4f3c\u65b9\u6cd5\uff08\u6570\u503c\u68af\u5ea6\u6cd5\uff09\uff0c\u4f46\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\uff08\u5206\u6790\u68af\u5ea6\u6cd5\uff09\u8ba1\u7b97\u8fc5\u901f\uff0c\u7ed3\u679c\u7cbe\u786e\uff0c\u4f46\u662f\u5b9e\u73b0\u65f6\u5bb9\u6613\u51fa\u9519\uff0c\u4e14\u9700\u8981\u4f7f\u7528\u5fae\u5206\u3002\u73b0\u5728\u5bf9\u4e24\u79cd\u65b9\u6cd5\u8fdb\u884c\u4ecb\u7ecd\uff1a</p>"},{"location":"CV/Lecture4_Optimization/#431-\u6570\u503c\u68af\u5ea6\u6cd5-numeric-gradient","title":"4.3.1 \u6570\u503c\u68af\u5ea6\u6cd5 Numeric gradient","text":"<p>\u6570\u503c\u68af\u5ea6\u6cd5\u662f\u4e00\u79cd\u901a\u8fc7\u6709\u9650\u5dee\u5206\u8fd1\u4f3c\u8ba1\u7b97\u68af\u5ea6\u7684\u65b9\u6cd5\u3002\u867d\u7136\u76f8\u6bd4\u5206\u6790\u68af\u5ea6\u6cd5\u5b83\u8f83\u6162\uff0c\u4f46\u5b9e\u73b0\u7b80\u5355\u4e14\u901a\u7528\uff0c\u9002\u5408\u7528\u4e8e\u8c03\u8bd5\u548c\u9a8c\u8bc1\u5206\u6790\u68af\u5ea6\u7684\u6b63\u786e\u6027\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u65bd\u52a0\u4e00\u4e2a\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u7136\u540e\u89c2\u5bdf\u51fd\u6570\u503c\u7684\u53d8\u5316\uff0c\u6765\u8fd1\u4f3c\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u4e0a\u7684\u5bfc\u6570\u3002</p> <p>\u4e0a\u8282\u4e2d\u7684\u516c\u5f0f\u5df2\u7ecf\u7ed9\u51fa\u6570\u503c\u8ba1\u7b97\u68af\u5ea6\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u8f93\u5165\u4e3a\u51fd\u6570 f \u548c\u5411\u91cf x\uff0c \u8ba1\u7b97 f \u7684\u68af\u5ea6\u7684\u901a\u7528\u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u51fd\u6570 f \u5728\u70b9 x \u5904 \u7684\u68af\u5ea6.</p> <pre><code>def eval_numerical_gradient(f, x):\n    \"\"\"\n    \u8ba1\u7b97\u51fd\u6570 f \u5728\u70b9 x \u5904\u7684\u6570\u503c\u68af\u5ea6\u3002\n\n    \u53c2\u6570\uff1a\n    - f: \u76ee\u6807\u51fd\u6570\uff0c\u8f93\u5165\u4e3a x\uff0c\u8f93\u51fa\u4e3a\u4e00\u4e2a\u6807\u91cf\n    - x: numpy \u6570\u7ec4\uff0c\u8868\u793a\u8ba1\u7b97\u68af\u5ea6\u7684\u70b9\n\n    \u8fd4\u56de\uff1a\n    - grad: \u4e0e x \u5f62\u72b6\u76f8\u540c\u7684 numpy \u6570\u7ec4\uff0c\u8868\u793a f \u5728 x \u5904\u7684\u68af\u5ea6\n    \"\"\"\n    fx = f(x)  # \u8ba1\u7b97\u51fd\u6570\u5728\u539f\u70b9\u7684\u503c\n    grad = np.zeros_like(x)  # \u521d\u59cb\u5316\u4e0e x \u5f62\u72b6\u76f8\u540c\u7684\u68af\u5ea6\u6570\u7ec4,\u7528\u4e8e\u5b58\u50a8\u68af\u5ea6\n    h = 1e-5  # \u8bbe\u7f6e\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6570\u503c\uff0c\u4f5c\u4e3a\u6270\u52a8\n\n    # \u4f7f\u7528 nditer \u8fed\u4ee3 x \u4e2d\u7684\u6240\u6709\u7d22\u5f15\n    it = np.nditer(x, flags=['multi_index'], op_flags=['readwrite'])\n    while not it.finished:\n        ix = it.multi_index  # \u83b7\u53d6\u5f53\u524d\u7d22\u5f15\n        old_value = x[ix]  # \u4fdd\u5b58\u5f53\u524d\u503c\n\n        x[ix] = old_value + h  # \u5728\u5f53\u524d\u7ef4\u5ea6\u589e\u52a0 h\n        fxh = f(x)  # \u8ba1\u7b97 f(x + h)\n\n        x[ix] = old_value  # \u6062\u590d\u539f\u503c\n\n        # \u8ba1\u7b97\u8be5\u7ef4\u5ea6\u4e0a\u7684\u504f\u5bfc\u6570\n        grad[ix] = (fxh - fx) / h  # \u68af\u5ea6\u8ba1\u7b97\u516c\u5f0f\n        it.iternext()  # \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ef4\u5ea6\n\n    return grad\n</code></pre> <p>\u8fed\u4ee3\u8ba1\u7b97\uff1a \u5bf9\u4e8e <code>x</code> \u4e2d\u7684\u6bcf\u4e2a\u7ef4\u5ea6\uff0c\u65bd\u52a0\u4e00\u4e2a\u5fae\u5c0f\u7684\u6b63\u5411\u6270\u52a8 <code>h</code>\uff0c\u8ba1\u7b97\u6270\u52a8\u540e\u51fd\u6570\u7684\u503c <code>f(x + h)</code>\u3002\u901a\u8fc7\u6bd4\u8f83\u539f\u51fd\u6570\u503c <code>f(x)</code> \u548c\u6270\u52a8\u540e\u51fd\u6570\u503c\u7684\u53d8\u5316\uff0c\u8ba1\u7b97\u8be5\u7ef4\u5ea6\u4e0a\u7684\u68af\u5ea6\u3002</p> <p>\u5b9e\u8df5\u8003\u91cf\uff1a\u6ce8\u610f\u5728\u6570\u5b66\u516c\u5f0f\u4e2d\uff0ch \u7684\u53d6\u503c\u662f\u8d8b\u8fd1\u4e8e 0 \u7684\uff0c\u7136\u800c\u5728\u5b9e\u9645\u4e2d\uff0c\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u503c\uff08\u6bd4\u5982\u4f8b\u5b50\u4e2d\u7684 1e-5\uff09\u5c31\u8db3\u591f\u4e86\u3002\u5728\u4e0d\u4ea7\u751f\u6570\u503c\u8ba1\u7b97\u51fa\u9519\u7684\u7406\u60f3\u524d\u63d0\u4e0b\uff0c\u4f60\u4f1a\u4f7f\u7528\u5c3d\u53ef\u80fd\u5c0f\u7684 h\u3002</p> <ul> <li>\u4e2d\u5fc3\u5dee\u5206\u6cd5\uff1a \u4f7f\u7528 <code>f(x + h)</code> \u548c <code>f(x - h)</code> \u7684\u4e2d\u5fc3\u5dee\u5206\u516c\u5f0f\u6765\u8ba1\u7b97\u68af\u5ea6\uff0c\u6548\u679c\u66f4\u597d\uff0c\u53ef\u4ee5\u51cf\u5c11\u8bef\u5dee\u3002\u516c\u5f0f\u4e3a\uff1a\\(\\dfrac{f(x + h) - f(x - h)}{2h}\\)</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u6765\u8ba1\u7b97\u4efb\u610f\u51fd\u6570\u5728\u4efb\u610f\u70b9\u4e0a\u7684\u68af\u5ea6\u3002\u4e0b\u9762\u8ba1\u7b97\u6743\u91cd\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e9b\u968f\u673a\u70b9\u4e0a\uff0cCIFAR-10 \u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff1a</p> <pre><code># \u5b9a\u4e49\u4e00\u4e2a\u5c01\u88c5\u7684 CIFAR-10 \u635f\u5931\u51fd\u6570\uff0c\u4fbf\u4e8e\u4f20\u9012\u7ed9\u6570\u503c\u68af\u5ea6\u51fd\u6570\ndef CIFAR10_loss_fun(W):\n    return L(X_train, Y_train, W)\n\n# \u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u6743\u91cd\u77e9\u9635 W\nW = np.random.rand(10, 3073) * 0.001\n\n# \u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5728 W \u5904\u7684\u68af\u5ea6\ndf = eval_numerical_gradient(CIFAR10_loss_fun, W)\n</code></pre> <p>\u68af\u5ea6\u544a\u8bc9\u6211\u4eec\u635f\u5931\u51fd\u6570\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u659c\u7387\uff0c\u4ee5\u6b64\u6765\u8fdb\u884c\u66f4\u65b0\uff1a</p> <pre><code># \u6253\u5370\u521d\u59cb\u635f\u5931\u503c\nloss_original = CIFAR10_loss_fun(W)\nprint('original loss: %f' % (loss_original,))\n\n# \u5c1d\u8bd5\u4e0d\u540c\u7684\u6b65\u957f\uff08\u5b66\u4e60\u7387\uff09\u5e76\u89c2\u5bdf\u5bf9\u635f\u5931\u503c\u7684\u5f71\u54cd\nfor step_size_log in [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1]:\n    step_size = 10 ** step_size_log  # \u6839\u636e\u5bf9\u6570\u503c\u751f\u6210\u6b65\u957f\n    W_new = W - step_size * df  # \u5411\u8d1f\u68af\u5ea6\u65b9\u5411\u66f4\u65b0\u6743\u91cd\n    loss_new = CIFAR10_loss_fun(W_new)  # \u8ba1\u7b97\u65b0\u7684\u635f\u5931\u503c\n    print('for step size %f new loss: %f' % (step_size, loss_new))\n\n# \u8f93\u51fa\u7ed3\u679c\u663e\u793a\u4e86\u4e0d\u540c\u6b65\u957f\u5bf9\u5e94\u7684\u635f\u5931\u503c\u53d8\u5316\n# original loss: 2.200718\n# for step size 1.000000e-10 new loss: 2.200652\n# for step size 1.000000e-09 new loss: 2.200057\n# for step size 1.000000e-08 new loss: 2.194116\n# for step size 1.000000e-07 new loss: 2.135493\n# for step size 1.000000e-06 new loss: 1.647802\n# for step size 1.000000e-05 new loss: 2.844355\n# for step size 1.000000e-04 new loss: 25.558142\n# for step size 1.000000e-03 new loss: 254.086573\n# for step size 1.000000e-02 new loss: 2539.370888\n# for step size 1.000000e-01 new loss: 25392.214036\n</code></pre> <ul> <li> <p>\u68af\u5ea6\u65b9\u5411\uff1a \u66f4\u65b0\u6743\u91cd\u65f6\uff0c\u5411\u7740\u68af\u5ea6\u7684\u8d1f\u65b9\u5411\u79fb\u52a8\uff0c\u5373 <code>W_new = W - step_size * df</code>\uff0c\u56e0\u4e3a\u68af\u5ea6\u6307\u5411\u7684\u662f\u635f\u5931\u51fd\u6570\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\uff0c\u5411\u5176\u53cd\u65b9\u5411\u79fb\u52a8\u53ef\u4ee5\u964d\u4f4e\u635f\u5931\u503c\u3002</p> </li> <li> <p>\u6b65\u957f\u9009\u62e9\uff1a \u6b65\u957f\u51b3\u5b9a\u4e86\u6bcf\u6b21\u66f4\u65b0\u6743\u91cd\u65f6\u79fb\u52a8\u7684\u8ddd\u79bb\u3002\u6b65\u957f\u8fc7\u5c0f\uff0c\u4e0b\u964d\u7a33\u5b9a\u4f46\u8fdb\u5ea6\u6162\uff1b\u6b65\u957f\u8fc7\u5927\uff0c\u53ef\u80fd\u8d8a\u8fc7\u6700\u4f18\u70b9\u5bfc\u81f4\u66f4\u9ad8\u7684\u635f\u5931\u503c\u3002</p> </li> </ul> <p></p> <p>\u5c06\u6b65\u957f\u6548\u679c\u89c6\u89c9\u5316\u7684\u56fe\u4f8b\u3002\u4ece\u67d0\u4e2a\u5177\u4f53\u7684\u70b9 W \u5f00\u59cb\u8ba1\u7b97\u68af\u5ea6\uff08\u767d\u7bad\u5934\u65b9\u5411\u662f\u8d1f\u68af\u5ea6\u65b9\u5411\uff09\uff0c\u68af\u5ea6\u544a\u8bc9\u4e86\u6211\u4eec\u635f\u5931\u51fd\u6570\u4e0b\u964d\u6700\u9661\u5ced\u7684\u65b9\u5411\u3002\u5c0f\u6b65\u957f\u4e0b\u964d\u7a33\u5b9a\u4f46\u8fdb\u5ea6\u6162\uff0c\u5927\u6b65\u957f\u8fdb\u5c55\u5feb\u4f46\u662f\u98ce\u9669\u66f4\u5927\u3002\u91c7\u53d6\u5927\u6b65\u957f\u53ef\u80fd\u5bfc\u81f4\u9519\u8fc7\u6700\u4f18\u70b9\uff0c\u8ba9\u635f\u5931\u503c\u4e0a\u5347\u3002\u6b65\u957f\uff08\u540e\u9762\u4f1a\u79f0\u5176\u4e3a \u5b66\u4e60\u7387\uff09\u5c06\u4f1a\u662f\u6211\u4eec\u5728\u8c03\u53c2\u4e2d\u6700\u91cd\u8981\u7684\u8d85\u53c2\u6570\u4e4b\u4e00\u3002</p> <ul> <li>\u6548\u7387\u95ee\u9898\uff1a\u8ba1\u7b97\u6570\u503c\u68af\u5ea6\u7684\u590d\u6742\u6027\u548c\u53c2\u6570\u7684\u91cf\u7ebf\u6027\u76f8\u5173\u3002\u5728\u672c\u4f8b\u4e2d\u6709 30730 \u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u635f\u5931\u51fd\u6570\u6bcf\u8d70\u4e00\u6b65\u5c31\u9700\u8981\u8ba1\u7b97 30731 \u6b21\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u3002\u73b0\u4ee3\u795e\u7ecf\u7f51\u7edc\u5f88\u5bb9\u6613\u5c31\u6709\u4e0a\u5343\u4e07\u7684\u53c2\u6570\uff0c\u56e0\u6b64\u8fd9\u4e2a\u95ee\u9898\u53ea\u4f1a\u8d8a\u53d1\u4e25\u5cfb\u3002\u663e\u7136\u8fd9\u4e2a\u7b56\u7565\u4e0d\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u597d\u7684\u7b56\u7565\u3002</li> </ul>"},{"location":"CV/Lecture4_Optimization/#432-\u5fae\u5206\u5206\u6790\u8ba1\u7b97\u68af\u5ea6-analytic-gradient","title":"4.3.2 \u5fae\u5206\u5206\u6790\u8ba1\u7b97\u68af\u5ea6 Analytic gradient","text":"<p>\u76f8\u6bd4\u6709\u9650\u5dee\u503c\u8fd1\u4f3c\u6cd5\uff0c\u5229\u7528\u5fae\u5206\u516c\u5f0f\u8ba1\u7b97\u68af\u5ea6\u66f4\u52a0\u7cbe\u786e\u4e14\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u635f\u5931\u51fd\u6570\u7684\u516c\u5f0f\u63a8\u5bfc\u51fa\u68af\u5ea6\u7684\u89e3\u6790\u8868\u8fbe\u5f0f\uff0c\u518d\u7528\u5b83\u8fdb\u884c\u4f18\u5316\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u8ba1\u7b97\u7cbe\u5ea6\u9ad8\u3001\u901f\u5ea6\u5feb\uff1b\u4f46\u7f3a\u70b9\u662f\u63a8\u5bfc\u590d\u6742\u3001\u5bb9\u6613\u51fa\u9519\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u5e38\u7528 \u68af\u5ea6\u68c0\u67e5 \u6765\u9a8c\u8bc1\u89e3\u6790\u68af\u5ea6\u7684\u6b63\u786e\u6027\u3002</p> <p>\u7528 SVM \u7684\u635f\u5931\u51fd\u6570\u5728\u67d0\u4e2a\u6570\u636e\u70b9\u4e0a\u7684\u8ba1\u7b97\u6765\u4e3e\u4f8b\uff1a</p> \\[ \\sum_{j!= y_i}max(0, w^T_jx_i-w^T_{y_i}x_i+\\Delta) \\] <p>\u53ef\u4ee5\u5bf9\u51fd\u6570\u8fdb\u884c\u5fae\u5206\u3002\u6bd4\u5982\uff0c\u5bf9 \\(w_{y_i}\\)\u8fdb\u884c\u5fae\u5206\u5f97\u5230\uff1a</p> \\[ \\nabla {w_{y_i}}L_i =-(\\sum_{j\\not = y_i}1(w^T_jx_i-w^T_{y_i}x_i+Delta &gt; 0))x_i \\] <p>\u8be5\u68af\u5ea6\u7684\u8ba1\u7b97\u6d89\u53ca\u4e00\u4e2a\u6307\u793a\u51fd\u6570\uff0c\u5f53\u62ec\u53f7\u5185\u7684\u6761\u4ef6\u4e3a\u771f\u65f6\uff0c\u5176\u503c\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\u3002\u53ea\u9700\u8981\u8ba1\u7b97\u6ca1\u6709\u6ee1\u8db3\u8fb9\u754c\u503c\u7684\u5206\u7c7b\u7684\u6570\u91cf\uff08\u56e0\u6b64\u5bf9\u635f\u5931\u51fd\u6570\u4ea7\u751f\u4e86\u8d21\u732e\uff09\uff0c\u7136\u540e\u4e58\u4ee5 \\(x_i\\)\u5c31\u662f\u68af\u5ea6\u4e86\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u68af\u5ea6\u53ea\u662f\u5bf9\u5e94\u6b63\u786e\u5206\u7c7b\u7684 W \u7684\u884c\u5411\u91cf\u7684\u68af\u5ea6\uff0c\u90a3\u4e9b \\(j\\not =y_i\\)\u884c\u7684\u68af\u5ea6\u662f\uff1a</p> \\[ \\nabla_{w_j}L_i = 1(w^T_jx_i-w^T_{y_i}x_i+Delta &gt; 0)x_i \\]"},{"location":"CV/Lecture4_Optimization/#433-\u68af\u5ea6\u4e0b\u964d","title":"4.3.3 \u68af\u5ea6\u4e0b\u964d","text":"<p>\u68af\u5ea6\u4e0b\u964d\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5373\u901a\u8fc7\u4e0d\u65ad\u8ba1\u7b97\u68af\u5ea6\u5e76\u66f4\u65b0\u53c2\u6570\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u9010\u6e10\u964d\u4f4e\u3002</p> <pre><code># \u666e\u901a\u7684\u68af\u5ea6\u4e0b\u964d\nwhile True:\n    weights_grad = evaluate_gradient(loss_fun, data, weights)  # \u8ba1\u7b97\u5f53\u524d\u6743\u91cd\u7684\u68af\u5ea6\n    weights += -step_size * weights_grad  # \u66f4\u65b0\u6743\u91cd\uff0c\u6cbf\u68af\u5ea6\u7684\u8d1f\u65b9\u5411\u79fb\u52a8\n</code></pre> <p>\u68af\u5ea6\u4e0b\u964d\u662f\u4e00\u79cd\u8fed\u4ee3\u4f18\u5316\u7b97\u6cd5\uff0c\u5176\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u4f7f\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u53c2\u6570\u96c6\u5408\u3002\u901a\u8fc7\u6cbf\u7740\u635f\u5931\u51fd\u6570\u68af\u5ea6\u7684\u8d1f\u65b9\u5411\u66f4\u65b0\u53c2\u6570\uff0c\u7b97\u6cd5\u8bd5\u56fe\u5728\u6bcf\u4e00\u6b65\u4e2d\u5c3d\u53ef\u80fd\u5730\u964d\u4f4e\u635f\u5931\u3002</p> <ul> <li> <p>\u68af\u5ea6\u8ba1\u7b97\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u901a\u8fc7 <code>evaluate_gradient</code> \u51fd\u6570\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u76f8\u5bf9\u4e8e\u53c2\u6570\u7684\u68af\u5ea6 <code>weights_grad</code>\u3002\u68af\u5ea6\u6307\u5411\u635f\u5931\u51fd\u6570\u4e0a\u5347\u6700\u5feb\u7684\u65b9\u5411\u3002</p> </li> <li> <p>\u53c2\u6570\u66f4\u65b0\uff1a\u6743\u91cd <code>weights</code> \u6309\u7167\u5b66\u4e60\u7387(learning rate) <code>step_size</code> \u6cbf\u7740\u8d1f\u68af\u5ea6\u65b9\u5411\u66f4\u65b0\u3002\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u8d1f\u68af\u5ea6\u65b9\u5411\u662f\u635f\u5931\u51cf\u5c11\u6700\u5feb\u7684\u65b9\u5411\u3002</p> </li> <li> <p>\u8fd9\u4e2a\u5faa\u73af\u7ed3\u6784\u4f1a\u6301\u7eed\u8fd0\u884c\uff0c\u76f4\u5230\u6ee1\u8db3\u67d0\u79cd\u505c\u6b62\u6761\u4ef6\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5e38\u89c1\u7684\u505c\u6b62\u6761\u4ef6\u5305\u62ec\uff1a</p> <ul> <li>\u56fa\u5b9a\u8fed\u4ee3\u6b21\u6570\uff1a\u8fd0\u884c\u6307\u5b9a\u6b21\u6570\u7684\u8fed\u4ee3\uff0c\u4f8b\u5982 1000 \u6b21\u3002</li> <li>\u635f\u5931\u53d8\u5316\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\uff1a\u5f53\u635f\u5931\u7684\u53d8\u5316\u5c0f\u4e8e\u8bbe\u5b9a\u7684\u9608\u503c\u65f6\uff0c\u8ba4\u4e3a\u5df2\u6536\u655b\u3002</li> <li>\u68af\u5ea6\u8303\u6570\u5f88\u5c0f\uff1a\u5f53\u68af\u5ea6\u7684\u8303\u6570\uff08\u5373\u68af\u5ea6\u5411\u91cf\u7684\u957f\u5ea6\uff09\u975e\u5e38\u5c0f\u65f6\uff0c\u8bf4\u660e\u5df2\u7ecf\u63a5\u8fd1\u6781\u5c0f\u503c\u70b9\u3002</li> </ul> </li> </ul> <p>Batch Gradient Descent \u6279\u91cf\u68af\u5ea6\u4e0b\u964d</p> <p></p> <p>\u5c0f\u6279\u91cf\u6570\u636e\u68af\u5ea6\u4e0b\u964d\uff08Mini-batch Gradient Descent, MBGD\uff09 \u662f\u4ecb\u4e8e\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Batch Gradient Descent, BGD\uff09\u548c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08Stochastic Gradient Descent, SGD\uff09\u4e4b\u95f4\u7684\u4e00\u79cd\u4f18\u5316\u7b56\u7565\u3002\u5b83\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u4f7f\u7528\u4e00\u90e8\u5206\uff08\u5373\u5c0f\u6279\u91cf\uff09\u6570\u636e\u6765\u8ba1\u7b97\u68af\u5ea6\u5e76\u66f4\u65b0\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u7ed3\u5408\u4e86 BGD \u548c SGD \u7684\u4f18\u70b9\uff0c\u5728\u5927\u89c4\u6a21\u673a\u5668\u5b66\u4e60\u5e94\u7528\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u3002</p> <pre><code># \u666e\u901a\u7684\u5c0f\u6279\u91cf\u6570\u636e\u68af\u5ea6\u4e0b\u964d\nwhile True:\n    data_batch = sample_training_data(data, 256)  # 256\u4e2a\u6570\u636e\n    weights_grad = evaluate_gradient(loss_fun, data_batch, weights)  # \u8ba1\u7b97\u68af\u5ea6\n    weights += - step_size * weights_grad  # \u53c2\u6570\u66f4\u65b0\n</code></pre> <ul> <li> <p><code>sample_training_data(data, 256)</code>\uff1a\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u53d6 256 \u4e2a\u6837\u672c\uff0c\u4f5c\u4e3a\u5f53\u524d\u8fed\u4ee3\u7684\u5c0f\u6279\u91cf\u6570\u636e\u3002</p> </li> <li> <p><code>evaluate_gradient(loss_fun, data_batch, weights)</code>\uff1a\u8ba1\u7b97\u5c0f\u6279\u91cf\u6570\u636e\u4e0a\u7684\u635f\u5931\u51fd\u6570\u68af\u5ea6\u3002</p> </li> </ul> <p><code>\u5c0f\u6279\u91cf\u6570\u636e\u68af\u5ea6\u4e0b\u964d\u7684\u5de5\u4f5c\u539f\u7406</code></p> <ul> <li>\u6570\u636e\u6279\u6b21\uff1a\u5c0f\u6279\u91cf\u6570\u636e\u7684\u5178\u578b\u5927\u5c0f\u901a\u5e38\u4e3a 32\u300164\u3001128 \u6216 256 \u4e2a\u6837\u672c\u3002\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u5c0f\u6279\u91cf\u6570\u636e\u6765\u8ba1\u7b97\u68af\u5ea6\u3002</li> </ul> <p><code>\u53c2\u6570\u6570\u91cf\u7684\u9009\u62e9\u548c\u9009\u62e9\u53c2\u6570\u662fhyper parameter\uff0c\u4f46\u662f\u5f71\u54cd\u4e0d\u5927</code></p> <ul> <li>\u68af\u5ea6\u8ba1\u7b97\u4e0e\u66f4\u65b0\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u4f7f\u7528\u5c0f\u6279\u91cf\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\uff0c\u968f\u540e\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002\u7531\u4e8e\u6bcf\u6b21\u8fed\u4ee3\u4f7f\u7528\u7684\u53ea\u662f\u6570\u636e\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u8ba1\u7b97\u901f\u5ea6\u6bd4\u5168\u6279\u91cf\u66f4\u65b0\u5feb\u5f97\u591a\uff0c\u540c\u65f6\u53c8\u6bd4\u5355\u4e2a\u6837\u672c\u7684\u66f4\u65b0\u66f4\u7a33\u5b9a\u3002</li> </ul> <p><code>\u5c0f\u6279\u91cf\u6570\u636e\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u52bf</code></p> <ul> <li> <p>\u8ba1\u7b97\u6548\u7387\u9ad8\uff1a\u76f8\u6bd4 BGD\uff0cMBGD \u7684\u8ba1\u7b97\u5f00\u9500\u66f4\u5c0f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u8ba1\u7b97\u6574\u4e2a\u6570\u636e\u96c6\u7684\u68af\u5ea6\uff0c\u800c\u662f\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u53d6\u51fa\u4e00\u90e8\u5206\u6765\u8ba1\u7b97\u68af\u5ea6\uff0c\u8fd1\u4f3c\u6574\u4e2a\u6570\u636e\u96c6\u7684\u68af\u5ea6\u3002\u800c\u4e0e SGD \u76f8\u6bd4\uff0cMBGD \u7684\u68af\u5ea6\u4f30\u8ba1\u66f4\u51c6\u786e\uff0c\u51cf\u5c11\u4e86\u53c2\u6570\u66f4\u65b0\u4e2d\u7684\u566a\u58f0\u3002</p> </li> <li> <p>\u5e73\u8861\u6536\u655b\u4e0e\u8ba1\u7b97\u5f00\u9500\uff1aMBGD \u7ed3\u5408\u4e86 BGD \u7684\u7a33\u5b9a\u6027\u548c SGD \u7684\u5feb\u901f\u6536\u655b\u6027\uff0c\u5728\u8ba1\u7b97\u6210\u672c\u548c\u6a21\u578b\u6027\u80fd\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002</p> </li> </ul> <p>\u5c0f\u6279\u91cf\u6570\u636e\u7b56\u7565\u6709\u4e2a\u6781\u7aef\u60c5\u51b5\uff0c\u90a3\u5c31\u662f\u6bcf\u4e2a\u6279\u91cf\u4e2d\u53ea\u6709 1 \u4e2a\u6570\u636e\u6837\u672c\uff0c\u8fd9\u79cd\u7b56\u7565\u88ab\u79f0\u4e3a \u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08Stochastic Gradient Descent \u7b80\u79f0 SGD\uff09\uff0c\u6709\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u5728\u7ebf\u68af\u5ea6\u4e0b\u964d\u3002\u8fd9\u79cd\u7b56\u7565\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\u76f8\u5bf9\u5c11\u89c1\uff0c\u56e0\u4e3a\u5411\u91cf\u5316\u64cd\u4f5c\u7684\u4ee3\u7801\u4e00\u6b21\u8ba1\u7b97 100 \u4e2a\u6570\u636e \u6bd4 100 \u6b21\u8ba1\u7b97 1 \u4e2a\u6570\u636e\u8981\u9ad8\u6548\u5f88\u591a\u3002</p> <p>\u5c0f\u6279\u91cf\u6570\u636e\u7684\u5927\u5c0f\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4f46\u662f\u4e00\u822c\u5e76\u4e0d\u9700\u8981\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8c03\u53c2\u3002\u5b83\u4e00\u822c\u7531\u5b58\u50a8\u5668\u7684\u9650\u5236\u6765\u51b3\u5b9a\u7684\uff0c\u6216\u8005\u5e72\u8106\u8bbe\u7f6e\u4e3a\u540c\u6837\u5927\u5c0f\uff0c\u6bd4\u5982 32\uff0c64\uff0c128 \u7b49\u3002\u4e4b\u6240\u4ee5\u4f7f\u7528 2 \u7684\u6307\u6570\uff0c\u662f\u56e0\u4e3a\u5728\u5b9e\u9645\u4e2d\u8bb8\u591a\u5411\u91cf\u5316\u64cd\u4f5c\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u5982\u679c\u8f93\u5165\u6570\u636e\u91cf\u662f 2 \u7684\u500d\u6570\uff0c\u90a3\u4e48\u8fd0\u7b97\u66f4\u5feb\u3002\u5e76\u4e14\u5728\u6279\u91cf\u5927\u5c0f\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97</p> <p>\u4e24\u4e2a\u6f5c\u5728\u95ee\u9898\uff1a</p> <ul> <li>\u5b66\u4e60\u7387\u5982\u679c\u8fc7\u5927\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u9707\u8361\u7684\u60c5\u51b5\uff0c\u5b66\u4e60\u7387\u8fc7\u5c0f\u7684\u8bdd\uff0c\u867d\u7136\u6ca1\u6709\u9707\u8361\u60c5\u51b5\u51fa\u73b0\uff0c\u4f46\u662f\u5b66\u4e60\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u6280\u672f\u4e0a\u6709\u65f6\u5019\u88ab\u79f0\u4e3a\u5177\u6709\u9ad8\u6761\u4ef6\u6570\u7684\u95ee\u9898</li> </ul> <p></p> <ul> <li>\u5b58\u5728\u5c40\u90e8\u6700\u5c0f\u70b9\u548c\u978d\u70b9 saddle point\uff08<code>\u978d\u70b9\u6307\u7684\u662f\u67d0\u4e9b\u7ef4\u5ea6\u4e0a\u7684\u68af\u5ea6\u4e3a\u96f6\uff0c\u4f46\u5176\u4ed6\u7ef4\u5ea6\u4ecd\u9700\u4f18\u5316\uff0c\u4f7f\u5f97\u6a21\u578b\u65e0\u6cd5\u7ee7\u7eed\u5411\u4e0b\u4f18\u5316</code>\uff09\uff0c\u5728\u67d0\u4e9b\u7ef4\u5ea6\u4e0a\u53ef\u80fd\u65e0\u6cd5\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u9ad8\u7ef4\u5ea6\u4e0b\u4f18\u5316\u96be\u9898\uff0c\u8fd9\u6837\u6a21\u578b\u65e0\u6cd5\u8fbe\u5230\u6700\u4f73\u3002</li> </ul> <p></p> <p>\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u52a8\u91cf\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u5c1d\u8bd5\u8d8a\u8fc7\u978d\u70b9\u548c\u5c40\u90e8\u6700\u5c0f\u70b9\uff0c\u4f1a\u4ea7\u751f\u5f88\u4e0d\u9519\u7684\u6548\u679c\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u6291\u5236\u9707\u8361\uff0c\u662f\u4e00\u79cd\u5f88\u6709\u7528\u7684\u65b9\u6cd5</p> <p>\u52a8\u91cf\u6cd5\u53ef\u4ee5\u89c6\u4e3a\u7ed9\u68af\u5ea6\u4e0b\u964d\u6dfb\u52a0\u4e86\u201c\u60ef\u6027\u201d\uff0c\u4f7f\u5f97\u66f4\u65b0\u65b9\u5411\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u68af\u5ea6\uff0c\u8fd8\u53d7\u8fc7\u53bb\u66f4\u65b0\u65b9\u5411\u7684\u5f71\u54cd\u3002\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ v = \\gamma v - \\eta \\nabla_\\theta J(\\theta)\\\\ \\theta = \\theta + v \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\gamma\\)\u662f\u52a8\u91cf\u56e0\u5b50\uff0c\u901a\u5e38\u8bbe\u4e3a 0.9\u3002</li> <li>\\(v\\)\u662f\u7d2f\u79ef\u7684\u52a8\u91cf\u3002</li> <li>\\(eta\\)\u662f\u5b66\u4e60\u7387\u3002</li> <li>\\(\\nabla_\\theta J(\\theta)\\)\u662f\u5f53\u524d\u68af\u5ea6\u3002</li> <li></li> <li></li> </ul> <p>\u901a\u8fc7\u7d2f\u79ef\u52a8\u91cf\uff0c\u6a21\u578b\u80fd\u591f\u8de8\u8d8a\u978d\u70b9\uff0c\u5e76\u5728\u9661\u5ced\u7684\u533a\u57df\u52a0\u901f\u6536\u655b\uff0c\u5728\u5e73\u5766\u7684\u533a\u57df\u51cf\u7f13\u9707\u8361\u3002</p>"},{"location":"CV/Lecture4_Optimization/#434-adagrad","title":"4.3.4 AdaGrad","text":"<p>AdaGrad\uff08Adaptive Gradient Algorithm\uff09\u662f\u4e00\u79cd\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7684\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u8c03\u6574\u6bcf\u4e2a\u53c2\u6570\u7684\u5b66\u4e60\u7387\u6765\u63d0\u5347\u4f18\u5316\u7684\u6548\u7387\u3002\u4e0e\u6807\u51c6\u7684\u68af\u5ea6\u4e0b\u964d\u4e0d\u540c\uff0cAdaGrad \u4f1a\u6839\u636e\u5386\u53f2\u68af\u5ea6\u7684\u7d2f\u79ef\u503c\u52a8\u6001\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u4f7f\u5f97\u66f4\u65b0\u7684\u5e45\u5ea6\u80fd\u591f\u9002\u5e94\u4e0d\u540c\u7684\u53c2\u6570\u3002</p> <p>\u539f\u7406\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0cAdaGrad \u4f1a\u7d2f\u52a0\u68af\u5ea6\u7684\u5e73\u65b9\u503c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u7d2f\u79ef\u503c\u7528\u4e8e\u8c03\u6574\u5b66\u4e60\u7387\u3002\u7531\u4e8e\u68af\u5ea6\u7684\u5e73\u65b9\u503c\u9010\u6b65\u589e\u52a0\uff0c\u5b66\u4e60\u7387\u4f1a\u9010\u6b65\u51cf\u5c11\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5b9e\u73b0\u81ea\u9002\u5e94\u8c03\u6574\u3002</p> <pre><code>grad_squared = 0\nfor t in range(num_steps):\n    dw = compute_gradient(w)         # \u8ba1\u7b97\u68af\u5ea6\n    grad_squared += dw * dw          # \u7d2f\u52a0\u68af\u5ea6\u7684\u5e73\u65b9\u548c\n    w -= learning_rate * dw / (grad_squared.sqrt() + 1e-7)  # \u81ea\u9002\u5e94\u5b66\u4e60\u7387\u66f4\u65b0\n</code></pre> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u9002\u5e94\u7a00\u758f\u6570\u636e\uff1aAdaGrad \u7279\u522b\u9002\u5408\u5904\u7406\u7a00\u758f\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u6839\u636e\u5386\u53f2\u68af\u5ea6\u52a8\u6001\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u4f7f\u5f97\u9891\u7e41\u66f4\u65b0\u7684\u53c2\u6570\u5b66\u4e60\u7387\u9010\u6e10\u51cf\u5c0f\uff0c\u800c\u4e0d\u5e38\u66f4\u65b0\u7684\u53c2\u6570\u5219\u4fdd\u7559\u8f83\u5927\u7684\u5b66\u4e60\u7387\u3002</li> <li>\u65e0\u9700\u624b\u52a8\u8c03\u6574\u5b66\u4e60\u7387\uff1a\u901a\u8fc7\u81ea\u52a8\u8c03\u8282\u5b66\u4e60\u7387\uff0cAdaGrad \u51cf\u8f7b\u4e86\u624b\u52a8\u8c03\u53c2\u7684\u8d1f\u62c5\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u8fc7\u5ea6\u8870\u51cf\uff1a\u7531\u4e8e\u5b66\u4e60\u7387\u968f\u65f6\u95f4\u5355\u8c03\u51cf\u5c11\uff0cAdaGrad \u5728\u8bad\u7ec3\u7684\u540e\u671f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b66\u4e60\u7387\u8fc7\u5c0f\uff0c\u8fdb\u800c\u4f7f\u5f97\u6a21\u578b\u96be\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</li> </ul> <p>RMSprop \u7684\u6539\u8fdb\uff1a</p> <p>\u4e3a\u4e86\u89e3\u51b3 AdaGrad \u7684\u5b66\u4e60\u7387\u4e0d\u65ad\u4e0b\u964d\u95ee\u9898\uff0cRMSprop \u5728\u8ba1\u7b97\u68af\u5ea6\u5e73\u65b9\u7d2f\u79ef\u65f6\u5f15\u5165\u4e86\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747\uff08decay rate\uff09\uff0c\u907f\u514d\u7d2f\u79ef\u8fc7\u591a\u7684\u5386\u53f2\u4fe1\u606f\uff0c\u4ece\u800c\u8ba9\u5b66\u4e60\u7387\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u76f8\u5bf9\u7a33\u5b9a\u3002RMSprop \u5728\u5904\u7406\u975e\u51f8\u95ee\u9898\u65f6\u66f4\u4e3a\u6709\u6548\u3002</p> <pre><code>grad_squared = 0\nfor t in range(num_steps):\n    dw = compute_gradient(w)\n    grad_squared = decay_date * grad_squared + \uff081 - decay_rate) * dw * dw\n    w -= learning_rate * dw / (grad_squared.sqrt() + 1e-7)  # \u81ea\u9002\u5e94\u5b66\u4e60\u7387\u66f4\u65b0\n</code></pre> <p>decay_rate: \u8fd9\u4e2a\u53c2\u6570\u63a7\u5236\u5386\u53f2\u68af\u5ea6\u7684\u8870\u51cf\u901f\u5ea6\uff0c\u4f7f\u4f18\u5316\u7b97\u6cd5\u5bf9\u65b0\u68af\u5ea6\u4fe1\u606f\u66f4\u52a0\u654f\u611f\u3002\u5e38\u89c1\u503c\u662f 0.9\u3002</p> <p>Adam:RMSProp + Momentum</p> <p>Adam \u7ed3\u5408\u4e86 RMSprop \u548c\u52a8\u91cf\uff08Momentum\uff09\u7684\u4f18\u70b9\uff0c\u4e0d\u4ec5\u8003\u8651\u68af\u5ea6\u7684\u5747\u503c\uff0c\u8fd8\u8003\u8651\u68af\u5ea6\u7684\u65b9\u5dee\u3002Adam \u901a\u8fc7\u4e00\u9636\u77e9\u4f30\u8ba1\uff08\u52a8\u91cf\uff09\u548c\u4e8c\u9636\u77e9\u4f30\u8ba1\uff08\u68af\u5ea6\u5e73\u65b9\u7684\u6307\u6570\u79fb\u52a8\u5e73\u5747\uff09\u81ea\u9002\u5e94\u5730\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u5728\u5904\u7406\u975e\u51f8\u4f18\u5316\u95ee\u9898\u548c\u566a\u58f0\u6570\u636e\u65f6\u975e\u5e38\u7a33\u5065\uff0c\u5e76\u4e14\u901a\u5e38\u4e0d\u9700\u8981\u8fc7\u591a\u7684\u8d85\u53c2\u6570\u8c03\u6574\u3002</p> <pre><code>moment1 = 0  # \u521d\u59cb\u5316\u4e00\u9636\u52a8\u91cf\nmoment2 = 0  # \u521d\u59cb\u5316\u4e8c\u9636\u52a8\u91cf\nfor t in range(num_steps):\n    dw = compute_gradient(w)  # \u8ba1\u7b97\u5f53\u524d\u53c2\u6570\u7684\u68af\u5ea6\n    moment1 = beta1 * moment1 + (1 - beta1) * dw  # \u66f4\u65b0\u4e00\u9636\u52a8\u91cf\uff08\u7c7b\u4f3c\u4e8e\u52a8\u91cf\uff09\n    moment2 = beta2 * moment2 + (1 - beta2) * dw * dw  # \u66f4\u65b0\u4e8c\u9636\u52a8\u91cf\uff08\u7c7b\u4f3c\u4e8eRMSprop\uff09\n    w -= learning_rate * moment1 / (moment2.sqrt() + 1e-7)  # \u4f7f\u7528\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u66f4\u65b0\u53c2\u6570\n</code></pre> <ul> <li> <p>\u4e00\u9636\u52a8\u91cf (moment1)\uff1a <code>moment1</code> \u662f\u68af\u5ea6\u7684\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747\uff0c\u7c7b\u4f3c\u4e8e\u52a8\u91cf\u4f18\u5316\u4e2d\u7684\u7d2f\u79ef\u68af\u5ea6\uff0c\u65e8\u5728\u5e73\u6ed1\u68af\u5ea6\u66f4\u65b0\u3002<code>beta1</code> \u63a7\u5236\u7740\u4e00\u9636\u52a8\u91cf\u7684\u8870\u51cf\u7387\uff0c\u901a\u5e38\u53d6\u503c\u4e3a 0.9\u3002</p> </li> <li> <p>\u4e8c\u9636\u52a8\u91cf (moment2)\uff1a <code>moment2</code> \u662f\u68af\u5ea6\u5e73\u65b9\u7684\u6307\u6570\u52a0\u6743\u79fb\u52a8\u5e73\u5747\uff0c\u7528\u4e8e\u8c03\u6574\u5b66\u4e60\u7387\u3002<code>beta2</code> \u63a7\u5236\u7740\u4e8c\u9636\u52a8\u91cf\u7684\u8870\u51cf\u7387\uff0c\u901a\u5e38\u53d6\u503c\u4e3a 0.999\u3002\u8fd9\u53ef\u4ee5\u770b\u4f5c\u662f RMSprop \u4e2d\u7684\u5747\u65b9\u6839\u79fb\u52a8\u5e73\u5747\u3002</p> </li> </ul> <p>\u5728 Adam \u4e2d\uff0c\u4e00\u822c\u8fd8\u9700\u8981\u5bf9\u4e00\u9636\u548c\u4e8c\u9636\u52a8\u91cf\u8fdb\u884c<code>\u504f\u5dee\u4fee\u6b63</code>\uff0c\u7279\u522b\u662f\u5728\u524d\u51e0\u6b21\u8fed\u4ee3\u65f6\u3002\u504f\u5dee\u4fee\u6b63\u53ef\u4ee5\u63d0\u9ad8\u7b97\u6cd5\u7684\u6536\u655b\u6027\u80fd\u3002</p> <pre><code>moment1 = 0\nmoment2 = 0\nfor t in range(1, num_steps + 1):\n    dw = compute_gradient(w)\n    moment1 = beta1 * moment1 + (1 - beta1) * dw\n    moment2 = beta2 * moment2 + (1 - beta2) * dw * dw\n\n    # \u504f\u5dee\u4fee\u6b63\n    m1_hat = moment1 / (1 - beta1**t)\n    m2_hat = moment2 / (1 - beta2**t)\n\n    w -= learning_rate * m1_hat / (m2_hat.sqrt() + 1e-7)\n</code></pre> <p>\u8fd9\u79cd\u504f\u5dee\u4fee\u6b63\u7684\u76ee\u7684\u662f\u51cf\u5c11\u521d\u59cb\u9636\u6bb5\u4f30\u8ba1\u503c\u7684\u504f\u5dee\uff0c\u5c24\u5176\u662f\u5728\u8fed\u4ee3\u6b21\u6570\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u3002</p> <p></p>"},{"location":"CV/Lecture4_Optimization/#44-\u5c0f\u7ed3","title":"4.4 \u5c0f\u7ed3","text":"<p>\u4fe1\u606f\u6d41\u7684\u603b\u7ed3\u56fe\u4f8b\u3002\u6570\u636e\u96c6\u4e2d\u7684(x, y)\u662f\u7ed9\u5b9a\u7684\u3002\u6743\u91cd\u4ece\u4e00\u4e2a\u968f\u673a\u6570\u5b57\u5f00\u59cb\uff0c\u4e14\u53ef\u4ee5\u6539\u53d8\u3002\u5728\u524d\u5411\u4f20\u64ad\u65f6\uff0c\u8bc4\u5206\u51fd\u6570\u8ba1\u7b97\u51fa\u7c7b\u522b\u7684\u5206\u7c7b\u8bc4\u5206\u5e76\u5b58\u50a8\u5728\u5411\u91cf f \u4e2d\u3002\u635f\u5931\u51fd\u6570\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a\u6570\u636e\u635f\u5931\u548c\u6b63\u5219\u5316\u635f\u5931\u3002\u5176\u4e2d\uff0c\u6570\u636e\u635f\u5931\u8ba1\u7b97\u7684\u662f\u5206\u7c7b\u8bc4\u5206 f \u548c\u5b9e\u9645\u6807\u7b7e y \u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u6b63\u5219\u5316\u635f\u5931\u53ea\u662f\u4e00\u4e2a\u5173\u4e8e\u6743\u91cd\u7684\u51fd\u6570\u3002\u5728\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8ba1\u7b97\u6743\u91cd\u7684\u68af\u5ea6\uff08\u5982\u679c\u613f\u610f\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u6570\u636e\u4e0a\u7684\u68af\u5ea6\uff09\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u4eec\u6765\u5b9e\u73b0\u53c2\u6570\u7684\u66f4\u65b0\u3002</p> <p>\u5728\u672c\u8282\u8bfe\u4e2d\uff1a</p> <ul> <li>\u5c06\u635f\u5931\u51fd\u6570\u6bd4\u4f5c\u4e86\u4e00\u4e2a \u9ad8\u7ef4\u5ea6\u7684\u6700\u4f18\u5316\u5730\u5f62\uff0c\u5e76\u5c1d\u8bd5\u5230\u8fbe\u5b83\u7684\u6700\u5e95\u90e8\u3002\u6700\u4f18\u5316\u7684\u5de5\u4f5c\u8fc7\u7a0b\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u8499\u7740\u773c\u775b\u7684\u5f92\u6b65\u8005\u5e0c\u671b\u6478\u7d22\u7740\u8d70\u5230\u5c71\u7684\u5e95\u90e8\u3002\u5728\u4f8b\u5b50\u4e2d\uff0c\u53ef\u89c1 SVM \u7684\u635f\u5931\u51fd\u6570\u662f\u5206\u6bb5\u7ebf\u6027\u7684\uff0c\u5e76\u4e14\u662f\u7897\u72b6\u7684\u3002</li> </ul> <p>\u901a\u8fc7\u8fed\u4ee3\u4f18\u5316\uff0c\u4ece\u968f\u673a\u521d\u59cb\u6743\u91cd\u51fa\u53d1\uff0c\u9010\u6b65\u964d\u4f4e\u635f\u5931\u503c\u3002</p> <ul> <li> <p>\u68af\u5ea6\u8868\u793a\u51fd\u6570\u5728\u5f53\u524d\u70b9\u6700\u9661\u5ced\u7684\u4e0a\u5347\u65b9\u5411\uff0c\u901a\u8fc7\u53cd\u5411\u64cd\u4f5c\u6765\u66f4\u65b0\u6743\u91cd\uff0c\u4f7f\u5f97\u635f\u5931\u6700\u5c0f\u5316\u3002\u4ecb\u7ecd\u4e86\u5229\u7528\u6709\u9650\u7684\u5dee\u503c\u6765\u8fd1\u4f3c\u8ba1\u7b97\u68af\u5ea6\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5b9e\u73b0\u7b80\u5355\u4f46\u662f\u6548\u7387\u8f83\u4f4e\uff08\u6709\u9650\u5dee\u503c\u5c31\u662fh\uff0c\u7528\u6765\u8ba1\u7b97\u6570\u503c\u68af\u5ea6\uff09\u3002</p> </li> <li> <p>\u53c2\u6570\u66f4\u65b0\u9700\u8981\u6709\u6280\u5de7\u5730\u8bbe\u7f6e \u6b65\u957f\u3002\u4e5f\u53eb\u5b66\u4e60\u7387\u3002\u5982\u679c\u6b65\u957f\u592a\u5c0f\uff0c\u8fdb\u5ea6\u7a33\u5b9a\u4f46\u662f\u7f13\u6162\uff0c\u5982\u679c\u6b65\u957f\u592a\u5927\uff0c\u8fdb\u5ea6\u5feb\u4f46\u662f\u53ef\u80fd\u6709\u98ce\u9669\u3002</p> </li> <li> <p>\u8ba8\u8bba\u6743\u8861\u4e86\u6570\u503c\u68af\u5ea6\u6cd5\u548c\u5206\u6790\u68af\u5ea6\u6cd5\u3002\u6570\u503c\u68af\u5ea6\u6cd5\u8ba1\u7b97\u7b80\u5355\uff0c\u4f46\u7ed3\u679c\u53ea\u662f\u8fd1\u4f3c\u4e14\u8017\u8d39\u8ba1\u7b97\u8d44\u6e90\u3002\u5206\u6790\u68af\u5ea6\u6cd5\u8ba1\u7b97\u51c6\u786e\u8fc5\u901f\u4f46\u662f\u5b9e\u73b0\u5bb9\u6613\u51fa\u9519\uff0c\u800c\u4e14\u9700\u8981\u5bf9\u68af\u5ea6\u516c\u5f0f\u8fdb\u884c\u63a8\u5bfc\u7684\u6570\u5b66\u57fa\u672c\u529f\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u4e2d\u4f7f\u7528\u5206\u6790\u68af\u5ea6\u6cd5\uff0c\u7136\u540e\u4f7f\u7528 \u68af\u5ea6\u68c0\u67e5 \u6765\u68c0\u67e5\u5176\u5b9e\u73b0\u6b63\u786e\u4e0e\u5426\uff0c\u5176\u672c\u8d28\u5c31\u662f\u5c06\u5206\u6790\u68af\u5ea6\u6cd5\u7684\u7ed3\u679c\u4e0e\u6570\u503c\u68af\u5ea6\u6cd5\u7684\u8ba1\u7b97\u7ed3\u679c\u5bf9\u6bd4\u3002</p> </li> <li> <p>\u4ecb\u7ecd\u4e86 \u68af\u5ea6\u4e0b\u964d \u7b97\u6cd5\uff0c\u5b83\u5728\u5faa\u73af\u4e2d\u8fed\u4ee3\u5730\u8ba1\u7b97\u68af\u5ea6\u5e76\u66f4\u65b0\u53c2\u6570\u3002</p> </li> </ul> <p>\u9884\u544a\uff1a\u8fd9\u8282\u8bfe\u7684\u6838\u5fc3\u5185\u5bb9\u662f\uff1a\u7406\u89e3\u5e76\u80fd\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5173\u4e8e\u6743\u91cd\u7684\u68af\u5ea6\uff0c\u662f\u8bbe\u8ba1\u3001\u8bad\u7ec3\u548c\u7406\u89e3\u795e\u7ecf\u7f51\u7edc\u7684\u6838\u5fc3\u80fd\u529b\u3002\u4e0b\u8282\u4e2d\uff0c\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6765\u9ad8\u6548\u5730\u8ba1\u7b97\u68af\u5ea6\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684 \u53cd\u5411\u4f20\u64ad\uff08 backpropagation\uff09\u673a\u5236\u3002\u8be5\u673a\u5236\u80fd\u591f\u5bf9\u5305\u542b\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u5185\u7684\u51e0\u4e4e\u6240\u6709\u7c7b\u578b\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u635f\u5931\u51fd\u6570\u8fdb\u884c\u9ad8\u6548\u7684\u6700\u4f18\u5316\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/","title":"Neural Network","text":"<p> \u7ea6 8537 \u4e2a\u5b57  22 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 43 \u5206\u949f</p>"},{"location":"CV/Lecture5_Neural_Networks/#feature-transforms","title":"feature transforms","text":"<ul> <li> <p>\u4ece Geometric \u51e0\u4f55\u89c6\u89d2\u5206\u6790\uff1a\u7ebf\u6027\u5206\u7c7b\u5668\u662f\u5728\u753b\u9ad8\u7ef4\u8d85\u5e73\u9762\uff0c\u5c06\u8fd9\u4e2a\u9ad8\u7ef4\u7684\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u5206\u5272\u6210\u4e24\u5757</p> </li> <li> <p>\u4ece\u89c6\u89c9\u89d2\u5ea6 Vision Viewpoint \u5206\u6790\uff0c\u6211\u4eec\u8ba4\u4e3a\u7ebf\u6027\u5206\u7c7b\u5668\u53ea\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u5b66\u4e60\u4e00\u4e2a\u6a21\u677f\uff0c<code>\u56e0\u6b64\u5b83\u4eec\u65e0\u6cd5\u4ee3\u8868\u540c\u4e00\u5bf9\u8c61\u7c7b\u522b\u7684\u591a\u79cd\u6a21\u5f0f\u3002</code></p> </li> </ul> <p>\u6a21\u677f\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u793a\u76ee\u6807\u5bf9\u8c61\u7279\u5f81\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u91c7\u7528\u591a\u79cd\u5f62\u5f0f\u3002\u5728\u6a21\u677f\u5339\u914d\u548c\u6a21\u677f\u5b66\u4e60\u4efb\u52a1\u4e2d\uff0c\u6a21\u677f\u88ab\u7528\u6765\u5728\u8f93\u5165\u6570\u636e\u4e2d\u641c\u7d22\u548c\u8bc6\u522b\u76ee\u6807\u5bf9\u8c61</p> <p></p> <p>linear classifier \u7684\u5c40\u9650\u6027\uff1a\u53ea\u80fd\u5904\u7406\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\uff1a</p> <ul> <li>\u7ebf\u6027\u5206\u7c7b\u5668\u53ea\u80fd\u901a\u8fc7\u4e00\u6761\u76f4\u7ebf\uff08\u6216\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u8d85\u5e73\u9762\uff09\u5c06\u6570\u636e\u5206\u5272\u5f00\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\uff08\u5373\u4e0d\u80fd\u7528\u4e00\u6761\u76f4\u7ebf\u6216\u4e00\u4e2a\u8d85\u5e73\u9762\u5206\u9694\u7684\u7c7b\uff09\uff0c\u5b83\u4eec\u7684\u8868\u73b0\u5f80\u5f80\u8f83\u5dee\u3002 \u6bd4\u5982\uff0cXOR \u95ee\u9898\u4e2d\uff0c\u4e24\u4e2a\u7c7b\u7684\u6570\u636e\u70b9\u65e0\u6cd5\u7528\u4e00\u6761\u76f4\u7ebf\u5206\u5f00\uff0c\u7ebf\u6027\u5206\u7c7b\u5668\u5bf9\u6b64\u65e0\u80fd\u4e3a\u529b\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>\u5bf9\u4e8e\u67d0\u4e9b\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u51fa\u4e00\u79cd <code>\u7279\u5f81\u53d8\u6362</code> \u7684\u65b9\u5f0f <code>\uff08feature transform\uff09</code>\uff0c\u5c06\u8fd9\u4e9b\u6570\u636e\u6620\u5c04\u5230\u7279\u5f81\u7a7a\u95f4\u53bb\u8fdb\u884c\u5206\u7c7b\uff0c\u6216\u8005\u8bf4\u627e\u5230\u4e00\u79cd\u5408\u9002\u5206\u7c7b\u7684\u6620\u5c04\u65b9\u5f0f\u6765\u5b8c\u6210\u5206\u7c7b\u4efb\u52a1\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u514b\u670d\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u4e00\u4e9b\u7f3a\u70b9\uff1b\u5728\u8fd9\u91cc\u6211\u4eec\u662f\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u8bad\u7ec3\u5206\u7c7b\u5668</li> </ul> <p></p> <p>\u8fd9\u5c31\u662f\u4e00\u4e2a \u5c06\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u53d8\u6362\u5230\u6781\u5750\u6807\u7cfb(polar coordinate)\u4e0b\u7684\u4f8b\u5b50\uff0c\u539f\u672c\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0b\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u96c6\uff0c\u5728\u6781\u5750\u6807\u7cfb\u4e0b\u7ebf\u6027\u53ef\u5206\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u7279\u5f81\u7a7a\u95f4\u4e0b\u6784\u5efa\u7ebf\u6027\u5206\u7c7b\u5668</p> <p>\u7279\u5f81\u53d8\u6362\u7684 \u6838\u5fc3\u601d\u60f3 \u662f\u5c06\u539f\u59cb\u8f93\u5165\u7279\u5f81\u6620\u5c04\u5230\u4e00\u4e2a \u66f4\u9ad8\u7ef4\u5ea6\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u4f7f\u5f97\u5728\u8be5\u7a7a\u95f4\u4e2d\uff0c\u539f\u672c\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u53d8\u5f97\u7ebf\u6027\u53ef\u5206\u3002\u901a\u8fc7\u7279\u5f81\u53d8\u6362\uff0c\u7ebf\u6027\u5206\u7c7b\u5668\u5728\u65b0\u7279\u5f81\u7a7a\u95f4\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528 \u7ebf\u6027\u51b3\u7b56\u8fb9\u754c \u6765\u5206\u5272\u6570\u636e\uff0c\u4ece\u800c\u514b\u670d\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u95ee\u9898\u3002</p> <p>\u4f60\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6cd5\u975e\u5e38\u5173\u952e\u3002\u7279\u5f81\u53d8\u6362\uff08Feature Transform\uff09\u786e\u5b9e\u662f\u89e3\u51b3\u7ebf\u6027\u5206\u7c7b\u5668\u5c40\u9650\u6027\u7684\u4e00\u79cd\u6709\u6548\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e00\u65b9\u6cd5\u7684\u8be6\u7ec6\u89e3\u91ca\u548c\u6269\u5c55\uff1a</p> <p>\u7279\u5f81\u53d8\u6362\uff08Feature Transform\uff09</p> <p>\u7279\u5f81\u53d8\u6362\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u539f\u59cb\u8f93\u5165\u7279\u5f81\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u5ea6\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u4f7f\u5f97\u5728\u8be5\u7a7a\u95f4\u4e2d\uff0c\u539f\u672c\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u53d8\u5f97\u7ebf\u6027\u53ef\u5206\u3002\u901a\u8fc7\u7279\u5f81\u53d8\u6362\uff0c\u7ebf\u6027\u5206\u7c7b\u5668\u5728\u65b0\u7279\u5f81\u7a7a\u95f4\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u6765\u5206\u5272\u6570\u636e\uff0c\u4ece\u800c\u514b\u670d\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u95ee\u9898\u3002</p> <ol> <li> <p>\u8bbe\u8ba1\u7279\u5f81\u6620\u5c04\u51fd\u6570\uff1a</p> </li> <li> <p>\u9009\u62e9\u6216\u8bbe\u8ba1\u4e00\u4e2a\u7279\u5f81\u6620\u5c04\u51fd\u6570 \\(\\phi(x)\\)\uff0c\u5c06\u539f\u59cb\u8f93\u5165\u7279\u5f81 \\(\\textbf{x}\\) \u6620\u5c04\u5230\u4e00\u4e2a\u9ad8\u7ef4\u7a7a\u95f4 \\(\\mathbf{z} = \\phi(\\mathbf{x})\\)\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e8c\u6b21\u7279\u5f81\u53d8\u6362\uff0c$\\phi(\\mathbf{x}) $ \u53ef\u4ee5\u5c06\u8f93\u5165 \\(\\mathbf{x} = [x_1, x_2]\\) \u6620\u5c04\u4e3a \\(\\mathbf{z} = [x_1, x_2, x_1^2, x_2^2, x_1x_2]\\)\u3002</li> </ul> </li> <li> <p>\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u8bad\u7ec3\u7ebf\u6027\u5206\u7c7b\u5668\uff1a</p> </li> <li> <p>\u5728\u65b0\u7684\u7279\u5f81\u7a7a\u95f4\u4e2d\u8bad\u7ec3\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u5982\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u3001\u7ebf\u6027\u56de\u5f52\u5206\u7c7b\u5668\u7b49\u3002\u7531\u4e8e\u6570\u636e\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u53ef\u80fd\u53d8\u5f97\u7ebf\u6027\u53ef\u5206\uff0c\u7ebf\u6027\u5206\u7c7b\u5668\u53ef\u4ee5\u5728\u6b64\u7a7a\u95f4\u4e2d\u627e\u5230\u5408\u9002\u7684\u51b3\u7b56\u8fb9\u754c\u3002</p> </li> <li> <p>\u6838\u65b9\u6cd5\u7684\u5e94\u7528\uff1a</p> </li> <li>\u4e3a\u4e86\u907f\u514d\u663e\u5f0f\u8ba1\u7b97\u9ad8\u7ef4\u7279\u5f81\uff0c\u6838\u65b9\u6cd5\u901a\u8fc7\u8ba1\u7b97\u539f\u59cb\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u70b9\u79ef\u76f4\u63a5\u5f97\u5230\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u70b9\u79ef\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002\u4f8b\u5982\uff0c\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u4e2d\u4f7f\u7528\u7684\u9ad8\u65af\u6838\uff08RBF \u6838\uff09\u548c\u591a\u9879\u5f0f\u6838\u7b49\uff0c\u5c31\u662f\u8fd9\u79cd\u601d\u60f3\u7684\u5177\u4f53\u5b9e\u73b0\u3002</li> </ol>"},{"location":"CV/Lecture5_Neural_Networks/#color-histogram--histogram-of-oriented-gradients","title":"Color Histogram &amp; Histogram of Oriented Gradients","text":"<p>\u5b9a\u5411\u68af\u5ea6\u76f4\u65b9\u56fe\uff08Histogram of Oriented Gradients, HOG\uff09\u548c\u989c\u8272\u76f4\u65b9\u56fe(Color Histogram)\u662f\u4e24\u79cd\u5e38\u7528\u7684\u56fe\u50cf\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\uff0c\u5b83\u4eec\u5728\u56fe\u50cf\u5904\u7406\u4e2d\u5177\u6709\u4e0d\u540c\u7684\u4f18\u52bf\u3002</p> <p></p> <p>\u989c\u8272\u76f4\u65b9\u56fe\u901a\u8fc7\u5c06\u56fe\u50cf\u4e2d\u7684\u989c\u8272\u7a7a\u95f4\u7684 RGB \u5149 \u8c31\u8fdb\u884c\u5206\u89e3\u4e0e\u7edf\u8ba1\uff0c\u7edf\u8ba1\u56fe\u50cf\u4e2d \u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u7684\u9891\u7387\u6765\u63cf\u8ff0\u56fe\u50cf\u7684\u989c\u8272\u5206\u5e03\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e22\u5f03\u4e86\u56fe\u50cf\u4e2d\u7684\u7a7a\u95f4\u4fe1\u606f\uff0c\u53ea\u5173\u5fc3\u56fe\u50cf\u4e2d\u7684\u989c\u8272\u5206\u5e03\uff0c\u66f4\u5177\u6709 \u7a7a\u95f4\u4e0d\u53d8\u6027\uff0c\u901a\u5e38\u7528\u4e8e\u56fe\u50cf\u68c0\u7d22\u548c\u5206\u7c7b\u3002<code>\u989c\u8272\u76f4\u65b9\u56fe\u7684\u4f18\u70b9\u5728\u4e8e\u5b83\u5bf9\u56fe\u50cf\u7684\u65cb\u8f6c\u3001\u5e73\u79fb\u548c\u5c3a\u5ea6\u53d8\u5316\u5177\u6709\u9c81\u68d2\u6027\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u56fe\u50cf\u4e2d\u7684\u7a7a\u95f4\u5e03\u5c40\u3002</code></p> <p></p> <p>HOG \u7279\u5f81\u901a\u8fc7\u7edf\u8ba1\u56fe\u50cf\u5c40\u90e8\u533a\u57df\u5185\u7684\u68af\u5ea6\u65b9\u5411\u5206\u5e03\u6765\u63cf\u8ff0\u56fe\u50cf\u7684\u5f62\u72b6\u548c\u7eb9\u7406\u4fe1\u606f\uff0c\u7279\u522b\u9002\u5408\u6355\u6349\u7269\u4f53\u7684\u8fb9\u7f18\u548c\u8f6e\u5ed3\u3002\u4e0e\u989c\u8272\u76f4\u65b9\u56fe\u76f8\u53cd\uff0c\u629b\u5f03\u989c\u8272\u4fe1\u606f\uff0c\u4fdd\u7559\u7a7a\u95f4\u4fe1\u606f\u3002</p> <p>\u5f62\u72b6\u4e0e\u8fb9\u7f18\u68c0\u6d4b\uff1aHOG \u7279\u522b\u64c5\u957f\u6355\u6349\u7269\u4f53\u7684\u5f62\u72b6\u548c\u8f6e\u5ed3\u4fe1\u606f\uff0c\u5bf9\u5149\u7167\u548c\u5c40\u90e8\u5bf9\u6bd4\u5ea6\u5177\u6709\u8f83\u597d\u7684\u9c81\u68d2\u6027\u3002</p> <p>\u65b9\u5411\u4e0d\u53d8\u6027\uff1a\u7531\u4e8e\u68af\u5ea6\u65b9\u5411\u7684\u7edf\u8ba1\uff0cHOG \u5728\u6355\u6349\u76f8\u540c\u5f62\u72b6\u4f46\u65b9\u5411\u4e0d\u540c\u7684\u7269\u4f53\u65f6\u8868\u73b0\u826f\u597d\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#bag-of-words-data-driven","title":"Bag-of-Words Data-Driven","text":"<p>\u89c6\u89c9\u8bcd\u888b\u6a21\u578b\uff08Visual Bag-of-Words, BoW\uff09\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u56fe\u50cf\u7279\u5f81\u8868\u793a\u65b9\u6cd5\uff0c\u5b83\u5c06\u539f\u672c\u7528\u4e8e\u6587\u672c\u5904\u7406\u7684\u8bcd\u888b\u6a21\u578b\uff08Bag-of-Words, BoW\uff09\u601d\u60f3\u5f15\u5165\u5230\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u3002\u901a\u8fc7\u5c06\u56fe\u50cf\u63cf\u8ff0\u4e3a\u4e00\u7ec4\u201c\u89c6\u89c9\u8bcd\u201d\u7684\u51fa\u73b0\u9891\u7387\uff0c\u8fd9\u79cd\u65b9\u6cd5\u80fd\u591f\u6709\u6548\u5730\u6355\u6349\u56fe\u50cf\u7684\u5c40\u90e8\u7279\u5f81\uff0c\u5e76\u5728\u5206\u7c7b\u548c\u68c0\u7d22\u4efb\u52a1\u4e2d\u8868\u73b0\u826f\u597d\u3002</p> <p>\u968f\u673a\u8865\u4e01\u63d0\u53d6\uff1a</p> <ul> <li>\u4ece\u8bad\u7ec3\u56fe\u50cf\u4e2d\u63d0\u53d6\u5927\u91cf\u4e0d\u540c\u6bd4\u4f8b\u548c\u5927\u5c0f\u7684\u968f\u673a\u8865\u4e01\uff08patches\uff09\uff0c\u8fd9\u4e9b\u8865\u4e01\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684\u7eb9\u7406\u3001\u8fb9\u7f18\u548c\u989c\u8272\u4fe1\u606f\u3002</li> </ul> <p>\u7279\u5f81\u63cf\u8ff0\u4e0e\u805a\u7c7b\uff1a</p> <ul> <li>\u5bf9\u6bcf\u4e2a\u8865\u4e01\u8fdb\u884c\u7279\u5f81\u63cf\u8ff0\uff0c\u5982\u4f7f\u7528 SIFT\uff08Scale-Invariant Feature Transform\uff09\u6216 SURF\uff08Speeded-Up Robust Features\uff09\u7b49\u65b9\u6cd5\uff0c\u63d0\u53d6\u5173\u952e\u70b9\u7684\u5c40\u90e8\u7279\u5f81\u5411\u91cf\u3002</li> <li>\u5bf9\u8fd9\u4e9b\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u805a\u7c7b\u5206\u6790\uff08\u901a\u5e38\u4f7f\u7528 K-means \u805a\u7c7b\uff09\uff0c\u5c06\u5176\u5f52\u4e3a KKK \u4e2a\u7c07\u3002\u6bcf\u4e2a\u7c07\u7684\u4e2d\u5fc3\u5c31\u4ee3\u8868\u4e00\u4e2a\u201c\u89c6\u89c9\u8bcd\u201d\u3002</li> </ul> <p>\u6784\u5efa\u89c6\u89c9\u8bcd\u4ee3\u7801\u672c\uff1a</p> <ul> <li>\u901a\u8fc7\u805a\u7c7b\u5f97\u5230\u7684 K \u4e2a \u89c6\u89c9\u8bcd Visual Word \u5f62\u6210\u4e86\u6240\u8c13\u7684\u201c\u4ee3\u7801\u672c\u201d\uff08codebook\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u201c\u89c6\u89c9\u8bcd\u5178\u201d\uff08visual vocabulary\uff09\u3002\u8fd9\u4e2a\u4ee3\u7801\u672c\u7c7b\u4f3c\u4e8e\u6587\u672c\u4e2d\u7684\u8bcd\u6c47\u8868\uff0c\u7528\u6765\u63cf\u8ff0\u8bad\u7ec3\u96c6\u4e2d\u5e38\u89c1\u7684\u89c6\u89c9\u7279\u5f81\u3002</li> </ul> <p>\u56fe\u50cf\u7f16\u7801\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u56fe\u50cf\uff0c\u7528\u4ee3\u7801\u672c\u4e2d\u7684\u89c6\u89c9\u8bcd\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\u3002\u5177\u4f53\u505a\u6cd5\u662f\uff0c\u5c06\u56fe\u50cf\u4e2d\u7684\u5c40\u90e8\u7279\u5f81\u6620\u5c04\u5230\u6700\u8fd1\u7684\u89c6\u89c9\u8bcd\uff0c\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u89c6\u89c9\u8bcd\u5728\u56fe\u50cf\u4e2d\u51fa\u73b0\u7684\u9891\u7387\uff0c\u5f62\u6210\u4e00\u4e2a\u89c6\u89c9\u8bcd\u76f4\u65b9\u56fe\u3002</li> </ul> <p>\u5206\u7c7b\u4e0e\u68c0\u7d22\uff1a</p> <ul> <li>\u751f\u6210\u7684\u89c6\u89c9\u8bcd\u76f4\u65b9\u56fe\u5411\u91cf\u4f5c\u4e3a\u56fe\u50cf\u7684\u7279\u5f81\u8868\u793a\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u8f93\u5165\u5230\u5206\u7c7b\u5668\uff08\u5982\u652f\u6301\u5411\u91cf\u673a SVM\uff09\u4e2d\u8fdb\u884c\u8bad\u7ec3\u548c\u5206\u7c7b\uff0c\u6216\u7528\u4e8e\u56fe\u50cf\u68c0\u7d22\u3002</li> </ul> <p></p> <p>\u9c81\u68d2\u6027\uff1a\u89c6\u89c9\u8bcd\u888b\u6a21\u578b\u5bf9\u56fe\u50cf\u7684\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u5149\u7167\u53d8\u5316\u5177\u6709\u8f83\u597d\u7684\u9c81\u68d2\u6027\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u5c40\u90e8\u7279\u5f81\u800c\u975e\u6574\u4f53\u56fe\u50cf\u3002</p> <p>\u53ef\u6269\u5c55\u6027\uff1a\u4ee3\u7801\u672c\u7684\u5927\u5c0f K \u53ef\u4ee5\u8c03\u8282\uff0c\u9002\u5e94\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u96c6\u548c\u5e94\u7528\u573a\u666f\u3002</p> <p>\u53ef\u7ec4\u5408\u6027\uff1a\u89c6\u89c9\u8bcd\u888b\u6a21\u578b\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7279\u5f81\u63d0\u53d6\u5668\u548c\u5206\u7c7b\u5668\u7ec4\u5408\uff0c\u63d0\u5347\u5206\u7c7b\u6027\u80fd\u3002</p> <p></p> <p><code>\u5728\u5de6\u4fa7\u63a5\u6536\u56fe\u50cf\u7684\u539f\u59cb\u50cf\u7d20\uff0c\u53f3\u4fa7\u8fdb\u884cpredict\u5206\u7c7b\u7684\u5206\u6570\u6216\u8005\u6982\u7387\uff0c\u5728\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u4e0d\u4ec5\u4ec5\u8c03\u6574\u6700\u540e\u4e00\u5c42\u7684\u53c2\u6570\uff0c\u800c\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u53c2\u6570\uff0cmaximize the performance of classification</code></p> <ul> <li>feature extractor \u7279\u5f81\u63d0\u53d6\u5668</li> </ul> <p>\u7279\u5f81\u63d0\u53d6\u5668\u7684\u4f5c\u7528\u662f\u4ece\u539f\u59cb\u56fe\u50cf\u6570\u636e\u4e2d\u63d0\u53d6\u51fa\u80fd\u591f\u8868\u5f81\u56fe\u50cf\u5185\u5bb9\u7684\u5173\u952e\u7279\u5f81\u3002\u8fd9\u4e9b\u7279\u5f81\u901a\u5e38\u662f\u9ad8\u7ef4\u7684\u3001\u7ecf\u8fc7\u5904\u7406\u7684\u5411\u91cf\uff0c\u5b83\u4eec\u643a\u5e26\u4e86\u56fe\u50cf\u7684\u91cd\u8981\u4fe1\u606f\uff0c\u540c\u65f6\u4e22\u5f03\u4e86\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\u548c\u566a\u58f0\u3002\u7279\u5f81\u63d0\u53d6\u5668\u7684\u6548\u679c\u76f4\u63a5\u5f71\u54cd\u540e\u7eed\u6a21\u578b\u7684\u5206\u7c7b\u6216\u8bc6\u522b\u6027\u80fd\u3002</p> <p>\u624b\u5de5\u8bbe\u8ba1\u7684\u7279\u5f81\uff1a</p> <ul> <li>SIFT\uff08Scale-Invariant Feature Transform\uff09\uff1a\u63d0\u53d6\u5c3a\u5ea6\u4e0d\u53d8\u7684\u5173\u952e\u70b9\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u5c3a\u5ea6\u548c\u65cb\u8f6c\u7684\u56fe\u50cf\u3002</li> <li>HOG\uff08Histogram of Oriented Gradients\uff09\uff1a\u57fa\u4e8e\u68af\u5ea6\u65b9\u5411\u5206\u5e03\uff0c\u6355\u6349\u7269\u4f53\u7684\u8fb9\u7f18\u548c\u5f62\u72b6\u3002</li> <li>\u989c\u8272\u76f4\u65b9\u56fe\uff1a\u63cf\u8ff0\u56fe\u50cf\u4e2d\u7684\u989c\u8272\u5206\u5e03\uff0c\u5e38\u7528\u4e8e\u56fe\u50cf\u68c0\u7d22\u3002</li> </ul> <p>\u6570\u636e\u9a71\u52a8\u7684\u7279\u5f81\uff1a</p> <ul> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\uff1a\u901a\u8fc7\u591a\u5c42\u5377\u79ef\u5c42\u81ea\u52a8\u5b66\u4e60\u56fe\u50cf\u7684\u9ad8\u5c42\u6b21\u7279\u5f81\uff0c\u662f\u5f53\u524d\u6700\u6d41\u884c\u7684\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u3002</li> <li>\u89c6\u89c9\u8bcd\u888b\u6a21\u578b\uff08BoW\uff09\uff1a\u5c06\u5c40\u90e8\u7279\u5f81\u805a\u7c7b\u6210\u89c6\u89c9\u8bcd\u5178\uff0c\u7528\u89c6\u89c9\u8bcd\u7684\u76f4\u65b9\u56fe\u8868\u793a\u56fe\u50cf\u3002</li> </ul> <ul> <li>learnable model \u53ef\u5b66\u4e60\u6a21\u578b</li> </ul> <p>\u53ef\u5b66\u4e60\u6a21\u578b\u662f\u6307\u901a\u8fc7\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u8c03\u6574\u5176\u5185\u90e8\u53c2\u6570\uff0c\u4ee5\u4f18\u5316\u76ee\u6807\u51fd\u6570\u7684\u6a21\u578b\u3002\u53ef\u5b66\u4e60\u6a21\u578b\u7684\u8f93\u5165\u901a\u5e38\u662f\u7279\u5f81\u63d0\u53d6\u5668\u751f\u6210\u7684\u7279\u5f81\u5411\u91cf\uff0c\u8f93\u51fa\u5219\u662f\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u56fe\u50cf\u5206\u7c7b\u3001\u7269\u4f53\u68c0\u6d4b\u6216\u56fe\u50cf\u5206\u5272\u7b49\u4efb\u52a1\u7684\u7ed3\u679c\u3002</p> <ul> <li> <p>\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\uff1a\u7ebf\u6027\u6216\u975e\u7ebf\u6027\u6a21\u578b\uff0c\u7528\u4e8e\u4e8c\u5206\u7c7b\u6216\u591a\u5206\u7c7b\u4efb\u52a1\uff0c\u64c5\u957f\u5904\u7406\u9ad8\u7ef4\u6570\u636e\u3002</p> </li> <li> <p>k-\u8fd1\u90bb\uff08k-NN\uff09\uff1a\u57fa\u4e8e\u8ddd\u79bb\u5ea6\u91cf\u7684\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u7b80\u5355\u5206\u7c7b\u4efb\u52a1\u3002</p> </li> <li> <p>\u795e\u7ecf\u7f51\u7edc\uff1a</p> </li> <li> <p>\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\uff1a\u4f20\u7edf\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c\u9002\u5408\u5904\u7406\u7ecf\u8fc7\u7279\u5f81\u63d0\u53d6\u7684\u4f4e\u7ef4\u6570\u636e\u3002</p> </li> <li> <p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\uff1a\u7528\u4e8e\u76f4\u63a5\u5904\u7406\u56fe\u50cf\u6570\u636e\uff0c\u7ed3\u5408\u7279\u5f81\u63d0\u53d6\u4e0e\u5206\u7c7b\u529f\u80fd\u3002</p> </li> </ul>"},{"location":"CV/Lecture5_Neural_Networks/#\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0","title":"\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0","text":"<p>\u795e\u7ecf\u7f51\u7edc\u662f\u4e00\u79cd\u80fd\u591f\u5b66\u4e60\u590d\u6742\u6620\u5c04\u5173\u7cfb\u7684\u7b97\u6cd5\uff0c\u901a\u8fc7\u591a\u5c42\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u5c06\u8f93\u5165\u6570\u636e\u6620\u5c04\u5230\u8f93\u51fa\u7c7b\u522b\u3002\u4e0e\u7ebf\u6027\u5206\u7c7b\u5668\u76f8\u6bd4\uff0c\u795e\u7ecf\u7f51\u7edc\u5f15\u5165\u4e86\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f7f\u5f97\u6a21\u578b\u80fd\u591f\u62df\u5408\u66f4\u52a0\u590d\u6742\u7684\u975e\u7ebf\u6027\u6570\u636e\u3002</p> <p>\u5728\u7ebf\u6027\u5206\u7c7b\u4e00\u8282\u4e2d\uff0c\u5728\u7ed9\u51fa\u56fe\u50cf\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u4f7f\u7528 \\(f = Wx\\) \u6765\u8ba1\u7b97\u4e0d\u540c\u89c6\u89c9\u7c7b\u522b\u7684\u8bc4\u5206\uff0c\u5176\u4e2d \\(W\\) \u662f\u4e00\u4e2a\u77e9\u9635\uff0c\\(x\\) \u662f\u4e00\u4e2a\u8f93\u5165\u5217\u5411\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u56fe\u50cf\u7684\u5168\u90e8\u50cf\u7d20\u6570\u636e\u3002\u5728\u4f7f\u7528\u6570\u636e\u5e93 CIFAR-10 \u7684\u6848\u4f8b\u4e2d\uff0c\\(x\\) \u662f\u4e00\u4e2a [\\(3072 \\times 1\\)] \u7684\u5217\u5411\u91cf\uff0c\\(W\\) \u662f\u4e00\u4e2a [\\(10\\times 3072\\)] \u7684\u77e9\u9635\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u8bc4\u5206\u662f\u4e00\u4e2a\u5305\u542b 10 \u4e2a\u5206\u7c7b\u8bc4\u5206\u7684\u5411\u91cf\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u4e0e\u8ba1\u7b97","title":"\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u4e0e\u8ba1\u7b97","text":"<p>\u795e\u7ecf\u7f51\u7edc\u4e0e\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b83\u5f15\u5165\u4e86 \u9690\u85cf\u5c42\u548c\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u3002\u8fd9 <code>\u4e2a\u975e\u7ebf\u6027\u90e8\u5206\u6253\u7834\u4e86\u7ebf\u6027\u6a21\u578b\u7684\u5c40\u9650\uff0c\u4f7f\u5f97\u7f51\u7edc\u53ef\u4ee5\u5904\u7406\u590d\u6742\u7684\u975e\u7ebf\u6027\u95ee\u9898\u3002</code></p> <p>\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u516c\u5f0f\u662f \\(s = W_2max(0, W_1x)\\)\u3002</p> \\[ f = W_2\\max(0, W_1x)\\\\ W_2\\in \\mathbb{R}^{C\\times H}\\quad W_1\\in \\mathbb{R}^{H\\times D}\\quad x\\in \\mathbb{R}^{D} \\] <ul> <li>x \u662f\u8f93\u5165\u5411\u91cf\uff08\u56fe\u50cf\u50cf\u7d20\uff09</li> <li>\\(W_1\\) \u662f\u7b2c\u4e00\u5c42\u6743\u91cd\u77e9\u9635\uff0c\u5c06\u8f93\u5165\u5411\u91cf\u6620\u5c04\u5230\u9690\u85cf\u5c42</li> <li>\\(max(0,W_1x)\\) \u662f\u6fc0\u6d3b\u51fd\u6570 ReLU \u7684\u5e94\u7528\uff0c\u5b83\u5c06\u8d1f\u503c\u7f6e\u4e3a\u96f6\uff0c\u4fdd\u7559\u6b63\u503c</li> <li>\\(W_2\\) \u662f\u7b2c\u4e8c\u5c42\u7684\u6743\u91cd\u77e9\u9635\uff0c\u5c06\u9690\u85cf\u5c42\u8f93\u51fa\u6620\u5c04\u5230\u6700\u7ec8\u5206\u7c7b\u8bc4\u5206\u3002</li> </ul> <p>\u4e3e\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\\(W_1\\) \u53ef\u4ee5\u662f\u4e00\u4e2a [\\(100 \\times 3072\\)] \u7684\u77e9\u9635\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u4ece 3072 \u7ef4\u7684\u50cf\u7d20\u7a7a\u95f4\u6620\u5c04\u5230 100 \u7ef4\u7684\u9690\u85cf\u5c42\u3002\u51fd\u6570 \\(max(0,-)\\) \u662f\u975e\u7ebf\u6027\u7684\uff0c\u5b83\u4f1a\u4f5c\u7528\u5230\u6bcf\u4e2a\u5143\u7d20\u3002\u6fc0\u6d3b\u51fd\u6570 ReLU \u7684\u8f93\u51fa\u4e3a\u4e00\u4e2a 100 \u7ef4\u7684\u5411\u91cf\u3002\\(W_2\\) \u7684\u7ef4\u5ea6\u4e3a [\\(10 \\times 100\\)]\uff0c\u5c06 100 \u7ef4\u5411\u91cf\u6620\u5c04\u5230 10 \u4e2a\u5206\u7c7b\u8bc4\u5206\u3002\u7f51\u7edc\u7684\u53c2\u6570 \\(W_1\\) \u548c \\(W_2\\) \u662f\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7684\u3002\u68af\u5ea6\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\uff0c\u53cd\u5411\u4f20\u64ad\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\u9010\u5c42\u8ba1\u7b97\u6bcf\u4e2a\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u4ece\u800c\u66f4\u65b0\u5b83\u4eec\uff0c\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002</p> <p>\u6ce8\u610f\u975e\u7ebf\u6027\u51fd\u6570\u5728\u8ba1\u7b97\u4e0a\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u5982\u679c\u7565\u53bb\u8fd9\u4e00\u6b65\uff0c\u90a3\u4e48\u4e24\u4e2a\u77e9\u9635\u5c06\u4f1a\u5408\u4e8c\u4e3a\u4e00\uff0c\u5bf9\u4e8e\u5206\u7c7b\u7684\u8bc4\u5206\u8ba1\u7b97\u5c06\u91cd\u65b0\u53d8\u6210\u5173\u4e8e\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\u3002\u8fd9\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\u5c31\u662f\u6539\u53d8\u7684\u5173\u952e\u70b9</p> <p>\u5982\u679c\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\uff0c\\(f = W_2max(0,W_1x)\\)\u5c06\u53d8\u4e3a\\(s =W_2W_1x\\)\uff0c\u672c\u8d28\u4e0a\u4f9d\u7136\u662f\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668</p> <p>\u4e00\u4e2a\u4e09\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u7c7b\u6bd4\u5730\u770b\u505a \\(s = W_3max(0, W_2max(0, W_1x)\\)</p> <ul> <li>\u8f93\u5165\u5c42\uff1a \\(x\\) \u662f\u8f93\u5165\u5411\u91cf\uff0c\u901a\u5e38\u8868\u793a\u4e3a\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u5305\u542b\u539f\u59cb\u6570\u636e\u7279\u5f81\uff08\u4f8b\u5982\u56fe\u50cf\u7684\u50cf\u7d20\u503c\uff09\u3002</li> <li>\u7b2c\u4e00\u5c42\u6743\u91cd\uff1a\u77e9\u9635 \\(W_1\\) \u5c06\u8f93\u5165\u5411\u91cf \\(x\\) \u6620\u5c04\u5230\u7b2c\u4e00\u5c42\u9690\u85cf\u5355\u5143\u3002\u5047\u8bbe \\(W_1\\) \u7684\u7ef4\u5ea6\u4e3a [\\(H_1 \\times D\\)]\uff0c\u5176\u4e2d \\(D\\) \u662f\u8f93\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\uff0c \\(H_1\\) \u662f\u7b2c\u4e00\u9690\u85cf\u5c42\u7684\u7ef4\u5ea6\u3002</li> <li>\u7b2c\u4e00\u5c42\u6fc0\u6d3b\uff1a\u7ecf\u8fc7 \\(W_1\\) \u53d8\u6362\u540e\uff0c\u5e94\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570 \\(\\max(0, W_1x)\\) \uff0c\u5f15\u5165\u975e\u7ebf\u6027\u3002\u6b64\u65f6\uff0c\u8f93\u51fa\u4e3a\u4e00\u4e2a \\(H_1\\) \u7ef4\u7684\u5411\u91cf\u3002</li> <li>\u7b2c\u4e8c\u5c42\u6743\u91cd\uff1a\u77e9\u9635 \\(W_2\\) \u5c06\u7b2c\u4e00\u5c42\u7684\u8f93\u51fa\u6620\u5c04\u5230\u7b2c\u4e8c\u5c42\u9690\u85cf\u5355\u5143\uff0c\u7ef4\u5ea6\u4e3a [\\(H_2 \\times H_1\\)]\uff0c\u5176\u4e2d \\(H_2\\) \u662f\u7b2c\u4e8c\u9690\u85cf\u5c42\u7684\u7ef4\u5ea6\u3002</li> <li>\u7b2c\u4e8c\u5c42\u6fc0\u6d3b\uff1a\u518d\u6b21\u5e94\u7528 ReLU \u51fd\u6570\uff0c\u5f97\u5230\u7b2c\u4e8c\u5c42\u7684\u6fc0\u6d3b\u8f93\u51fa \\(\\max(0, W_2 \\max(0, W_1x))\\) \uff0c\u6b64\u65f6\u8f93\u51fa\u4e3a\u4e00\u4e2a \\(H_2\\) \u7ef4\u7684\u5411\u91cf\u3002</li> <li>\u7b2c\u4e09\u5c42\u6743\u91cd\uff1a\u77e9\u9635 W_3 \u5c06\u7b2c\u4e8c\u5c42\u7684\u8f93\u51fa\u6620\u5c04\u5230\u6700\u7ec8\u7684\u5206\u7c7b\u8bc4\u5206\uff0c\u7ef4\u5ea6\u4e3a [\\(C \\times H_2\\)]\uff0c\u5176\u4e2d \\(C\\) \u662f\u5206\u7c7b\u7c7b\u522b\u7684\u6570\u91cf\u3002</li> </ul> <p>\u9690\u5c42\u7684\u5c3a\u5bf8\uff08 H_1, H_2 \u7b49\uff09\u662f\u8d85\u53c2\u6570\uff0c\u51b3\u5b9a\u4e86\u7f51\u7edc\u7684\u8868\u8fbe\u80fd\u529b\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u9690\u5c42\u5c3a\u5bf8\u8d8a\u5927\uff0c\u7f51\u7edc\u7684\u62df\u5408\u80fd\u529b\u8d8a\u5f3a\uff0c\u4f46\u4e5f\u53ef\u80fd\u66f4\u5bb9\u6613\u8fc7\u62df\u5408\u3002\u6b64\u5916\uff0c\u589e\u52a0\u5c42\u6570\u548c\u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf\u8fd8\u4f1a\u663e\u8457\u589e\u52a0\u8ba1\u7b97\u8d44\u6e90\u7684\u9700\u6c42\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u56fe\u5f62\u5316\u7684\u5f62\u5f0f\u6765\u8868\u793a\u795e\u7ecf\u7f51\u7edc\uff0c\u56e0\u4e3a\u5176\u4e2d\u7684\u6bcf\u4e2a\u90e8\u5206\u90fd\u76f8\u4e92\u8fde\u63a5\uff0c\u6240\u4ee5\u4e5f\u88ab\u79f0\u4e3a<code>\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc Fully-connected neural network\uff0c\u901a\u5e38\u4e5f\u88ab\u79f0\u4e3amulti-layer-perceptron \u591a\u5c42\u611f\u77e5\u673a</code></p> <p></p> <p>\u8f93\u5165\u7684\u5411\u91cf x\uff0c\u5168\u90e8\u53c2\u4e0e\u5f71\u54cd\u9690\u85cf\u5c42\u7684\u5411\u91cf h\uff0c\u5411\u91cf h\uff0c\u5168\u90e8\u5143\u7d20\u53c2\u4e0e\u5f71\u54cd\u8f93\u51fa\u7684\u5411\u91cf s</p> <p></p> <p>\u795e\u7ecf\u7f51\u7edc\u5982\u4f55\u89e3\u51b3\u4e00\u4e2a class \u5177\u6709\u591a\u4e2a mode \u7684\u95ee\u9898\uff08\u7ebf\u6027\u5206\u7c7b\u5668\u53ea\u9002\u7528\u4e8e\u4e00\u4e2a\u6a21\u677f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u9a6c\u7684\u5934\u671d\u5411\u5de6\u8fb9\u548c\u9a6c\u7684\u5934\u671d\u5411\u53f3\u8fb9\uff0c\u65e0\u6cd5\u533a\u5206\u3002\uff09</p> <ul> <li>W1 \u7684\u4f5c\u7528\u662f\u4ece\u539f\u59cb\u8f93\u5165\u6570\u636e\u4e2d<code>\u63d0\u53d6\u521d\u7ea7\u7279\u5f81</code>\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u56fe\u50cf\u6570\u636e\uff0c\\(W_1\\) \u53ef\u4ee5\u68c0\u6d4b\u5230\u56fe\u50cf\u4e2d\u7684\u57fa\u672c\u8fb9\u7f18\u3001\u7eb9\u7406\u6216\u5c40\u90e8\u6a21\u5f0f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u56fe\u50cf\u4ece\u50cf\u7d20\u7a7a\u95f4\u8f6c\u6362\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u7279\u5f81\u7a7a\u95f4\u3002</li> </ul> <p>\u5728\u4f60\u63d0\u5230\u7684\u9a6c\u7684\u4f8b\u5b50\u4e2d\uff0c\\(W_1\\) \u53ef\u4ee5\u6355\u6349\u5230\u201c\u9a6c\u5934\u7684\u8f6e\u5ed3\u201d\u6216\u201c\u9a6c\u7684\u817f\u201d\u7684\u7279\u5f81\uff0c\u65e0\u8bba\u5b83\u4eec\u671d\u5411\u54ea\u4e2a\u65b9\u5411\u3002</p> <ul> <li>W2 \u7684\u4f5c\u7528\u662f\u5c06\u7b2c\u4e00\u5c42\u7684\u521d\u7ea7\u7279\u5f81<code>\u7ec4\u5408\u6210\u66f4\u52a0\u590d\u6742\u7684\u6a21\u5f0f</code>\u3002\u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5c06\u201c\u9a6c\u7684\u5934\u201d\u548c\u201c\u9a6c\u7684\u817f\u201d\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u6574\u4f53\u7684\u201c\u9a6c\u201d\u7684\u6982\u5ff5\u3002\u8fd9\u4e2a\u7ec4\u5408\u8fc7\u7a0b\u4f7f\u5f97\u6a21\u578b\u80fd\u591f\u6355\u6349\u66f4\u9ad8\u5c42\u6b21\u7684\u8bed\u4e49\u4fe1\u606f\u3002</li> </ul> <p>\u5728\u9a6c\u7684\u4f8b\u5b50\u4e2d\uff0c\\(W_2\\) \u53ef\u4ee5\u5b66\u4f1a\u8bc6\u522b\u201c\u9a6c\u201d\u7684\u6574\u4f53\u5f62\u8c61\uff0c\u65e0\u8bba\u5b83\u7684\u5934\u662f\u671d\u5de6\u8fd8\u662f\u671d\u53f3\u3002</p> <p>\u795e\u7ecf\u7f51\u7edc\u7684\u4f18\u8d8a\u6027\uff1a</p> <p>\u591a\u5c42\u7279\u5f81\u63d0\u53d6\uff1a</p> <ul> <li>\u795e\u7ecf\u7f51\u7edc\u7684\u591a\u5c42\u7ed3\u6784\u5141\u8bb8\u5b83<code>\u9010\u5c42\u63d0\u53d6\u548c\u7ec4\u5408\u7279\u5f81</code>\u3002\u7b2c\u4e00\u5c42\u53ef\u4ee5\u8bc6\u522b\u5c40\u90e8\u7684\u57fa\u672c\u7279\u5f81\uff08\u5982\u8fb9\u7f18\u6216\u65b9\u5411\uff09\uff0c\u800c\u540e\u7eed\u5c42\u5c06\u8fd9\u4e9b\u57fa\u672c\u7279\u5f81\u7ec4\u5408\u6210\u66f4\u590d\u6742\u7684\u6a21\u5f0f\uff08\u5982\u6574\u4f53\u5f62\u72b6\uff09\u3002</li> </ul> <p>\u975e\u7ebf\u6027\u53d8\u6362\uff1a</p> <ul> <li>\u6bcf\u4e00\u5c42\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\uff09\u4f7f\u5f97\u6a21\u578b\u53ef\u4ee5\u5904\u7406\u590d\u6742\u7684\u975e\u7ebf\u6027\u6a21\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u9a6c\u7684\u5934\u90e8\u4f4d\u7f6e\u4e0d\u540c\uff0c\u7f51\u7edc\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7<code>\u5b66\u4e60\u4e0d\u540c\u7684\u6fc0\u6d3b\u6a21\u5f0f\u6765\u8bc6\u522b\u51fa\u5b83\u662f\u540c\u4e00\u5339\u9a6c\u3002</code></li> </ul> <p>\u5e73\u79fb\u548c\u65cb\u8f6c\u4e0d\u53d8\u6027\uff1a</p> <ul> <li>\u901a\u8fc7\u8bad\u7ec3\uff0c\u7f51\u7edc\u53ef\u4ee5\u5b66\u4f1a\u8bc6\u522b\u51fa\u56fe\u50cf\u4e2d\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u5373\u4f7f\u5b83\u4eec\u7ecf\u5386\u4e86<code>\u65cb\u8f6c\u3001\u7f29\u653e\u6216\u955c\u50cf\u7b49\u53d8\u6362</code>\u3002\u6bd4\u5982\uff0c\u7b2c\u4e00\u5c42\u53ef\u4ee5\u68c0\u6d4b\u5230\u9a6c\u7684\u5934\u90e8\u8fb9\u7f18\uff0c\u800c\u65e0\u8bba\u5b83\u671d\u5411\u54ea\u4e2a\u65b9\u5411\uff0c\u7b2c\u4e8c\u5c42\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e9b\u7279\u5f81\uff0c\u4ecd\u7136\u53ef\u4ee5\u6b63\u786e\u5730\u8bc6\u522b\u4e3a\u201c\u9a6c\u201d\u3002</li> </ul>"},{"location":"CV/Lecture5_Neural_Networks/#\u795e\u7ecf\u7f51\u7edc\u7684\u51e0\u4f55\u89e3\u91ca","title":"\u795e\u7ecf\u7f51\u7edc\u7684\u51e0\u4f55\u89e3\u91ca","text":"<p>\u9762\u5bf9\u4e00\u4e2a\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u96c6\uff0c\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u529f\u80fd\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u8d85\u5e73\u9762\uff0c\u53ef\u4ee5\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u8fdb\u884c\u5206\u5272\uff0c\u4f46\u662f\u5b58\u5728\u67d0\u4e9b\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u96c6\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u65e0\u6cd5\u4f7f\u7528\u8d85\u5e73\u9762\u8fdb\u884c\u5206\u5272\u4e86\uff0c\u6216\u8005\u8bf4\u627e\u4e0d\u5230\u4e00\u79cd\u7ebf\u6027\u65b9\u5f0f\u8fdb\u884c\u5206\u5272\uff0c\u6bd4\u5982\u8bf4\u4e0b\u9762\u7684\u6570\u636e\u96c6</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u627e\u4e0d\u5230\u4e00\u4e2a\u5408\u9002\u7684\u53d8\u6362\u77e9\u9635 \\(W\\) \u6765\u5206\u5272\u8fd9\u4e2a\u6570\u636e\u96c6\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u627e\u5230\u4e00\u79cd\u975e\u7ebf\u6027\u65b9\u5f0f\u6765\u5206\u5272\uff0c\u4e5f\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210\u67d0\u4e9b\u65e0\u6cd5\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u96c6\u7684\u5206\u5272\uff0c\u6bd4\u5982\u8bf4\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u4f7f\u7528 ReLu \u51fd\u6570\u8fdb\u884c\u7279\u5f81\u53d8\u6362\uff0cReLU(z)=max(0,z) \u5b83\u5c06\u8f93\u5165\u7684\u8d1f\u503c\u53d8\u4e3a 0\uff0c\u6b63\u503c\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u79cd\u975e\u7ebf\u6027\u53d8\u6362\u80fd\u591f\u6539\u53d8\u6570\u636e\u7684\u51e0\u4f55\u7ed3\u6784\uff0c\u4f7f\u5f97\u539f\u672c\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u6570\u636e\u5728\u53d8\u6362\u540e\u7684\u7a7a\u95f4\u4e2d\u53d8\u5f97\u53ef\u5206\u3002</p> <p></p> <p>\u539f\u59cb\u7684 A \u8c61\u9650\uff0c\u6cbf\u7740 h1 \u548c h2 \u65b9\u5411\uff0c\u6570\u503c\u90fd\u5728\u589e\u5927\uff0c\u5bf9\u5e94\u53d8\u6362\u5750\u6807\u540e\u7684\u7b2c\u4e00\u8c61\u9650\u3002\u540c\u7406\u5bf9\u4e8e B \u8c61\u9650\uff0c\u6cbf\u7740 h1 \u65b9\u5411\u503c\u51cf\u5c0f\uff0c\u6cbf\u7740 h2 \u65b9\u5411\u503c\u589e\u5927\uff0c\u5bf9\u5e94\u5750\u6807\u53d8\u6362\u4e4b\u540e\u7684\u7b2c\u4e8c\u8c61\u9650</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6570\u636e\u70b9\u88ab\u6620\u5c04\u5230\u65b0\u7a7a\u95f4\u7684\u4e0d\u540c\u8c61\u9650\u548c\u5750\u6807\u8f74\u4e0a\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6027\u8d85\u5e73\u9762\u8fdb\u884c\u5206\u5272\u3002</p> <p></p> <p>\u901a\u8fc7\u7ec4\u5408\u591a\u4e2a\u5c42\u548c\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff0c\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5f62\u6210\u590d\u6742\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u8fd9\u4f7f\u5f97\u5b83\u53ef\u4ee5\u5904\u7406\u5404\u79cd\u590d\u6742\u7684\u5206\u7c7b\u95ee\u9898\u3002\u7b2c\u4e00\u5f20\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u5982\u4f55\u5904\u7406\u975e\u7ebf\u6027\u6570\u636e\u96c6\u3002\u901a\u8fc7\u591a\u5c42\u7f51\u7edc\u548c\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\u3001tanh \u7b49\uff09\uff0c\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5b66\u4e60\u590d\u6742\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u8fd9\u4f7f\u5f97\u5b83\u80fd\u591f\u5f88\u597d\u5730\u5c06\u6570\u636e\u5206\u5272\u4e3a\u4e0d\u540c\u7684\u7c7b\u522b\uff0c\u5373\u4f7f\u8fd9\u4e9b\u7c7b\u522b\u65e0\u6cd5\u901a\u8fc7\u7b80\u5355\u7684\u7ebf\u6027\u5206\u5272\u6765\u533a\u5206\u3002</p> <p></p> <p>\u7b2c\u4e8c\u5f20\u56fe\u5f3a\u8c03\u4e86\u4f7f\u7528\u6b63\u5219\u5316\u53c2\u6570\u6765\u9632\u6b62\u8fc7\u62df\u5408\u3002\u6b63\u5219\u5316\u901a\u8fc7\u589e\u52a0\u635f\u5931\u51fd\u6570\u4e2d\u7684\u60e9\u7f5a\u9879\u6765\u6291\u5236\u6743\u91cd\u7684\u8fc7\u5ea6\u589e\u957f\uff0c\u907f\u514d\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u8fc7\u5ea6\u62df\u5408\u3002\u901a\u8fc7\u589e\u5927\u6b63\u5219\u5316\u53c2\u6570\uff08\u5982 L2 \u6b63\u5219\u5316\u4e2d\u7684 \\(\\lambda\\)\uff09\uff0c\u800c\u4e0d\u662f\u51cf\u5c0f\u9690\u85cf\u5c42\u7684\u7ef4\u6570\uff0c\u6a21\u578b\u80fd\u591f\u4fdd\u6301\u5176\u590d\u6742\u5ea6\uff0c\u540c\u65f6\u964d\u4f4e\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002</p> <p></p> <p></p> <p></p> <p>Universal Approximation Theorem \u662f\u795e\u7ecf\u7f51\u7edc\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ed3\u679c\uff0c\u5b83\u9610\u660e\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u5f3a\u5927\u8868\u8fbe\u80fd\u529b\u3002\u8be5\u5b9a\u7406\u8868\u660e\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u9690\u85cf\u5c42\u795e\u7ecf\u5143\uff0c\u5e26\u6709\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u7684\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u903c\u8fd1\u4efb\u4f55\u8fde\u7eed\u51fd\u6570\uff0c\u4e14\u8bef\u5dee\u53ef\u4ee5\u4efb\u610f\u5c0f\u3002\u8fd9\u610f\u5473\u7740\u795e\u7ecf\u7f51\u7edc\u7406\u8bba\u4e0a\u53ef\u4ee5\u5b66\u4e60\u5e76\u8868\u793a\u4efb\u4f55\u590d\u6742\u7684\u51fd\u6570\u6620\u5c04\uff0c\u65e0\u8bba\u662f\u5206\u7c7b\u4efb\u52a1\u8fd8\u662f\u56de\u5f52\u4efb\u52a1\u3002</p> <p>\u6536\u655b\u6027\uff1a\u5b9a\u7406\u4fdd\u8bc1\u4e86\u5b58\u5728\u4e00\u4e2a\u7f51\u7edc\u53ef\u4ee5\u903c\u8fd1\u76ee\u6807\u51fd\u6570\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u5b9e\u9645\u8bad\u7ec3\u65f6\u4e00\u5b9a\u80fd\u627e\u5230\u8fd9\u4e00\u6700\u4f18\u7f51\u7edc\u3002</p> <p>\u8ba1\u7b97\u4ee3\u4ef7\uff1a\u9700\u8981\u8db3\u591f\u591a\u7684\u795e\u7ecf\u5143\uff0c\u4f46\u5b9e\u9645\u8ba1\u7b97\u8d44\u6e90\u6709\u9650\uff0c\u8fc7\u591a\u7684\u795e\u7ecf\u5143\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u590d\u6742\u6027\u548c\u8bad\u7ec3\u65f6\u95f4\u589e\u52a0\u3002</p> <p>\u8fc7\u62df\u5408\u98ce\u9669\uff1a\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u6570\u91cf\u592a\u591a\u65f6\uff0c\u53ef\u80fd\u5bfc\u81f4\u6a21\u578b\u8bb0\u4f4f\u8bad\u7ec3\u6570\u636e\u800c\u5931\u53bb\u6cdb\u5316\u80fd\u529b\u3002</p> <p>convex function</p> <p>\u4e00\u4e2a\u51fd\u6570 f(x) \u88ab\u79f0\u4e3a\u51f8\u51fd\u6570\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684\u4e24\u4e2a\u70b9 \\(x_1\\) \u548c \\(x_2\\) \u4ee5\u53ca \\(t \\in [0, 1]\\) \uff0c\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u6210\u7acb\uff1a</p> \\[ f(tx_1 + (1 - t)x_2) \\leq t f(x_1) + (1 - t) f(x_2) \\] <p>\u8fd9\u610f\u5473\u7740\u8fde\u63a5\u51fd\u6570\u56fe\u50cf\u4e2d\u4efb\u610f\u4e24\u70b9\u7684\u76f4\u7ebf\u603b\u662f\u4f4d\u4e8e\u51fd\u6570\u56fe\u50cf\u7684\u4e0a\u65b9\u6216\u4e0e\u5176\u91cd\u5408\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u51f8\u51fd\u6570\u7684\u56fe\u50cf\u603b\u662f\u5448\u73b0\u201c\u7897\u201d\u5f62\uff08\u5f00\u53e3\u5411\u4e0a\uff09\uff0c\u6ca1\u6709\u5c40\u90e8\u51f9\u9677\u6216\u6ce2\u5cf0\u3002</p> <p>\u51f8\u51fd\u6570\u7684\u7279\u6027</p> <ol> <li> <p>\u5168\u5c40\u6700\u4f18\u6027\uff1a\u5bf9\u4e8e\u51f8\u51fd\u6570\uff0c<code>\u4efb\u610f\u7684\u5c40\u90e8\u6700\u5c0f\u503c\u90fd\u662f\u5168\u5c40\u6700\u5c0f\u503c</code>\u3002\u8fd9\u662f\u51f8\u51fd\u6570\u6700\u91cd\u8981\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u6781\u5927\u5730\u7b80\u5316\u4e86\u4f18\u5316\u95ee\u9898\u7684\u6c42\u89e3\u3002</p> </li> <li> <p>\u51f8\u96c6\u4e0e\u51fd\u6570\u7684\u5173\u7cfb\uff1a\u5982\u679c \\(f(x)\\) \u662f\u51f8\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u4e0b\u8d85\u6c34\u5e73\u96c6\uff08\u5373 \\(\\{x : f(x) \\leq c\\}\\)\u662f\u51f8\u96c6\u3002</p> </li> <li> <p>\u4e00\u9636\u6761\u4ef6\uff1a\u5982\u679c \\( f(x) \\) \u5728\u67d0\u4e2a\u533a\u95f4\u5185\u53ef\u5fae\u4e14\u662f\u51f8\u7684\uff0c\u90a3\u4e48\u51fd\u6570\u56fe\u50cf\u5728\u4efb\u610f\u70b9\u4e0a\u7684\u5207\u7ebf\u6c38\u8fdc\u4e0d\u4f1a\u5728\u51fd\u6570\u56fe\u50cf\u7684\u4e0b\u65b9\u3002\u8fd9\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u8868\u793a\uff1a    $$    f(y) \\geq f(x) + \\nabla f(x)^T (y - x) \\quad \\text{for all } x, y    $$    \u5176\u4e2d \\(\\nabla f(x)\\) \u662f\u5728\u70b9 \\(x\\) \u5904\u7684\u68af\u5ea6\u3002</p> </li> </ol> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u975e\u51f8\u51fd\u6570\u53ef\u80fd\u6709\u591a\u4e2a\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u5f88\u96be\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u8bb8\u591a\u76ee\u6807\u51fd\u6570\u662f\u975e\u51f8\u7684\uff0c\u8fd9\u4f7f\u5f97\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b49\u4f18\u5316\u65b9\u6cd5\u7684\u6548\u679c\u8f83\u4e0d\u786e\u5b9a\u3002\u7136\u800c\uff0c\u901a\u8fc7\u6dfb\u52a0\u6b63\u5219\u5316\u3001\u5408\u7406\u521d\u59cb\u5316\u53c2\u6570\u3001\u4f7f\u7528\u52a8\u91cf\u6216\u81ea\u9002\u5e94\u4f18\u5316\u5668\u7b49\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u63d0\u9ad8\u4f18\u5316\u6548\u679c\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#\u4ee3\u7801\u5b9e\u73b0","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u8fd9\u4e2a Python \u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fdb\u884c\u8bad\u7ec3\u3002\u5b83\u7684\u4efb\u52a1\u662f\u6700\u5c0f\u5316\u7f51\u7edc\u7684\u9884\u6d4b\u8f93\u51fa\uff08<code>y_pred</code>\uff09\u4e0e\u76ee\u6807\u8f93\u51fa\uff08<code>y</code>\uff09\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\u635f\u5931</p> <pre><code>import numpy as np\nfrom numpy.random import randn\n\nN, Din, H, Dout = 64, 1000, 100, 10\nx, y = randn(N, Din), randn(N, Dout)\nw1, w2 = randn(Din, H), randn(H, Dout)\nfor t in range(10000):\n    h = 1.0 / (1.0 + np.exp(-x.dot(w1)))  # Sigmoid \u6fc0\u6d3b\u51fd\u6570\n    y_pred = h.dot(w2)\n    loss = np.square(y_pred - y).sum()\n    dy_pred = 2.0 (y_pred - y)\n    dw2 = h.T.dot(dy_pred)\n    dh = dy_pred.dot(w2.T)\n    dw1 = x.T.dot(dh * h * (1 - h))\n    w1 -= 1e-4 * dw1\n    w2 -= 1e-4 * dw2\n</code></pre> <ul> <li>\u521d\u59cb\u5316\uff1a</li> </ul> <p><code>x</code>\uff1a\u8f93\u5165\u6570\u636e\uff0c\u5f62\u72b6\u4e3a <code>(N, Din)</code>\u3002</p> <p><code>y</code>\uff1a\u76ee\u6807\u8f93\u51fa\u6570\u636e\uff0c\u5f62\u72b6\u4e3a <code>(N, Dout)</code>\u3002</p> <p><code>w1</code>\uff1a\u8f93\u5165\u5c42\u5230\u9690\u85cf\u5c42\u7684\u6743\u91cd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a <code>(Din, H)</code>\u3002</p> <p><code>w2</code>\uff1a\u9690\u85cf\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u6743\u91cd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a <code>(H, Dout)</code>\u3002</p> <ul> <li>\u524d\u5411\u4f20\u64ad\uff08Forward Pass\uff09</li> </ul> <pre><code>h = 1.0 / (1.0 + np.exp(-x.dot(w1)))  # Sigmoid \u6fc0\u6d3b\u51fd\u6570\ny_pred = h.dot(w2)\n</code></pre> <p><code>1.0 / (1.0 + np.exp(-x.dot(w1)))</code> \u5e94\u7528\u4e86 Sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u5c06\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u9650\u5236\u5728 <code>(0, 1)</code> \u4e4b\u95f4\u3002</p> <ul> <li>\u53cd\u5411\u4f20\u64ad\uff08Backward Pass\uff09</li> </ul> <pre><code>dy_pred = 2.0 * (y_pred - y)\ndw2 = h.T.dot(dy_pred)\ndh = dy_pred.dot(w2.T)\ndw1 = x.T.dot(dh * h * (1 - h))\n</code></pre> <p>\u524d\u5411\u4f20\u64ad\u516c\u5f0f:</p> \\[ h = \\sigma(XW_1) = \\frac{1}{1 + e^{-XW_1}}\\\\ y_{\\text{pred}} = hW_2 \\] <p>\u635f\u5931\u51fd\u6570:</p> \\[ L = \\sum \\left(y_{\\text{pred}} - y\\right)^2 \\] <p>\u53cd\u5411\u4f20\u64ad\u516c\u5f0f:</p> <p>\u8f93\u51fa\u5c42\u68af\u5ea6:</p> \\[ \\frac{\\partial L}{\\partial W_2} =\\frac{\\partial L}{\\partial  y_{\\text{pred}} }  \\cdot   \\frac{\\partial  y_{\\text{pred}} }{{\\partial W_2}}= h^T \\cdot \\frac{\\partial L}{\\partial y_{\\text{pred}}} = h^T \\cdot 2(y_{\\text{pred}} - y) \\] <p>\u9690\u85cf\u5c42\u68af\u5ea6:</p> \\[    \\frac{\\partial L}{\\partial W_1} = X^T \\cdot \\left(\\frac{\\partial L}{\\partial h} \\cdot h(1 - h)\\right) \\] <p>\u8be5\u4ee3\u7801\u4e2d\uff0c\u6574\u4e2a\u6d41\u7a0b\u4e3a\uff1a\u524d\u5411\u4f20\u64ad -&gt; \u635f\u5931\u8ba1\u7b97 -&gt; \u53cd\u5411\u4f20\u64ad -&gt; \u68af\u5ea6\u66f4\u65b0\uff0c\u4ece\u800c\u4e0d\u65ad\u4f18\u5316\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\uff0c\u4f7f\u9884\u6d4b\u8f93\u51fa\u66f4\u52a0\u63a5\u8fd1\u76ee\u6807\u503c\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#\u5e38\u7528\u6fc0\u6d3b\u51fd\u6570","title":"\u5e38\u7528\u6fc0\u6d3b\u51fd\u6570","text":"<p>\u6bcf\u4e2a\u6fc0\u6d3b\u51fd\u6570\uff08\u6216\u975e\u7ebf\u6027\u51fd\u6570\uff09\u7684\u8f93\u5165\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u67d0\u79cd\u56fa\u5b9a\u7684\u6570\u5b66\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u51e0\u79cd\u6fc0\u6d3b\u51fd\u6570\uff1a</p> <p></p> <p></p> <p>\u5de6\u8fb9\u662f Sigmoid \u975e\u7ebf\u6027\u51fd\u6570\uff0c\u5c06\u5b9e\u6570\u538b\u7f29\u5230 [0,1] \u4e4b\u95f4\u3002\u53f3\u8fb9\u662f tanh \u51fd\u6570\uff0c\u5c06\u5b9e\u6570\u538b\u7f29\u5230 [-1,1]\u3002</p> <p>Sigmoid\u3002 sigmoid \u975e\u7ebf\u6027\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u662f \\(\\sigma(x)= \\dfrac{1}{(1+e^{-x})}\\)\uff0c\u51fd\u6570\u56fe\u50cf\u5982\u4e0a\u56fe\u7684\u5de6\u8fb9\u6240\u793a\u3002\u5728\u524d\u4e00\u8282\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u5b83\u8f93\u5165\u5b9e\u6570\u503c\u5e76\u5c06\u5176 \"\u6324\u538b\" \u5230 0 \u5230 1 \u8303\u56f4\u5185\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5f88\u5927\u7684\u8d1f\u6570\u53d8\u6210 0\uff0c\u5f88\u5927\u7684\u6b63\u6570\u53d8\u6210 1\u3002\u968f\u7740\u5bf9\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7406\u89e3\u7684\u52a0\u6df1\uff0c\u5c24\u5176\u662f\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u4e2d\uff0cSigmoid \u51fd\u6570\u9010\u6e10\u88ab\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u6240\u53d6\u4ee3\uff0c\u539f\u56e0\u4e3b\u8981\u662f\u7531\u4e8e\u4ee5\u4e0b\u4e24\u4e2a\u5173\u952e\u7f3a\u9677\uff1a</p> <ol> <li>\u68af\u5ea6\u6d88\u5931\u95ee\u9898</li> </ol> <p>Sigmoid \u51fd\u6570\u7684\u8f93\u51fa\u8303\u56f4\u5728 0 \u5230 1 \u4e4b\u95f4\uff0c\u4e14\u5176\u5bfc\u6570\u5728\u63a5\u8fd1\u8fd9\u4e24\u4e2a\u6781\u503c\uff08\u5373 0 \u6216 1\uff09\u65f6\u4f1a\u8d8b\u8fd1\u4e8e 0\u3002\u8fd9\u610f\u5473\u7740\u5f53\u8f93\u5165\u503c\u5f88\u5927\u6216\u5f88\u5c0f\u65f6\uff0cSigmoid \u51fd\u6570\u7684\u68af\u5ea6\u51e0\u4e4e\u4e3a\u96f6\u3002\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u5c0f\u68af\u5ea6\u5c06\u4f1a\u88ab\u9010\u5c42\u4f20\u64ad\uff0c\u4f7f\u5f97\u7f51\u7edc\u7684\u6743\u91cd\u66f4\u65b0\u53d8\u5f97\u975e\u5e38\u7f13\u6162\uff0c\u751a\u81f3\u505c\u6b62\u66f4\u65b0\u3002\u8fd9\u4e00\u73b0\u8c61\u88ab\u79f0\u4e3a\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff08vanishing gradient problem\uff09\uff0c\u4e25\u91cd\u963b\u788d\u4e86\u6df1\u5c42\u7f51\u7edc\u7684\u8bad\u7ec3\u3002</p> <p>\u56de\u5fc6\u4e00\u4e0b\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c<code>\u8fd9\u4e2a\uff08\u5c40\u90e8\uff09\u68af\u5ea6\u5c06\u4f1a\u4e0e\u6574\u4e2a\u635f\u5931\u51fd\u6570\u5173\u4e8e\u8be5\u95e8\u5355\u5143\u8f93\u51fa\u7684\u68af\u5ea6\u76f8\u4e58\u3002</code>\u56e0\u6b64\uff0c\u5982\u679c\u5c40\u90e8\u68af\u5ea6\u975e\u5e38\u5c0f\uff0c\u90a3\u4e48\u76f8\u4e58\u7684\u7ed3\u679c\u4e5f\u4f1a\u63a5\u8fd1\u96f6\uff0c\u8fd9\u4f1a\u6709\u6548\u5730 \"\u6740\u6b7b\" \u68af\u5ea6\uff0c\u51e0\u4e4e\u5c31\u6709\u6ca1\u6709\u4fe1\u53f7\u901a\u8fc7\u795e\u7ecf\u5143\u4f20\u5230\u6743\u91cd\u518d\u5230\u6570\u636e\u4e86\u3002</p> <ol> <li>\u975e\u96f6\u4e2d\u5fc3\u6027</li> </ol> <p>Sigmoid \u51fd\u6570\u7684\u8f93\u51fa\u8303\u56f4\u662f (0, 1)\uff0c<code>\u8fd9\u610f\u5473\u7740\u5b83\u7684\u8f93\u51fa\u4e0d\u662f\u96f6\u4e2d\u5fc3\u7684</code>\u3002\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\uff0c\u5982\u679c\u8f93\u5165\u5230\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u6570\u636e\u603b\u662f\u6b63\u6570\uff08\u5373 \\(x &gt; 0\\)\uff09\uff0c\u5219\u8be5\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u4e5f\u662f\u6b63\u6570\u3002\u8fd9\u5c06\u5bfc\u81f4\u68af\u5ea6\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u8981\u4e48\u5168\u90e8\u4e3a\u6b63\uff0c\u8981\u4e48\u5168\u90e8\u4e3a\u8d1f\uff0c\u4ece\u800c<code>\u9020\u6210\u53c2\u6570\u66f4\u65b0\u65f6\u7684\u201c\u952f\u9f7f\u5f62\u201d\u9707\u8361\uff0c\u51cf\u7f13\u6536\u655b\u901f\u5ea6</code>\u3002\u867d\u7136\u901a\u8fc7\u589e\u52a0\u6570\u636e\u7684\u6279\u91cf\u548c\u5176\u4ed6\u624b\u6bb5\u53ef\u4ee5\u90e8\u5206\u7f13\u89e3\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u5b83\u4ecd\u7136\u5bf9\u7f51\u7edc\u7684\u8bad\u7ec3\u6548\u7387\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002</p> <p>\u56e0\u4e3a\u5982\u679c\u8f93\u5165\u795e\u7ecf\u5143\u7684\u6570\u636e\u603b\u662f\u6b63\u6570\uff08\u6bd4\u5982\u5728 \\(f = w^Tx+b\\) \u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\uff09\\(x &gt; 0\\)\uff0c\u90a3\u4e48\u5173\u4e8e \\(w\\) \u7684\u68af\u5ea6\u5728\u53cd\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u4f1a\u8981\u4e48\u5168\u90e8\u662f\u6b63\u6570\uff0c\u8981\u4e48\u5168\u90e8\u662f\u8d1f\u6570\uff08\u5177\u4f53\u4f9d\u6574\u4e2a\u8868\u8fbe\u5f0f \\(f\\) \u800c\u5b9a\uff09\u3002\u8fd9\u5c06\u4f1a\u5bfc\u81f4\u68af\u5ea6\u4e0b\u964d\u6743\u91cd\u66f4\u65b0\u65f6\u51fa\u73b0 z \u5b57\u578b\u7684\u4e0b\u964d\u3002</p> <p>Tanh\u3002 Tanh\uff08\u53cc\u66f2\u6b63\u5207\uff09\u51fd\u6570\u662f\u4e00\u79cd\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5176\u8f93\u51fa\u8303\u56f4\u4e3a [-1, 1]\uff0c\u4e0e Sigmoid \u51fd\u6570\u76f8\u4f3c\uff0c\u5b83\u4e5f\u5b58\u5728\u9971\u548c\u95ee\u9898\uff0c\u4f46 Tanh \u7684\u4e00\u4e2a\u663e\u8457\u4f18\u52bf\u662f\u5b83\u7684\u8f93\u51fa\u662f\u96f6\u4e2d\u5fc3\u7684\u3002\u8fd9\u610f\u5473\u7740 Tanh \u7684\u8f93\u51fa\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5f15\u8d77\u50cf Sigmoid \u90a3\u6837\u7684\u68af\u5ea6\u9707\u8361\u95ee\u9898\uff0c\u56e0\u6b64\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u4e2d\u5f80\u5f80\u8868\u73b0\u5f97\u66f4\u597d\u3002</p> <p>\u68af\u5ea6\u6d88\u5931\uff1a\u5c3d\u7ba1 Tanh \u7684\u96f6\u4e2d\u5fc3\u8f93\u51fa\u662f\u4e00\u5927\u4f18\u52bf\uff0c\u4f46\u5b83\u4ecd\u7136\u9762\u4e34\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002\u5f53\u8f93\u5165\u8fdc\u79bb\u96f6\uff08\u5373\u975e\u5e38\u5927\u6216\u975e\u5e38\u5c0f\uff09\u65f6\uff0cTanh \u7684\u68af\u5ea6\u4f1a\u63a5\u8fd1 0\uff0c\u4ece\u800c\u5bfc\u81f4\u6df1\u5c42\u7f51\u7edc\u4e2d\u68af\u5ea6\u4f20\u64ad\u7684\u56f0\u96be\u3002</p> <p>Tanh \u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7ecf\u8fc7\u653e\u5927\u548c\u4f4d\u79fb\u7684 Sigmoid \u51fd\u6570\uff0c\u5176\u516c\u5f0f\u4e3a \\(\\tanh(x) = 2\\sigma(2x) - 1\\)\uff0c\u5176\u4e2d \\(\\sigma(x)\\) \u662f Sigmoid \u51fd\u6570\u3002\u8fd9\u79cd\u5173\u7cfb\u8868\u660e\uff0cTanh \u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u88ab\u89c6\u4e3a Sigmoid \u7684\u6539\u8fdb\u7248\u672c\u3002</p> <p></p> <p>\u5de6\u8fb9\u662f ReLU\uff08\u6821\u6b63\u7ebf\u6027\u5355\u5143\uff1aRectified Linear Unit\uff09\u6fc0\u6d3b\u51fd\u6570\uff0c\u5f53 \\(x = 0\\) \u65f6\u51fd\u6570\u503c\u4e3a 0\u3002\u5f53 \\(x &gt; 0\\) \u51fd\u6570\u7684\u659c\u7387\u4e3a 1\u3002\u53f3\u8fb9\u662f\u4ece [Krizhevsky__][41]\u7b49\u7684\u8bba\u6587\u4e2d\u622a\u53d6\u7684\u56fe\u8868\uff0c\u6307\u660e<code>\u4f7f\u7528 ReLU \u6bd4\u4f7f\u7528 tanh \u7684\u6536\u655b\u5feb 6 \u500d\u3002</code></p> <p>\u4f18\u70b9\uff1a</p> <ol> <li>\u52a0\u901f\u6536\u655b</li> </ol> <p>\u76f8\u8f83\u4e8e sigmoid \u548c tanh \u51fd\u6570\uff0cReLU \u5bf9\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u6536\u655b\u6709\u5de8\u5927\u7684\u52a0\u901f\u4f5c\u7528\uff08 [Krizhevsky __][41]\u7b49\u7684\u8bba\u6587\u6307\u51fa\u6709 6 \u500d\u4e4b\u591a\uff09\u3002\u636e\u79f0\u8fd9\u662f\u7531\u5b83\u7684\u7ebf\u6027\uff0c\u975e\u9971\u548c\u7684\u516c\u5f0f\u5bfc\u81f4\u7684\u3002</p> <ol> <li>\u8ba1\u7b97\u7b80\u5355</li> </ol> <p>sigmoid \u548c tanh \u795e\u7ecf\u5143\u542b\u6709\u6307\u6570\u8fd0\u7b97\u7b49\u8017\u8d39\u8ba1\u7b97\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u800c ReLU \u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u5bf9\u4e00\u4e2a\u77e9\u9635\u8fdb\u884c\u9608\u503c\u8ba1\u7b97\u5f97\u5230\u3002</p> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\"Dying ReLU\" \u95ee\u9898\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c ReLU \u795e\u7ecf\u5143\u63a5\u6536\u5230\u975e\u5e38\u5927\u7684\u8d1f\u68af\u5ea6\uff0c\u5b83\u53ef\u80fd\u6c38\u8fdc\u5904\u4e8e\u96f6\u8f93\u51fa\u72b6\u6001\uff0c\u8fd9\u610f\u5473\u7740\u795e\u7ecf\u5143\u518d\u4e5f\u4e0d\u4f1a\u6fc0\u6d3b\uff0c\u5bfc\u81f4\u7f51\u7edc\u7684\u90e8\u5206\u5355\u5143\u6c38\u4e45\u5931\u6548\u3002\u8fd9\u4e2a\u95ee\u9898\u901a\u5e38\u88ab\u79f0\u4e3a\u201cReLU \u6b7b\u4ea1\u201d\u3002</li> </ol> <p>\u4f8b\u5982\uff0c\u5982\u679c\u5b66\u4e60\u7387\u8bbe\u7f6e\u5f97\u592a\u9ad8\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u7f51\u7edc\u4e2d 40%\u7684\u795e\u7ecf\u5143\u90fd\u4f1a\u6b7b\u6389\uff08\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e2d\u8fd9\u4e9b\u795e\u7ecf\u5143\u90fd\u4e0d\u4f1a\u88ab\u6fc0\u6d3b\uff09\u3002\u901a\u8fc7\u5408\u7406\u8bbe\u7f6e\u5b66\u4e60\u7387\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u6982\u7387\u4f1a\u964d\u4f4e\u3002</p> <p>Leaky ReLU\uff1aLeaky ReLU \u662f\u4e3a\u89e3\u51b3 \"ReLU \u6b7b\u4ea1\" \u95ee\u9898\u7684\u5c1d\u8bd5\u3002ReLU \u4e2d\u5f53 x&lt; 0 \u65f6\uff0c\u51fd\u6570\u503c\u4e3a 0\u3002Leaky ReLU \u4e3a\u8d1f\u6570\u8f93\u5165\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u659c\u7387\uff08\u4f8b\u5982 0.01\uff09\uff0c\u800c\u4e0d\u662f\u5c06\u8d1f\u6570\u76f4\u63a5\u6620\u5c04\u4e3a\u96f6\u3002\u5176\u516c\u5f0f\u4e3a\uff1a</p> \\[ f(x) = \\begin{cases} x &amp; \\text{if } x &gt; 0 \\\\ \\alpha x &amp; \\text{if } x \\leq 0 \\end{cases} \\] <p>\u5176\u4e2d \\(\\alpha\\) \u662f\u4e00\u4e2a\u5c0f\u5e38\u6570\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5141\u8bb8\u8d1f\u6570\u8f93\u5165\u4e5f\u80fd\u4ea7\u751f\u5c0f\u7684\u8d1f\u68af\u5ea6\uff0c\u4ece\u800c\u51cf\u5c11\u795e\u7ecf\u5143\u201c\u6b7b\u4ea1\u201d\u7684\u53ef\u80fd\u6027\u3002</p> <p><code>Maxout \u662f\u4e00\u79cd\u901a\u7528\u5316\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5b83\u901a\u8fc7\u9009\u62e9\u4e24\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u6700\u5927\u503c\u6765\u6784\u5efa\u6fc0\u6d3b\u8f93\u51fa</code>\u3002\u5176\u51fd\u6570\u516c\u5f0f\u4e3a\uff1a</p> \\[ f(x) = \\max(w^T_1x + b_1, w^T_2x + b_2) \\] <p>Maxout \u662f\u5bf9 ReLU \u548c leaky ReLU \u7684\u4e00\u822c\u5316\u5f52\u7eb3\uff0c\u5b83\u7684\u51fd\u6570\u662f\uff1a\\(max(w^T_1x+b_1, w^T_2x+b_2)\\)\u3002ReLU \u548c Leaky ReLU \u90fd\u662f\u8fd9\u4e2a\u516c\u5f0f\u7684\u7279\u6b8a\u60c5\u51b5\uff08\u6bd4\u5982 ReLU \u5c31\u662f\u5f53 \\(w_1, b_1 = 0\\) \u7684\u65f6\u5019\uff09\u3002\u8fd9\u6837 Maxout \u795e\u7ecf\u5143\u5c31\u62e5\u6709 ReLU \u5355\u5143\u7684\u6240\u6709\u4f18\u70b9\uff08\u7ebf\u6027\u64cd\u4f5c\u548c\u4e0d\u9971\u548c\uff09\uff0c\u800c\u6ca1\u6709\u5b83\u7684\u7f3a\u70b9\uff08\u6b7b\u4ea1\u7684 ReLU \u5355\u5143\uff09\u3002</p> <ol> <li>\u907f\u514d\u201c\u6b7b\u4ea1\u201dReLU \u95ee\u9898:\u5728\u8bad\u7ec3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u65f6\u66f4\u52a0\u9c81\u68d2</li> <li>\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b:Maxout \u662f\u5bf9 ReLU \u548c Leaky ReLU \u7684\u4e00\u822c\u5316</li> <li>\u7ebf\u6027\u4e14\u4e0d\u9971\u548c:\u5e2e\u52a9\u89e3\u51b3\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5e76\u52a0\u5feb\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> </ol> <p>Maxout \u7684\u7f3a\u70b9</p> <ol> <li>\u53c2\u6570\u6570\u91cf\u7ffb\u500d\uff1a\u6bcf\u4e2a Maxout \u795e\u7ecf\u5143\u9700\u8981\u53cc\u500d\u7684\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u8ba1\u7b97\u4e86\u4e24\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u6700\u5927\u503c\u3002\u8fd9\u4f7f\u5f97\u7f51\u7edc\u7684\u53c2\u6570\u6570\u91cf\u5927\u5e45\u589e\u52a0\uff0c\u4ece\u800c\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u8d44\u6e90\u7684\u9700\u6c42\u548c\u5b58\u50a8\u6210\u672c\u7684\u663e\u8457\u4e0a\u5347\u3002\u968f\u7740\u7f51\u7edc\u6df1\u5ea6\u548c\u5bbd\u5ea6\u7684\u589e\u52a0\uff0c\u8fd9\u4e00\u95ee\u9898\u5c06\u66f4\u52a0\u7a81\u51fa\u3002</li> <li>\u8ba1\u7b97\u590d\u6742\u6027\u589e\u52a0\uff1a\u7531\u4e8e Maxout \u9700\u8981\u8ba1\u7b97\u4e24\u4e2a\u7ebf\u6027\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u5b83\u7684\u8ba1\u7b97\u590d\u6742\u6027\u9ad8\u4e8e ReLU\u3002\u5bf9\u4e8e\u975e\u5e38\u6df1\u7684\u7f51\u7edc\uff0cMaxout \u7684\u8ba1\u7b97\u5f00\u9500\u53ef\u80fd\u6210\u4e3a\u74f6\u9888\u3002</li> </ol> <p>\u5c3d\u7ba1 Maxout \u5177\u6709\u5f3a\u5927\u7684\u8868\u8fbe\u80fd\u529b\u548c\u89e3\u51b3 ReLU \u7f3a\u9677\u7684\u4f18\u52bf\uff0c\u4f46\u5176\u8f83\u9ad8\u7684\u53c2\u6570\u548c\u8ba1\u7b97\u5f00\u9500\u4f7f\u5f97\u5b83\u66f4\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6a21\u578b\u590d\u6742\u6027\u4e14\u8ba1\u7b97\u8d44\u6e90\u5145\u88d5\u7684\u573a\u666f\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#\u795e\u7ecf\u5143-neuron-\u5efa\u6a21","title":"\u795e\u7ecf\u5143 neuron \u5efa\u6a21","text":""},{"location":"CV/Lecture5_Neural_Networks/#\u751f\u7269\u52a8\u673a\u4e0e\u8fde\u63a5","title":"\u751f\u7269\u52a8\u673a\u4e0e\u8fde\u63a5","text":"<p>\u5927\u8111\u7684\u57fa\u672c\u8ba1\u7b97\u5355\u4f4d\u662f \u795e\u7ecf\u5143\uff08neuron\uff09\u3002\u4eba\u7c7b\u7684\u795e\u7ecf\u7cfb\u7edf\u4e2d\u5927\u7ea6\u6709 860 \u4ebf\u4e2a\u795e\u7ecf\u5143\uff0c\u5b83\u4eec\u88ab\u5927\u7ea6 10<sup>14-10</sup>15 \u4e2a \u7a81\u89e6\uff08synapses\uff09 \u8fde\u63a5\u8d77\u6765\u3002\u4e0b\u9762\u56fe\u8868\u7684\u5de6\u8fb9\u5c55\u793a\u4e86\u4e00\u4e2a\u751f\u7269\u5b66\u7684\u795e\u7ecf\u5143\uff0c\u53f3\u8fb9\u5c55\u793a\u4e86\u4e00\u4e2a\u5e38\u7528\u7684\u6570\u5b66\u6a21\u578b\u3002\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u4ece\u5b83\u7684\u591a\u4e2a \u6811\u7a81(debdrite) \u83b7\u5f97\u8f93\u5165\u4fe1\u53f7\uff0c\u7136\u540e\u6cbf\u7740\u5b83\u552f\u4e00\u7684 \u8f74\u7a81\uff08axon\uff09 \u4ea7\u751f\u8f93\u51fa\u4fe1\u53f7\u3002\u8f74\u7a81\u5728\u672b\u7aef\u4f1a\u9010\u6e10\u5206\u679d\uff0c\u901a\u8fc7\u7a81\u89e6\u548c\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\u76f8\u8fde\u3002<code>\u4eba\u5de5\u795e\u7ecf\u5143\u5219\u901a\u8fc7\u52a0\u6743\u7684\u8f93\u5165\u4fe1\u53f7\u548c\u504f\u5dee\u8ba1\u7b97\u4e00\u4e2a\u6fc0\u6d3b\u503c\uff0c\u5e76\u6839\u636e\u6fc0\u6d3b\u51fd\u6570\u51b3\u5b9a\u8f93\u51fa\u4fe1\u53f7\u3002</code></p> <p>\u5728\u4e0b\u56fe\u53f3\u4fa7\u7684\u795e\u7ecf\u5143\u8ba1\u7b97\u6a21\u578b\u4e2d\uff0c\u6cbf\u7740\u8f74\u7a81\u4f20\u64ad\u7684\u4fe1\u53f7\u5c06\u57fa\u4e8e\u7a81\u89e6\u7684\u7a81\u89e6\u5f3a\u5ea6\uff0c\u4e0e\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\u8fdb\u884c\u4e58\u6cd5\u4ea4\u4e92\u3002\u7a81\u89e6\u7684\u5f3a\u5ea6\uff08\u4e5f\u5c31\u662f\u6743\u91cd \\(w_i\\)\uff09\uff0c\u662f\u53ef\u5b66\u4e60\u7684\uff0c\u4e14\u53ef\u4ee5\u63a7\u5236\u4e00\u4e2a\u795e\u7ecf\u5143\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u5f71\u54cd\u5f3a\u5ea6\uff08\u8fd8\u53ef\u4ee5\u63a7\u5236\u5f71\u54cd\u65b9\u5411\uff1a\u4f7f\u5176\u5174\u594b\uff08\u6b63\u6743\u91cd\uff09\u6216\u4f7f\u5176\u6291\u5236\uff08\u8d1f\u6743\u91cd\uff09\uff09\u3002</p> <p>\u5728\u57fa\u672c\u6a21\u578b\u4e2d\uff0c\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\u5c06\u4fe1\u53f7\uff08\u4e5f\u5c31\u662f\u8f93\u5165 \\(x_i\\)\uff09\u4f20\u9012\u5230\u7ec6\u80de\u4f53\uff0c\u4fe1\u53f7\u5728\u7ec6\u80de\u4f53\u4e2d\u76f8\u52a0\uff08\u4e0b\u56fe\u53f3\u4fa7\u7684 \\(\\Sigma w_ix_i+b\\))\u3002\u6c42\u548c\u540e\u7684\u4fe1\u53f7\u4f20\u9012\u5230\u6fc0\u6d3b\u51fd\u6570\uff0c\u6fc0\u6d3b\u51fd\u6570\u5bf9\u6c42\u548c\u4fe1\u53f7\u8fdb\u884c\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u8f93\u51fa\u7ed3\u679c\u7528\u4e8e\u51b3\u5b9a\u795e\u7ecf\u5143\u662f\u5426\u6fc0\u6d3b\u53ca\u6fc0\u6d3b\u7a0b\u5ea6\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u5bf9\u5b83\u7684\u8f93\u5165\u548c\u6743\u91cd\u8fdb\u884c\u70b9\u79ef\uff0c\u7136\u540e\u52a0\u4e0a\u504f\u5dee\uff0c\u6700\u540e\u4f7f\u7528\u975e\u7ebf\u6027\u51fd\u6570\uff08\u6216\u79f0\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff09\u3002\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\u662f sigmoid \u51fd\u6570 \\(\\sigma(x)= 1/(1+e^{-x})\\)\u3002</p> <p>\u7c97\u7cd9\u6a21\u578b\uff1a\u8981\u6ce8\u610f\u8fd9\u4e2a\u5bf9\u4e8e\u751f\u7269\u795e\u7ecf\u5143\u7684\u5efa\u6a21\u662f\u975e\u5e38\u7c97\u7cd9\u7684\uff1a\u5728\u5b9e\u9645\u4e2d\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u795e\u7ecf\u5143\uff0c\u6bcf\u79cd\u90fd\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u3002\u751f\u7269\u795e\u7ecf\u5143\u7684\u6811\u7a81\u53ef\u4ee5\u8fdb\u884c\u590d\u6742\u7684\u975e\u7ebf\u6027\u8ba1\u7b97\u3002\u7a81\u89e6\u5e76\u4e0d\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6743\u91cd\uff0c\u5b83\u4eec\u662f\u590d\u6742\u7684\u975e\u7ebf\u6027\u52a8\u6001\u7cfb\u7edf\u3002</p>"},{"location":"CV/Lecture5_Neural_Networks/#\u4f5c\u4e3a\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u5355\u4e2a\u795e\u7ecf\u5143","title":"\u4f5c\u4e3a\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u5355\u4e2a\u795e\u7ecf\u5143","text":"<p>\u795e\u7ecf\u5143\u6a21\u578b\u901a\u8fc7\u5bf9\u8f93\u5165\u4fe1\u53f7\u8fdb\u884c\u52a0\u6743\u6c42\u548c\uff0c\u7136\u540e\u901a\u8fc7\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 sigmoid \u51fd\u6570\uff09\u5c06\u5176\u8f93\u51fa\u4e3a\u4e00\u4e2a\u6982\u7387\u503c\u3002\u8fd9\u4e2a\u8f93\u51fa\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u4e8c\u5206\u7c7b\u4efb\u52a1\uff1a</p> <ul> <li><code>\u5f53\u795e\u7ecf\u5143\u8f93\u51fa\u63a5\u8fd1 1 \u65f6\uff0c\u8868\u793a\u795e\u7ecf\u5143\u201c\u559c\u6b22\u201d\u8f93\u5165\uff0c\u610f\u5473\u7740\u8f93\u5165\u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7c7b\u522b\u3002</code></li> <li><code>\u5f53\u8f93\u51fa\u63a5\u8fd1 0 \u65f6\uff0c\u8868\u793a\u795e\u7ecf\u5143\u201c\u4e0d\u559c\u6b22\u201d\u8f93\u5165\uff0c\u610f\u5473\u7740\u8f93\u5165\u4e0d\u5c5e\u4e8e\u8be5\u7c7b\u522b\u3002</code></li> </ul> <p>\u56e0\u6b64\uff0c\u5355\u4e2a\u795e\u7ecf\u5143\u6a21\u578b\u80fd\u591f\u5212\u5206\u8f93\u5165\u7a7a\u95f4\u4e3a\u4e24\u4e2a\u7ebf\u6027\u5206\u9694\u7684\u533a\u57df\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u884c\u4e3a\u3002</p> <p>\u4e8c\u5206\u7c7b Softmax \u5206\u7c7b\u5668\u3002\u5728\u4e8c\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0csigmoid \u51fd\u6570\u7684\u8f93\u51fa\u53ef\u4ee5\u88ab\u89e3\u91ca\u4e3a\u67d0\u4e2a\u7c7b\u522b\u7684\u6982\u7387 \\(P(y_i = 1|x_i; w)\\)\u3002\u53e6\u4e00\u7c7b\u522b\u7684\u6982\u7387\u5219\u662f \\(P(y_i = 0|x_i; w) = 1 - P(y_i = 1|x_i; w)\\)\uff0c\u56e0\u4e3a\u603b\u6982\u7387\u4e3a 1\u3002\u57fa\u4e8e\u8fd9\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u71b5\u635f\u5931\u6765\u4f18\u5316\u795e\u7ecf\u5143\u53c2\u6570\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684 Softmax \u5206\u7c7b\u5668\uff08\u5373\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5927\u4e8e 0.5 \u65f6\uff0c\u6a21\u578b\u9884\u6d4b\u8f93\u5165\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u7c7b\u522b\u3002</p> <p>\u4e8c\u5206\u7c7b SVM \u5206\u7c7b\u5668\u3002\u901a\u8fc7\u5728\u795e\u7ecf\u5143\u8f93\u51fa\u7aef\u589e\u52a0\u4e00\u4e2a\u6700\u5927\u8fb9\u754c\u6298\u53f6\u635f\u5931\uff08hinge loss\uff09\u51fd\u6570\uff0c\u795e\u7ecf\u5143\u53ef\u4ee5\u7528\u4f5c\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u7684\u4e8c\u5206\u7c7b\u5668\u3002\u6700\u5927\u8fb9\u754c\u6298\u53f6\u635f\u5931\u5f3a\u8c03\u5206\u7c7b\u8fb9\u754c\u7684\u6700\u5927\u5316\uff0c\u4f7f\u5206\u7c7b\u5668\u66f4\u52a0\u9c81\u68d2\u3002</p> <p>\u7406\u89e3\u6b63\u5219\u5316\u3002\u5728 SVM/Softmax \u7684\u4f8b\u5b50\u4e2d\uff0c\u6b63\u5219\u5316\u9879\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u201c<code>\u9010\u6e10\u9057\u5fd8</code>\u201d\u7684\u673a\u5236\u3002\u5b83\u901a\u8fc7<code>\u5f15\u5bfc\u6743\u91cd\u9010\u6e10\u8d8b\u5411\u4e8e 0</code>\uff0c\u4ece\u800c<code>\u9632\u6b62\u6a21\u578b\u8fc7\u62df\u5408</code>\u3002\u8fd9\u79cd\u65b9\u5f0f\u5728\u751f\u7269\u5b66\u4e0a\u7c7b\u4f3c\u4e8e\u7a81\u89e6\u7684\u957f\u671f\u8870\u51cf\uff0c\u5373\u7a81\u89e6\u5f3a\u5ea6\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u9010\u6e10\u51cf\u5f31\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/","title":"Backpropagation","text":"<p> \u7ea6 5878 \u4e2a\u5b57  107 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 31 \u5206\u949f</p>"},{"location":"CV/Lecture6_Backpropagation/#\u7b80\u4ecb","title":"\u7b80\u4ecb","text":"<p>\u53cd\u5411\u4f20\u64ad\u662f\u4e00\u79cd\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\u9012\u5f52\u8ba1\u7b97\u8868\u8fbe\u5f0f\u68af\u5ea6\u7684\u65b9\u6cd5\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u4f18\u5316\u3002\u4ee5\u4e0b\u662f\u672c\u8282\u5185\u5bb9\u7684\u63d0\u70bc\uff1a</p> <ul> <li> <p>\u6838\u5fc3\u95ee\u9898 : \u7ed9\u5b9a\u51fd\u6570 f(x) \uff0c\u5176\u4e2d x \u662f\u8f93\u5165\u6570\u636e\u7684\u5411\u91cf\uff0c\u76ee\u6807\u662f\u8ba1\u7b97\u51fd\u6570 f \u5173\u4e8e x \u7684\u68af\u5ea6 \\(\\nabla f(x)\\) \u3002\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u51fd\u6570 f \u901a\u5e38\u5bf9\u5e94\u4e8e\u635f\u5931\u51fd\u6570 L \uff0c\u8f93\u5165 x \u5305\u542b\u8bad\u7ec3\u6570\u636e\u548c\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\uff08\u5982\u6743\u91cd W \u548c\u504f\u5dee b \uff09\u3002\u8ba1\u7b97\u8fd9\u4e9b\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u662f\u4f18\u5316\u6a21\u578b\u7684\u5173\u952e\u6b65\u9aa4\u3002</p> </li> <li> <p>\u94fe\u5f0f\u6cd5\u5219\u4e0e\u9012\u5f52\u8ba1\u7b97 :\u53cd\u5411\u4f20\u64ad\u57fa\u4e8e\u94fe\u5f0f\u6cd5\u5219\uff0c\u901a\u8fc7\u9012\u5f52\u5730\u8ba1\u7b97\u6bcf\u5c42\u8f93\u51fa\u76f8\u5bf9\u4e8e\u8f93\u5165\u7684\u5bfc\u6570\uff0c\u6700\u7ec8\u83b7\u53d6\u635f\u5931\u51fd\u6570\u5bf9\u5404\u5c42\u53c2\u6570\u7684\u68af\u5ea6\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5c06\u635f\u5931\u51fd\u6570\u7684\u6574\u4f53\u5f71\u54cd\u5206\u89e3\u5230\u6bcf\u4e2a\u53c2\u6570\u4e0a\uff0c\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u6210\u4e3a\u53ef\u80fd</p> </li> </ul>"},{"location":"CV/Lecture6_Backpropagation/#\u68af\u5ea6\u4e0e\u94fe\u5f0f\u6cd5\u5219","title":"\u68af\u5ea6\u4e0e\u94fe\u5f0f\u6cd5\u5219","text":""},{"location":"CV/Lecture6_Backpropagation/#\u7b80\u5355\u8868\u8fbe\u5f0f\u548c\u7406\u89e3\u68af\u5ea6","title":"\u7b80\u5355\u8868\u8fbe\u5f0f\u548c\u7406\u89e3\u68af\u5ea6","text":"<ol> <li> <p>\u51fd\u6570\u5b9a\u4e49\u53ca\u5176\u504f\u5bfc\u6570\uff1a</p> </li> <li> <p>\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u5143\u4e58\u6cd5\u51fd\u6570 f(x, y) = xy \u3002</p> </li> <li>\u5bf9 x \u548c y \u4e24\u4e2a\u53d8\u91cf\u5206\u522b\u6c42\u504f\u5bfc\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a<ul> <li>\u5bf9 x \u7684\u504f\u5bfc\u6570\u4e3a y \u3002</li> <li>\u5bf9 y \u7684\u504f\u5bfc\u6570\u4e3a x \u3002</li> </ul> </li> </ol> <p>\u89e3\u91ca\uff1a</p> <ul> <li>\u5bfc\u6570\u7684\u610f\u4e49\u5728\u4e8e\uff1a\u5b83\u8868\u793a\u5728\u67d0\u4e2a\u70b9\u9644\u8fd1\uff0c\u51fd\u6570\u503c\u76f8\u5bf9\u4e8e\u67d0\u4e2a\u53d8\u91cf\u7684\u53d8\u5316\u7387\u3002</li> <li> <p>\u5bfc\u6570\u672c\u8d28\u4e0a\u662f\u51fd\u6570\u5bf9\u4e8e\u53d8\u91cf\u53d8\u5316\u7684\u654f\u611f\u5ea6\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e f(x, y) = xy \uff0c\u82e5 x = 4 \u4e14 y = -3 \uff0c\u51fd\u6570\u503c\u4e3a -12\uff0c\u800c\u6b64\u65f6 x \u7684\u5bfc\u6570\u4e3a -3\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c x \u7a0d\u5fae\u589e\u52a0\u4e00\u4e9b\uff0c\u51fd\u6570\u503c\u4f1a\u51cf\u5c11\uff0c\u5e76\u4e14\u51cf\u5c11\u7684\u91cf\u662f x \u589e\u91cf\u7684\u4e09\u500d\uff08\u7531\u4e8e\u8d1f\u53f7\uff09\u3002\u540c\u7406\uff0c\u5982\u679c y \u589e\u52a0\u4e00\u70b9\uff0c\u51fd\u6570\u503c\u4e5f\u4f1a\u589e\u52a0\uff0c\u5e76\u4e14\u589e\u52a0\u7684\u91cf\u662f y \u589e\u91cf\u7684\u56db\u500d\u3002</p> </li> <li> <p>\u68af\u5ea6\u7684\u6982\u5ff5\uff1a</p> </li> <li> <p>\u68af\u5ea6\u662f\u7531\u6240\u6709\u504f\u5bfc\u6570\u7ec4\u6210\u7684\u5411\u91cf\u3002\u4f8b\u5982\u5bf9\u4e8e f(x, y) = xy \uff1a</p> <ul> <li>\u68af\u5ea6\u5411\u91cf\u4e3a [y, x] \u3002</li> </ul> </li> </ul> <p>\u89e3\u91ca\uff1a</p> <ul> <li> <p>\u867d\u7136\u68af\u5ea6\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u4f46\u4eba\u4eec\u6709\u65f6\u4f1a\u7b80\u5355\u5730\u8bf4\u201cx \u4e0a\u7684\u68af\u5ea6\u201d\u6216\u201cy \u4e0a\u7684\u68af\u5ea6\u201d\u6765\u8868\u793a\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u654f\u611f\u5ea6\u3002</p> </li> <li> <p>\u6700\u5927\u503c\u64cd\u4f5c\u7684\u5bfc\u6570\uff1a</p> </li> <li>\u5bf9\u4e8e f(x, y) = \\max(x, y) \uff1a<ul> <li>\u82e5 x \u5927\u4e8e\u6216\u7b49\u4e8e y \uff0c\u5219\u5bf9 x \u7684\u5bfc\u6570\u4e3a 1\uff0c\u5bf9 y \u7684\u5bfc\u6570\u4e3a 0\uff1b</li> <li>\u82e5 y \u5927\u4e8e\u6216\u7b49\u4e8e x \uff0c\u5219\u5bf9 y \u7684\u5bfc\u6570\u4e3a 1\uff0c\u5bf9 x \u7684\u5bfc\u6570\u4e3a 0\u3002</li> </ul> </li> </ul>"},{"location":"CV/Lecture6_Backpropagation/#\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u8ba1\u7b97\u590d\u5408\u8868\u8fbe\u5f0f","title":"\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u8ba1\u7b97\u590d\u5408\u8868\u8fbe\u5f0f","text":"<p>\u4e3a\u4e86\u8ba1\u7b97\u590d\u5408\u8868\u8fbe\u5f0f\u7684\u68af\u5ea6\uff0c\u94fe\u5f0f\u6cd5\u5219\u901a\u8fc7\u5c06\u590d\u6742\u8868\u8fbe\u5f0f\u62c6\u89e3\u4e3a\u591a\u4e2a\u7b80\u5355\u8868\u8fbe\u5f0f\uff0c\u5e76\u9010\u6b65\u8ba1\u7b97\u6bcf\u4e2a\u4e2d\u95f4\u53d8\u91cf\u7684\u68af\u5ea6\uff0c\u6700\u7ec8\u5c06\u7ed3\u679c\u7ec4\u5408\u8d77\u6765\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e00\u8fc7\u7a0b\u7684\u8be6\u7ec6\u89e3\u6790\uff1a</p> <p>\u8003\u8651\u4e00\u4e2a\u590d\u5408\u51fd\u6570 f(x, y, z) = (x + y)z \u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5206\u89e3\u6210\u4e24\u90e8\u5206\uff1a</p> <ol> <li>q = x + y</li> <li>f = qz</li> </ol> <p>\u5bf9\u4e8e\u4e2d\u95f4\u53d8\u91cf q = x + y \uff1a</p> <ul> <li>\\(\\frac{\\partial q}{\\partial x} = 1\\)</li> <li>\\(\\frac{\\partial q}{\\partial y} = 1\\)</li> </ul> <p>\u5bf9\u4e8e\u6700\u7ec8\u51fd\u6570 f = qz \uff1a</p> <ul> <li>\\(\\frac{\\partial f}{\\partial q} = z\\)</li> <li>\\(\\frac{\\partial f}{\\partial z} = q\\)</li> </ul> <p>\u73b0\u5728\u6211\u4eec\u5173\u5fc3\u7684\u662f f \u76f8\u5bf9\u4e8e\u539f\u59cb\u8f93\u5165\u53d8\u91cf x \u3001 y \u548c z \u7684\u68af\u5ea6\uff0c\u800c\u4e0d\u662f\u4e2d\u95f4\u53d8\u91cf q \u7684\u68af\u5ea6\u3002\u94fe\u5f0f\u6cd5\u5219\u544a\u8bc9\u6211\u4eec\uff0c\u8ba1\u7b97\u590d\u5408\u51fd\u6570\u7684\u68af\u5ea6\u65f6\uff0c\u53ef\u4ee5\u5c06\u5404\u90e8\u5206\u68af\u5ea6\u76f8\u4e58\uff1a</p> <ul> <li>\\(\\frac{\\partial f}{\\partial x} = \\frac{\\partial f}{\\partial q} \\cdot \\frac{\\partial q}{\\partial x} = z \\cdot 1 = z\\)</li> <li>\\(\\frac{\\partial f}{\\partial y} = \\frac{\\partial f}{\\partial q} \\cdot \\frac{\\partial q}{\\partial y} = z \\cdot 1 = z\\)</li> <li>\\(\\frac{\\partial f}{\\partial z} = q = x + y\\)</li> </ul>"},{"location":"CV/Lecture6_Backpropagation/#\u53cd\u5411\u4f20\u64ad","title":"\u53cd\u5411\u4f20\u64ad","text":""},{"location":"CV/Lecture6_Backpropagation/#\u76f4\u89c2\u7406\u89e3","title":"\u76f4\u89c2\u7406\u89e3","text":"<p>\u53cd\u5411\u4f20\u64ad\u662f\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u7684\u6838\u5fc3\u7b97\u6cd5\uff0c\u5b83\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\u6709\u6548\u5730\u8ba1\u7b97\u6bcf\u4e2a\u53c2\u6570\u5bf9\u635f\u5931\u51fd\u6570\u7684\u5f71\u54cd\u3002\u4e3a\u4e86\u76f4\u89c2\u7406\u89e3\u53cd\u5411\u4f20\u64ad\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a<code>\u5728\u7f51\u7edc\u4e2d\u9010\u5c42\u4f20\u64ad\u7684\u68af\u5ea6\u4fe1\u53f7\uff0c\u7c7b\u4f3c\u4e8e\u95e8\u5355\u5143\u4e4b\u95f4\u7684\u201c\u6d88\u606f\u4f20\u9012\u201d</code>\u3002</p> <ul> <li>\u524d\u5411\u4f20\u64ad\u4e0e\u5c40\u90e8\u8ba1\u7b97</li> </ul> <p>\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u95e8\u5355\u5143\uff08\u5982\u52a0\u6cd5\u95e8\u3001\u4e58\u6cd5\u95e8\u7b49\uff09\u63a5\u6536\u8f93\u5165\u5e76\u8ba1\u7b97\u4e24\u4e2a\u7ed3\u679c\uff1a</p> <ol> <li>\u8f93\u51fa\u503c\uff1a\u8fd9\u662f\u95e8\u5355\u5143\u5bf9\u8f93\u5165\u7684\u76f4\u63a5\u8ba1\u7b97\u7ed3\u679c\u3002</li> <li>\u5c40\u90e8\u68af\u5ea6\uff1a\u8fd9\u662f\u95e8\u5355\u5143\u7684\u8f93\u51fa\u5bf9\u5176\u8f93\u5165\u7684\u5bfc\u6570\u3002\u4f8b\u5982\uff0c\u52a0\u6cd5\u95e8\u7684\u5c40\u90e8\u68af\u5ea6\u603b\u662f+1\uff0c\u56e0\u4e3a\u52a0\u6cd5\u5bf9\u8f93\u5165\u7684\u53d8\u5316\u6709\u7ebf\u6027\u5f71\u54cd\u3002</li> </ol> <p>\u8fd9\u4e9b\u8ba1\u7b97\u90fd\u662f\u5c40\u90e8\u7684\uff0c\u4e0d\u9700\u8981\u8003\u8651\u7f51\u7edc\u7684\u6574\u4f53\u7ed3\u6784\u3002</p> <ul> <li>\u53cd\u5411\u4f20\u64ad\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219</li> </ul> <p>\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u6574\u4e2a\u7f51\u7edc\u7684\u8f93\u51fa\u68af\u5ea6\u88ab\u9010\u6b65\u4f20\u9012\u56de\u6bcf\u4e2a\u95e8\u5355\u5143\u3002\u6bcf\u4e2a\u95e8\u5355\u5143\u63a5\u6536\u5230\u4ece\u4e0b\u6e38\u4f20\u9012\u6765\u7684\u68af\u5ea6\uff0c\u5e76\u5c06\u5176\u4e58\u4ee5\u81ea\u5df1\u7684\u5c40\u90e8\u68af\u5ea6\uff0c\u4ee5\u8ba1\u7b97\u8be5\u95e8\u5355\u5143\u7684\u8f93\u5165\u53d8\u91cf\u7684\u68af\u5ea6\uff0c\u4ece\u800c\u5f97\u5230\u6574\u4e2a\u7f51\u7edc\u7684\u8f93\u51fa\u5bf9\u8be5\u95e8\u5355\u5143\u7684\u6bcf\u4e2a\u8f93\u5165\u503c\u7684\u68af\u5ea6\u3002</p> <p>\u5177\u4f53\u793a\u4f8b\uff1a\u52a0\u6cd5\u95e8\u6536\u5230\u4e86\u8f93\u5165 [-2, 5]\uff0c\u8ba1\u7b97\u8f93\u51fa\u662f 3\u3002\u65e2\u7136\u8fd9\u4e2a\u95e8\u662f\u52a0\u6cd5\u64cd\u4f5c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u8f93\u5165\u7684\u5c40\u90e8\u68af\u5ea6\u90fd\u662f+1\u3002\u7f51\u7edc\u7684\u5176\u4f59\u90e8\u5206\u8ba1\u7b97\u51fa\u6700\u7ec8\u503c\u4e3a-12\u3002\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5c06\u9012\u5f52\u5730\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u7b97\u5230\u52a0\u6cd5\u95e8\uff08\u662f\u4e58\u6cd5\u95e8\u7684\u8f93\u5165\uff09\u7684\u65f6\u5019\uff0c\u77e5\u9053\u52a0\u6cd5\u95e8\u7684\u8f93\u51fa\u7684\u68af\u5ea6\u662f-4\u3002\u5982\u679c\u7f51\u7edc\u5982\u679c\u60f3\u8981\u8f93\u51fa\u503c\u66f4\u9ad8\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u4f1a\u60f3\u8981\u52a0\u6cd5\u95e8\u7684\u8f93\u51fa\u66f4\u5c0f\u4e00\u70b9\uff08\u56e0\u4e3a\u8d1f\u53f7\uff09\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a 4 \u7684\u500d\u6570\u3002\u7ee7\u7eed\u9012\u5f52\u5e76\u5bf9\u68af\u5ea6\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\uff0c\u52a0\u6cd5\u95e8\u62ff\u5230\u68af\u5ea6\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u68af\u5ea6\u5206\u522b\u4e58\u5230\u6bcf\u4e2a\u8f93\u5165\u503c\u7684\u5c40\u90e8\u68af\u5ea6\uff08\u5c31\u662f\u8ba9-4 \u4e58\u4ee5 x \u548c y \u7684\u5c40\u90e8\u68af\u5ea6\uff0cx \u548c y \u7684\u5c40\u90e8\u68af\u5ea6\u90fd\u662f 1\uff0c\u6240\u4ee5\u6700\u7ec8\u90fd\u662f-4\uff09\u3002\u53ef\u4ee5\u770b\u5230\u5f97\u5230\u4e86\u60f3\u8981\u7684\u6548\u679c\uff1a\u5982\u679c x\uff0cy \u51cf\u5c0f\uff08\u5b83\u4eec\u7684\u68af\u5ea6\u4e3a\u8d1f\uff09\uff0c\u90a3\u4e48\u52a0\u6cd5\u95e8\u7684\u8f93\u51fa\u503c\u51cf\u5c0f\uff0c\u8fd9\u4f1a\u8ba9\u4e58\u6cd5\u95e8\u7684\u8f93\u51fa\u503c\u589e\u5927\u3002</p> <p>\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u52a0\u6cd5\u95e8\u3001\u4e58\u6cd5\u95e8\u548c\u53d6\u6700\u5927\u503c\u95e8\u5355\u5143\u7684\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u76f4\u89c2\u7684\u65b9\u5f0f\u7406\u89e3\uff0c\u8fd9\u6709\u52a9\u4e8e\u8c03\u8bd5\u795e\u7ecf\u7f51\u7edc\u5e76\u786e\u4fdd\u68af\u5ea6\u7684\u6b63\u786e\u4f20\u64ad\u3002</p> <p></p> <ul> <li> <p>\u52a0\u6cd5\u95e8\u5355\u5143 \u65e0\u8bba\u8f93\u5165\u7684\u6570\u503c\u662f\u591a\u5c11\uff0c\u68af\u5ea6\u90fd\u4f1a\u88ab\u5e73\u7b49\u5730\u5206\u914d\u7ed9\u6240\u6709\u7684\u8f93\u5165\u3002\u8fd9\u662f\u56e0\u4e3a\u52a0\u6cd5\u64cd\u4f5c\u7684\u5c40\u90e8\u68af\u5ea6\u90fd\u662f\u7b80\u5355\u7684+1\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u68af\u5ea6\u4e0d\u53d8\u5730\u4f20\u9012\u7ed9\u6bcf\u4e00\u4e2a\u8f93\u5165\u3002\u56e0\u4e3a\u4e58\u4ee5 1.0 \u4fdd\u6301\u4e0d\u53d8\u3002<code>\u4e0a\u4f8b\u4e2d\uff0c\u52a0\u6cd5\u95e8\u628a\u68af\u5ea6 2.00 \u4e0d\u53d8\u4e14\u76f8\u7b49\u5730\u8def\u7531\u7ed9\u4e86\u4e24\u4e2a\u8f93\u5165\u3002</code></p> </li> <li> <p>\u53d6\u6700\u5927\u503c\u95e8\u5355\u5143 \u53d6\u6700\u5927\u503c\u95e8\u5355\u5143\u7684\u884c\u4e3a\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002<code>\u5b83\u6839\u636e\u8f93\u5165\u7684\u503c\u9009\u62e9\u5c06\u68af\u5ea6\u4f20\u9012\u7ed9\u54ea\u4e2a\u8f93\u5165\u3002</code>\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u53ea\u5c06\u68af\u5ea6\u4f20\u9012\u7ed9\u524d\u5411\u4f20\u64ad\u4e2d\u503c\u6700\u5927\u7684\u90a3\u4e2a\u8f93\u5165\u3002\u56e0\u4e3a\u6700\u5927\u503c\u64cd\u4f5c\u7684\u5c40\u90e8\u68af\u5ea6\u5bf9\u4e8e\u6700\u5927\u7684\u8f93\u5165\u662f 1\uff0c\u5bf9\u4e8e\u5176\u4ed6\u8f93\u5165\u5219\u662f 0\uff0c\u56e0\u6b64\u53ea\u6709\u6700\u5927\u7684\u8f93\u5165\u4f1a\u63a5\u6536\u5230\u68af\u5ea6\u3002\u4e0a\u4f8b\u4e2d\uff0c\u7531\u4e8e z \u7684\u503c\u6bd4 w \u5927\uff0c\u6240\u4ee5\u5c06\u68af\u5ea6\u4f20\u7ed9 z\uff0c\u56e0\u6b64 z \u7684\u68af\u5ea6\u662f 2\uff0cw \u7684\u68af\u5ea6\u662f 0</p> </li> <li> <p>\u4e58\u6cd5\u95e8\u5355\u5143 \u4e58\u6cd5\u95e8\u5355\u5143\u7684\u884c\u4e3a\u6700\u4e3a\u590d\u6742\u3002\u5176\u5c40\u90e8\u68af\u5ea6\u4e3a\u8f93\u5165\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u503c\uff0c\u5e76\u4e14\u5b83\u4eec\u76f8\u4e92\u4ea4\u6362\u4f4d\u7f6e\u540e\u518d\u76f8\u4e58\uff0c\u7136\u540e\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\u4e58\u4ee5\u4e0a\u6e38\u7684\u68af\u5ea6\u3002\u56e0\u6b64\uff0c<code>\u68af\u5ea6\u7684\u5927\u5c0f\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u8f93\u5165\u7684\u5927\u5c0f\uff0c\u8fd8\u53d6\u51b3\u4e8e\u4e0a\u6e38\u68af\u5ea6\u7684\u5927\u5c0f</code>\u3002\u5728\u4f60\u7684\u4f8b\u5b50\u4e2d\uff0c<code>x</code> \u7684\u68af\u5ea6\u8ba1\u7b97\u4e3a <code>-4.00 * 2.00 = -8.00</code>\u3002</p> </li> </ul> <p>\u975e\u76f4\u89c2\u5f71\u54cd\u53ca\u5176\u7ed3\u679c\u3002\u6ce8\u610f\u4e00\u79cd\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e58\u6cd5\u95e8\u5355\u5143\u7684\u5176\u4e2d\u4e00\u4e2a\u8f93\u5165\u975e\u5e38\u5c0f\uff0c\u800c\u53e6\u4e00\u4e2a\u8f93\u5165\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u4e58\u6cd5\u95e8\u7684\u64cd\u4f5c\u5c06\u4f1a\u4e0d\u662f\u90a3\u4e48\u76f4\u89c2\uff1a\u5b83\u5c06\u4f1a\u628a\u5927\u7684\u68af\u5ea6\u5206\u914d\u7ed9\u5c0f\u7684\u8f93\u5165\uff0c\u628a\u5c0f\u7684\u68af\u5ea6\u5206\u914d\u7ed9\u5927\u7684\u8f93\u5165\u3002\u5728\u7ebf\u6027\u5206\u7c7b\u5668\u4e2d\uff0c\u6743\u91cd\u548c\u8f93\u5165\u662f\u8fdb\u884c\u70b9\u79ef \\(w^Tx_i\\)\uff0c\u8fd9 d \u8bf4\u660e\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u5bf9\u4e8e\u6743\u91cd\u68af\u5ea6\u7684\u5927\u5c0f\u6709\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u5bf9\u6240\u6709\u8f93\u5165\u6570\u636e\u6837\u672c \\(x_i\\) \u4e58\u4ee5 1000\uff0c\u90a3\u4e48\u6743\u91cd\u7684\u68af\u5ea6\u5c06\u4f1a\u589e\u5927 1000 \u500d\uff0c\u8fd9\u6837\u5c31\u5fc5\u987b\u964d\u4f4e\u5b66\u4e60\u7387\u6765\u5f25\u8865\u3002</p> <p>\u4ece\u53cd\u5411\u4f20\u64ad\u7684\u89d2\u5ea6\u770b\uff0c\u6570\u636e\u9884\u5904\u7406\u975e\u5e38\u91cd\u8981\u3002\u672a\u9002\u5f53\u9884\u5904\u7406\u7684\u6570\u636e\u4f1a\u5bfc\u81f4\u68af\u5ea6\u7684\u5267\u70c8\u6ce2\u52a8\uff0c\u4ece\u800c\u5f71\u54cd\u6a21\u578b\u7684\u8bad\u7ec3\u8fc7\u7a0b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8f93\u5165\u6570\u636e\u8fc7\u5927\uff0c\u6743\u91cd\u68af\u5ea6\u4e5f\u4f1a\u8fc7\u5927\uff0c\u5bfc\u81f4\u5b66\u4e60\u7387\u7684\u8c03\u6574\u3002\u8fd9\u8bf4\u660e\uff0c\u5373\u4f7f\u5fae\u5c0f\u7684\u6570\u636e\u53d8\u5316\uff0c\u4e5f\u53ef\u80fd\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u4ea7\u751f\u6df1\u8fdc\u7684\u5f71\u54cd\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/#\u6a21\u5757\u5316sigmoid-\u4f8b\u5b50","title":"\u6a21\u5757\u5316\uff1aSigmoid \u4f8b\u5b50","text":"<p>\u8003\u8651\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a</p> \\[ f(w, x) = \\frac{1}{1 + e^{-(w_0x_0 + w_1x_1 + w_2)}} \\] <p>\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u542b\u6709\u8f93\u5165 \\(\\mathbf{x}\\) \u548c\u6743\u91cd \\(\\mathbf{w}\\) \u7684\u4e8c\u7ef4\u795e\u7ecf\u5143\uff0c\u8be5\u795e\u7ecf\u5143\u4f7f\u7528\u4e86 Sigmoid \u6fc0\u6d3b\u51fd\u6570\u3002\u5728\u8fd9\u91cc\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u51fd\u6570\u770b\u4f5c\u662f\u7531\u591a\u4e2a\u201c\u95e8\u201d\u7ec4\u6210\u7684\u3002</p> <p>\u4f7f\u7528 Sigmoid \u6fc0\u6d3b\u51fd\u6570\u7684\u4e8c\u7ef4\u795e\u7ecf\u5143\u7684\u4f8b\u5b50\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u8f93\u5165\u4e3a \\([x_0, x_1]\\)\uff0c\u53ef\u5b66\u4e60\u7684\u6743\u91cd\u4e3a \\([w_0, w_1, w_2]\\)\u3002\u795e\u7ecf\u5143\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\uff0c\u7136\u540e\u5176\u6fc0\u6d3b\u503c\u88ab Sigmoid \u51fd\u6570\u538b\u7f29\u5230 0 \u5230 1 \u4e4b\u95f4\u3002</p> <p>Sigmoid \u51fd\u6570\u7684\u68af\u5ea6\u63a8\u5bfc</p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u51fd\u6570\u64cd\u4f5c\u7684\u957f\u94fe\u6761\uff0c\u94fe\u6761\u4e0a\u7684\u95e8\u90fd\u5bf9 w \u548c x \u7684\u70b9\u79ef\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c\u3002\u8be5\u51fd\u6570\u88ab\u79f0\u4e3a Sigmoid \u51fd\u6570 \\(\\sigma(x)\\)\u3002Sigmoid \u51fd\u6570\u5173\u4e8e\u5176\u8f93\u5165\u7684\u6c42\u5bfc\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a</p> \\[ \\sigma(x) = \\frac{1}{1 + e^{-x}} \\] \\[ \\frac{d\\sigma(x)}{dx} = \\frac{e^{-x}}{(1 + e^{-x})^2} = \\left(\\frac{1 + e^{-x} - 1}{1 + e^{-x}}\\right)\\left(\\frac{1}{1 + e^{-x}}\\right) = (1 - \\sigma(x))\\sigma(x) \\] <p>\u8fd9\u79cd\u7b80\u5316\u4f7f\u5f97\u68af\u5ea6\u8ba1\u7b97\u66f4\u52a0\u76f4\u63a5\u3002\u4f8b\u5982\uff0cSigmoid \u51fd\u6570\u7684\u8f93\u5165\u4e3a 1.0\uff0c\u5219\u524d\u5411\u4f20\u64ad\u5f97\u5230\u7684\u8f93\u51fa\u4e3a 0.73\u3002\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u5c40\u90e8\u68af\u5ea6\u4e3a \\((1 - 0.73) \\times 0.73 \\approx 0.2\\)\u3002\u8fd9\u4e0e\u5148\u524d\u7684\u8ba1\u7b97\u6d41\u7a0b\u76f8\u6bd4\u66f4\u4e3a\u7b80\u6d01\uff0c\u56e0\u6b64\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u6253\u5305\u8fdb\u4e00\u4e2a\u5355\u72ec\u7684\u95e8\u5355\u5143\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u8fd9\u4e2a\u795e\u7ecf\u5143\u7684\u53cd\u5411\u4f20\u64ad\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code># \u5047\u8bbe\u4e00\u4e9b\u968f\u673a\u6570\u636e\u548c\u6743\u91cd\nw = [2, -3, -3]  # \u6743\u91cd w0, w1, w2\nx = [-1, -2]     # \u8f93\u5165 x0, x1\n\n# \u524d\u5411\u4f20\u64ad\ndot = w[0] * x[0] + w[1] * x[1] + w[2]  # \u8ba1\u7b97\u52a0\u6743\u548c (w0*x0 + w1*x1 + w2)\nf = 1.0 / (1 + math.exp(-dot))           # \u901a\u8fc7 sigmoid \u6fc0\u6d3b\u51fd\u6570\u5f97\u5230\u8f93\u51fa f\n\n# \u53cd\u5411\u4f20\u64ad\nddot = (1 - f) * f                       # \u8ba1\u7b97 dot \u5bf9\u5e94\u7684\u68af\u5ea6\uff0c\u4f7f\u7528 sigmoid \u51fd\u6570\u7684\u5bfc\u6570\ndx = [w[0] * ddot, w[1] * ddot]          # \u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5bf9\u8f93\u5165 x \u7684\u68af\u5ea6\ndw = [x[0] * ddot, x[1] * ddot, 1.0 * ddot] # \u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5bf9\u6743\u91cd w \u7684\u68af\u5ea6\n</code></pre>"},{"location":"CV/Lecture6_Backpropagation/#\u53cd\u5411\u4f20\u64ad\u5b9e\u8df5\u5206\u6bb5\u8ba1\u7b97","title":"\u53cd\u5411\u4f20\u64ad\u5b9e\u8df5\uff1a\u5206\u6bb5\u8ba1\u7b97","text":"<p>\u5047\u8bbe\u51fd\u6570\u4e3a\uff1a</p> \\[ f(x, y) = \\frac{x + \\sigma(y)}{\\sigma(x) + (x+y)^2} \\\\ \\sigma(z) = \\frac{1}{1 + e^{-z}} \\] <p>\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5982\u679c\u5bf9\\(x\\) \u6216 \\(y\\) \u8fdb\u884c\u5fae\u5206\u8fd0\u7b97\uff0c\u8fd0\u7b97\u7ed3\u675f\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u5de8\u5927\u800c\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u3002\u7136\u800c\u505a\u5982\u6b64\u590d\u6742\u7684\u8fd0\u7b97\u5b9e\u9645\u4e0a\u5e76\u65e0\u5fc5\u8981\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a\u660e\u786e\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u68af\u5ea6\uff0c\u53ea\u9700\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6\u5373\u53ef\u3002\u4e0b\u9762\u662f\u6784\u5efa\u524d\u5411\u4f20\u64ad\u7684\u4ee3\u7801\u6a21\u5f0f\uff1a</p> <pre><code>import math\n\nx = 3  # \u793a\u4f8b\u6570\u503c\ny = -4\n\n# \u524d\u5411\u4f20\u64ad\nsigy = 1.0 / (1 + math.exp(-y))  # \u5206\u5b50\u4e2d\u7684 sigmoid(y)           #(1)\nnum = x + sigy                        # \u5206\u5b50                            #(2)\nsigx = 1.0 / (1 + math.exp(-x))  # \u5206\u6bcd\u4e2d\u7684 sigmoid(x)            #(3)\nxpy = x + y                           # x + y                          #(4)\nxpysqr = xpy ** 2                     # (x + y) ^ 2                    #(5)\nden = sigx + xpysqr                 # \u5206\u6bcd                            #(6)\ninvden = 1.0 / den                   # \u5206\u6bcd\u7684\u5012\u6570                     #(7)\nf = num * invden                     # \u6700\u7ec8\u7ed3\u679c                        #(8)\n</code></pre> <p>\u6ce8\u610f\u5728\u6784\u5efa\u4ee3\u7801 s \u65f6\u521b\u5efa\u4e86\u591a\u4e2a\u4e2d\u95f4\u53d8\u91cf\uff0c\u6bcf\u4e2a\u90fd\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u8ba1\u7b97\u5c40\u90e8\u68af\u5ea6\u7684\u65b9\u6cd5\u662f\u5df2\u77e5\u7684\u3002\u8fd9\u6837\u8ba1\u7b97\u53cd\u5411\u4f20\u64ad\u5c31\u7b80\u5355\u4e86\uff1a\u6211\u4eec\u5bf9\u524d\u5411\u4f20\u64ad\u65f6\u4ea7\u751f\u6bcf\u4e2a\u53d8\u91cf(sigy, num, sigx, xpy, xpysqr, den, invden)\u8fdb\u884c\u56de\u4f20\u3002\u6211\u4eec\u4f1a\u6709\u540c\u6837\u6570\u91cf\u7684\u53d8\u91cf\uff0c\u4f46\u662f\u90fd\u4ee5 d \u5f00\u5934\uff0c\u7528\u6765\u5b58\u50a8\u5bf9\u5e94\u53d8\u91cf\u7684\u68af\u5ea6\u3002\u6ce8\u610f\u5728\u53cd\u5411\u4f20\u64ad\u7684\u6bcf\u4e00\u5c0f\u5757\u4e2d\u90fd\u5c06\u5305\u542b\u4e86\u8868\u8fbe\u5f0f\u7684\u5c40\u90e8\u68af\u5ea6\uff0c\u7136\u540e\u6839\u636e\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u4e58\u4ee5\u4e0a\u6e38\u68af\u5ea6\u3002\u5bf9\u4e8e\u6bcf\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u6307\u660e\u5176\u5bf9\u5e94\u7684\u662f\u524d\u5411\u4f20\u64ad\u7684\u54ea\u90e8\u5206\u3002</p> <pre><code># \u56de\u4f20 f = num * invden\ndnum = invden              # \u5bf9\u5e94 num \u7684\u68af\u5ea6                          #(8)\ndinvden = num              # \u5bf9\u5e94 invden \u7684\u68af\u5ea6                        #(8)\n\n# \u56de\u4f20 invden = 1.0 / den\ndden = (-1.0 / (den**2)) * dinvden  # \u5bf9\u5e94 den \u7684\u68af\u5ea6                 #(7)\n\n# \u56de\u4f20 den = sigx + xpysqr\ndsigx = (1) * dden         # \u5bf9\u5e94 sigx \u7684\u68af\u5ea6                         #(6)\ndxpysqr = (1) * dden       # \u5bf9\u5e94 xpysqr \u7684\u68af\u5ea6                       #(6)\n\n# \u56de\u4f20 xpysqr = xpy**2\ndxpy = (2 * xpy) * dxpysqr  # \u5bf9\u5e94 xpy \u7684\u68af\u5ea6                         #(5)\n\n# \u56de\u4f20 xpy = x + y\ndx = (1) * dxpy            # \u5bf9\u5e94 x \u7684\u68af\u5ea6                            #(4)\ndy = (1) * dxpy            # \u5bf9\u5e94 y \u7684\u68af\u5ea6                            #(4)\n\n# \u56de\u4f20 sigx = 1.0 / (1 + math.exp(-x))\ndx += ((1 - sigx) * sigx) * dsigx  # \u6ce8\u610f\u8fd9\u91cc\u662f +=, \u56e0\u4e3a\u6709\u591a\u5904\u5bf9 dx \u7684\u8d21\u732e #(3)\n\n# \u56de\u4f20 num = x + sigy\ndx += (1) * dnum           # \u518d\u6b21\u5bf9 x \u7684\u8d21\u732e                           #(2)\ndsigy = (1) * dnum         # \u5bf9\u5e94 sigy \u7684\u68af\u5ea6                          #(2)\n\n# \u56de\u4f20 sigy = 1.0 / (1 + math.exp(-y))\ndy += ((1 - sigy) * sigy) * dsigy  # \u5bf9\u5e94 y \u7684\u68af\u5ea6                     #(1)\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u4e1c\u897f\uff1a</p> <p>\u5bf9\u524d\u5411\u4f20\u64ad\u53d8\u91cf\u8fdb\u884c\u7f13\u5b58\uff1a\u5728\u8ba1\u7b97\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u4e00\u4e9b\u4e2d\u95f4\u53d8\u91cf\u975e\u5e38\u6709\u7528\u3002\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u6700\u597d\u4ee3\u7801\u5b9e\u73b0\u5bf9\u4e8e\u8fd9\u4e9b\u4e2d\u95f4\u53d8\u91cf\u7684\u7f13\u5b58\uff0c\u8fd9\u6837\u5728\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\u4e5f\u80fd\u7528\u4e0a\u5b83\u4eec\u3002\u5982\u679c\u8fd9\u6837\u505a\u8fc7\u4e8e\u56f0\u96be\uff0c\u4e5f\u53ef\u4ee5\uff08\u4f46\u662f\u6d6a\u8d39\u8ba1\u7b97\u8d44\u6e90\uff09\u91cd\u65b0\u8ba1\u7b97\u5b83\u4eec\u3002</p> <p>\u5728\u4e0d\u540c\u5206\u652f\u7684\u68af\u5ea6\u8981\u76f8\u52a0\uff1a\u5982\u679c\u53d8\u91cf x\uff0cy \u5728\u524d\u5411\u4f20\u64ad\u7684\u8868\u8fbe\u5f0f\u4e2d\u51fa\u73b0\u591a\u6b21\uff0c\u90a3\u4e48\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\u5c31\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u4f7f\u7528 += \u800c\u4e0d\u662f = \u6765\u7d2f\u8ba1\u8fd9\u4e9b\u53d8\u91cf\u7684\u68af\u5ea6\uff08\u4e0d\u7136\u5c31\u4f1a\u9020\u6210\u8986\u5199\uff09\u3002\u8fd9\u662f\u9075\u5faa\u4e86\u5728\u5fae\u79ef\u5206\u4e2d\u7684\u591a\u5143\u94fe\u5f0f\u6cd5\u5219\uff0c\u8be5\u6cd5\u5219\u6307\u51fa\u5982\u679c\u53d8\u91cf\u5728\u7ebf\u8def\u4e2d\u5206\u652f\u8d70\u5411\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u90a3\u4e48\u68af\u5ea6\u5728\u56de\u4f20\u7684\u65f6\u5019\uff0c\u5c31\u5e94\u8be5\u8fdb\u884c\u7d2f\u52a0\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/#\u7528\u5411\u91cf\u5316\u64cd\u4f5c\u8ba1\u7b97\u68af\u5ea6","title":"\u7528\u5411\u91cf\u5316\u64cd\u4f5c\u8ba1\u7b97\u68af\u5ea6","text":"<p>\u5f97\u5230\u7684\u5b9e\u9645\u4e0a\u662f\u96c5\u514b\u6bd4\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u53ef\u4ee5\u63cf\u8ff0\u6bcf\u4e2a\u8f93\u51fa\u5bf9\u8f93\u5165\u7684\u5f71\u54cd.\u96c5\u514b\u6bd4\u77e9\u9635\u8868\u793a\u8f93\u51fa\u5411\u91cf\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5bf9\u8f93\u5165\u5411\u91cf\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u504f\u5bfc\u6570\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u64cd\u4f5c\uff1a\u77e9\u9635\u4e58\u6cd5\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u77e9\u9635 W \u548c X\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u662f\u4e00\u4e2a\u77e9\u9635 D\uff1a\\(D = W \\cdot X\\)</p> <p>\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u8ba1\u7b97\u635f\u5931\u51fd\u6570 L \u5bf9 W \u548c X \u7684\u68af\u5ea6\u3002\u8fd9\u5c31\u9700\u8981\u77e5\u9053 L \u5bf9 D \u7684\u68af\u5ea6 \\(\\frac{\\partial L}{\\partial D}\\)\uff0c\u5e76\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6765\u8ba1\u7b97 \\(\\frac{\\partial L}{\\partial W}\\) \u548c \\(\\frac{\\partial L}{\\partial X}\\)\uff1a</p> \\[ \\frac{\\partial L}{\\partial W} =\\frac{\\partial L}{\\partial D} \\cdot \\frac{\\partial D}{\\partial W}= \\frac{\\partial L}{\\partial D} \\cdot X^T\\\\ \\frac{\\partial L}{\\partial X} = W^T \\cdot \\frac{\\partial L}{\\partial D} \\] <p>\u7ef4\u5ea6\u5206\u6790\u662f\u7406\u89e3\u5411\u91cf\u5316\u64cd\u4f5c\u68af\u5ea6\u8ba1\u7b97\u7684\u5173\u952e\u3002\u5047\u8bbe\uff1a</p> <ul> <li>W \u7684\u7ef4\u5ea6\u662f [\\(n \\times p\\)]</li> <li>X \u7684\u7ef4\u5ea6\u662f [\\(p \\times m\\)]</li> <li>D \u7684\u7ef4\u5ea6\u662f [\\(n \\times m\\)]</li> </ul> <p>\u90a3\u4e48\uff0c\u68af\u5ea6 \\(\\frac{\\partial L}{\\partial D}\\) \u7684\u7ef4\u5ea6\u662f [\\(n \\times m\\)] \uff0c\u800c\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\u5f97\u5230\u7684 \\(\\dfrac{\\partial L}{\\partial W}\\) \u548c \\(\\dfrac{\\partial L}{\\partial X}\\) \u7684\u7ef4\u5ea6\u5206\u522b\u662f\uff1a</p> <ul> <li>\\(\\dfrac{\\partial L}{\\partial W} = [n \\times p]\\)</li> <li>\\(\\dfrac{\\partial L}{\\partial X} = [p \\times m]\\)</li> </ul> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd\u8ba1\u7b97\u7684\u6b63\u786e\u6027\u548c\u7ef4\u5ea6\u5339\u914d\u3002</p> <pre><code>    # \u524d\u5411\u4f20\u64ad\n    W = np.random.randn(5, 10)\n    X = np.random.randn(10, 3)\n    D = W.dot(X)\n\n    # \u5047\u8bbe\u6211\u4eec\u5f97\u5230\u4e86 D \u7684\u68af\u5ea6\n    dD = np.random.randn(*D.shape) # \u548c D \u4e00\u6837\u7684\u5c3a\u5bf8\n    dW = dD.dot(X.T) #.T \u5c31\u662f\u5bf9\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e\n    dX = W.T.dot(dD)\n</code></pre> <p><code>_\u63d0\u793a\uff1a\u8981\u5206\u6790\u7ef4\u5ea6\uff01_\u6ce8\u610f\u4e0d\u9700\u8981\u53bb\u8bb0\u5fc6 dW \u548c dX \u7684\u8868\u8fbe\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u5bb9\u6613\u901a\u8fc7\u7ef4\u5ea6\u63a8\u5bfc\u51fa\u6765\u3002\u4f8b\u5982\uff0c\u6743\u91cd\u7684\u68af\u5ea6 dW \u7684\u5c3a\u5bf8\u80af\u5b9a\u548c\u6743\u91cd\u77e9\u9635 W \u7684\u5c3a\u5bf8\u662f\u4e00\u6837\u7684\uff0c\u800c\u8fd9\u53c8\u662f\u7531 X \u548c dD \u7684\u77e9\u9635\u4e58\u6cd5\u51b3\u5b9a\u7684\uff08\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d X \u548c W \u90fd\u662f\u6570\u5b57\u4e0d\u662f\u77e9\u9635\uff09\u3002\u603b\u6709\u4e00\u4e2a\u65b9\u5f0f\u662f\u80fd\u591f\u8ba9\u7ef4\u5ea6\u4e4b\u95f4\u80fd\u591f\u5bf9\u7684\u4e0a\u7684\u3002\u4f8b\u5982\uff0cX \u7684\u5c3a\u5bf8\u662f [10x3]\uff0cdD \u7684\u5c3a\u5bf8\u662f [5x3]\uff0c\u5982\u679c\u4f60\u60f3\u8981 dW \u548c W \u7684\u5c3a\u5bf8\u662f [5x10]\uff0c\u90a3\u5c31\u8981 dD.dot(X.T)\u3002</code></p> <p>\u77e9\u9635\u76f8\u4e58\u53cd\u5411\u4f20\u64ad\u7684\u901a\u7528\u7b56\u7565</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u5982\u4e0b\u7684\u77e9\u9635\u4e58\u6cd5\u64cd\u4f5c\uff1a\\(Y = X \\cdot W\\)</p> <p>\u5176\u4e2d\uff1a</p> <ul> <li>X \u662f\u4e00\u4e2a\u7ef4\u5ea6\u4e3a[\\(N\u00d7D\\)] \u7684\u8f93\u5165\u77e9\u9635\u3002</li> <li>W \u662f\u4e00\u4e2a\u7ef4\u5ea6\u4e3a[\\(D\u00d7M\\)] \u7684\u6743\u91cd\u77e9\u9635\u3002</li> <li>Y \u662f\u7ed3\u679c\u77e9\u9635\uff0c\u7ef4\u5ea6\u4e3a[\\(N\u00d7M\\)]\u3002</li> </ul> <p>\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\uff0c\u6211\u4eec\u4ece\u635f\u5931\u51fd\u6570 L \u5bf9\u8f93\u51fa\u77e9\u9635 Y \u7684\u68af\u5ea6\u5f00\u59cb\uff0c\u8bb0\u4f5c \\(\\dfrac{\\partial L}{\\partial Y}\\)\uff0c\u7ef4\u5ea6\u4e3a[N\u00d7M]\u3002\u76ee\u6807\u662f\u8ba1\u7b97\u8f93\u5165\u77e9\u9635 X \u548c\u6743\u91cd\u77e9\u9635 W \u7684\u68af\u5ea6\uff0c\u5373 \\(\\dfrac{\\partial L}{\\partial X}\\) \u548c \\(\\dfrac{\\partial L}{\\partial W}\\)\u3002</p> <p></p> <p>\u5bf9\u4e8e\u8f93\u5165\u77e9\u9635 X \u4e2d\u7684\u5143\u7d20 \\(x_{11}\\) \uff1a</p> <ol> <li> <p>\u524d\u5411\u4f20\u64ad\uff1a\u5728\u77e9\u9635\u4e58\u6cd5 \\(Y = X \\cdot W\\) \u4e2d\uff0c\u8f93\u51fa\u77e9\u9635 Y \u7684\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u7684\u5143\u7d20 \\(y_{11}\\) \u662f X \u7684\u7b2c\u4e00\u884c\u4e0e W \u7684\u7b2c\u4e00\u5217\u7684\u4e58\u79ef\u3002\\(y_{11} = \\sum_{k=1}^{D} x_{1k} \\cdot w_{k1}\\)</p> </li> <li> <p>\u53cd\u5411\u4f20\u64ad\uff1a\u5bf9\u4e8e\u5143\u7d20 \\(x_{11}\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5176\u5bf9 \\(y_{11}\\) \u7684\u5bfc\u6570\uff1a\\(\\dfrac{\\partial y_{11}}{\\partial x_{11}} = w_{11}\\)</p> </li> </ol> <p>\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\uff0c\u635f\u5931\u51fd\u6570 L \u5bf9 \\(x_{11}\\) \u7684\u5bfc\u6570\u4e3a\uff1a\\(\\dfrac{\\partial L}{\\partial x_{11}} = \\dfrac{\\partial y_{11}}{\\partial x_{11}} \\cdot \\dfrac{\\partial L}{\\partial y_{11}}\\)</p> \\[ \\frac{\\mathrm{d} L }{\\mathrm{d} x_{11}}=\\frac{\\mathrm{d} y }{\\mathrm{d} x_{11}}\\cdot \\frac{\\mathrm{d} L }{\\mathrm{d} y} \\] <p>\u7c7b\u4f3c\u7684\u53ef\u4ee5\u63a8\u5e7f\u5230 y \u7684\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f97\u5230 y \u5bf9 x_11 \u7684\u5bfc\u6570\u4ee5\u53ca y \u5bf9 x \u7684\u5bfc\u6570 </p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u82e5\u77e9\u9635 WWW \u6216 XXX \u662f\u7a00\u758f\u7684\uff0c\u53ef\u4ee5\u5229\u7528\u7a00\u758f\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u4ece\u800c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002\u7a00\u758f\u77e9\u9635\u7684\u8ba1\u7b97\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5185\u5b58\u548c\u8ba1\u7b97\u9700\u6c42\uff0c\u662f\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u6a21\u578b\u65f6\u7684\u5173\u952e\u4f18\u5316\u624b\u6bb5\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/#pytorch-\u5b9e\u6218\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u81ea\u52a8\u6c42\u5bfc","title":"PyTorch \u5b9e\u6218\uff1a\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u81ea\u52a8\u6c42\u5bfc","text":""},{"location":"CV/Lecture6_Backpropagation/#\u4e3a\u4ec0\u4e48\u8981\u81ea\u5b9a\u4e49\u51fd\u6570","title":"\u4e3a\u4ec0\u4e48\u8981\u81ea\u5b9a\u4e49\u51fd\u6570","text":"<p>\u5728 PyTorch \u4e2d\uff0c\u6c42\u5bfc\u64cd\u4f5c\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u901a\u8fc7\u6b63\u786e\u7684\u51fd\u6570\u5d4c\u5957\u6216\u7f51\u7edc\u5d4c\u5957\uff0c\u5373\u53ef\u5b9e\u73b0\u81ea\u52a8\u6c42\u5bfc\uff0c\u65e0\u9700\u624b\u52a8\u8ba1\u7b97\u590d\u6742\u7684\u5bfc\u6570\u3002\u7136\u800c\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u81ea\u52a8\u6c42\u5bfc\u5e76\u4e0d\u9002\u7528\u3002\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u9700\u8981\u5b9e\u73b0\u67d0\u4e9b\u4e0d\u53ef\u5bfc\u64cd\u4f5c\u6216\u5b9a\u5236\u5316\u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u3002\u4e3a\u6b64\uff0cPyTorch \u63d0\u4f9b\u4e86\u6269\u5c55 <code>torch.autograd</code> \u7684\u529f\u80fd\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6c42\u5bfc\u65b9\u5f0f\u3002</p> <p>\u573a\u666f\u4e00\uff1a\u4e0d\u53ef\u5bfc\u64cd\u4f5c \u6709\u4e9b\u64cd\u4f5c\u672c\u8d28\u4e0a\u662f\u4e0d\u53ef\u5bfc\u7684\uff0c\u6216\u8005\u5176\u5bfc\u6570\u5728\u6807\u51c6\u5e93\u4e2d\u6ca1\u6709\u76f4\u63a5\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a\u7279\u5b9a\u7684\u6fc0\u6d3b\u51fd\u6570\u6216\u635f\u5931\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u65e0\u6cd5\u901a\u8fc7\u73b0\u6709\u7684\u81ea\u52a8\u6c42\u5bfc\u673a\u5236\u5904\u7406\u3002</p> <p>\u573a\u666f\u4e8c\uff1a\u5b9a\u5236\u635f\u5931\u51fd\u6570 \u6709\u65f6\uff0c\u4e3a\u4e86\u5b9e\u73b0\u66f4\u597d\u7684\u5b66\u4e60\u6548\u679c\uff0c\u4f60\u53ef\u80fd\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u65b0\u7684\u635f\u5931\u51fd\u6570\u3002\u6b64\u65f6\uff0c\u5fc5\u987b\u660e\u786e\u8be5\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u548c\u6c42\u5bfc\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u6b63\u786e\u5730\u66f4\u65b0\u53c2\u6570\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/#\u81ea\u52a8\u68af\u5ea6\u7684\u5b58\u50a8\u4e0e\u6e05\u7406","title":"\u81ea\u52a8\u68af\u5ea6\u7684\u5b58\u50a8\u4e0e\u6e05\u7406","text":"<p>\u5728\u6211\u4eec\u8ba1\u7b97\u5173\u4e8e\u5f20\u91cf\u7684\u68af\u5ea6\u4e4b\u524d\uff0c\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u6765\u5b58\u50a8\u68af\u5ea6\u3002 \u91cd\u8981\u7684\u662f\uff0c<code>\u6211\u4eec\u4e0d\u4f1a\u5728\u6bcf\u6b21\u5bf9\u4e00\u4e2a\u53c2\u6570\u6c42\u5bfc\u65f6\u90fd\u5206\u914d\u65b0\u7684\u5185\u5b58</code>\u3002 \u56e0\u4e3a\u6211\u4eec\u7ecf\u5e38\u4f1a\u6210\u5343\u4e0a\u4e07\u6b21\u5730\u66f4\u65b0\u76f8\u540c\u7684\u53c2\u6570\uff0c\u6bcf\u6b21\u90fd\u5206\u914d\u65b0\u7684\u5185\u5b58\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u5c06\u5185\u5b58\u8017\u5c3d\u3002 \u6ce8\u610f\uff0c\u4e00\u4e2a\u6807\u91cf\u51fd\u6570\u5173\u4e8e\u5411\u91cf\u7684\u68af\u5ea6\u662f\u5411\u91cf\uff0c\u5e76\u4e14\u4e0e\u5411\u91cf\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\u3002</p> <ol> <li>\u6b63\u786e\u4f7f\u7528 <code>requires_grad=True</code></li> </ol> <p>\u5728\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u65f6\uff0cPyTorch \u4f1a\u81ea\u52a8\u8ba1\u7b97\u548c\u5b58\u50a8\u68af\u5ea6\u3002\u7136\u800c\uff0c\u5fc5\u987b\u63d0\u524d\u544a\u77e5 PyTorch \u54ea\u4e9b\u5f20\u91cf\u9700\u8981\u68af\u5ea6\u3002\u901a\u8fc7\u8bbe\u7f6e <code>requires_grad=True</code>\uff0c\u53ef\u4ee5\u786e\u4fdd PyTorch \u5728\u8ba1\u7b97\u65f6\u4fdd\u7559\u68af\u5ea6\u4fe1\u606f\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5219\u8ba1\u7b97\u8fc7\u7a0b\u4e0d\u4f1a\u8ddf\u8e2a\u8fd9\u4e9b\u5f20\u91cf\u7684\u68af\u5ea6\uff0c\u5bfc\u81f4\u540e\u7eed\u7684\u53cd\u5411\u4f20\u64ad\u64cd\u4f5c\u5931\u8d25\u6216\u62a5\u9519\u3002</p> <pre><code>x = torch.tensor([1.0, 2.0, 3.0])  # \u521b\u5efa\u8f93\u5165\u5f20\u91cf\nx.requires_grad_(True)  # \u542f\u7528\u68af\u5ea6\u8ffd\u8e2a\ny = torch.dot(x, x)  # \u8ba1\u7b97 y = x^2\ny.backward()  # \u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6\nprint(x.grad)  # \u8f93\u51fa\u68af\u5ea6\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8bbe\u7f6e\u4e86 <code>x.requires_grad_(True)</code>\uff0c\u56e0\u6b64 PyTorch \u4f1a\u8ddf\u8e2a <code>x</code> \u7684\u68af\u5ea6\uff0c\u6700\u7ec8\u5728 <code>y.backward()</code> \u8c03\u7528\u65f6\u53ef\u4ee5\u6b63\u786e\u8ba1\u7b97\u5e76\u8f93\u51fa <code>x</code> \u7684\u68af\u5ea6\u3002</p> <ol> <li>\u9519\u8bef\u987a\u5e8f\u5bfc\u81f4\u7684\u9519\u8bef</li> </ol> <pre><code>x=torch.tensor([1.0,2.0,3.0])#\u8f93\u5165\u7684\u5f20\u91cf\ny=torch.dot(x,x)#\u8fdb\u884c\u8ba1\u7b97\nx.requires_grad_(True)#\u8868\u793a\u8fd9\u4e2a\u5f20\u91cf\u9700\u8981\u8fdb\u884c\u6c42\u5bfc\uff0c\u5426\u5219\u4e0d\u4f1a\u5b58\u50a8\u5176\u68af\u5ea6\ny.backward()#\u4ece\u6700\u7ec8\u7aef\u5f00\u59cb\u53cd\u5411\u4f20\u64ad\nx.grad#\u663e\u793a x \u7684\u68af\u5ea6\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e <code>requires_grad_(True)</code> \u5728\u8ba1\u7b97\u4e4b\u540e\u8bbe\u7f6e\uff0cPyTorch \u65e0\u6cd5\u8ddf\u8e2a\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u68af\u5ea6\uff0c\u56e0\u6b64\u5728\u8c03\u7528 <code>y.backward()</code> \u65f6\u4f1a\u62a5\u9519\u3002\u8fd9\u8868\u660e\u542f\u7528\u68af\u5ea6\u8ffd\u8e2a\u5fc5\u987b\u5728\u8ba1\u7b97\u4e4b\u524d\u5b8c\u6210\u3002</p> <ol> <li>\u6e05\u9664\u7d2f\u79ef\u7684\u68af\u5ea6</li> </ol> <pre><code>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPyTorch \u4f1a\u7d2f\u79ef\u68af\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u6e05\u9664\u4e4b\u524d\u7684\u503c\nx.grad.zero_()\n</code></pre> <ol> <li>\u975e\u6807\u91cf\u8f93\u51fa\u7684\u68af\u5ea6\u8ba1\u7b97</li> </ol> <p>\u5f53 <code>y</code> \u4e0d\u662f\u6807\u91cf\u65f6\uff0c\u5411\u91cf <code>y</code> \u5173\u4e8e\u5411\u91cf <code>x</code> \u7684\u5bfc\u6570\u7684\u6700\u81ea\u7136\u89e3\u91ca\u662f\u4e00\u4e2a\u77e9\u9635\u3002 \u5bf9\u4e8e\u9ad8\u9636\u548c\u9ad8\u7ef4\u7684 <code>y</code> \u548c <code>x</code>\uff0c\u6c42\u5bfc\u7684\u7ed3\u679c\u53ef\u4ee5\u662f\u4e00\u4e2a\u9ad8\u9636\u5f20\u91cf\u3002</p> <p>\u5f53\u8f93\u51fa\u662f\u975e\u6807\u91cf\u65f6\uff0cPyTorch \u9700\u8981\u77e5\u9053\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u5f20\u91cf\u3002\u901a\u5e38\uff0c\u6700\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u8ba1\u7b97\u6279\u91cf\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u4e4b\u548c\uff0c\u8fd9\u4e5f\u662f\u5927\u591a\u6570\u635f\u5931\u51fd\u6570\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002</p> <pre><code>\u5bf9\u975e\u6807\u91cf\u8c03\u7528 backward \u9700\u8981\u4f20\u5165\u4e00\u4e2a gradient \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u6307\u5b9a\u5fae\u5206\u51fd\u6570\u5173\u4e8e self \u7684\u68af\u5ea6\u3002\n# \u672c\u4f8b\u53ea\u60f3\u6c42\u504f\u5bfc\u6570\u7684\u548c\uff0c\u6240\u4ee5\u4f20\u9012\u4e00\u4e2a 1 \u7684\u68af\u5ea6\u662f\u5408\u9002\nx.grad.zero_()  # \u6e05\u9664\u5148\u524d\u7684\u68af\u5ea6\ny = x * x  # \u8ba1\u7b97 y\n# \u7b49\u4ef7\u4e8e y.backward(torch.ones(len(x)))\ny.sum().backward()  # \u8ba1\u7b97 y \u5bf9 x \u7684\u68af\u5ea6\nprint(x.grad)  # \u8f93\u51fa\u68af\u5ea6\n</code></pre> <p>\u6ce8\u610f\uff0c\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4e00\u822c\u5bf9\u6807\u91cf\u6c42\u5bfc\uff08\u4e3b\u8981\u662f\u8bc4\u4ef7\u6307\u6807\u548c Loss\uff09\uff0c\u5982\u679c\u635f\u5931\u51fd\u6570\u662f\u5411\u91cf\uff0c\u90a3\u4e48\u53ef\u80fd\u5bfc\u81f4\u7ef4\u5ea6\u8d8a\u6765\u8d8a\u5927</p>"},{"location":"CV/Lecture6_Backpropagation/#\u6c42\u5bfc\u539f\u7406","title":"\u6c42\u5bfc\u539f\u7406","text":"<p>\u5728 PyTorch \u4e2d\uff0c\u81ea\u52a8\u6c42\u5bfc\u7684\u5b9e\u73b0\u57fa\u4e8e\u8ba1\u7b97\u56fe\u7684\u6982\u5ff5\u3002\u8ba1\u7b97\u56fe\u662f\u4e00\u79cd<code>\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u64cd\u4f5c\uff08\u4f8b\u5982\u52a0\u6cd5\u3001\u4e58\u6cd5\u7b49\uff09\uff0c\u8fb9\u8868\u793a\u8fd9\u4e9b\u64cd\u4f5c\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0cPyTorch \u4f1a\u52a8\u6001\u6784\u5efa\u8fd9\u4e2a\u8ba1\u7b97\u56fe\uff0c\u5e76\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u4f9d\u636e\u8ba1\u7b97\u56fe\u6765\u8ba1\u7b97\u68af\u5ea6\u3002</p> <p></p> <p>\u5728\u524d\u5411\u4f20\u64ad\u65f6\uff0cPyTorch \u4f1a\u6839\u636e\u64cd\u4f5c\u7684\u987a\u5e8f\u6784\u5efa\u8ba1\u7b97\u56fe\u3002\u6bcf\u4e2a\u64cd\u4f5c\u8282\u70b9\u90fd\u4f1a\u4fdd\u5b58\u5bf9\u5e94\u7684\u68af\u5ea6\u8ba1\u7b97\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u88ab\u8c03\u7528\u3002</p> <p>\u53cd\u5411\u4f20\u64ad\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\uff08\u94fe\u5f0f\u6c42\u5bfc\uff09\u8ba1\u7b97\u68af\u5ea6\u3002\u5728\u8ba1\u7b97\u56fe\u4e2d\uff0c\u4ece\u8f93\u51fa\u8282\u70b9\u5f00\u59cb\uff0c\u68af\u5ea6\u4f1a\u6cbf\u7740\u56fe\u4e2d\u8fb9\u53cd\u5411\u4f20\u64ad\u5230\u6bcf\u4e2a\u8f93\u5165\u8282\u70b9\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u7684\u68af\u5ea6\u90fd\u88ab\u8ba1\u7b97\u51fa\u6765\u3002</p> <p>\u6ce8\u610f\uff0cPyTorch \u7684\u81ea\u52a8\u6c42\u5bfc\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u6570\u503c\u6c42\u5bfc\uff0c\u800c\u4e0d\u662f\u7b26\u53f7\u6c42\u5bfc\u3002<code>\u8fd9\u610f\u5473\u7740 PyTorch \u4f9d\u8d56\u4e8e\u8ba1\u7b97\u56fe\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u8282\u70b9\u5b58\u50a8\u7684\u68af\u5ea6\u8ba1\u7b97\u65b9\u6cd5</code>\uff0c\u800c\u4e0d\u662f\u89e3\u6790\u51fd\u6570\u7684\u5bfc\u6570\u516c\u5f0f\u3002</p> <p></p>"},{"location":"CV/Lecture6_Backpropagation/#\u81ea\u5b9a\u4e49\u51fd\u6570\u5b8c\u6210\u6c42\u5bfc","title":"\u81ea\u5b9a\u4e49\u51fd\u6570\u5b8c\u6210\u6c42\u5bfc","text":"<p>\u5728 PyTorch \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 <code>torch.autograd.Function</code> \u7c7b\uff0c\u624b\u52a8\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u3002\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u6df1\u5165\u5730\u7406\u89e3\u53cd\u5411\u4f20\u64ad\u7684\u673a\u5236\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u6216\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002</p> <p></p> <p>\u6211\u4eec\u60f3\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u53cd\u5411\u4f20\u64ad\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u8981\u5b9a\u4e49\u6210\u7c7b\uff0c\u5e76\u4e14\u9700\u8981\u7ee7\u627f <code>torch.autograd.Function</code> \u7c7b\uff0c\u540c\u65f6\u5206\u522b\u5b9a\u4e49 <code>forward</code> \u548c <code>backward</code> \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u5b9e\u73b0\u6b63\u5411\u63a8\u7406\u548c\u53cd\u5411\u4f20\u64ad\u7684\u5173\u952e\uff0c\u6211\u4eec\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u5e73\u65b9\u51fd\u6570\u4e3a\u4f8b\u770b\u770b\u5982\u4f55\u5b9e\u73b0\u7684</p> <pre><code>class SquareFunction(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        # \u6b63\u5411\u4f20\u64ad\u7684\u903b\u8f91\n        ctx.save_for_backward(input)  # \u4fdd\u5b58\u8f93\u5165\uff0c\u4ee5\u4fbf\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u4f7f\u7528\n        return input * input # \u8ba1\u7b97\u8f93\u51fa\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        # \u53cd\u5411\u4f20\u64ad\u7684\u903b\u8f91\n        input, = ctx.saved_tensors  # \u83b7\u53d6\u4fdd\u5b58\u7684\u8f93\u5165\n        grad_input = grad_output * 2 * input  # \u8ba1\u7b97\u8f93\u5165\u7684\u68af\u5ea6\n        print(f\"grad_output: {grad_output}\")  # \u8f93\u51fa grad_output \u7684\u503c\n        return grad_input\n</code></pre> <p><code>forward</code> \u65b9\u6cd5\uff1a</p> <ul> <li><code>ctx.save_for_backward(input)</code>\uff1a\u5728\u6b63\u5411\u4f20\u64ad\u65f6\uff0c\u4fdd\u5b58\u8f93\u5165 <code>input</code>\uff0c\u4ee5\u4fbf\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u4f7f\u7528\u3002\u8fd9\u662f\u5b9e\u73b0\u53cd\u5411\u4f20\u64ad\u6240\u9700\u4fe1\u606f\u7684\u5173\u952e\u6b65\u9aa4\u3002</li> <li>\u8fd4\u56de\u503c <code>input * input</code>\uff1a\u8fd9\u662f\u6b63\u5411\u4f20\u64ad\u7684\u8f93\u51fa\u7ed3\u679c\u3002</li> </ul> <p><code>backward</code> \u65b9\u6cd5\uff1a</p> <ul> <li><code>ctx.saved_tensors</code>\uff1a\u83b7\u53d6\u6b63\u5411\u4f20\u64ad\u4e2d\u4fdd\u5b58\u7684\u5f20\u91cf\uff0c\u8fd9\u91cc\u662f <code>input</code>\u3002</li> <li><code>grad_output * 2 * input</code>\uff1a\u6839\u636e\u94fe\u5f0f\u6cd5\u5219\u8ba1\u7b97\u68af\u5ea6\u3002<code>grad_output</code> \u662f\u4ece\u4e0a\u6e38\u4f20\u9012\u8fc7\u6765\u7684\u68af\u5ea6\uff0c<code>2 * input</code> \u662f\u5e73\u65b9\u51fd\u6570\u7684\u5bfc\u6570\u3002</li> </ul> <p><code>ctx</code> \u662f\u201c\u4e0a\u4e0b\u6587\u201d\uff08context\uff09\uff0c\u7528\u4e8e\u5728\u6b63\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u4e4b\u95f4\u5b58\u50a8\u4fe1\u606f\u3002\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u662f\u7279\u522b\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u6216\u51fd\u6570\u8c03\u7528\u521b\u5efa\u7684\uff0c\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u7528\u4e8e\u8ba1\u7b97\u68af\u5ea6\u7684\u4efb\u4f55\u4fe1\u606f</p> <p>\u4e3a\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 <code>SquareFunction</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u5176 <code>apply</code> \u65b9\u6cd5\u3002</p> <pre><code># \u5b9a\u4e49\u8f93\u5165\u5f20\u91cf\uff0c\u5e76\u5f00\u542f\u81ea\u52a8\u6c42\u5bfc\nx = torch.tensor([2.0], requires_grad=True)\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u524d\u5411\u4f20\u64ad\ny = SquareFunction.apply(x)\n# \u8fdb\u884c\u53cd\u5411\u4f20\u64ad\ny.backward()\n# \u6253\u5370\u7ed3\u679c\nprint(f\"x: {x}\")\nprint(f\"y: {y}\")\nprint(f\"x\u7684\u68af\u5ea6: {x.grad}\")\n</code></pre> <p>\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\uff0c\u4e0a\u6e38\u4f20\u9012\u8fc7\u6765\u7684\u68af\u5ea6 <code>grad_output</code> \u5e76\u4e0d\u603b\u662f\u7b49\u4e8e 2\u3002<code>grad_output</code> \u7684\u503c\u53d6\u51b3\u4e8e\u8ba1\u7b97\u56fe\u4e2d\u66f4\u4e0a\u5c42\u7684\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c<code>grad_output</code> \u662f\u635f\u5931\u51fd\u6570\u76f8\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u8f93\u51fa\u7684\u68af\u5ea6\uff0c\u4e5f\u5c31\u662f \\(\\frac{\\partial L}{\\partial y}\\)\u3002\u8fd9\u4e2a\u503c\u662f\u7531\u4e0a\u5c42\u8282\u70b9\u7684\u68af\u5ea6\u8ba1\u7b97\u51b3\u5b9a\u7684\uff0c\u800c\u4e0d\u662f\u56fa\u5b9a\u4e3a\u67d0\u4e2a\u5e38\u6570\u3002</p> <p>\u5728\u4e4b\u524d\u7684\u4f8b\u5b50\u4e2d\uff0c<code>grad_output</code> \u7684\u5b9e\u9645\u503c\u53d6\u51b3\u4e8e\u5982\u4f55\u5b9a\u4e49\u548c\u8c03\u7528 <code>y.backward()</code>\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u7b49\u4e8e 2\u3002</p> <p>\\(\\frac{\\partial L}{\\partial y}\\) \u662f\u4e0a\u6e38\u4f20\u9012\u8fc7\u6765\u7684\u68af\u5ea6\uff0c\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94 <code>grad_output</code>\u3002</p> <p>\\(\\frac{\\partial y}{\\partial x}\\) \u662f\u5f53\u524d\u5c42\u7684\u68af\u5ea6\u3002</p>"},{"location":"CV/Lecture6_Backpropagation/#\u5c0f\u7ed3","title":"\u5c0f\u7ed3","text":"<ul> <li>\u5206\u6bb5\u8ba1\u7b97\u548c\u94fe\u5f0f\u6cd5\u5219\u7684\u5e94\u7528\u6b63\u662f\u53cd\u5411\u4f20\u64ad\u9ad8\u6548\u6027\u548c\u6a21\u5757\u5316\u5b9e\u73b0\u7684\u5173\u952e\u3002\u6b63\u5982\u4f60\u6240\u8bf4\uff0c\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4e0d\u4f1a\u624b\u52a8\u8ba1\u7b97\u5b8c\u6574\u7684\u68af\u5ea6\u8868\u8fbe\u5f0f\uff0c\u800c\u662f\u4f9d\u8d56\u81ea\u52a8\u5fae\u5206\u6846\u67b6\uff08\u5982 PyTorch\uff09\u901a\u8fc7\u5206\u89e3\u548c\u94fe\u5f0f\u6cd5\u5219\u4e00\u6b65\u6b65\u8ba1\u7b97\u5c40\u90e8\u68af\u5ea6\uff0c\u6700\u7ec8\u7ec4\u5408\u6210\u6574\u4f53\u7684\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u3002</li> <li>\u4e0b\u4e00\u6b65\uff0c\u5b9a\u4e49\u548c\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u5c06\u81ea\u7136\u5ef6\u7eed\u8fd9\u4e00\u57fa\u7840\uff0c\u4f7f\u7528\u53cd\u5411\u4f20\u64ad\u9ad8\u6548\u8c03\u6574\u7f51\u7edc\u53c2\u6570\u3002\u901a\u8fc7\u5b9a\u4e49\u524d\u5411\u4f20\u64ad\u7ed3\u6784\u3001\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668\uff0c\u4f60\u5c06\u80fd\u591f\u8bad\u7ec3\u6a21\u578b\u4ee5\u6700\u5c0f\u5316\u635f\u5931\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u9884\u6d4b\u80fd\u529b\u3002\u81f3\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08ConvNets\uff09\uff0c\u867d\u7136\u5b83\u4eec\u5f15\u5165\u4e86\u7a7a\u95f4\u5c42\u6b21\u4e0a\u7684\u590d\u6742\u6027\uff0c\u4f46\u6838\u5fc3\u601d\u60f3\u4ecd\u7136\u4f9d\u8d56\u4e8e\u4f60\u5df2\u7ecf\u638c\u63e1\u7684\u53cd\u5411\u4f20\u64ad\u673a\u5236\u3002</li> </ul>"},{"location":"CV/Lecture7_ConvolutionalNetworks/","title":"Convolutional Neural Networks","text":"<p> \u7ea6 12305 \u4e2a\u5b57  20 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 62 \u5206\u949f</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u6982\u5ff5","title":"\u6982\u5ff5","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff0c\u6216\u79f0 ConvNet\uff09\u662f\u4e13\u95e8\u4e3a\u5904\u7406\u56fe\u50cf\u548c\u89c6\u9891\u6570\u636e\u800c\u8bbe\u8ba1\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u4eec\u901a\u8fc7\u5f15\u5165\u5377\u79ef\u64cd\u4f5c\u6765\u6355\u6349\u8f93\u5165\u6570\u636e\u4e2d\u7684\u7a7a\u95f4\u548c\u5c40\u90e8\u6a21\u5f0f\u4fe1\u606f\u3002\u4e0e\u4f20\u7edf\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0cCNN \u5728\u5904\u7406\u89c6\u89c9\u6570\u636e\u65f6\u5177\u6709\u66f4\u5f3a\u7684\u8868\u73b0\u529b\u548c\u6548\u7387\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u7ed3\u6784\u6982\u8ff0","title":"\u7ed3\u6784\u6982\u8ff0","text":"<p>\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u7136\u540e\u5728\u4e00\u7cfb\u5217\u7684\u9690\u85cf\u5c42\u4e2d\u5bf9\u5b83\u505a\u53d8\u6362\u3002\u6bcf\u4e2a\u9690\u5c42\u90fd\u662f\u7531\u82e5\u5e72\u7684\u795e\u7ecf\u5143\u7ec4\u6210\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u4e0e\u524d\u4e00\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u8fde\u63a5\u3002\u4f46\u662f\u5728\u4e00\u4e2a\u9690\u5c42\u4e2d\uff0c\u795e\u7ecf\u5143\u76f8\u4e92\u72ec\u7acb\u4e0d\u8fdb\u884c\u4efb\u4f55\u8fde\u63a5\u3002\u6700\u540e\u7684\u5168\u8fde\u63a5\u5c42\u88ab\u79f0\u4e3a \"\u8f93\u51fa\u5c42\"\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5b83\u8f93\u51fa\u7684\u503c\u88ab\u770b\u505a\u662f\u4e0d\u540c\u7c7b\u522b\u7684\u8bc4\u5206\u503c\u3002</p> <p>\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\u5bf9\u4e8e\u5927\u5c3a\u5bf8\u56fe\u50cf\u6548\u679c\u4e0d\u5c3d\u4eba\u3002\u5728 CIFAR-10 \u4e2d\uff0c\u56fe\u50cf\u7684\u5c3a\u5bf8\u662f \\(32\\times32\\times3\\)\uff08\u5bbd\u9ad8\u5747\u4e3a 32 \u50cf\u7d20\uff0c3 \u4e2a\u989c\u8272\u901a\u9053\uff09\uff0c\u56e0\u6b64\uff0c\u5bf9\u5e94\u7684\u7684\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c\u4e00\u4e2a\u9690\u5c42\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u5143\u5c31\u6709 \\(32\\times32\\times3 = 3072\\) \u4e2a\u6743\u91cd\u3002\u8fd9\u4e2a\u6570\u91cf\u770b\u8d77\u6765\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff0c\u4f46\u662f\u5f88\u663e\u7136\u8fd9\u4e2a\u5168\u8fde\u63a5\u7684\u7ed3\u6784\u4e0d\u9002\u7528\u4e8e\u66f4\u5927\u5c3a\u5bf8\u7684\u56fe\u50cf\u3002\u4e3e\u4f8b\u8bf4\u6765\uff0c\u4e00\u4e2a\u5c3a\u5bf8\u4e3a \\(200\\times200\\times3\\) \u7684\u56fe\u50cf\uff0c\u4f1a\u8ba9\u795e\u7ecf\u5143\u5305\u542b\\(200\\times200\\times3 = 120000\\)\u4e2a\u6743\u91cd\u503c\u3002\u5982\u6b64\u5e9e\u5927\u7684\u53c2\u6570\u6570\u91cf\u4e0d\u4ec5\u5bfc\u81f4<code>\u8ba1\u7b97\u8d44\u6e90\u7684\u6d6a\u8d39</code>\uff0c\u8fd8\u5bb9\u6613\u5bfc\u81f4\u6a21\u578b\u7684<code>\u8fc7\u62df\u5408</code>\u3002</p> <p>CNN \u901a\u8fc7\u5229\u7528\u8f93\u5165\u6570\u636e\u7684\u7a7a\u95f4\u7ed3\u6784\u6765\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u5e76\u63d0\u9ad8\u6a21\u578b\u7684\u5b66\u4e60\u80fd\u529b\u3002\u4e0e\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\u4e0d\u540c\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u5404\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u662f 3 \u7ef4\u6392\u5217\u7684\uff1a\u5bbd\u5ea6\u3001\u9ad8\u5ea6 \u548c \u6df1\u5ea6\uff08\u8fd9\u91cc\u7684 \u6df1\u5ea6 \u6307\u7684\u662f\u8be5\u5c42\u7279\u5f81\u56fe\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u7f51\u7edc\u7684\u6df1\u5ea6\uff0c\u6574\u4e2a\u7f51\u7edc\u7684\u6df1\u5ea6\u6307\u7684\u662f\u7f51\u7edc\u7684\u5c42\u6570\uff09\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0cCIFAR-10 \u4e2d\u7684\u56fe\u50cf\u662f\u4f5c\u4e3a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\uff0c\u8be5\u6570\u636e\u4f53\u7684\u7ef4\u5ea6\u662f \\(32\\times32\\times3\\)\uff08\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\u548c\u6df1\u5ea6\uff09\u3002\u6bcf\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u53ea\u4e0e\u524d\u4e00\u5c42\u7684\u5c0f\u533a\u57df\uff08\u79f0\u4e3a\u611f\u53d7\u91ce\uff09\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u91c7\u53d6\u5168\u8fde\u63a5\u65b9\u5f0f\u3002\u8fd9\u6837\uff0c\u5377\u79ef\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u8d1f\u8d23\u68c0\u6d4b\u5c40\u90e8\u7279\u5f81\uff08\u4f8b\u5982\u8fb9\u7f18\u3001\u89d2\u70b9\u7b49\uff09\uff0c\u7136\u540e\u8fd9\u4e9b\u5c40\u90e8\u7279\u5f81\u9010\u5c42\u7ec4\u5408\uff0c\u5f62\u6210\u5bf9\u6574\u4e2a\u56fe\u50cf\u7684\u5168\u5c40\u7406\u89e3\u3002\u5bf9\u4e8e\u7528\u6765\u5206\u7c7b CIFAR-10 \u4e2d\u7684\u56fe\u50cf\u7684\u5377\u79ef\u7f51\u7edc\uff0c\u5176\u6700\u540e\u7684\u8f93\u51fa\u5c42\u7684\u7ef4\u5ea6\u662f \\(1\\times1\\times10\\)\uff0c\u56e0\u4e3a\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u7684\u6700\u540e\u90e8\u5206\u5c06\u4f1a\u628a\u5168\u5c3a\u5bf8\u7684\u56fe\u50cf\u538b\u7f29\u4e3a\u5305\u542b\u5206\u7c7b\u8bc4\u5206\u7684\u4e00\u4e2a\u5411\u91cf\uff0c\u5411\u91cf\u662f\u5728\u6df1\u5ea6\u65b9\u5411\u6392\u5217\u7684\u3002</p> <p></p> <p>\u5de6\u8fb9\u662f\u4e00\u4e2a 3 \u5c42\u7684\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\uff0c\u6bcf\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4e0e\u524d\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u5168\u8fde\u63a5\u3002\u53f3\u8fb9\u662f\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u56fe\u4f8b\u4e2d\u7f51\u7edc\u5c06\u5b83\u7684\u795e\u7ecf\u5143\u90fd\u6392\u5217\u6210 3 \u4e2a\u7ef4\u5ea6\uff08\u5bbd\u3001\u9ad8\u548c\u6df1\u5ea6\uff09\u3002\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u6bcf\u4e00\u5c42\u90fd\u5c06 3D \u7684\u8f93\u5165\u6570\u636e\u53d8\u5316\u4e3a\u795e\u7ecf\u5143 3D \u7684\u6fc0\u6d3b\u6570\u636e\u5e76\u8f93\u51fa\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7ea2\u8272\u7684\u8f93\u5165\u5c42\u88c5\u7684\u662f\u56fe\u50cf\uff0c\u6240\u4ee5\u5b83\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5c31\u662f\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u5b83\u7684\u6df1\u5ea6\u662f 3\uff08\u4ee3\u8868\u4e86\u7ea2\u3001\u7eff\u3001\u84dd 3 \u79cd\u989c\u8272\u901a\u9053\uff09\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u6838\u5fc3\u7279\u6027\u548c\u4e0d\u540c\u7684-layer","title":"\u6838\u5fc3\u7279\u6027\u548c\u4e0d\u540c\u7684 layer","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u662f\u7531\u5404\u79cd\u5c42\u6309\u7167\u987a\u5e8f\u6392\u5217\u7ec4\u6210\uff0c\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u5c42\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u5fae\u5206\u7684\u51fd\u6570\u5c06\u6fc0\u6d3b\u6570\u636e\u4ece\u4e00\u4e2a\u5c42\u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u5c42\u3002\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e3b\u8981\u7531\u4e09\u79cd\u7c7b\u578b\u7684\u5c42\u6784\u6210\uff1a\u5377\u79ef\u5c42\uff0c\u6c60\u5316\uff08Pooling\uff09\u5c42 \u548c \u5168\u8fde\u63a5\u5c42\uff08\u5168\u8fde\u63a5\u5c42\u548c\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4e00\u6837\uff09\u3002\u901a\u8fc7\u5c06\u8fd9\u4e9b\u5c42\u53e0\u52a0\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002</p> <p><code>\u4e00\u4e2a\u7528\u4e8e CIFAR-10 \u56fe\u50cf\u6570\u636e\u5206\u7c7b\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u53ef\u4ee5\u662f [\u8f93\u5165\u5c42-\u5377\u79ef\u5c42-ReLU \u5c42-\u6c60\u5316\u5c42-\u5168\u8fde\u63a5\u5c42]\u3002</code></p> <ul> <li> <p>\u8f93\u5165 [\\(32\\times32\\times3\\)] \u5b58\u6709\u56fe\u50cf\u7684\u539f\u59cb\u50cf\u7d20\u503c\uff0c\u672c\u4f8b\u4e2d\u56fe\u50cf\u5bbd\u9ad8\u5747\u4e3a 32\uff0c\u6709 3 \u4e2a\u989c\u8272\u901a\u9053\u3002</p> </li> <li> <p>\u5377\u79ef\u5c42\u4f7f\u7528\u591a\u4e2a\u5377\u79ef\u6838\uff08\u6ee4\u6ce2\u5668\uff09\u5728\u8f93\u5165\u56fe\u50cf\u4e0a\u6ed1\u52a8\uff0c\u6bcf\u4e2a\u5377\u79ef\u6838\u8ba1\u7b97\u5c40\u90e8\u533a\u57df\u4e0e\u81ea\u8eab\u6743\u91cd\u7684\u5185\u79ef\u3002\u5185\u79ef\u503c\u8868\u793a\u8be5\u533a\u57df\u4e0e\u5377\u79ef\u6838\u7684\u5339\u914d\u7a0b\u5ea6\u3002\uff08\u8fd9\u4e2a\u5185\u79ef\u4f5c\u4e3a\u5143\u7d20\u7ec4\u6210\u4e0b\u4e00\u5f20\u7279\u5f81\u56fe\uff0c\u5176\u542b\u4e49\u4e3a\u4e0e\u6a21\u7248\u5339\u914d\u7684\u7a0b\u5ea6\uff09\uff0c\u540c\u65f6\u6bcf\u4e2a\u5377\u79ef\u6838\u90fd\u6709\u4e00\u4e2a\u504f\u5dee\u9879\u3002\u5377\u79ef\u5c42\u4f1a\u8ba1\u7b97\u6240\u6709\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528 12 \u4e2a\u6ee4\u6ce2\u5668\uff08\u4e5f\u53eb\u4f5c\u6838\uff09\uff0c\u8f93\u51fa\u5c3a\u5bf8\u4e3a<code>[32x32x12]</code>\uff0c12 \u4e2a\u7279\u5f81\u56fe\uff0c\u6bcf\u4e2a\u7279\u5f81\u56fe\u8868\u793a\u4e0d\u540c\u7684\u5c40\u90e8\u7279\u5f81\uff08\u5982\u8fb9\u7f18\u3001\u7eb9\u7406\u7b49\uff09\u3002</p> </li> </ul> <p>\u5377\u79ef\u64cd\u4f5c\uff08Convolution Operation\uff09</p> <p>\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5377\u79ef\u5c42\u53d6\u4ee3\u4e86\u4f20\u7edf\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u5168\u8fde\u63a5\u5c42\u3002\u5377\u79ef\u5c42\u4f7f\u7528 <code>\u5377\u79ef\u6838</code>\uff08\u6216\u79f0\u4e3a\u6ee4\u6ce2\u5668\uff09\u5728\u8f93\u5165\u56fe\u50cf\u4e0a\u6ed1\u52a8\uff0c\u901a\u8fc7\u4e0e\u56fe\u50cf\u5c40\u90e8\u533a\u57df\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\u6765\u63d0\u53d6\u7279\u5f81\u3002\u5377\u79ef\u64cd\u4f5c\u7684\u5173\u952e\u5728\u4e8e\u5b83\u4fdd\u7559\u4e86\u56fe\u50cf\u7684\u7a7a\u95f4\u7ed3\u6784\uff0c\u5229\u7528\u4e86\u56fe\u50cf\u50cf\u7d20\u4e4b\u95f4\u7684\u7a7a\u95f4\u5173\u7cfb\u3002</p> <ul> <li>\u5c40\u90e8\u8fde\u63a5\u6027\uff1a\u5377\u79ef\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4e0e\u4e0a\u4e00\u5c42\u7684 <code>\u5c40\u90e8\u533a\u57df</code> \u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u4e0e\u6240\u6709\u795e\u7ecf\u5143\u8fde\u63a5\uff0c\u8fd9\u663e\u8457 <code>\u51cf\u5c11\u4e86\u53c2\u6570\u6570\u91cf</code>\u3002</li> <li>\u6743\u91cd\u5171\u4eab\uff1a<code>\u540c\u4e00\u4e2a\u5377\u79ef\u6838\u5728\u56fe\u50cf\u7684\u4e0d\u540c\u4f4d\u7f6e\u5171\u4eab\u6743\u91cd</code>\uff0c\u8fd9\u8fdb\u4e00\u6b65\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u53c2\u6570\uff0c\u5e76\u4f7f\u6a21\u578b\u80fd\u591f\u5728\u4e0d\u540c\u56fe\u50cf\u4f4d\u7f6e\u4e0a\u68c0\u6d4b\u76f8\u540c\u7684\u7279\u5f81\u3002</li> </ul> <p>\u5377\u79ef\u5c42\u7684\u67b6\u6784\u8bbe\u8ba1</p> <ul> <li>\u6df1\u5ea6\uff08Depth\uff09\uff1a\u5377\u79ef\u6838\u7684\u6570\u91cf\u51b3\u5b9a\u4e86\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u6df1\u5ea6\u3002</li> <li>\u6b65\u5e45\uff08Stride\uff09\uff1a\u5377\u79ef\u6838\u5728\u56fe\u50cf\u4e0a\u79fb\u52a8\u7684\u6b65\u957f\uff0c\u6b65\u5e45\u8d8a\u5927\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u8d8a\u5c0f\u3002</li> <li>\u586b\u5145\uff08Padding\uff09\uff1a\u4e3a\u4e86\u4fdd\u6301\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\uff0c\u53ef\u4ee5\u5728\u8f93\u5165\u56fe\u50cf\u8fb9\u7f18\u6dfb\u52a0\u989d\u5916\u7684\u50cf\u7d20\uff08\u901a\u5e38\u4e3a\u96f6\uff09\u3002</li> </ul> <ul> <li>ReLU \u5c42\u5c06\u4f1a\u9010\u4e2a\u5143\u7d20\u5730\u8fdb\u884c\u6fc0\u6d3b\u51fd\u6570\u64cd\u4f5c\uff0c\u6bd4\u5982\u4f7f\u7528\u4ee5 0 \u4e3a\u9608\u503c\u7684\\(f(x) = max(0,x)\\)\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u3002\u8be5\u5c42\u5bf9\u6570\u636e\u5c3a\u5bf8\u6ca1\u6709\u6539\u53d8\uff0c\u8fd8\u662f [32x32x12]\u3002</li> </ul> <p>\u6fc0\u6d3b\u51fd\u6570\uff08Activation Function\uff09</p> <p>\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u901a\u5e38\u901a\u8fc7\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u5904\u7406\uff0c\u4f8b\u5982 ReLU\uff08Rectified Linear Unit\uff09\uff0c\u4ee5\u5f15\u5165\u975e\u7ebf\u6027\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u8868\u793a\u66f4\u590d\u6742\u7684\u7279\u5f81\u3002</p> <ul> <li>\u6c60\u5316\u5c42\u5728\u5728\u7a7a\u95f4\u7ef4\u5ea6\uff08\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff09\u4e0a\u8fdb\u884c\u964d\u91c7\u6837\uff08downsampling\uff09\u64cd\u4f5c\uff0c\u901a\u5e38\u662f\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\uff0c\u5c06\u5c40\u90e8\u533a\u57df\uff08\u5982 2x2 \u7a97\u53e3\uff09\u5185\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u8f93\u51fa\uff0c\u51cf\u5c11\u7a7a\u95f4\u7ef4\u5ea6\u3002\u8f93\u51fa\u5c3a\u5bf8\uff1a<code>[16x16x12]</code>\uff0c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5747\u51cf\u534a\uff0c\u6df1\u5ea6\u4e0d\u53d8\u3002</li> </ul> <p>\u6c60\u5316\u5c42\uff08Pooling Layer\uff09</p> <p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u901a\u5e38\u5305\u542b\u6c60\u5316\u5c42\uff0c\u4e3b\u8981\u7528\u4e8e <code>\u4e0b\u91c7\u6837\uff08downsampling\uff09</code>\uff0c\u4ee5 \u51cf\u5c11\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\uff0c\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u5e76\u589e\u52a0\u6a21\u578b\u7684\u7a7a\u95f4\u4e0d\u53d8\u6027\u3002\u6700\u5e38\u89c1\u7684\u6c60\u5316\u64cd\u4f5c\u662f\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\uff0c\u5b83\u5728\u5c40\u90e8\u533a\u57df\u5185\u53d6\u6700\u5927\u503c\u4f5c\u4e3a\u8f93\u51fa\u3002</p> <ul> <li>\u5168\u8fde\u63a5\u5c42\u5c06\u4f1a\u8ba1\u7b97\u5206\u7c7b\u8bc4\u5206\uff0c\u7279\u5f81\u56fe<code>[16x16x12]</code>\uff0c\u9700\u8981\u5c55\u5e73\u6210\u4e00\u4e2a\u5411\u91cf\u3002\u5c06\u5c55\u5e73\u7684\u7279\u5f81\u5411\u91cf\u4e0e\u5168\u8fde\u63a5\u5c42\u7684\u6743\u91cd\u77e9\u9635\u76f8\u4e58\uff0c\u5e76\u52a0\u4e0a\u504f\u7f6e\uff0c\u8f93\u51fa\u5206\u7c7b\u5f97\u5206\u3002\u6570\u636e\u5c3a\u5bf8\u53d8\u4e3a [\\(1\\times1\\times10\\)]\uff0c\u5176\u4e2d 10 \u4e2a\u6570\u5b57\u5bf9\u5e94\u7684\u5c31\u662f CIFAR-10 \u4e2d 10 \u4e2a\u7c7b\u522b\u7684\u5206\u7c7b\u8bc4\u5206\u503c\u3002</li> </ul> <p>\u5168\u8fde\u63a5\u5c42\uff08Fully Connected Layer\uff09</p> <p>\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u6700\u540e\uff0c\u901a\u5e38\u4f1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5168\u8fde\u63a5\u5c42\u3002\u8fd9\u4e9b\u5c42\u5c06\u5377\u79ef\u548c\u6c60\u5316\u5c42\u63d0\u53d6\u7684\u7279\u5f81\u6620\u5c04\u5230\u8f93\u51fa\u7c7b\u522b\u3002<code>\u5168\u8fde\u63a5\u5c42\u5c06\u5377\u79ef\u7f51\u7edc\u7684\u8f93\u51fa\u5c55\u5e73\u4e3a\u4e00\u7ef4\u5411\u91cf</code>\uff0c\u5e76\u901a\u8fc7 Softmax \u6216 SVM \u7b49\u635f\u5931\u51fd\u6570\u8fdb\u884c\u5206\u7c7b\u3002</p> <p>\u603b\u7ed3\uff1a</p> <ul> <li> <p>\u5c42\u6b21\u7ed3\u6784\uff1a\u901a\u8fc7\u5377\u79ef\u5c42\u63d0\u53d6\u56fe\u50cf\u7279\u5f81\uff0cReLU \u5c42\u5f15\u5165\u975e\u7ebf\u6027\uff0c\u6c60\u5316\u5c42\u964d\u91c7\u6837\u5e76\u51cf\u5c11\u7279\u5f81\u56fe\u5c3a\u5bf8\uff0c\u6700\u540e\u5168\u8fde\u63a5\u5c42\u751f\u6210\u5206\u7c7b\u8bc4\u5206\u3002</p> </li> <li> <p>\u53c2\u6570\u548c\u8d85\u53c2\u6570\uff1a\u5377\u79ef\u5c42\u548c\u5168\u8fde\u63a5\u5c42\u542b\u6709\u53ef\u8bad\u7ec3\u7684\u6743\u91cd\u53c2\u6570\uff0c\u800c ReLU \u5c42\u548c\u6c60\u5316\u5c42\u6ca1\u6709\u53c2\u6570\u3002\u8d85\u53c2\u6570\u5305\u62ec\u6ee4\u6ce2\u5668\u5927\u5c0f\u3001\u6570\u91cf\u3001\u6b65\u5e45\u3001\u586b\u5145\u65b9\u5f0f\u4ee5\u53ca\u6c60\u5316\u7a97\u53e3\u5927\u5c0f\u3002</p> </li> <li> <p>\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\uff1aCNN \u9010\u5c42\u5c06\u56fe\u50cf\u4ece\u539f\u59cb\u50cf\u7d20\u503c\u8f6c\u5316\u4e3a\u9ad8\u5c42\u6b21\u7279\u5f81\uff0c\u6700\u7ec8\u7528\u4e8e\u56fe\u50cf\u5206\u7c7b\u3002</p> </li> </ul> <p>\u4f18\u70b9</p> <ul> <li>\u7a7a\u95f4\u4e0d\u53d8\u6027\uff1a\u5377\u79ef\u64cd\u4f5c\u4fdd\u7559\u4e86\u8f93\u5165\u7684\u7a7a\u95f4\u4fe1\u606f\uff0c\u4f7f\u5f97\u6a21\u578b\u80fd\u591f\u8bc6\u522b\u51fa\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684\u76f8\u540c\u7279\u5f81\u3002</li> <li>\u53c2\u6570\u6548\u7387\uff1a\u901a\u8fc7\u5c40\u90e8\u8fde\u63a5\u548c\u6743\u91cd\u5171\u4eab\uff0cCNN \u5927\u5e45\u51cf\u5c11\u4e86\u6a21\u578b\u53c2\u6570\uff0c\u4f7f\u5f97\u8bad\u7ec3\u66f4\u52a0\u9ad8\u6548\u3002</li> <li>\u81ea\u52a8\u7279\u5f81\u63d0\u53d6\uff1aCNN \u53ef\u4ee5\u81ea\u52a8\u5b66\u4e60\u548c\u63d0\u53d6\u591a\u5c42\u6b21\u7684\u7279\u5f81\uff0c\u4ece\u4f4e\u7ea7\u8fb9\u7f18\u548c\u7eb9\u7406\u5230\u9ad8\u7ea7\u7684\u5bf9\u8c61\u548c\u5f62\u72b6\u3002</li> </ul>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5377\u79ef\u5c42","title":"\u5377\u79ef\u5c42","text":""},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5377\u79ef\u64cd\u4f5c","title":"\u5377\u79ef\u64cd\u4f5c","text":"<ol> <li>\u5355\u6b21\u5377\u79ef\u64cd\u4f5c\u793a\u610f\u56fe</li> </ol> <p>\u5728\u8fd9\u5f20\u793a\u610f\u56fe\u4e2d\uff0c\u5377\u79ef\u64cd\u4f5c\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528\u4e00\u4e2a\u5377\u79ef\u6838\u626b\u63cf\u8f93\u5165\u56fe\u50cf\u7684\u6bcf\u4e2a\u5c40\u90e8\u533a\u57df\u5e76\u751f\u6210\u5bf9\u5e94\u7684\u8f93\u51fa\u503c\u3002\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>\u8f93\u5165\uff1a\u5de6\u4fa7\u4e3a\u8f93\u5165\u56fe\u50cf\u7684\u4e00\u90e8\u5206\uff0c\u8868\u793a\u4e00\u4e2a\u5c40\u90e8\u7684\u50cf\u7d20\u533a\u57df\u3002</p> <p>\u5377\u79ef\u6838\uff1a\u5377\u79ef\u6838\u5728\u56fe\u50cf\u4e0a\u6ed1\u52a8\uff0c\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u8ba1\u7b97\u56fe\u50cf\u5c40\u90e8\u533a\u57df\u4e0e\u5377\u79ef\u6838\u4e4b\u95f4\u7684\u5185\u79ef\u3002\u8fd9\u79cd\u5185\u79ef\u8ba1\u7b97\u662f\u7ebf\u6027\u64cd\u4f5c\uff0c\u5373\u5c06\u8f93\u5165\u533a\u57df\u7684\u6bcf\u4e2a\u50cf\u7d20\u503c\u4e0e\u5377\u79ef\u6838\u5bf9\u5e94\u7684\u6743\u91cd\u76f8\u4e58\u540e\u6c42\u548c\u3002</p> <p>\u8f93\u51fa\uff1a\u5185\u79ef\u7684\u7ed3\u679c\u5f62\u6210\u4e00\u4e2a\u8f93\u51fa\u503c\uff0c\u8868\u793a\u8be5\u5c40\u90e8\u533a\u57df\u4e0e\u5377\u79ef\u6838\u7279\u5f81\u7684\u5339\u914d\u7a0b\u5ea6\u3002\u8fd9\u4e9b\u8f93\u51fa\u503c\u7ec4\u6210\u7279\u5f81\u56fe\uff08Feature Map\uff09\uff0c\u5982\u56fe\u53f3\u4fa7\u6240\u793a\u3002</p> <p>\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u4e00\u4e2a\u5377\u79ef\u6838\u5c31\u8868\u793a\u4e00\u79cd\u7279\u5f81\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662f\u5377\u79ef\u6838\u5728\u6b64\u5904\u8fdb\u884c\u5339\u914d\u64cd\u4f5c\u7684\u5f97\u5206\u6216\u8005\u76f8\u4f3c\u5ea6\uff0c\u5f97\u5206\u8d8a\u9ad8\uff0c<code>\u8bf4\u660e\u6b64\u5904\u5c40\u90e8\u56fe\u50cf\u5c31\u4e0e\u5377\u79ef\u6838\u8981\u5bfb\u627e\u7684\u7279\u5f81\u8d8a\u76f8\u4f3c</code>\uff0c\u7136\u540e\u5377\u79ef\u6838\u7684\u53c2\u6570\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u6216\u8005\u8bf4\u662f\u53ef\u5b66\u4e60\u7684\uff0c\u4e5f\u5c31\u662f\u5377\u79ef\u6838\u8981\u5bfb\u627e\u7684\u7279\u5f81\u662f\u4f1a\u53d8\u5316\u7684\uff0c\u5377\u79ef\u6838\u4f1a\u53bb\u5bfb\u627e\u6700\u6709\u7528\u7684\u7279\u5f81\uff0c\u6216\u8005\u8bf4\u6700\u6709\u52a9\u4e8e\u964d\u4f4e\u5206\u7c7b\u8bef\u5dee\u7684\u7279\u5f81\uff09</p> <ol> <li>\u591a\u7ef4\u5377\u79ef\u6838\u8868\u793a</li> </ol> <p></p> <p>\u8fd9\u91cc\u6709\u516d\u4e2a\u5377\u79ef\u6838\uff0c\u6bcf\u4e2a\u5377\u79ef\u6838\u7684\u5927\u5c0f\u4e3a <code>[3x5x5]</code>\uff0c\u5176\u4e2d <code>3</code> \u8868\u793a\u901a\u9053\u6570\uff08\u5bf9\u5e94 RGB\uff09\uff0c<code>5x5</code> \u8868\u793a\u7a7a\u95f4\u5c3a\u5bf8\u3002</p> <p>\u591a\u4e2a\u5377\u79ef\u6838\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u56db\u7ef4\u5f20\u91cf\u3002\u5bf9\u4e8e\u5377\u79ef\u5c42\u6765\u8bf4\uff0c\u8f93\u5165\u56fe\u50cf\u7684\u6bcf\u4e2a\u5c40\u90e8\u533a\u57df\u4e0e\u6bcf\u4e2a\u5377\u79ef\u6838\u8fdb\u884c\u8fd0\u7b97\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u7279\u5f81\u56fe\u3002</p> <p>\u8fd9\u91cc\u6709 6 \u4e2a\u5377\u79ef\u6838\uff0c\u56e0\u6b64\u5c06\u751f\u6210 6 \u5f20\u7279\u5f81\u56fe\uff0c\u8868\u793a\u4e0d\u540c\u7684\u5377\u79ef\u6838\u5728\u56fe\u50cf\u4e0a\u63d0\u53d6\u5230\u7684\u4e0d\u540c\u7279\u5f81\u3002</p> <ol> <li>\u5377\u79ef\u64cd\u4f5c\u540e\u751f\u6210\u7279\u5f81\u56fe</li> </ol> <p></p> <p>\u5982\u679c\u6211\u4eec\u8fdb\u884c\u591a\u6b21\u5377\u79ef\u64cd\u4f5c\uff0c\u90a3\u4e48\u4e00\u5f20 3*32*32 \u7684\u56fe\u7247\uff0c\u7ecf\u8fc7\u5927\u5c0f\u4e3a 6*3*5*5 \u7684\u5377\u79ef\u6838\u5377\u79ef\uff0c\u5c31\u5f97\u5230\u516d\u5f20\u7279\u5f81\u56fe\uff0c\u5927\u5c0f\u4e3a 6*28*28</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u8fd9\u6837\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5377\u79ef\u662f\u7ebf\u6027\u64cd\u4f5c\uff0c\u591a\u4e2a\u5377\u79ef\u4ecd\u7136\u662f\u7ebf\u6027\u7f51\u7edc\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u52a0\u4e0a<code>\u6fc0\u6d3b\u51fd\u6570</code>\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u66f4\u597d\u7684\u5b66\u4e60</p> <ol> <li>\u6fc0\u6d3b\u51fd\u6570\u793a\u610f\u56fe</li> </ol> <p></p> <p>\u6b64\u56fe\u5c55\u793a\u4e86\u5728\u5377\u79ef\u64cd\u4f5c\u540e\u6dfb\u52a0\u6fc0\u6d3b\u51fd\u6570\u7684\u6b65\u9aa4\uff1a</p> <ul> <li>\u5377\u79ef\u7684\u7ebf\u6027\u7279\u6027\uff1a\u5377\u79ef\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7ebf\u6027\u64cd\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u8fdb\u884c\u591a\u6b21\u5377\u79ef\uff0c\u7f51\u7edc\u4ecd\u7136\u662f\u7ebf\u6027\u7684\uff0c\u4e0d\u5177\u5907\u590d\u6742\u7684\u8868\u793a\u80fd\u529b\u3002</li> <li>\u6fc0\u6d3b\u51fd\u6570\uff1a\u4e3a\u4e86\u5f15\u5165\u975e\u7ebf\u6027\u7279\u6027\uff0c\u9700\u8981\u5728\u5377\u79ef\u64cd\u4f5c\u540e\u52a0\u4e0a\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u3002\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u5305\u62ec ReLU\uff08<code>max(0, x)</code>\uff09\uff0c\u5b83\u4f1a\u5c06\u8d1f\u503c\u7f6e\u4e3a 0\uff0c\u4fdd\u7559\u6b63\u503c\u4e0d\u53d8\u3002\u901a\u8fc7\u6fc0\u6d3b\u51fd\u6570\uff0c\u7f51\u7edc\u53ef\u4ee5\u5b66\u4e60\u66f4\u590d\u6742\u7684\u7279\u5f81\u3002</li> </ul> <p>\u6982\u8ff0\u548c\u76f4\u89c2\u4ecb\u7ecd\uff1a\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u5f20 32x32 \u50cf\u7d20\u7684 RGB \u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\uff0c\u7b2c\u4e00\u5c42\u5377\u79ef\u5c42\u4f7f\u7528\u4e00\u4e2a 5x5x3 \u7684\u6ee4\u6ce2\u5668\u3002\u8fd9\u4e2a\u6ee4\u6ce2\u5668\u7684\u4f5c\u7528\u5c31\u50cf\u4e00\u4e2a\u201c\u6a21\u677f\u201d\uff0c\u5b83\u4f1a\u6ed1\u52a8\u5728\u56fe\u50cf\u7684\u4e0d\u540c\u533a\u57df\u4e0a\uff0c\u68c0\u6d4b\u6bcf\u4e2a\u533a\u57df\u4e2d\u662f\u5426\u5b58\u5728\u7279\u5b9a\u7684\u89c6\u89c9\u6a21\u5f0f\uff08\u4f8b\u5982\u4e00\u6761\u8fb9\u7f18\uff09\u3002<code>\u5982\u679c\u6ee4\u6ce2\u5668\u201c\u5339\u914d\u201d\u5230\u56fe\u50cf\u4e2d\u7684\u7279\u5f81\uff0c\u5b83\u7684\u8f93\u51fa\uff08\u6fc0\u6d3b\u503c\uff09\u5c31\u4f1a\u9ad8\uff0c\u53cd\u4e4b\u5219\u4f4e\u3002\u901a\u8fc7\u5377\u79ef\u64cd\u4f5c\u751f\u6210\u7684\u6fc0\u6d3b\u56fe\u5c55\u793a\u4e86\u6ee4\u6ce2\u5668\u5bf9\u6574\u4e2a\u56fe\u50cf\u7684\u53cd\u5e94\u3002</code></p> <p>\u5047\u5982\u6211\u4eec\u6709\u591a\u4e2a\u6ee4\u6ce2\u5668\uff0c\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u90fd\u80fd\u68c0\u6d4b\u4e0d\u540c\u7684\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6ee4\u6ce2\u5668\u53ef\u80fd\u4e13\u95e8\u68c0\u6d4b\u6c34\u5e73\u8fb9\u7f18\uff0c\u53e6\u4e00\u4e2a\u5219\u68c0\u6d4b\u5782\u76f4\u8fb9\u7f18\uff0c\u6700\u7ec8\u751f\u6210\u591a\u4e2a\u4e0d\u540c\u7684\u6fc0\u6d3b\u56fe\uff0c\u5728\u6df1\u5ea6\u65b9\u5411\u4e0a\u5c42\u53e0\u8d77\u6765\u5c31\u751f\u6210\u4e86\u8f93\u51fa\u6570\u636e\u3002</p> <p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u548c\u53c2\u6570\u5171\u4eab</p> <ul> <li>\u5c40\u90e8\u8fde\u63a5\u4e0e\u611f\u53d7\u91ce</li> </ul> <p>\u5728\u5377\u79ef\u5c42\u4e2d\uff0c\u795e\u7ecf\u5143\u5e76\u4e0d\u662f\u50cf\u5168\u8fde\u63a5\u5c42\u90a3\u6837\u4e0e\u524d\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u4ec5\u4e0e\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u5c40\u90e8\u533a\u57df\u8fde\u63a5\u3002\u8fd9\u79cd\u5c40\u90e8\u8fde\u63a5\u7684\u533a\u57df\u79f0\u4e3a\u795e\u7ecf\u5143\u7684 \u611f\u53d7\u91ce\uff08receptive field\uff09\uff0c\u5b83\u5bf9\u5e94\u5377\u79ef\u6838\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5377\u79ef\u6838\u7684\u5927\u5c0f\u662f <code>5x5</code>\uff0c\u90a3\u4e48\u611f\u53d7\u91ce\u7684\u7a7a\u95f4\u5c3a\u5bf8\u5c31\u662f <code>5x5</code>\u3002</p> <p>\u7a7a\u95f4\u4e0a\u7684\u5c40\u90e8\u8fde\u63a5\uff1a\u795e\u7ecf\u5143\u53ea\u4e0e\u8f93\u5165\u56fe\u50cf\u7684\u4e00\u4e2a\u5c0f\u5757\u76f8\u8fde\uff0c\u800c\u975e\u6574\u4e2a\u56fe\u50cf\u3002\u8fd9\u79cd\u5c40\u90e8\u8fde\u63a5\u7684\u8bbe\u8ba1\u57fa\u4e8e\u56fe\u50cf\u7684\u5c40\u90e8\u76f8\u5173\u6027\uff0c\u5141\u8bb8\u7f51\u7edc\u96c6\u4e2d\u5173\u6ce8\u56fe\u50cf\u7684\u5c40\u90e8\u7279\u5f81\uff0c\u5982\u8fb9\u7f18\u3001\u89d2\u70b9\u7b49\u3002</p> <p>\u6df1\u5ea6\u4e0a\u7684\u5168\u8fde\u63a5\uff1a\u867d\u7136\u5728\u7a7a\u95f4\u4e0a\u662f\u5c40\u90e8\u8fde\u63a5\uff0c\u4f46\u5728\u6df1\u5ea6\u7ef4\u5ea6\u4e0a\uff0c\u795e\u7ecf\u5143\u4e0e\u8f93\u5165\u6570\u636e\u7684\u6240\u6709\u901a\u9053\u90fd\u8fde\u63a5\u3002\u8fd9\u610f\u5473\u7740\u8f93\u5165\u56fe\u50cf\u7684\u6bcf\u4e2a\u989c\u8272\u901a\u9053\uff08\u5982 RGB \u56fe\u50cf\u7684 3 \u4e2a\u901a\u9053\uff09\u90fd\u53c2\u4e0e\u8ba1\u7b97\u3002</p> <ul> <li>\u53c2\u6570\u5171\u4eab</li> </ul> <p>\u5377\u79ef\u5c42\u4e2d\u7684\u53c2\u6570\u5171\u4eab\u673a\u5236\u610f\u5473\u7740<code>\u540c\u4e00\u4e2a\u6ee4\u6ce2\u5668\uff08\u5377\u79ef\u6838\uff09\u5728\u8f93\u5165\u6570\u636e\u7684\u4e0d\u540c\u4f4d\u7f6e\u91cd\u590d\u4f7f\u7528</code>\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5377\u79ef\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u867d\u7136\u53ea\u89c2\u5bdf\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u5c0f\u533a\u57df\uff0c\u4f46\u8fd9\u4e2a\u5c0f\u533a\u57df\u5bf9\u5e94\u7684\u53c2\u6570\uff08\u5373\u6ee4\u6ce2\u5668\u7684\u6743\u91cd\uff09\u5728\u7a7a\u95f4\u4e0a\u662f\u5171\u4eab\u7684\u3002</p> <p>\u5171\u4eab\u53c2\u6570\u7684\u6548\u679c\uff1a\u8fd9\u79cd\u53c2\u6570\u5171\u4eab\u65b9\u5f0f\u4f7f\u5f97\u5377\u79ef\u5c42\u53ef\u4ee5\u6709\u6548\u5730\u68c0\u6d4b\u76f8\u540c\u7684\u7279\u5f81\u5728\u4e0d\u540c\u7684\u7a7a\u95f4\u4f4d\u7f6e\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c<code>\u4e00\u4e2a\u5377\u79ef\u6838\u5982\u679c\u80fd\u591f\u5728\u56fe\u50cf\u7684\u4e00\u90e8\u5206\u68c0\u6d4b\u5230\u8fb9\u7f18\uff0c\u5b83\u4e5f\u80fd\u5728\u5176\u4ed6\u90e8\u5206\u68c0\u6d4b\u5230\u76f8\u540c\u7684\u8fb9\u7f18</code>\u3002\u8fd9\u79cd\u5171\u4eab\u673a\u5236\u51cf\u5c11\u4e86\u6a21\u578b\u53c2\u6570\u7684\u6570\u91cf\uff0c\u63d0\u5347\u4e86\u7f51\u7edc\u7684\u6cdb\u5316\u80fd\u529b\u3002</p> <ul> <li><code>\u4e3e\u4f8b\u8bf4\u660e</code></li> </ul> <p>\u4f8b 1\uff1a\u5047\u8bbe\u8f93\u5165\u6570\u636e\u662f\u4e00\u4e2a <code>32x32x3</code> \u7684 RGB \u56fe\u50cf\uff08\u5982 CIFAR-10 \u56fe\u50cf\uff09\uff0c\u5377\u79ef\u5c42\u4f7f\u7528 <code>5x5x3</code> \u7684\u6ee4\u6ce2\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5377\u79ef\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u53ea\u4e0e <code>5x5</code> \u7a7a\u95f4\u533a\u57df\u548c <code>3</code> \u4e2a\u989c\u8272\u901a\u9053\u8fde\u63a5\uff0c\u56e0\u6b64\u6bcf\u4e2a\u795e\u7ecf\u5143\u6709 <code>5x5x3 = 75</code> \u4e2a\u6743\u91cd\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u504f\u7f6e\u53c2\u6570\u3002</p> <p>\u4f8b 2\uff1a\u5982\u679c\u8f93\u5165\u6570\u636e\u7684\u5c3a\u5bf8\u662f <code>16x16x20</code>\uff0c\u5e76\u4e14\u611f\u53d7\u91ce\u7684\u5c3a\u5bf8\u662f <code>3x3</code>\uff0c\u90a3\u4e48\u5377\u79ef\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u5c06\u4e0e\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a <code>3x3x20</code> \u533a\u57df\u76f8\u8fde\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u795e\u7ecf\u5143\u6709 <code>3x3x20 = 180</code> \u4e2a\u6743\u91cd\u3002</p> <p></p> <p>\u5de6\u8fb9\uff1a\u5de6\u4fa7\u7684\u793a\u610f\u56fe\u5c55\u793a\u4e86\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u5982\u4f55\u8fde\u63a5\u5230\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u5c40\u90e8\u533a\u57df\u3002\u7ea2\u8272\u533a\u57df\u8868\u793a\u8f93\u5165\u6570\u636e\uff0c\u84dd\u8272\u8868\u793a\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u53ea\u4e0e\u8f93\u5165\u6570\u636e\u7684\u4e00\u4e2a\u7a7a\u95f4\u533a\u57df\uff08\u611f\u53d7\u91ce\uff09\u8fde\u63a5\uff0c\u800c\u5728\u6df1\u5ea6\u65b9\u5411\u4e0a\uff0c\u5219\u4e0e\u6240\u6709\u8f93\u5165\u901a\u9053\uff08\u5982\u989c\u8272\u901a\u9053\uff09\u8fde\u63a5\u3002</p> <p>\u53f3\u8fb9\uff1a\u795e\u7ecf\u7f51\u7edc\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684\u795e\u7ecf\u5143\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b83\u4eec\u8fd8\u662f\u8ba1\u7b97\u6743\u91cd\u548c\u8f93\u5165\u7684\u5185\u79ef\uff0c\u7136\u540e\u8fdb\u884c\u6fc0\u6d3b\u51fd\u6570\u8fd0\u7b97\uff0c\u53ea\u662f\u5b83\u4eec\u7684\u8fde\u63a5\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u5c40\u90e8\u7a7a\u95f4\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u8d85\u53c2\u6570\u5206\u6790\u6df1\u5ea6\u6b65\u957f\u548c\u96f6\u586b\u5145","title":"\u8d85\u53c2\u6570\u5206\u6790\uff1a\u6df1\u5ea6\u3001\u6b65\u957f\u548c\u96f6\u586b\u5145","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u7684\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u6392\u5217\u53d7\u591a\u4e2a\u8d85\u53c2\u6570\u7684\u5f71\u54cd\uff0c\u5305\u62ec\u6df1\u5ea6\u3001\u6b65\u957f\u548c\u96f6\u586b\u5145\u3002\u8fd9\u4e9b\u8d85\u53c2\u6570\u4e0d\u4ec5\u51b3\u5b9a\u4e86\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\uff0c\u8fd8\u5f71\u54cd\u4e86\u7279\u5f81\u56fe\u7684\u5206\u8fa8\u7387\u548c\u4fe1\u606f\u4fdd\u7559\u7a0b\u5ea6\u3002</p> <ol> <li>\u6df1\u5ea6\uff08Depth\uff09\uff1a</li> <li>\u6df1\u5ea6\u5bf9\u5e94\u4e8e\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\uff0c\u7b49\u540c\u4e8e\u4f7f\u7528\u7684\u6ee4\u6ce2\u5668\u7684\u6570\u91cf\u3002\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u5728\u8f93\u5165\u6570\u636e\u4e2d\u5bfb\u627e\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u4f8b\u5982\u8fb9\u7f18\u3001\u989c\u8272\u6591\u70b9\u7b49\u3002\u56e0\u6b64\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u6df1\u5ea6\u662f\u7531\u6ee4\u6ce2\u5668\u7684\u6570\u91cf\u51b3\u5b9a\u7684\u3002\u6bcf\u4e2a\u6df1\u5ea6\u5217\u4e2d\u7684\u795e\u7ecf\u5143\u5171\u4eab\u76f8\u540c\u7684\u611f\u53d7\u91ce\uff0c\u4f46\u5728\u4e0d\u540c\u901a\u9053\u4e0a\u6fc0\u6d3b\u3002</li> <li>\u6b65\u957f\uff08Stride\uff09\uff1a</li> <li>\u6b65\u957f\u51b3\u5b9a\u4e86\u5377\u79ef\u6838\u5728\u8f93\u5165\u56fe\u50cf\u4e0a\u6ed1\u52a8\u7684\u8ddd\u79bb\u3002<code>\u8f83\u5c0f\u7684\u6b65\u957f\uff08\u5982 1\uff09\u610f\u5473\u7740\u5377\u79ef\u6838\u9010\u50cf\u7d20\u79fb\u52a8\uff0c\u8fd9\u4f1a\u4ea7\u751f\u66f4\u5927\u7684\u8f93\u51fa\u7279\u5f81\u56fe</code>\u3002\u8f83\u5927\u7684\u6b65\u957f\uff08\u5982 2\uff09\u5219\u610f\u5473\u7740\u6bcf\u6b21\u79fb\u52a8\u591a\u4e2a\u50cf\u7d20\uff0c\u8fd9\u5c06\u5bfc\u81f4\u8f93\u51fa\u7279\u5f81\u56fe\u5c3a\u5bf8\u51cf\u5c0f\u3002</li> <li>\u6b65\u957f\u5f71\u54cd\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5206\u8fa8\u7387\uff1a<code>\u6b65\u957f\u8d8a\u5927\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u8d8a\u5c0f\uff0c\u5206\u8fa8\u7387\u4e5f\u8d8a\u4f4e\u3002\u5927\u6b65\u957f\u901a\u5e38\u7528\u4e8e\u51cf\u5c0f\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002</code></li> <li>\u96f6\u586b\u5145\uff08Zero-padding\uff09\uff1a</li> <li>\u96f6\u586b\u5145\u662f\u5728\u8f93\u5165\u56fe\u50cf\u7684\u8fb9\u7f18\u586b\u5145\u989d\u5916\u7684\u96f6\u50cf\u7d20\uff0c\u4ee5\u63a7\u5236\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002\u96f6\u586b\u5145\u7684\u76ee\u7684\u662f\u907f\u514d\u5728\u5377\u79ef\u8fc7\u7a0b\u4e2d\u4e22\u5931\u8fb9\u7f18\u4fe1\u606f\uff0c\u6216\u8005\u4fdd\u6301\u8f93\u51fa\u7279\u5f81\u56fe\u4e0e\u8f93\u5165\u56fe\u50cf\u5728\u7a7a\u95f4\u5c3a\u5bf8\u4e0a\u7684\u4e00\u81f4\u6027\u3002</li> <li>\u901a\u8fc7\u9002\u5f53\u7684\u96f6\u586b\u5145\uff0c<code>\u53ef\u4ee5\u786e\u4fdd\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u4e0e\u8f93\u5165\u56fe\u50cf\u76f8\u540c</code>\uff0c\u6216\u8005\u6839\u636e\u9700\u8981\u8c03\u6574\u4e3a\u7279\u5b9a\u5927\u5c0f\u3002</li> </ol> <p>\u8f93\u51fa\u7279\u5f81\u56fe\u7a7a\u95f4\u5c3a\u5bf8\u8ba1\u7b97</p> \\[ \u8f93\u51fa\u5c3a\u5bf8 = \\dfrac{W - F + 2P}{S} + 1 \\] <ul> <li> <p>W \u662f\u8f93\u5165\u56fe\u50cf\u7684\u5c3a\u5bf8\uff08\u5047\u8bbe\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u76f8\u7b49\uff09\u3002</p> </li> <li> <p>F \u662f\u5377\u79ef\u6838\u7684\u5c3a\u5bf8\u3002</p> </li> <li> <p>P \u662f\u96f6\u586b\u5145\u7684\u6570\u91cf\u3002</p> </li> <li> <p>S \u662f\u6b65\u957f\u3002</p> </li> </ul> <p>\u4f8b 1\uff1a\u5047\u8bbe\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u4e3a \\(W = 7\\)\uff0c\u5377\u79ef\u6838\u5c3a\u5bf8 \\(F = 3\\)\uff0c\u6b65\u957f \\(S = 1\\)\uff0c\u96f6\u586b\u5145 \\(P = 0\\)\u3002\u90a3\u4e48\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u4e3a\uff1a</p> <p>\\(\\text{\u8f93\u51fa\u5c3a\u5bf8} = \\dfrac{7 - 3 + 2(0)}{1} + 1 = 5\\)</p> <p>\u4f8b 2\uff1a\u5982\u679c\u4f7f\u7528\u76f8\u540c\u7684\u8f93\u5165\u56fe\u50cf\u548c\u5377\u79ef\u6838\uff0c\u4f46\u6b65\u957f\\(S = 2\\)\uff0c\u5219\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u4e3a\uff1a</p> <p>\\(\\text{\u8f93\u51fa\u5c3a\u5bf8} = \\dfrac{7 - 3 + 2(0)}{2} + 1 = 3\\)</p> <p></p> <p>\u7a7a\u95f4\u6392\u5217\u7684\u56fe\u793a\u3002\u5728\u672c\u4f8b\u4e2d\u53ea\u6709\u4e00\u4e2a\u7a7a\u95f4\u7ef4\u5ea6\uff08x \u8f74\uff09\uff0c\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u5c3a\u5bf8 F = 3\uff0c\u8f93\u5165\u5c3a\u5bf8 W = 5\uff0c<code>\u96f6\u586b\u5145 P = 1</code>\u3002\u5de6\u8fb9\uff1a\u795e\u7ecf\u5143\u4f7f\u7528\u7684\u6b65\u957f S = 1\uff0c\u6240\u4ee5\u8f93\u51fa\u5c3a\u5bf8\u662f(5-3+2)/1+1 = 5\u3002\u53f3\u8fb9\uff1a\u795e\u7ecf\u5143\u7684\u6b65\u957f S = 2\uff0c\u5219\u8f93\u51fa\u5c3a\u5bf8\u662f(5-3+2)/2+1 = 3\u3002\u6ce8\u610f\u5f53\u6b65\u957f S = 3 \u65f6\u662f\u65e0\u6cd5\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u6574\u9f50\u5730\u7a7f\u8fc7\u6570\u636e\u4f53\u3002\u4ece\u7b49\u5f0f\u4e0a\u6765\u8bf4\uff0c\u56e0\u4e3a(5-3+2)= 4 \u662f\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u3002</p> <p>\u672c\u4f8b\u4e2d\uff0c\u795e\u7ecf\u5143\u7684\u6743\u91cd\u662f [1,0,-1]\uff0c\u663e\u793a\u5728\u56fe\u7684\u53f3\u4e0a\u89d2\uff0c\u504f\u5dee\u503c\u4e3a 0\u3002\u8fd9\u4e9b\u6743\u91cd\u662f\u88ab\u6240\u6709\u9ec4\u8272\u7684\u795e\u7ecf\u5143\u5171\u4eab\u7684</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u4f7f\u7528\u96f6\u586b\u5145","title":"\u4f7f\u7528\u96f6\u586b\u5145","text":"<p>\u96f6\u586b\u5145\uff08Zero-padding\uff09\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\u7684\u4f5c\u7528\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a\u4fdd\u6301\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u4e0e\u8f93\u5165\u4e00\u81f4\uff0c\u4ee5\u53ca\u907f\u514d\u8fb9\u7f18\u4fe1\u606f\u4e22\u5931\u3002\u901a\u8fc7\u5408\u7406\u4f7f\u7528\u96f6\u586b\u5145\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u89e3\u51b3\u5377\u79ef\u64cd\u4f5c\u4e2d\u9047\u5230\u7684\u4e00\u4e9b\u5c3a\u5bf8\u9650\u5236\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5f53\u6b65\u957f\u548c\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u7684\u7ec4\u5408\u4e0d\u9002\u7528\u4e8e\u8f93\u5165\u56fe\u50cf\u65f6\u3002</p> <ul> <li>\u4fdd\u6301\u7a7a\u95f4\u7ef4\u5ea6\u4e0d\u53d8</li> </ul> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53\u611f\u53d7\u91ce\u4e3a 3 \u4e14\u6b65\u957f\u4e3a 1 \u65f6\uff0c\u901a\u8fc7\u4f7f\u7528\u96f6\u586b\u5145 \\(P = 1\\)\uff0c\u53ef\u4ee5\u786e\u4fdd\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u7ef4\u5ea6\u4e0e\u8f93\u5165\u76f8\u540c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>\u5982\u679c\u4e0d\u4f7f\u7528\u96f6\u586b\u5145\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u7ef4\u5ea6\u5c06\u51cf\u5c11\u81f3 3</code>\u3002\u8fd9\u79cd\u4fdd\u6301\u8f93\u5165\u4e0e\u8f93\u51fa\u7a7a\u95f4\u7ef4\u5ea6\u4e00\u81f4\u7684\u7b56\u7565\u5728\u6df1\u5c42\u5377\u79ef\u7f51\u7edc\u4e2d\u5f88\u5e38\u89c1\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7f51\u7edc\u80fd\u591f\u9010\u5c42\u63d0\u53d6\u7279\u5f81\uff0c\u540c\u65f6\u4fdd\u6301\u56fe\u50cf\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u3002</p> <ul> <li>\u6b65\u957f\u7684\u9650\u5236\u4e0e\u6709\u6548\u8bbe\u7f6e</li> </ul> <p>\u5bf9\u4e8e\u67d0\u4e9b\u6b65\u957f\u548c\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u7ec4\u5408\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u96f6\u586b\u5145\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u8ba1\u7b97\u53ef\u80fd\u65e0\u6cd5\u5f97\u5230\u6574\u6570\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u5c3a\u5bf8\u4e3a 10\uff0c\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u4e3a 3\uff0c\u6b65\u957f\u4e3a 2\uff0c\u4e0d\u4f7f\u7528\u96f6\u586b\u5145\u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4e3a \\(\\dfrac{10-3+0}{2}+1 = 4.5\\)\uff0c\u4e0d\u662f\u6574\u6570\uff0c\u8fd9\u5c31\u662f\u8bf4\u795e\u7ecf\u5143\u4e0d\u80fd\u6574\u9f50\u5bf9\u79f0\u5730\u6ed1\u8fc7\u8f93\u5165\u6570\u636e\u4f53,\u8fd9\u663e\u7136\u662f\u65e0\u6548\u7684\u8bbe\u7f6e\u3002\u4e3a\u907f\u514d\u6b64\u7c7b\u95ee\u9898\uff0c\u901a\u5e38\u9700\u8981\u8c03\u6574\u96f6\u586b\u5145\u6216\u6b65\u957f\uff0c\u4f7f\u5f97\u8ba1\u7b97\u7ed3\u679c\u4e3a\u6574\u6570\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u53c2\u6570\u5171\u4eab","title":"\u53c2\u6570\u5171\u4eab","text":"<ol> <li>\u53c2\u6570\u5171\u4eab\u7684\u539f\u7406</li> </ol> <p>\u5728\u6807\u51c6\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u6709\u5176\u72ec\u7acb\u7684\u6743\u91cd\u548c\u504f\u5dee\uff0c\u4e0e\u524d\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\u3002\u7136\u800c\uff0c\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5047\u8bbe\uff1a<code>\u5982\u679c\u67d0\u4e2a\u7279\u5f81\u5728\u8f93\u5165\u6570\u636e\u7684\u67d0\u4e2a\u4f4d\u7f6e\u6709\u7528\uff0c\u90a3\u4e48\u5728\u5176\u4ed6\u4f4d\u7f6e\u4e5f\u5f88\u53ef\u80fd\u6709\u7528</code>\u3002\u8fd9\u4e2a\u5047\u8bbe\u88ab\u79f0\u4e3a<code>\u5e73\u79fb\u4e0d\u53d8\u6027</code>\uff0c\u610f\u5473\u7740\u7279\u5f81\u5728\u4e0d\u540c\u4f4d\u7f6e\u4e0a\u7684\u8868\u793a\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u5c06\u540c\u4e00\u7ec4\u6743\u91cd\uff08\u5373\u6ee4\u6ce2\u5668\uff09\u5e94\u7528\u4e8e\u8f93\u5165\u7684\u4e0d\u540c\u533a\u57df\uff0c\u7f51\u7edc\u53ef\u4ee5\u5171\u4eab\u8fd9\u4e9b\u6743\u91cd\uff0c\u4ece\u800c\u51cf\u5c11\u9700\u8981\u5b66\u4e60\u7684\u53c2\u6570\u6570\u91cf\u3002</p> <ol> <li>\u53c2\u6570\u5171\u4eab\u7684\u5b9e\u9645\u5e94\u7528</li> </ol> <p>\u4ee5\u6587\u4e2d\u63d0\u5230\u7684\u5377\u79ef\u5c42\u4e3a\u4f8b\uff0c\u5047\u8bbe\u8f93\u5165\u6570\u636e\u4f53\u7684\u5c3a\u5bf8\u4e3a [55x55x96]\uff0c\u6bcf\u4e2a\u5377\u79ef\u6838\u7684\u5c3a\u5bf8\u4e3a [11x11x3]\uff0c\u4e14\u7f51\u7edc\u4f7f\u7528\u4e86 96 \u4e2a\u4e0d\u540c\u7684\u6ee4\u6ce2\u5668\u3002\u5982\u679c\u4e0d\u8fdb\u884c\u53c2\u6570\u5171\u4eab\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u5c06\u72ec\u7acb\u5b66\u4e60\u5176\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u8fd9\u5c06\u5bfc\u81f4\u5927\u91cf\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a [55x55] \u7684\u6df1\u5ea6\u5207\u7247\u4e2d\uff0c\u5171\u6709 55x55 = 3025 \u4e2a\u795e\u7ecf\u5143\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u9700\u8981\u5b66\u4e60 11x11x3 = 363 \u4e2a\u53c2\u6570\u3002\u8fd9\u610f\u5473\u7740\u5728\u6ca1\u6709\u53c2\u6570\u5171\u4eab\u7684\u60c5\u51b5\u4e0b\uff0c\u5377\u79ef\u5c42\u5c06\u62e5\u6709\u4e0a\u4ebf\u4e2a\u53c2\u6570\uff08$290400\\times364 = 105,705,600 $\u4e2a\uff09\uff0c\u96be\u4ee5\u5b9e\u9645\u5e94\u7528\u3002</p> <p>\u901a\u8fc7\u53c2\u6570\u5171\u4eab\uff0c\u540c\u4e00\u6ee4\u6ce2\u5668\u88ab\u5e94\u7528\u4e8e\u6bcf\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\uff0c\u4ece\u800c\u4f7f\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u5171\u4eab\u540c\u4e00\u7ec4\u6743\u91cd\u548c\u504f\u5dee\u3002\u8fd9\u6837\uff0c\u5377\u79ef\u5c42\u53ea\u9700\u5b66\u4e60\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u4e2d\u7684 34,944 (\\(96\\times11\\times11\\times3 = 34,848\\))\u4e2a\u53c2\u6570\uff08\u5305\u62ec\u504f\u5dee\uff09\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u53c2\u6570\u7684\u6570\u91cf\u3002\u8fd9\u4e0d\u4ec5\u964d\u4f4e\u4e86\u6a21\u578b\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u8fd8\u51cf\u8f7b\u4e86\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002</p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u6df1\u5ea6\u5207\u7247\u4e2d\u7684\u6240\u6709\u6743\u91cd\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u6743\u91cd\u5411\u91cf\uff0c\u90a3\u4e48\u5377\u79ef\u5c42\u7684\u524d\u5411\u4f20\u64ad\u5728\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u4e2d\u53ef\u4ee5\u770b\u505a\u662f\u5728\u8ba1\u7b97\u795e\u7ecf\u5143\u6743\u91cd\u548c\u8f93\u5165\u6570\u636e\u4f53\u7684 \u5377\u79ef\uff08\u8fd9\u5c31\u662f \"\u5377\u79ef\u5c42\" \u540d\u5b57\u7531\u6765\uff09\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u603b\u662f\u5c06\u8fd9\u4e9b\u6743\u91cd\u96c6\u5408\u79f0\u4e3a \u6ee4\u6ce2\u5668\uff08filter\uff09\uff08\u6216 \u5377\u79ef\u6838\uff08kernel\uff09\uff09\uff0c\u56e0\u4e3a\u5b83\u4eec\u548c\u8f93\u5165\u8fdb\u884c\u4e86\u5377\u79ef\u3002</p> <p></p> <p>Numpy \u4f8b\u5b50\uff1a\u4e3a\u4e86\u8ba9\u8ba8\u8bba\u66f4\u52a0\u7684\u5177\u4f53\uff0c\u6211\u4eec\u7528\u4ee3\u7801\u6765\u5c55\u793a\u4e0a\u8ff0\u601d\u8def\u3002\u5047\u8bbe\u8f93\u5165\u6570\u636e\u4f53\u662f numpy \u6570\u7ec4 X\u3002\u90a3\u4e48\uff1a</p> <ul> <li>\u4e00\u4e2a\u4f4d\u4e8e (x, y) \u7684\u6df1\u5ea6\u5217\uff08\u6216\u7ea4\u7ef4\uff09\u5c06\u4f1a\u662f \\(X [x, y,:]\\)\u3002</li> <li> <p>\u5728\u6df1\u5ea6\u4e3a d \u5904\u7684\u6df1\u5ea6\u5207\u7247\uff0c\u6216\u6fc0\u6d3b\u56fe\u5e94\u8be5\u662f \\(X [:,:, d]\\)\u3002</p> </li> <li> <p>\u8f93\u5165\u548c\u53c2\u6570\u8bf4\u660e</p> </li> </ul> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u4e09\u7ef4\u8f93\u5165\u6570\u636e <code>X</code>\uff0c\u5176\u5c3a\u5bf8\u4e3a <code>(11, 11, 4)</code>\uff0c\u5373\u8f93\u5165\u6570\u636e\u7684\u9ad8\u5ea6\u4e3a 11\uff0c\u5bbd\u5ea6\u4e3a 11\uff0c\u6df1\u5ea6\u4e3a 4\u3002\u6211\u4eec\u8fd8\u5047\u8bbe\u6709\u4e24\u4e2a\u5377\u79ef\u6ee4\u6ce2\u5668\uff08\u6216\u6743\u91cd\u77e9\u9635\uff09\uff0c<code>W0</code> \u548c <code>W1</code>\uff0c\u5b83\u4eec\u7684\u5c3a\u5bf8\u4e3a <code>(5, 5, 4)</code>\uff0c\u8868\u793a\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u5728\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u65b9\u5411\u8986\u76d6 5x5 \u533a\u57df\uff0c\u6df1\u5ea6\u4e0e\u8f93\u5165\u6570\u636e\u76f8\u540c\uff08\u5373 4\uff09\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u8fd8\u6709\u4e00\u4e2a\u504f\u5dee <code>b0</code> \u548c <code>b1</code>\u3002</p> <ol> <li>\u5377\u79ef\u8f93\u51fa\u7684\u8ba1\u7b97</li> </ol> <p>\u6839\u636e\u8f93\u5165\u6570\u636e <code>X</code> \u7684\u5c3a\u5bf8 <code>(11, 11, 4)</code>\u3001\u6ee4\u6ce2\u5668\u5c3a\u5bf8 <code>(5, 5, 4)</code>\u3001\u6b65\u957f <code>S = 2</code>\uff0c\u4ee5\u53ca\u96f6\u586b\u5145 <code>P = 0</code>\uff0c\u8f93\u51fa\u6570\u636e <code>V</code> \u7684\u7a7a\u95f4\u5c3a\u5bf8\u4e3a\uff1a</p> <p>$$    \\text{Output size} = \\left( \\frac{11 - 5}{2} + 1 \\right) \\times \\left( \\frac{11 - 5}{2} + 1 \\right) = 4 \\times 4    $$</p> <p>\u56e0\u6b64\uff0c\u8f93\u51fa\u6570\u636e\u4f53 <code>V</code> \u7684\u5c3a\u5bf8\u4e3a <code>(4, 4, 2)</code>\uff0c\u5176\u4e2d\u6df1\u5ea6\u4e3a 2 \u8868\u793a\u6709\u4e24\u4e2a\u6fc0\u6d3b\u56fe\u3002</p> <ol> <li> <p>\u9010\u6b65\u7406\u89e3\u5377\u79ef\u64cd\u4f5c</p> </li> <li> <p>\u7b2c\u4e00\u5c42\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e <code>(0,0,0)</code>\uff1a</p> <p>\u516c\u5f0f\uff1a<code>V[0, 0, 0] = np.sum(X[:5, :5, :] * W0) + b0</code></p> <p>\u89e3\u91ca\uff1a\u53d6\u8f93\u5165\u6570\u636e <code>X</code> \u7684\u524d 5 \u884c\u548c\u524d 5 \u5217\uff0c\u4ee5\u53ca\u6240\u6709\u6df1\u5ea6\u7684\u5207\u7247\uff0c\u4e0e\u6ee4\u6ce2\u5668 <code>W0</code> \u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff0c\u7136\u540e\u6c42\u548c\uff0c\u52a0\u4e0a\u504f\u5dee <code>b0</code>\u3002</p> </li> <li> <p>\u7b2c\u4e00\u5c42\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e <code>(1,0,0)</code>\uff1a</p> <p>\u516c\u5f0f\uff1a<code>V[1, 0, 0] = np.sum(X[2:7, :5, :] * W0) + b0</code></p> <p>\u89e3\u91ca\uff1a\u7531\u4e8e\u6b65\u957f\u4e3a 2\uff0c\u56e0\u6b64\u5728 x \u65b9\u5411\u4e0a\u79fb\u52a8 2 \u4e2a\u50cf\u7d20\uff0c\u5bf9\u65b0\u7684\u533a\u57df <code>[2:7, :5, :]</code> \u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u5c42\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff080\uff0c0\uff0c1\uff09</p> <p><code>V[0, 0, 1] = np.sum(X[:5, :5, :] * W1) + b1</code></p> <ul> <li>\u8f93\u5165\u7684\u7a97\u53e3 <code>X[:5, :5, :]</code> \u4ee3\u8868\u4ece\u8f93\u5165 <code>X</code> \u4e2d\u9009\u53d6 <code>[0:5]</code> \u884c\u3001<code>[0:5]</code> \u5217\u7684\u533a\u57df\u53ca\u5176\u5168\u90e8\u6df1\u5ea6\u3002</li> <li>\u4e0e\u6ee4\u6ce2\u5668 <code>W1</code> \u6267\u884c\u9010\u5143\u7d20\u76f8\u4e58\uff0c\u7136\u540e\u6c42\u548c\uff0c\u5e76\u52a0\u4e0a\u504f\u5dee <code>b1</code>\uff0c\u5f97\u5230\u8f93\u51fa\u6fc0\u6d3b\u56fe <code>V</code> \u5728\u4f4d\u7f6e <code>[0, 0]</code> \u7684\u503c\u3002</li> </ul> </li> <li> <p><code>V[2, 3, 1] = np.sum(X[4:9, 6:11, :] * W1) + b1</code></p> <ul> <li>\u540c\u65f6\u5728\u884c\u548c\u5217\u65b9\u5411\u4e0a\u5404\u6ed1\u52a8 2 \u4e2a\u4f4d\u7f6e\uff0c\u8f93\u5165\u7a97\u53e3\u4e3a <code>[4:9]</code> \u884c\u548c <code>[6:11]</code> \u5217\u3002</li> <li>\u8ba1\u7b97\u5f97\u5230 <code>V</code> \u5728\u4f4d\u7f6e <code>[2, 3]</code> \u7684\u503c\u3002</li> </ul> </li> <li> <p>Numpy \u5b9e\u73b0</p> </li> </ol> <pre><code>import numpy as np\n\n# \u521d\u59cb\u5316\u8f93\u5165\u6570\u636e X \u548c\u6ee4\u6ce2\u5668 W0, W1\nX = np.random.rand(11, 11, 4)  # \u8f93\u5165\u6570\u636e\nW0 = np.random.rand(5, 5, 4)   # \u7b2c\u4e00\u4e2a\u6ee4\u6ce2\u5668\nW1 = np.random.rand(5, 5, 4)   # \u7b2c\u4e8c\u4e2a\u6ee4\u6ce2\u5668\nb0 = np.random.rand()          # \u7b2c\u4e00\u4e2a\u6ee4\u6ce2\u5668\u7684\u504f\u5dee\nb1 = np.random.rand()          # \u7b2c\u4e8c\u4e2a\u6ee4\u6ce2\u5668\u7684\u504f\u5dee\n\n# \u521d\u59cb\u5316\u8f93\u51fa\u6570\u636e V\nV = np.zeros((4, 4, 2))  # \u8f93\u51fa\u6570\u636e\uff0c(4, 4, 2) \u5c3a\u5bf8\n\n# \u8ba1\u7b97\u5377\u79ef\u5c42\u7684\u8f93\u51fa V\nfor i in range(4):\n    for j in range(4):\n        V[i, j, 0] = np.sum(X[i*2:i*2+5, j*2:j*2+5, :] * W0) + b0  # \u7b2c\u4e00\u4e2a\u6fc0\u6d3b\u56fe\n        V[i, j, 1] = np.sum(X[i*2:i*2+5, j*2:j*2+5, :] * W1) + b1  # \u7b2c\u4e8c\u4e2a\u6fc0\u6d3b\u56fe\n\n# \u6fc0\u6d3b\u51fd\u6570\uff08ReLU\uff09\nV = np.maximum(0, V)  # ReLU \u6fc0\u6d3b\n</code></pre> <p>\u5377\u79ef\u5c42\u7684\u6027\u8d28\u603b\u7ed3</p> <p>\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\uff0c\u5377\u79ef\u5c42\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\u548c\u8d85\u53c2\u6570\u914d\u7f6e\uff1a</p> <ol> <li> <p>\u8f93\u5165\u6570\u636e\u4f53\u7684\u5c3a\u5bf8\uff1a</p> <ul> <li>\u8bb0\u4e3a \\(W_1 \\times H_1 \\times D_1\\) \uff1a<ul> <li>\\(W_1\\) \u662f\u8f93\u5165\u6570\u636e\u7684\u5bbd\u5ea6\u3002</li> <li>\\(H_1\\) \u662f\u8f93\u5165\u6570\u636e\u7684\u9ad8\u5ea6\u3002</li> <li>\\(D_1\\) \u662f\u8f93\u5165\u6570\u636e\u7684\u6df1\u5ea6\uff08\u901a\u5e38\u662f\u901a\u9053\u6570\uff0c\u4f8b\u5982 RGB \u56fe\u50cf\u7684\u6df1\u5ea6\u4e3a 3\uff09\u3002</li> </ul> </li> </ul> </li> <li> <p>\u56db\u4e2a\u8d85\u53c2\u6570\uff1a</p> <ul> <li>\u6ee4\u6ce2\u5668\u7684\u6570\u91cf K \uff1a<ul> <li>K \u8868\u793a\u5377\u79ef\u5c42\u4f7f\u7528\u7684\u6ee4\u6ce2\u5668\uff08\u6216\u5377\u79ef\u6838\uff09\u7684\u6570\u91cf\uff0c\u51b3\u5b9a\u8f93\u51fa\u6570\u636e\u4f53\u7684\u6df1\u5ea6\u3002</li> </ul> </li> <li>\u6ee4\u6ce2\u5668\u7684\u7a7a\u95f4\u5c3a\u5bf8 F \uff1a<ul> <li>F \u8868\u793a\u6ee4\u6ce2\u5668\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u901a\u5e38\u662f\u6b63\u65b9\u5f62\uff0c\u4f8b\u5982 F = 3 \u4ee3\u8868 \\(3 \\times 3\\) \u7684\u6ee4\u6ce2\u5668\u3002</li> </ul> </li> <li>\u6b65\u957f S \uff1a<ul> <li>S \u8868\u793a\u6ee4\u6ce2\u5668\u5728\u8f93\u5165\u6570\u636e\u4f53\u4e0a\u6ed1\u52a8\u7684\u6b65\u5e45\u3002\u8f83\u5c0f\u7684\u6b65\u957f\u4f1a\u4ea7\u751f\u66f4\u5927\u7684\u8f93\u51fa\u6570\u636e\u4f53\u3002</li> </ul> </li> <li>\u96f6\u586b\u5145\u6570\u91cf P \uff1a<ul> <li>P \u8868\u793a\u5728\u8f93\u5165\u6570\u636e\u4f53\u7684\u8fb9\u7f18\u8fdb\u884c\u96f6\u586b\u5145\u7684\u6570\u91cf\uff0c\u4ee5\u63a7\u5236\u8f93\u51fa\u6570\u636e\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002</li> </ul> </li> </ul> </li> <li> <p>\u8f93\u51fa\u6570\u636e\u4f53\u7684\u5c3a\u5bf8\uff1a</p> <ul> <li>\u8bb0\u4e3a \\(W_2 \\times H_2 \\times D_2\\) \uff1a<ul> <li>\u8f93\u51fa\u5bbd\u5ea6 \\(W_2 = \\frac{W_1 - F + 2P}{S} + 1\\)</li> <li>\u8f93\u51fa\u9ad8\u5ea6 \\(H_2 = \\frac{H_1 - F + 2P}{S} + 1\\)</li> <li>\u8f93\u51fa\u6df1\u5ea6 \\(D_2 = K\\) \uff08\u7531\u6ee4\u6ce2\u5668\u7684\u6570\u91cf\u51b3\u5b9a\uff09</li> </ul> </li> </ul> </li> <li> <p>\u53c2\u6570\u5171\u4eab\uff1a</p> <ul> <li>\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u5305\u542b \\(F \\times F \\times D_1\\) \u4e2a\u6743\u91cd\u548c\u4e00\u4e2a\u504f\u5dee\u3002\u56e0\u6b64\u5377\u79ef\u5c42\u4e00\u5171\u5177\u6709 \\(F \\times F \\times D_1 \\times K\\) \u4e2a\u6743\u91cd\u548c K \u4e2a\u504f\u7f6e\u3002</li> </ul> </li> <li> <p>\u8f93\u51fa\u6570\u636e\u7684\u751f\u6210\uff1a</p> <ul> <li>\u5728\u8f93\u51fa\u6570\u636e\u4f53\u4e2d\uff0c\u7b2c d \u4e2a\u6df1\u5ea6\u5207\u7247\uff08\u5373 \\(W_2 \\times H_2\\) \u7684\u4e8c\u7ef4\u77e9\u9635\uff09\u662f\u901a\u8fc7\u5c06\u7b2c d \u4e2a\u6ee4\u6ce2\u5668\u5728\u8f93\u5165\u6570\u636e\u4e0a\u8fdb\u884c\u6709\u6548\u5377\u79ef\u8fd0\u7b97\u5e76\u52a0\u4e0a\u5bf9\u5e94\u7684\u504f\u5dee\u5f97\u5230\u7684\u3002</li> </ul> </li> </ol> <p>\u7528\u77e9\u9635\u4e58\u6cd5\u5b9e\u73b0\uff1a\u5377\u79ef\u8fd0\u7b97\u672c\u8d28\u4e0a\u5c31\u662f\u5728\u6ee4\u6ce2\u5668\u548c\u8f93\u5165\u6570\u636e\u7684\u5c40\u90e8\u533a\u57df\u95f4\u505a\u70b9\u79ef\u3002\u5377\u79ef\u5c42\u7684\u5e38\u7528\u5b9e\u73b0\u65b9\u5f0f\u5c31\u662f\u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u5c06\u5377\u79ef\u5c42\u7684\u524d\u5411\u4f20\u64ad\u53d8\u6210\u4e00\u4e2a\u5de8\u5927\u7684\u77e9\u9635\u4e58\u6cd5\uff1a</p> <ol> <li> <p>\u8f93\u5165\u6570\u636e\u5c55\u5f00\uff08im2col \u64cd\u4f5c\uff09\uff1a</p> </li> <li> <p>\u5047\u8bbe\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u4e3a <code>[227x227x3]</code>\uff0c\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u4e3a <code>[11x11x3]</code>\uff0c\u6b65\u957f\u4e3a <code>4</code>\u3002</p> </li> <li> <p>im2col \u64cd\u4f5c\u5c06\u8f93\u5165\u4e2d\u7684\u6bcf\u4e2a\u611f\u53d7\u91ce\u62c9\u4f38\u4e3a\u5217\u5411\u91cf\u3002\u4f8b\u5982\uff0c\u5c3a\u5bf8\u4e3a <code>[11x11x3]</code> \u7684\u611f\u53d7\u91ce\u4f1a\u88ab\u62c9\u4f38\u4e3a\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>11x11x3 = 363</code> \u7684\u5217\u5411\u91cf\u3002</p> </li> <li> <p>\u5bf9\u6574\u4e2a\u8f93\u5165\u56fe\u50cf\u8fdb\u884c\u8be5\u64cd\u4f5c\uff0c\u5f97\u5230\u4e00\u4e2a\u77e9\u9635 <code>X_col</code>\uff0c\u5176\u4e2d\u6bcf\u5217\u662f\u4e00\u4e2a\u611f\u53d7\u91ce\u7684\u5c55\u5f00\u3002\u56e0\u4e3a\u6b65\u957f\u4e3a <code>4</code>\uff0c\u8f93\u51fa\u5bbd\u9ad8\u4e3a <code>(227-11)/4+1 = 55</code>\uff0c\u6240\u4ee5 <code>X_col</code> \u7684\u5c3a\u5bf8\u4e3a <code>[363x3025]</code>\uff0c\u5373\u6709 <code>55x55=3025</code> \u5217\u3002</p> </li> <li> <p>\u6ee4\u6ce2\u5668\u5c55\u5f00\uff1a</p> </li> <li> <p>\u5047\u8bbe\u6709 <code>96</code> \u4e2a\u5c3a\u5bf8\u4e3a <code>[11x11x3]</code> \u7684\u6ee4\u6ce2\u5668\u3002</p> </li> <li> <p>\u6ee4\u6ce2\u5668\u88ab\u5c55\u5f00\u6210\u884c\u5411\u91cf\uff0c\u7ec4\u6210\u77e9\u9635 <code>W_row</code>\uff0c\u5c3a\u5bf8\u4e3a <code>[96x363]</code>\u3002</p> </li> <li> <p>\u77e9\u9635\u4e58\u6cd5\uff1a</p> </li> <li> <p>\u5377\u79ef\u8fd0\u7b97\u53d8\u4e3a\u77e9\u9635\u4e58\u6cd5 <code>np.dot(W_row, X_col)</code>\uff0c\u8f93\u51fa\u77e9\u9635\u5c3a\u5bf8\u4e3a <code>[96x3025]</code>\uff0c\u5373\u6bcf\u4e2a\u6ee4\u6ce2\u5668\u5728\u6bcf\u4e2a\u611f\u53d7\u91ce\u4f4d\u7f6e\u7684\u70b9\u79ef\u7ed3\u679c\u3002</p> </li> <li> <p>\u7ed3\u679c\u91cd\u6574\uff1a</p> </li> <li>\u5c06\u77e9\u9635\u4e58\u6cd5\u7684\u7ed3\u679c\u91cd\u65b0\u6574\u5f62\u4e3a\u5408\u7406\u7684\u8f93\u51fa\u5c3a\u5bf8 <code>[55x55x96]</code>\u3002</li> </ol> <p>\u7f3a\u70b9\uff1aim2col \u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6d88\u8017\u589e\u52a0\uff0c\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u7684\u67d0\u4e9b\u503c\u4f1a\u88ab\u91cd\u590d\u5b58\u50a8\u5728\u4e0d\u540c\u5217\u4e2d\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u6c60\u5316\u5c42","title":"\u6c60\u5316\u5c42","text":"<p>\u901a\u5e38\uff0c\u5728\u8fde\u7eed\u7684\u5377\u79ef\u5c42\u4e4b\u95f4\u4f1a\u5468\u671f\u6027\u5730\u63d2\u5165\u4e00\u4e2a\u6c60\u5316\u5c42\u3002<code>\u5b83\u7684\u4f5c\u7528\u662f\u9010\u6e10\u964d\u4f4e\u6570\u636e\u4f53\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u80fd\u51cf\u5c11\u7f51\u7edc\u4e2d\u53c2\u6570\u7684\u6570\u91cf\uff0c\u4f7f\u5f97\u8ba1\u7b97\u8d44\u6e90\u8017\u8d39\u53d8\u5c11\uff0c\u4e5f\u80fd\u6709\u6548\u63a7\u5236\u8fc7\u62df\u5408\u3002</code></p> <p>\u6c60\u5316\u5c42\u7684\u64cd\u4f5c\u672c\u8d28\u4e0a\u662f\u5bf9\u8f93\u5165\u7279\u5f81\u56fe\u7684\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u8fdb\u884c\u72ec\u7acb\u7684\u964d\u91c7\u6837\u3002\u6700\u5e38\u7528\u7684\u662f\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\uff0c\u5b83\u5728\u6bcf\u4e2a 2x2 \u533a\u57df\u5185\u9009\u62e9\u6700\u5927\u503c\u4f5c\u4e3a\u8f93\u51fa\u3002\u6df1\u5ea6\u4fdd\u6301\u4e0d\u53d8\u3002\u6c60\u5316\u5c42\u7684\u4e00\u4e9b\u516c\u5f0f\uff1a</p> <ul> <li>\u6c60\u5316\u5c42\u7684\u8f93\u51fa\u5c3a\u5bf8 \\(H_{out} \\times W_{out}\\) \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</li> </ul> \\[ H_{out} = \\frac{H_{in} - F + 2P}{S} + 1 \\] \\[ W_{out} = \\frac{W_{in} - F + 2P}{S} + 1 \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(H_{in}\\) \u548c \\(W_{in}\\) \u5206\u522b\u662f\u8f93\u5165\u7279\u5f81\u56fe\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u3002</li> <li>\\(F\\) \u662f\u6c60\u5316\u7a97\u53e3\u7684\u5c3a\u5bf8\uff08\u901a\u5e38\u662f 2x2 \u7684\u5927\u5c0f\uff0c\u8868\u793a F=2\uff09\u3002</li> <li>\\(P\\) \u662f\u586b\u5145\uff08padding\uff09\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a 0\u3002</li> <li> <p>\\(S\\) \u662f\u6c60\u5316\u7684\u6b65\u957f\uff08stride\uff09\uff0c\u901a\u5e38\u4e3a 2\u3002</p> </li> <li> <p>\u5728\u6c60\u5316\u5c42\u4e2d\u5f88\u5c11\u4f7f\u7528\u96f6\u586b\u5145</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u4e2d\u7684 \\(2 \\times 2\\) \u533a\u57df\uff0c\u6c60\u5316\u64cd\u4f5c\u5982\u4e0b\uff1a</p> </li> </ul> \\[ M_{ij} = \\max \\{ x_{i,j}, x_{i,j+1}, x_{i+1,j}, x_{i+1,j+1} \\} \\] <ul> <li> <p>\\(x_{i,j}\\) \u662f\u8f93\u5165\u7279\u5f81\u56fe\u5728\u4f4d\u7f6e \\((i, j)\\) \u7684\u50cf\u7d20\u503c\u3002</p> </li> <li> <p>\u6c60\u5316\u5c42\u7684\u4e00\u4e2a\u5173\u952e\u4f5c\u7528\u662f\u51cf\u5c11\u540e\u7eed\u5c42\u7684\u53c2\u6570\u6570\u91cf\u3002\u5047\u8bbe\u8f93\u5165\u7279\u5f81\u56fe\u7684\u5927\u5c0f\u4e3a \\(H_{in} \\times W_{in} \\times D\\)\uff08\u9ad8\u5ea6\u3001\u9ad8\u5ea6\u548c\u6df1\u5ea6\uff09\uff0c\u6c60\u5316\u540e\u8f93\u51fa\u7684\u5927\u5c0f\u4e3a \\(H_{out} \\times W_{out} \\times D\\)\uff0c\u90a3\u4e48\u53c2\u6570\u6570\u91cf\u51cf\u5c11\u7684\u6bd4\u7387\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u4f30\u7b97\uff1a</p> </li> </ul> \\[ \\text{Reduction Ratio} = \\frac{H_{in} \\times W_{in}}{H_{out} \\times W_{out}} \\] <p>\u6c60\u5316\u7684\u4e0d\u540c\u5f62\u5f0f\u4e0e\u9009\u62e9</p> <p>\u6c60\u5316\u64cd\u4f5c\u4e0d\u4ec5\u9650\u4e8e\u6700\u5927\u6c60\u5316\u3002\u8fd8\u6709\u5e73\u5747\u6c60\u5316\uff08Average Pooling\uff09\u548c L2 \u8303\u5f0f\u6c60\u5316\uff08L2-norm Pooling\uff09\u3002\u7136\u800c\uff0c\u5b9e\u8df5\u8868\u660e\u6700\u5927\u6c60\u5316\u901a\u5e38\u6548\u679c\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u63d0\u53d6\u7279\u5f81\u56fe\u4e2d\u66f4\u5177\u8fa8\u8bc6\u5ea6\u7684\u4fe1\u606f\u3002</p> <ul> <li> <p>\u91cd\u53e0\u6c60\u5316\uff08Overlapping Pooling\uff09\uff1a\u8fd9\u79cd\u6c60\u5316\u65b9\u5f0f\u4f7f\u7528\u8f83\u5927\u7684\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u548c\u8f83\u5c0f\u7684\u6b65\u957f\uff08\u5982 <code>F=3, S=2</code>\uff09\uff0c\u4fdd\u7559\u66f4\u591a\u7684\u7279\u5f81\u4fe1\u606f\uff0c\u4f46\u8ba1\u7b97\u590d\u6742\u5ea6\u66f4\u9ad8\u3002</p> </li> <li> <p>\u5e38\u7528\u6c60\u5316\u5f62\u5f0f\uff1a\u66f4\u5e38\u89c1\u7684\u914d\u7f6e\u662f <code>F=2, S=2</code>\uff0c\u4ee5\u5e73\u8861\u8ba1\u7b97\u6548\u7387\u4e0e\u4fe1\u606f\u4fdd\u7559\u3002</p> </li> </ul> <p></p> <p>\u6c60\u5316\u5c42\u5728\u8f93\u5165\u6570\u636e\u4f53\u7684\u6bcf\u4e2a\u6df1\u5ea6\u5207\u7247\u4e0a\uff0c\u72ec\u7acb\u5730\u5bf9\u5176\u8fdb\u884c\u7a7a\u95f4\u4e0a\u7684\u964d\u91c7\u6837\u3002\u5de6\u8fb9\uff1a\u672c\u4f8b\u4e2d\uff0c\u8f93\u5165\u6570\u636e\u4f53\u5c3a\u5bf8$ [224\\times224\\times64] \\(\u88ab\u964d\u91c7\u6837\u5230\u4e86\\) [112\\times112\\times64]$\uff0c\u91c7\u53d6\u7684\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u662f 2\uff0c\u6b65\u957f\u4e3a 2\uff0c\u800c\u6df1\u5ea6\u4e0d\u53d8\u3002\u53f3\u8fb9\uff1a\u6700\u5e38\u7528\u7684\u964d\u91c7\u6837\u64cd\u4f5c\u662f\u53d6\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u6c60\u5316\uff0c\u8fd9\u91cc\u6b65\u957f\u4e3a 2\uff0c\u6bcf\u4e2a\u53d6\u6700\u5927\u503c\u64cd\u4f5c\u662f\u4ece 4 \u4e2a\u6570\u5b57\u4e2d\u9009\u53d6\uff08\u5373 2x2 \u7684\u65b9\u5757\u533a\u57df\u4e2d)\u3002</p> <p>\u53cd\u5411\u4f20\u64ad\uff1a \u5728\u53cd\u5411\u4f20\u64ad\u65f6\uff0c<code>\u6c60\u5316\u5c42\u53ea\u5c06\u68af\u5ea6\u4f20\u9012\u7ed9\u6c60\u5316\u533a\u57df\u5185\u7684\u6700\u5927\u503c\u5143\u7d20</code>\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5728\u524d\u5411\u4f20\u64ad\u65f6\uff0c<code>\u7f51\u7edc\u4f1a\u8bb0\u5f55\u4e0b\u6700\u5927\u503c\u5143\u7d20\u7684\u7d22\u5f15\uff08\u5373\u201c\u9053\u5c94\u201d\uff09</code>\uff0c\u4ece\u800c\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u9ad8\u6548\u5730\u56de\u4f20\u68af\u5ea6\u3002</p> <p>\u4e0d\u4f7f\u7528\u6c60\u5316\u5c42\uff1a\u5c3d\u7ba1\u6c60\u5316\u5c42\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u5e38\u89c1\u7ec4\u4ef6\uff0c\u4f46\u8fd1\u5e74\u6765\u6709\u7814\u7a76\u5c1d\u8bd5\u5b8c\u5168\u53bb\u9664\u6c60\u5316\u5c42\uff0c\u91c7\u7528\u66f4\u5927\u7684\u5377\u79ef\u6b65\u957f\u6765\u8fbe\u5230\u540c\u6837\u7684\u964d\u91c7\u6837\u6548\u679c\u3002\u4f8b\u5982\u5728 All Convolutional Net \u4e2d\uff0c\u901a\u8fc7\u4ec5\u4f7f\u7528\u5377\u79ef\u64cd\u4f5c\u6765\u51cf\u5c11\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002\u5bf9\u4e8e\u751f\u6210\u6a21\u578b\u5982 \u53d8\u5316\u81ea\u7f16\u7801\u5668\uff08<code>VAEs\uff1avariational autoencoders</code>\uff09 \u548c <code>GANs\uff1agenerative adversarial networks</code>\uff0c\u4e0d\u4f7f\u7528\u6c60\u5316\u5c42\u4e5f\u6709\u5176\u72ec\u7279\u7684\u4f18\u52bf\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5f52\u4e00\u5316\u5c42","title":"\u5f52\u4e00\u5316\u5c42","text":"<p>\u5f52\u4e00\u5316\u65b9\u5f0f\u7684\u4f5c\u7528\uff0c<code>\u5176\u76ee\u7684\u662f\u4f7f\u7f51\u7edc\u66f4\u5bb9\u6613\u8bad\u7ec3\uff0c\u52a0\u901f\u6a21\u578b\u7684\u6536\u655b\uff0c\u5e76\u63d0\u9ad8\u6a21\u578b\u7684\u7a33\u5b9a\u6027\u548c\u6027\u80fd</code>\u3002\uff08\u6216\u8005\u8bf4\u53ef\u4ee5\u4f7f\u5f97\u8f93\u51fa\u5177\u6709\u96f6\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\uff09\uff0c\u5e38\u89c1\u7684\u65b9\u5f0f\u79f0\u4e3a<code>\u6279\u91cf\u5f52\u4e00\u5316</code>\uff0c\u5373 <code>Batch Normalization</code></p> <p>\u6279\u91cf\u5f52\u4e00\u5316\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5728\u6bcf\u4e2a\u6279\u6b21\u4e2d\u5bf9\u7f51\u7edc\u4e2d\u7684\u4e2d\u95f4\u6fc0\u6d3b\u503c\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u5c0f\u6279\u91cf\uff08batch\uff09\u7684\u6fc0\u6d3b\u503c\u8fdb\u884c\u5747\u503c\u548c\u65b9\u5dee\u7684\u6807\u51c6\u5316\uff0c\u4f7f\u5176\u5177\u6709\u96f6\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u3002\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\hat{x} = \\frac{x - \\mu_B}{\\sqrt{\\sigma_B^2 + \\epsilon}} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(x\\) \u662f\u8f93\u5165\u7684\u6fc0\u6d3b\u503c\u3002</li> <li>\\(\\mu_B\\) \u548c \\(\\sigma_B^2\\) \u5206\u522b\u662f\u5f53\u524d\u6279\u6b21\u6fc0\u6d3b\u503c\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002</li> <li>\\(\\epsilon\\) \u662f\u4e00\u4e2a\u5c0f\u7684\u6b63\u6570\uff0c\u7528\u4e8e\u907f\u514d\u9664\u96f6\u9519\u8bef\u3002</li> </ul> <p></p> <p><code>\u4f7f\u7f51\u7edc\u66f4\u5bb9\u6613\u8bad\u7ec3\uff0c\u52a0\u901f\u6a21\u578b\u7684\u6536\u655b\uff0c\u5e76\u63d0\u9ad8\u6a21\u578b\u7684\u7a33\u5b9a\u6027\u548c\u6027\u80fd</code></p> <ul> <li><code>\u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb\uff08Internal Covariate Shift</code>\uff09: \u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb\u6307\u7684\u662f\uff0c\u7531\u4e8e\u4e0a\u4e00\u5c42\u53c2\u6570\u7684\u53d8\u5316\u5bfc\u81f4\u5f53\u524d\u5c42\u8f93\u5165\u5206\u5e03\u7684\u53d8\u5316\uff0c\u8fdb\u800c\u4f7f\u5f97\u6a21\u578b\u7684\u8bad\u7ec3\u66f4\u52a0\u56f0\u96be\u3002\u6279\u91cf\u5f52\u4e00\u5316\u901a\u8fc7\u6807\u51c6\u5316\u8f93\u5165\u6570\u636e\uff0c\u51cf\u5c11\u4e86\u8fd9\u79cd\u504f\u79fb\uff0c\u4f7f\u5f97\u7f51\u7edc\u6bcf\u4e00\u5c42\u7684\u8f93\u5165\u4fdd\u6301\u7a33\u5b9a\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4f18\u5316\u6548\u7387\u3002</li> <li>\u901a\u8fc7\u5f15\u5165\u6279\u91cf\u5f52\u4e00\u5316\uff0c\u7f51\u7edc\u7684\u6bcf\u4e00\u5c42\u80fd\u591f\u5904\u7406\u7a33\u5b9a\u4e14\u5f52\u4e00\u5316\u7684\u8f93\u5165\uff0c<code>\u51cf\u5c11\u4e86\u8bad\u7ec3\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u95ee\u9898</code>\u3002\u6b63\u5982\u56fe\u793a\u6240\u793a\uff0c\u6279\u91cf\u5f52\u4e00\u5316\u52a0\u901f\u4e86\u7f51\u7edc\u7684\u6536\u655b\uff0c\u4f7f\u5f97\u8bad\u7ec3\u66f4\u4e3a\u9ad8\u6548\u3002</li> </ul>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5168\u8fde\u63a5\u5c42","title":"\u5168\u8fde\u63a5\u5c42","text":"<p>\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\uff0c\u795e\u7ecf\u5143\u5bf9\u4e8e\u524d\u4e00\u5c42\u4e2d\u7684\u6240\u6709\u6fc0\u6d3b\u6570\u636e\u662f\u5168\u90e8\u8fde\u63a5\u7684\uff0c\u8fd9\u4e2a\u5e38\u89c4\u795e\u7ecf\u7f51\u7edc\u4e2d\u4e00\u6837\u3002\u5b83\u4eec\u7684\u6fc0\u6d3b\u53ef\u4ee5\u5148\u7528\u77e9\u9635\u4e58\u6cd5\uff0c\u518d\u52a0\u4e0a\u504f\u5dee\u3002\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b\u795e\u7ecf\u7f51\u7edc\u7ae0\u8282\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u628a\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u6210\u5377\u79ef\u5c42","title":"\u628a\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u6210\u5377\u79ef\u5c42","text":"<p>\u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u4e4b\u95f4\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u53ea\u4e0e\u8f93\u5165\u6570\u636e\u4e2d\u7684\u4e00\u4e2a\u5c40\u90e8\u533a\u57df\u8fde\u63a5\uff0c\u5e76\u4e14\u5728\u5377\u79ef\u5217\u4e2d\u7684\u795e\u7ecf\u5143\u5171\u4eab\u53c2\u6570\u3002\u4f46\u5176\u672c\u8d28\u90fd\u662f\u901a\u8fc7\u6743\u91cd\u4e0e\u8f93\u5165\u8ba1\u7b97\u70b9\u79ef\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5728\u7406\u8bba\u4e0a\u548c\u5b9e\u8df5\u4e2d\u5c06\u4e8c\u8005\u76f8\u4e92\u8f6c\u5316\u3002</p> <ul> <li>\u5377\u79ef\u5c42\u8f6c\u5316\u4e3a\u5168\u8fde\u63a5\u5c42</li> </ul> <p>\u5377\u79ef\u5c42\u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a\u7b49\u6548\u7684\u5168\u8fde\u63a5\u5c42\u3002\u8fd9\u79cd\u8f6c\u5316\u7684\u6743\u91cd\u77e9\u9635\u901a\u5e38\u662f\u5de8\u5927\u7684\u3001\u7a00\u758f\u7684\uff0c\u5e76\u4e14\u5177\u6709\u5757\u7ed3\u6784\u3002\u5176\u4e2d\u7684\u5927\u90e8\u5206\u5757\u4e2d\u5143\u7d20\u76f8\u7b49\uff0c\u53cd\u6620\u4e86\u5377\u79ef\u5c42\u7684\u5c40\u90e8\u8fde\u63a5\u548c\u53c2\u6570\u5171\u4eab\u7279\u6027\u3002\u9664\u4e86\u67d0\u4e9b\u7279\u5b9a\u5757\uff08\u8fd9\u662f\u56e0\u4e3a\u6709\u5c40\u90e8\u8fde\u63a5\uff09\uff0c\u5176\u4f59\u90e8\u5206\u90fd\u662f\u96f6\u3002</p> <ul> <li>\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42</li> </ul> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5c06\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u66f4\u52a0\u6709\u7528\uff0c\u5c24\u5176\u5728\u5904\u7406\u4e0d\u540c\u8f93\u5165\u5c3a\u5bf8\u7684\u60c5\u51b5\u4e0b\u3002\u4e00\u4e2a\u5178\u578b\u7684\u5168\u8fde\u63a5\u5c42\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c<code>\u5176\u4e2d\u6ee4\u6ce2\u5668\u7684\u5c3a\u5bf8\u4e0e\u8f93\u5165\u6570\u636e\u7684\u7a7a\u95f4\u5c3a\u5bf8\u76f8\u540c</code>\uff0c\u8fd9\u6837\u5377\u79ef\u64cd\u4f5c\u4ec5\u4ea7\u751f\u4e00\u4e2a\u5355\u4e00\u7684\u8f93\u51fa\u3002</p> <p>\u6211\u4eec\u4ee5 AlexNet \u4e3a\u4f8b\uff0c\u5047\u8bbe\u7f51\u7edc\u7684\u8f93\u5165\u662f\u4e00\u5f20\u5c3a\u5bf8\u4e3a <code>224x224x3</code> \u7684\u56fe\u50cf\uff0c\u7ecf\u8fc7\u591a\u5c42\u5377\u79ef\u548c\u6c60\u5316\u64cd\u4f5c\u540e\uff0c\u6700\u7ec8\u8f93\u51fa\u7684\u6fc0\u6d3b\u6570\u636e\u4f53\u7684\u5c3a\u5bf8\u4e3a <code>7x7x512</code>(\u901a\u8fc7\u4f7f\u7528 5 \u4e2a\u6c60\u5316\u5c42\u6765\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u7a7a\u95f4\u4e0a\u7684\u964d\u91c7\u6837\uff0c\u6bcf\u6b21\u5c3a\u5bf8\u4e0b\u964d\u4e00\u534a\uff0c\u6240\u4ee5\u6700\u7ec8\u7a7a\u95f4\u5c3a\u5bf8\u4e3a \\(224/2/2/2/2/2 = 7\\))\u3002\u63a5\u4e0b\u6765\u662f\u4e09\u5c42\u5168\u8fde\u63a5\u5c42\uff1a</p> <p>\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\uff1a4096 \u4e2a\u795e\u7ecf\u5143\uff0c\u63a5\u6536 <code>7x7x512</code> \u7684\u8f93\u5165\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42\uff1a4096 \u4e2a\u795e\u7ecf\u5143\uff0c\u63a5\u6536\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u8f93\u51fa\u3002</p> <p>\u7b2c\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\uff1a1000 \u4e2a\u795e\u7ecf\u5143\uff0c\u8f93\u51fa\u7c7b\u522b\u6982\u7387\u3002</p> <ol> <li> <p>\u5c06\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42</p> </li> <li> <p>\u539f\u59cb\u5168\u8fde\u63a5\u5c42\uff1a\u8f93\u5165\u5c3a\u5bf8\u4e3a <code>7x7x512</code>\uff0c\u8f93\u51fa\u4e3a <code>4096</code> \u4e2a\u795e\u7ecf\u5143\u3002</p> </li> <li> <p>\u8f6c\u5316\u540e\u7684\u5377\u79ef\u5c42\uff1a\u5377\u79ef\u6838\u5927\u5c0f\u8bbe\u7f6e\u4e3a <code>F=7</code>\uff0c\u6b65\u957f\u4e3a <code>1</code>\uff0c\u4e0d\u4f7f\u7528\u586b\u5145\uff08padding\uff09\u3002\u5377\u79ef\u6838\u7684\u6df1\u5ea6\u4e0e\u8f93\u5165\u7684\u6df1\u5ea6\u4e00\u81f4\uff0c\u5373 <code>512</code>\u3002</p> <p>\u7531\u4e8e\u5377\u79ef\u6838\u8986\u76d6\u4e86\u6574\u4e2a\u8f93\u5165\u5e73\u9762\uff08\u5373 <code>7x7</code> \u7684\u533a\u57df\uff09\uff0c\u5377\u79ef\u64cd\u4f5c\u53ea\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\uff0c\u56e0\u6b64\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\u4e3a <code>1x1</code>\uff0c\u6df1\u5ea6\u4e3a <code>4096</code>\uff0c\u5373 <code>1x1x4096</code>\u3002</p> </li> <li> <p>\u5c06\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42</p> </li> <li> <p>\u539f\u59cb\u5168\u8fde\u63a5\u5c42\uff1a\u8f93\u5165\u4e3a\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684 <code>4096</code> \u4e2a\u795e\u7ecf\u5143\uff0c\u8f93\u51fa\u4e5f\u662f <code>4096</code> \u4e2a\u795e\u7ecf\u5143\u3002</p> </li> <li> <p>\u8f6c\u5316\u540e\u7684\u5377\u79ef\u5c42\uff1a\u5377\u79ef\u6838\u5927\u5c0f\u8bbe\u7f6e\u4e3a <code>F=1</code>\uff0c\u6b65\u957f\u4e3a <code>1</code>\uff0c\u8f93\u5165\u6df1\u5ea6\u4e3a <code>4096</code>\uff0c\u8f93\u51fa\u6df1\u5ea6\u4e3a <code>4096</code>\u3002</p> <p>\u7531\u4e8e\u5377\u79ef\u6838\u7684\u5927\u5c0f\u4e3a <code>1x1</code>\uff0c\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\u4ecd\u4e3a <code>1x1</code>\uff0c\u6df1\u5ea6\u4e3a <code>4096</code>\uff0c\u5373 <code>1x1x4096</code>\u3002</p> </li> <li> <p>\u5c06\u7b2c\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42</p> </li> <li> <p>\u539f\u59cb\u5168\u8fde\u63a5\u5c42\uff1a\u8f93\u5165\u4e3a\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42\u7684 <code>4096</code> \u4e2a\u795e\u7ecf\u5143\uff0c\u8f93\u51fa\u4e3a <code>1000</code> \u4e2a\u795e\u7ecf\u5143\uff08\u7528\u4e8e\u5206\u7c7b\uff09\u3002</p> </li> <li> <p>\u8f6c\u5316\u540e\u7684\u5377\u79ef\u5c42\uff1a\u5377\u79ef\u6838\u5927\u5c0f\u8bbe\u7f6e\u4e3a <code>F=1</code>\uff0c\u6b65\u957f\u4e3a <code>1</code>\uff0c\u8f93\u5165\u6df1\u5ea6\u4e3a <code>4096</code>\uff0c\u8f93\u51fa\u6df1\u5ea6\u4e3a <code>1000</code>\u3002</p> <p>\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\u4ecd\u4e3a <code>1x1</code>\uff0c\u6df1\u5ea6\u4e3a <code>1000</code>\uff0c\u5373 <code>1x1x1000</code>\u3002</p> </li> </ol> <p><code>\u4e3a\u4ec0\u4e48\u8981\u5c06\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42</code></p> <ul> <li> <p>\u5047\u8bbe\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u4e3a <code>224x224x3</code> \u7684\u56fe\u50cf\uff0c\u7ecf\u8fc7\u591a\u5c42\u5377\u79ef\u548c\u6c60\u5316\u64cd\u4f5c\u540e\uff0c\u8f93\u51fa\u5c3a\u5bf8\u4e3a <code>7x7x512</code>\u3002\u5982\u679c\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u5206\u7c7b\uff0c\u901a\u5e38\u9700\u8981\u5c06\u8fd9\u4e2a <code>7x7x512</code> \u7684\u6fc0\u6d3b\u6570\u636e\u5c55\u5e73\u6210\u4e00\u7ef4\u5411\u91cf\uff0c\u7136\u540e\u8fdb\u884c\u5206\u7c7b\u3002\u4f46\u8fd9\u79cd\u5c55\u5e73\u64cd\u4f5c\u635f\u5931\u4e86\u7a7a\u95f4\u4fe1\u606f\uff0c\u540c\u65f6\u8ba1\u7b97\u6548\u7387\u4f4e\u4e0b\u3002</p> </li> <li> <p>\u901a\u8fc7\u5c06\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42\uff0c\u53ef\u4ee5\u907f\u514d\u5c55\u5e73\u64cd\u4f5c\uff0c\u5e76\u4e14\u5141\u8bb8\u7f51\u7edc\u5904\u7406\u4e0d\u540c\u5c3a\u5bf8\u7684\u8f93\u5165\u56fe\u50cf\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c24\u5176\u9002\u7528\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff1a\u5e0c\u671b\u5728\u66f4\u5927\u5c3a\u5bf8\u7684\u56fe\u50cf\u4e0a\u6ed1\u52a8\u8f83\u5c0f\u7684\u7a97\u53e3\uff08\u4f8b\u5982 <code>224x224</code>\uff09\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u5728\u4e00\u6b21\u524d\u5411\u4f20\u64ad\u4e2d\u83b7\u5f97\u591a\u4e2a\u4f4d\u7f6e\u7684\u5206\u7c7b\u7ed3\u679c\u3002</p> </li> </ul> <p><code>\u5177\u4f53\u4f8b\u5b50\u5206\u6790</code></p> <p>\u5047\u8bbe\u73b0\u5728\u7684\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u4e3a <code>384x384x3</code>\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528 <code>224x224</code> \u5c3a\u5bf8\u7684\u6ed1\u52a8\u7a97\u53e3\u4ee5\u6b65\u957f <code>32</code> \u5728\u8fd9\u5f20\u5927\u56fe\u4e0a\u6ed1\u52a8\uff0c\u5e76\u83b7\u5f97\u5404\u4e2a\u7a97\u53e3\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u57fa\u4e8e\u4e4b\u524d\u63d0\u5230\u7684\u8f6c\u6362\u65b9\u6cd5\uff1a</p> <ol> <li>\u8f6c\u6362\u524d\uff1a\u4f20\u7edf\u65b9\u6cd5\u9700\u8981\u5bf9\u6bcf\u4e2a <code>224x224</code> \u7684\u7a97\u53e3\u5206\u522b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\uff0c\u5171\u9700 36 \u6b21\u72ec\u7acb\u7684\u8ba1\u7b97\uff08\u5bf9\u5e94 <code>6x6</code> \u4e2a\u4f4d\u7f6e\uff09\u3002</li> <li> <p>\u8f6c\u6362\u540e\uff1a\u5c06\u5168\u8fde\u63a5\u5c42\u8f6c\u5316\u4e3a\u5377\u79ef\u5c42\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9\u6574\u4e2a <code>384x384</code> \u7684\u56fe\u50cf\u8fdb\u884c\u4e00\u6b21\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\u3002\u5982\u679c 224x224 \u7684\u8f93\u5165\u56fe\u7247\u7ecf\u8fc7\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u4e4b\u540e\u5f97\u5230\u4e86 [7x7x512] \u7684\u6570\u7ec4\uff0c\u90a3\u4e48\uff0c384x384 \u7684\u5927\u56fe\u7247\u76f4\u63a5\u7ecf\u8fc7\u540c\u6837\u7684\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u4e4b\u540e\u4f1a\u5f97\u5230 [12x12x512] \u7684\u6570\u7ec4\uff08\u56e0\u4e3a\u9014\u5f84 5 \u4e2a\u6c60\u5316\u5c42\uff0c\u5c3a\u5bf8\u53d8\u4e3a 384/2/2/2/2/2 = 12\uff09\u3002\u901a\u8fc7\u5377\u79ef\u5c42\u66ff\u4ee3\u5168\u8fde\u63a5\u5c42\u540e\uff0c\u53ef\u4ee5\u5f97\u5230 <code>6x6x1000</code>\uff08\\(\\dfrac{12-7}{1} + 1 = 6\\)\uff09 \u7684\u8f93\u51fa\uff0c\u8868\u793a\u6bcf\u4e2a <code>224x224</code> \u7a97\u53e3\u7684\u5206\u7c7b\u5f97\u5206\u3002</p> </li> <li> <p><code>\u8fd9\u79cd\u8f6c\u5316\u7684\u6700\u5927\u4f18\u52bf\u5728\u4e8e\u8ba1\u7b97\u6548\u7387\u3002\u539f\u672c\u9700\u8981\u8fdb\u884c 36 \u6b21\u72ec\u7acb\u8ba1\u7b97\u7684\u64cd\u4f5c\uff0c\u8f6c\u5316\u540e\u53ea\u9700\u4e00\u6b21\u524d\u5411\u4f20\u64ad\u5373\u53ef\u5b8c\u6210\u3002\u901a\u8fc7\u5171\u4eab\u8ba1\u7b97\u8d44\u6e90\uff0c\u907f\u514d\u4e86\u91cd\u590d\u8ba1\u7b97\uff0c\u5927\u5e45\u5ea6\u63d0\u9ad8\u4e86\u8ba1\u7b97\u6548\u7387\u3002</code></p> </li> </ol>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u662f\u7531\u4e09\u79cd\u5c42\u6784\u6210\uff1a<code>\u5377\u79ef\u5c42</code>\uff0c<code>\u6c60\u5316\u5c42</code>\uff08\u9664\u975e\u7279\u522b\u8bf4\u660e\uff0c\u4e00\u822c\u5c31\u662f<code>\u6700\u5927\u503c\u6c60\u5316</code>\uff09\u548c<code>\u5168\u8fde\u63a5\u5c42</code>\uff08\u7b80\u79f0 <code>FC</code>\uff09\u3002ReLU \u6fc0\u6d3b\u51fd\u6570\u4e5f\u5e94\u8be5\u7b97\u662f\u662f\u4e00\u5c42\uff0c\u5b83\u9010\u5143\u7d20\u5730\u8fdb\u884c\u6fc0\u6d3b\u51fd\u6570\u64cd\u4f5c\u3002\u5728\u672c\u8282\u4e2d\u5c06\u8ba8\u8bba\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u8fd9\u4e9b\u5c42\u901a\u5e38\u662f\u5982\u4f55\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u3002</p>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5c42\u7684\u6392\u5217\u89c4\u5f8b","title":"\u5c42\u7684\u6392\u5217\u89c4\u5f8b","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6700\u5e38\u89c1\u7684\u5f62\u5f0f\u5c31\u662f\u5c06<code>\u4e00\u4e9b\u5377\u79ef\u5c42\u548c ReLU \u5c42\u653e\u5728\u4e00\u8d77\uff0c\u5176\u540e\u7d27\u8ddf\u6c60\u5316\u5c42\uff0c\u7136\u540e\u91cd\u590d\u5982\u6b64\u76f4\u5230\u56fe\u50cf\u5728\u7a7a\u95f4\u4e0a\u88ab\u7f29\u5c0f\u5230\u4e00\u4e2a\u8db3\u591f\u5c0f\u7684\u5c3a\u5bf8</code>\uff0c\u5728\u67d0\u4e2a\u5730\u65b9\u8fc7\u6e21\u6210\u6210\u5168\u8fde\u63a5\u5c42\u4e5f\u8f83\u4e3a\u5e38\u89c1\u3002\u6700\u540e\u7684\u5168\u8fde\u63a5\u5c42\u5f97\u5230\u8f93\u51fa\uff0c\u6bd4\u5982\u5206\u7c7b\u8bc4\u5206\u7b49\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6700\u5e38\u89c1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p>INPUT -&gt; [[CONV -&gt; RELU] _ N -&gt; POOL?] _ M -&gt; [FC -&gt; RELU] * K -&gt; FC</p> <ul> <li> <p>N \u662f\u5377\u79ef\u5c42\u548c ReLU \u5c42\u7ec4\u5408\u7684\u91cd\u590d\u6b21\u6570\u3002</p> </li> <li> <p>POOL? \u8868\u793a\u662f\u5426\u4f7f\u7528\u6c60\u5316\u5c42\u3002</p> </li> <li> <p>M \u662f\u5377\u79ef-\u6c60\u5316\u7ec4\u5408\u7684\u91cd\u590d\u6b21\u6570\u3002</p> </li> <li> <p>K \u662f\u5168\u8fde\u63a5\u5c42\u7684\u91cd\u590d\u6b21\u6570\u3002</p> </li> </ul> <p>\u5e38\u89c1\u7684 CNN \u7ed3\u6784\u5b9e\u4f8b</p> <ul> <li>INPUT -&gt; FC, \u6700\u7b80\u5355\u7684\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u6027\u5206\u7c7b\u5668\uff0c\u6b64\u5904 N = M = K = 0\u3002</li> <li>INPUT -&gt; CONV -&gt; RELU -&gt; FC</li> <li>INPUT -&gt; [CONV -&gt; RELU -&gt; POOL] *2 -&gt; FC -&gt; RELU -&gt; FC\u3002\u6b64\u5904\u5728\u6bcf\u4e2a\u6c60\u5316\u5c42\u4e4b\u95f4\u6709\u4e00\u4e2a\u5377\u79ef\u5c42\u3002</li> <li>INPUT -&gt; [CONV -&gt; RELU -&gt; CONV -&gt; RELU -&gt; POOL] 3 -&gt; [FC -&gt; RELU] 2 -&gt; FC\u3002\u6b64\u5904\u6bcf\u4e2a\u6c60\u5316\u5c42\u524d\u6709\u4e24\u4e2a\u5377\u79ef\u5c42\uff0c\u8fd9\u4e2a\u601d\u8def\u9002\u7528\u4e8e\u66f4\u5927\u66f4\u6df1\u7684\u7f51\u7edc\uff0c\u56e0\u4e3a\u5728\u6267\u884c\u5177\u6709\u7834\u574f\u6027\u7684\u6c60\u5316\u64cd\u4f5c\u524d\uff0c\u591a\u91cd\u7684\u5377\u79ef\u5c42\u53ef\u4ee5\u4ece\u8f93\u5165\u6570\u636e\u4e2d\u5b66\u4e60\u5230\u66f4\u591a\u7684\u590d\u6742\u7279\u5f81\u3002</li> </ul> <p><code>\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u591a\u4e2a\u5c0f\u6ee4\u6ce2\u5668\uff08\u5982 3x3\uff09\u7684\u5377\u79ef\u5c42\u7ec4\u5408\u6bd4\u4f7f\u7528\u5355\u4e2a\u5927\u6ee4\u6ce2\u5668\uff08\u5982 7x7\uff09\u7684\u5377\u79ef\u5c42\u6709\u660e\u663e\u7684\u4f18\u52bf\u3002\u8fd9\u79cd\u505a\u6cd5\u4e0d\u4ec5\u63d0\u9ad8\u4e86\u7279\u5f81\u63d0\u53d6\u7684\u80fd\u529b\uff0c\u8fd8\u80fd\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570\u6570\u91cf\u3002</code></p> <ol> <li>\u611f\u53d7\u91ce\u7684\u6269\u5c55</li> </ol> <p>\u901a\u8fc7\u5806\u53e0 3 \u4e2a 3x3 \u7684\u5377\u79ef\u5c42\uff0c\u9010\u5c42\u6269\u5c55\u611f\u53d7\u91ce\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u4e3a 3x3\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u6269\u5927\u4e3a 5x5\uff08\u76f8\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u4f53\uff09\u3002</li> <li>\u7b2c\u4e09\u4e2a\u5377\u79ef\u5c42\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u8fdb\u4e00\u6b65\u6269\u5927\u5230 7x7\u3002</li> </ul> <p>\u4e0e\u6b64\u76f8\u6bd4\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a 7x7 \u7684\u5377\u79ef\u5c42\uff0c\u5176\u611f\u53d7\u91ce\u867d\u7136\u4e5f\u662f 7x7\uff0c\u4f46\u65e0\u6cd5\u5145\u5206\u5229\u7528\u591a\u5c42\u5377\u79ef\u5e26\u6765\u7684\u975e\u7ebf\u6027\u7279\u5f81\u63d0\u53d6\u80fd</p> <ol> <li>\u7279\u5f81\u63d0\u53d6\u80fd\u529b</li> </ol> <p>\u591a\u4e2a\u5c0f\u6ee4\u6ce2\u5668\u5377\u79ef\u5c42\u7684\u7ec4\u5408\u7531\u4e8e\u5728<code>\u6bcf\u4e00\u5c42\u540e\u9762\u90fd\u52a0\u5165\u4e86\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570</code>\uff08\u5982 ReLU\uff09\uff0c<code>\u4f7f\u5f97\u7f51\u7edc\u80fd\u591f\u5b66\u4e60\u5230\u66f4\u590d\u6742\u3001\u66f4\u6df1\u5c42\u7684\u7279\u5f81</code>\u3002\u5355\u4e2a\u5927\u6ee4\u6ce2\u5668\u5377\u79ef\u5c42\u65e0\u6cd5\u63d0\u4f9b\u8fd9\u79cd\u5c42\u6b21\u5316\u7684\u7279\u5f81\u8868\u8fbe\u80fd\u529b\u3002</p> <ol> <li>\u53c2\u6570\u6570\u91cf\u51cf\u5c11</li> </ol> <p>\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u4f7f\u7528\u591a\u4e2a\u5c0f\u6ee4\u6ce2\u5668\uff08\u5982 3x3\uff09\u7684\u5377\u79ef\u5c42\u7ec4\u5408\u76f8\u6bd4\u4e8e\u4f7f\u7528\u5355\u4e2a\u5927\u6ee4\u6ce2\u5668\uff08\u5982 7x7\uff09\u7684\u5377\u79ef\u5c42\u5177\u6709\u660e\u663e\u7684\u53c2\u6570\u91cf\u51cf\u5c11\u4f18\u52bf\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u79cd\u53c2\u6570\u51cf\u5c11\u7684\u8be6\u7ec6\u5206\u6790\u3002</p> <p>\u53c2\u6570\u8ba1\u7b97\u65b9\u5f0f</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u5047\u8bbe\u8f93\u5165\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u4e3a \\(C_{\\text{in}}\\) \uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u4e3a \\(C_{\\text{out}}\\) \uff0c\u6ee4\u6ce2\u5668\u7684\u5c3a\u5bf8\u4e3a \\(F \\times F\\) \uff1a</p> <ul> <li>\u6bcf\u4e2a\u5377\u79ef\u6838\u7684\u53c2\u6570\u6570\u91cf\u4e3a \\(F \\times F \\times C_{\\text{in}}\\) \u3002</li> <li>\u5377\u79ef\u5c42\u7684\u603b\u53c2\u6570\u6570\u91cf\u4e3a $C{\\text{out}} \\times F \\times F \\times C} $\u3002</li> </ul> <p>\u5927\u6ee4\u6ce2\u5668 vs. \u5c0f\u6ee4\u6ce2\u5668</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5176\u8f93\u5165\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u4e3a $C_{\\text{in}} $\uff0c\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u4e3a  \\(C_{\\text{out}}\\) \uff0c\u5206\u522b\u8003\u8651\u4f7f\u7528\u5355\u4e2a \\(7\\times7\\) \u7684\u5927\u6ee4\u6ce2\u5668\u548c\u4e09\u4e2a \\(3\\times3\\) \u7684\u5c0f\u6ee4\u6ce2\u5668\u3002</p> <ul> <li> <p>\u5355\u4e2a 7x7 \u6ee4\u6ce2\u5668\u7684\u53c2\u6570\u91cf</p> <ul> <li> <p>\u6ee4\u6ce2\u5668\u5927\u5c0f\uff1a7x7</p> </li> <li> <p>\u53c2\u6570\u6570\u91cf\uff1a $ C{\\text{out}} \\times 7 \\times 7 \\times C} = C{\\text{out}} \\times 49 \\times C}$</p> </li> </ul> </li> <li> <p>\u4e09\u4e2a 3x3 \u6ee4\u6ce2\u5668\u7684\u53c2\u6570\u91cf</p> <p>\u5982\u679c\u4f7f\u7528\u4e09\u4e2a 3x3 \u7684\u5377\u79ef\u5c42\uff0c\u6bcf\u4e2a\u5377\u79ef\u5c42\u5c06\u4ece\u4e0a\u4e00\u4e2a\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u901a\u9053\u4f5c\u4e3a\u8f93\u5165\u901a\u9053\uff1a</p> <ul> <li>\u7b2c\u4e00\u5c42\uff1a\u8f93\u5165\u901a\u9053\u6570\u4e3a \\(C_{\\text{in}}\\) \uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3a \\(C_{\\text{out}}\\)</li> </ul> <p>\u53c2\u6570\u6570\u91cf\uff1a \\(C_{\\text{out}} \\times 3 \\times 3 \\times C_{\\text{in}} = C_{\\text{out}} \\times 9 \\times C_{\\text{in}}\\)</p> <ul> <li>\u7b2c\u4e8c\u5c42\uff1a\u8f93\u5165\u901a\u9053\u6570\u4e3a $ C*{\\text{out}}$ \uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3a \\(C*{\\text{out}}\\)</li> </ul> <p>\u53c2\u6570\u6570\u91cf\uff1a \\(C_{\\text{out}} \\times 3 \\times 3 \\times C_{\\text{out}} = C_{\\text{out}}^2 \\times 9\\)</p> <ul> <li>\u7b2c\u4e09\u5c42\uff1a\u8f93\u5165\u901a\u9053\u6570\u4e3a \\(C_{\\text{out}}\\) \uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3a \\(C_{\\text{out}}\\)</li> </ul> <p>\u53c2\u6570\u6570\u91cf\uff1a \\(C_{\\text{out}} \\times 3 \\times 3 \\times C_{\\text{out}} = C_{\\text{out}}^2 \\times 9\\)</p> <p>\u4e09\u4e2a 3x3 \u5377\u79ef\u5c42\u7684\u603b\u53c2\u6570\u6570\u91cf\u4e3a\uff1a  [ \\(9 \\times C_{\\text{in}} \\times C_{\\text{out}} + 9 \\times C_{\\text{out}}^2 + 9 \\times C_{\\text{out}}^2 = 9 \\times C_{\\text{in}} \\times C_{\\text{out}} + 18 \\times C_{\\text{out}}^2\\) ]</p> </li> </ul>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u5c42\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u89c4\u5f8b","title":"\u5c42\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u89c4\u5f8b","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\u7684\u5c42\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u662f\u8bbe\u8ba1\u7f51\u7edc\u67b6\u6784\u65f6\u7684\u5173\u952e\u56e0\u7d20\uff0c\u76f4\u63a5\u5f71\u54cd\u6a21\u578b\u7684\u8868\u73b0\u548c\u8ba1\u7b97\u6548\u7387\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e9b\u8bbe\u7f6e\u89c4\u5f8b\u7684\u8be6\u7ec6\u5206\u6790\uff1a</p> <ol> <li>\u8f93\u5165\u5c42\u7684\u5c3a\u5bf8</li> </ol> <p>\u8f93\u5165\u5c42\u7684\u5c3a\u5bf8\u901a\u5e38\u8bbe\u7f6e\u4e3a 32\u300164\u300196\u3001224 \u7b49\uff0c\u8fd9\u4e9b\u5c3a\u5bf8\u7684<code>\u5171\u540c\u7279\u70b9\u662f\u80fd\u88ab 2 \u591a\u6b21\u6574\u9664</code>\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u5728 CNN \u4e2d\uff0c\u7ecf\u8fc7<code>\u591a\u6b21\u6c60\u5316\u64cd\u4f5c</code>\u540e\uff0c\u56fe\u50cf\u7684\u7a7a\u95f4\u5c3a\u5bf8\u9010\u6e10\u51cf\u5c0f\uff0c\u56e0\u6b64\u521d\u59cb\u5c3a\u5bf8\u80fd\u88ab 2 \u6574\u9664\u53ef\u4ee5\u4f7f\u7f51\u7edc\u7ed3\u6784\u66f4\u5bb9\u6613\u8bbe\u8ba1\uff0c\u5e76\u4fdd\u6301\u5bf9\u79f0\u6027\u3002\u4f8b\u5982\uff0c\u5178\u578b\u7684 ImageNet \u6570\u636e\u96c6\u4f7f\u7528 224x224 \u7684\u8f93\u5165\u5c3a\u5bf8\uff0c\u8fd9\u6837\u7684\u5c3a\u5bf8\u53ef\u4ee5\u901a\u8fc7\u591a\u6b21 2x2 \u6c60\u5316\u64cd\u4f5c\u5bf9\u56fe\u50cf\u8fdb\u884c\u4e0b\u91c7\u6837\uff0c\u5e76\u6700\u7ec8\u5728\u5168\u8fde\u63a5\u5c42\u4e4b\u524d\u83b7\u5f97\u5408\u7406\u7684\u5c0f\u5c3a\u5bf8\u7279\u5f81\u56fe\u3002</p> <ol> <li>\u5377\u79ef\u5c42\u7684\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u548c\u6b65\u957f:<code>\u5c0f\u5c3a\u5bf8\u6ee4\u6ce2\u5668\u4e0e\u96f6\u586b\u5145</code></li> </ol> <ul> <li>\u6ee4\u6ce2\u5668\u5c3a\u5bf8\uff1a\u5377\u79ef\u5c42\u901a\u5e38\u4f7f\u7528 3x3 \u6216\u6700\u591a 5x5 \u7684\u5c0f\u6ee4\u6ce2\u5668\u3002\u8f83\u5c0f\u7684\u6ee4\u6ce2\u5668\u5728\u63d0\u53d6\u5c40\u90e8\u7279\u5f81\u65f6\u5177\u6709\u8f83\u9ad8\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u591a\u5c42\u5377\u79ef\u6765\u589e\u52a0\u7f51\u7edc\u7684\u611f\u53d7\u91ce\uff0c\u800c\u4e0d\u663e\u8457\u589e\u52a0\u53c2\u6570\u91cf\u3002</li> <li>\u6b65\u957f\u4e0e\u96f6\u586b\u5145\uff1a<code>\u6b65\u957f\u901a\u5e38\u8bbe\u7f6e\u4e3a 1</code>\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5377\u79ef\u64cd\u4f5c\u4e0d\u4f1a\u8df3\u8fc7\u4efb\u4f55\u50cf\u7d20\uff0c\u4ece\u800c\u4fdd\u7559\u66f4\u591a\u7684\u7a7a\u95f4\u4fe1\u606f\u3002\u4e3a\u4e86\u5728<code>\u5377\u79ef\u540e\u4fdd\u6301\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\u76f8\u540c</code>\uff0c\u901a\u5e38\u4f1a\u5728\u8f93\u5165\u6570\u636e\u5468\u56f4\u8fdb\u884c\u96f6\u586b\u5145\uff08padding\uff09\u3002\u5f53\u6ee4\u6ce2\u5668\u5c3a\u5bf8\u4e3a \\(F\\) \u65f6\uff0c\u4f7f\u7528 \\(P = \\dfrac{F-1}{2}\\) \u7684\u96f6\u586b\u5145\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u8f93\u51fa\u7684\u7a7a\u95f4\u5c3a\u5bf8\u4e0d\u53d8(<code>\u4fdd\u7559\u8fb9\u7f18\u4fe1\u606f</code>)\u3002</li> </ul> <ol> <li>\u6c60\u5316\u5c42\u7684\u8bbe\u7f6e</li> </ol> <p>\u6c60\u5316\u5c42\u901a\u5e38\u7528\u6765\u8fdb\u884c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u964d\u91c7\u6837\uff0c\u4ece\u800c\u51cf\u5c11\u6570\u636e\u7684\u7a7a\u95f4\u5c3a\u5bf8\u548c\u8ba1\u7b97\u91cf\u3002\u5e38\u89c1\u7684\u8bbe\u7f6e\u662f\u4f7f\u7528 2x2 \u7684\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\uff0c\u6b65\u957f\u4e3a 2\uff0c<code>\u8fd9\u6837\u6bcf\u6b21\u6c60\u5316\u64cd\u4f5c\u90fd\u4f1a\u5c06\u8f93\u5165\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u51cf\u534a</code>\u3002\u8fd9\u79cd\u8bbe\u7f6e\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u8f93\u5165\u6570\u636e\u7684\u5c3a\u5bf8\uff0c\u5e76\u4fdd\u7559\u91cd\u8981\u7684\u7279\u5f81\u4fe1\u606f\u3002</p> <p>\u66f4\u5927\u7684\u6c60\u5316\u6ee4\u6ce2\u5668\uff08\u5982 3x3\uff09\u548c\u6b65\u957f\u4e5f\u5076\u5c14\u4f7f\u7528\uff0c\u4f46\u901a\u5e38<code>\u66f4\u5927\u7684\u6c60\u5316\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u8fc7\u591a\u7684\u4fe1\u606f\u635f\u5931\uff0c\u4e0d\u5229\u4e8e\u7f51\u7edc\u6027\u80fd</code>\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u66f4\u5927\u7684\u6c60\u5316\u6ee4\u6ce2\u5668\u5f88\u5c11\u4f7f\u7528\u3002</p> <p>\u5728\u8bbe\u8ba1 CNN \u65f6\uff0c\u5185\u5b58\u4f7f\u7528\u548c\u8ba1\u7b97\u5f00\u9500\u5f80\u5f80\u662f\u5fc5\u987b\u8003\u8651\u7684\u56e0\u7d20\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u7684\u521d\u59cb\u5c42\u3002\u7531\u4e8e\u521d\u59cb\u5c42\u7684\u8f93\u5165\u901a\u5e38\u4e3a\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\uff0c\u5176\u7279\u5f81\u56fe\u7684\u7a7a\u95f4\u7ef4\u5ea6\u8f83\u5927\uff0c\u56e0\u6b64\u4f1a<code>\u5360\u7528\u5927\u91cf\u5185\u5b58</code>\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\uff0c\u53ef\u4ee5<code>\u5728\u521d\u59cb\u5c42\u4f7f\u7528\u8f83\u5927\u7684\u6b65\u957f\u6216\u66f4\u5927\u7684\u6ee4\u6ce2\u5668\u5c3a\u5bf8\uff0c\u4ece\u800c\u51cf\u5c11\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u548c\u5185\u5b58\u5360\u7528\u3002</code></p> <ul> <li>ZFNet\uff1a\u5728\u7b2c\u4e00\u5c42\u4f7f\u7528 7x7 \u7684\u6ee4\u6ce2\u5668\uff0c\u6b65\u957f\u4e3a 2\uff0c\u51cf\u5c11\u4e86\u7a7a\u95f4\u5c3a\u5bf8\u548c\u5185\u5b58\u6d88\u8017\u3002</li> <li>AlexNet\uff1a\u4f7f\u7528 11x11 \u7684\u6ee4\u6ce2\u5668\uff0c\u6b65\u957f\u4e3a 4\uff0c\u4ee5\u8fdb\u4e00\u6b65\u964d\u4f4e\u521d\u59cb\u5c42\u7684\u8ba1\u7b97\u91cf\u3002</li> </ul>"},{"location":"CV/Lecture7_ConvolutionalNetworks/#\u8ba1\u7b97\u4e0a\u7684\u8003\u91cf","title":"\u8ba1\u7b97\u4e0a\u7684\u8003\u91cf","text":"<p>\u5728\u6784\u5efa\u548c\u8bad\u7ec3\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u65f6\uff0c\u5185\u5b58\u74f6\u9888\u662f\u4e00\u4e2a\u5173\u952e\u7684\u8ba1\u7b97\u8003\u8651\u56e0\u7d20\uff0c\u5c24\u5176\u5728\u4f7f\u7528\u73b0\u4ee3 GPU \u65f6\u66f4\u4e3a\u663e\u8457\u3002\u8981\u4f18\u5316\u5185\u5b58\u4f7f\u7528\uff0c\u9700\u8981\u7406\u89e3\u548c\u7ba1\u7406\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u7684\u5185\u5b58\u6d88\u8017\u6765\u6e90\uff1a</p> <ol> <li> <p>\u4e2d\u95f4\u6570\u636e\u4f53\u5c3a\u5bf8\uff08\u6fc0\u6d3b\u6570\u636e\u548c\u68af\u5ea6\uff09</p> </li> <li> <p>\u6fc0\u6d3b\u6570\u636e\u7684\u5b58\u50a8\uff1a\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684\u6fc0\u6d3b\u6570\u636e\uff08feature map\uff09\u9700\u8981\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5728\u53cd\u5411\u4f20\u64ad\u9636\u6bb5\u9700\u8981\u7528\u6765\u8ba1\u7b97\u68af\u5ea6\u3002\u901a\u5e38\uff0c\u9760\u8fd1\u8f93\u5165\u5c42\u7684\u5377\u79ef\u5c42\u4f1a\u751f\u6210\u66f4\u5927\u7684\u6fc0\u6d3b\u6570\u636e\u4f53\uff0c\u8fd9\u4e9b\u6570\u636e\u7684\u5c3a\u5bf8\u51b3\u5b9a\u4e86\u5185\u5b58\u4f7f\u7528\u7684\u4e3b\u8981\u90e8\u5206\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u53cd\u5411\u4f20\u64ad\u7684\u9700\u8981\uff0c\u4e0d\u80fd\u8f7b\u6613\u4e22\u5f03\u8fd9\u4e9b\u6570\u636e\u3002</p> </li> <li> <p>\u6d4b\u8bd5\u4f18\u5316\uff1a\u5728\u6d4b\u8bd5\u65f6\uff0c\u7f51\u7edc\u7684\u6fc0\u6d3b\u6570\u636e\u4e0d\u518d\u9700\u8981\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6bcf\u5c42\u8ba1\u7b97\u5b8c\u540e\uff0c\u4e22\u5f03\u4e0d\u518d\u9700\u8981\u7684\u524d\u5c42\u6fc0\u6d3b\u6570\u636e\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u5185\u5b58\u5360\u7528\u3002</p> </li> <li> <p>\u6765\u81ea\u53c2\u6570\u5c3a\u5bf8</p> </li> <li> <p>\u53c2\u6570\u53ca\u5176\u68af\u5ea6\uff1a\u6bcf\u4e2a\u5377\u79ef\u5c42\u548c\u5168\u8fde\u63a5\u5c42\u90fd\u5305\u542b\u53c2\u6570\uff08\u6743\u91cd\u548c\u504f\u7f6e\uff09\uff0c\u8fd9\u4e9b\u53c2\u6570\u5728\u8bad\u7ec3\u65f6\u9700\u8981\u5b58\u50a8\u5176\u68af\u5ea6\u4fe1\u606f\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5b58\u50a8\u53c2\u6570\u65f6\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u4fdd\u5b58\u8fd9\u4e9b\u68af\u5ea6\uff0c\u4ee5\u53ca\u5728\u4f7f\u7528\u5982\u52a8\u91cf\uff08momentum\uff09\u3001Adagrad\u3001RMSProp \u7b49\u4f18\u5316\u7b97\u6cd5\u65f6\u7684\u5386\u53f2\u8ba1\u7b97\u7f13\u5b58\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u9700\u6c42\u4f1a\u4f7f\u5185\u5b58\u4f7f\u7528\u8fbe\u5230\u539f\u59cb\u53c2\u6570\u91cf\u7684 3 \u500d\u751a\u81f3\u66f4\u591a\u3002</p> </li> <li> <p>\u4f18\u5316\u6280\u5de7\uff1a\u901a\u8fc7\u51cf\u5c11\u7f51\u7edc\u7684\u53c2\u6570\u6570\u91cf\uff0c\u4f8b\u5982\u4f7f\u7528\u8f83\u5c0f\u7684\u5377\u79ef\u6838\u3001\u66f4\u5c11\u7684\u901a\u9053\u6570\u3001\u6216\u79fb\u9664\u5168\u8fde\u63a5\u5c42\uff08\u5982 GoogLeNet \u6240\u505a\u7684\uff09\uff0c\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u9700\u6c42\u3002</p> </li> <li> <p>\u5176\u4ed6\u5185\u5b58\u5360\u7528</p> </li> <li>\u6279\u91cf\u6570\u636e\uff1a\u8bad\u7ec3\u65f6\uff0c\u6574\u4e2a\u6279\u6b21\u7684\u6570\u636e\u90fd\u8981\u540c\u65f6\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u8fdb\u884c\u5904\u7406\u3002\u968f\u7740\u6279\u91cf\u5927\u5c0f\uff08batch size\uff09\u7684\u589e\u52a0\uff0c\u5185\u5b58\u9700\u6c42\u4f1a\u663e\u8457\u589e\u52a0\u3002</li> </ol>"},{"location":"CV/Lecture8_CNN_Architectures/","title":"CNN Architecture","text":"<p> \u7ea6 3400 \u4e2a\u5b57  95 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 18 \u5206\u949f</p> <p>\u8fd9\u8282\u8bfe\u7684\u5185\u5bb9\u5c31\u662f\u6784\u5efa\u4e86\u4e00\u6574\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6765\u5b9e\u73b0\u56fe\u50cf\u5206\u7c7b\uff0c\u5e76\u4e14\u4ecb\u7ecd\u4e86 CNN \u53d1\u5c55\u7684\u5386\u53f2\uff082012-2019\uff09\u5e76\u4e14\u5206\u6790\u4e86\u4e0d\u540c\u7684 CNN \u67b6\u6784</p>"},{"location":"CV/Lecture8_CNN_Architectures/#cnn-\u5386\u53f2imagenet-\u6311\u6218\u8d5b\u7684\u53d1\u5c55","title":"CNN \u5386\u53f2\uff1aImageNet \u6311\u6218\u8d5b\u7684\u53d1\u5c55","text":""},{"location":"CV/Lecture8_CNN_Architectures/#lenet","title":"LeNet","text":"<p>\u662f\u7b2c\u4e00\u4e2a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u7531\u4e8e\u5f53\u65f6\u7684\u8ba1\u7b97\u80fd\u529b\u6709\u9650\uff0cLeNet \u7684\u7ed3\u6784\u76f8\u5bf9\u7b80\u5355\uff0c\u8bad\u7ec3\u7684\u6570\u636e\u96c6\u4e5f\u5f88\u5c0f\u3002<code>\u5b83\u4e3b\u8981\u5e94\u7528\u4e8e\u90ae\u5c40\u7684\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff0c\u5373MNIST\u6570\u636e\u96c6</code>\u3002\u8fd9\u4e00\u9650\u5236\u4f7f\u5f97 LeNet \u5728\u66f4\u590d\u6742\u7684\u56fe\u50cf\u4efb\u52a1\u4e0a\u5e94\u7528\u9762\u8f83\u7a84\uff0c\u4f46\u5b83\u4e3a\u540e\u7eed CNN \u7684\u53d1\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>"},{"location":"CV/Lecture8_CNN_Architectures/#alexnet","title":"AlexNet","text":"<ul> <li>\u91cd\u8981\u6027: AlexNet \u662f 2012 \u5e74\u7531 Alex Krizhevsky \u7b49\u4eba\u63d0\u51fa\u7684\uff0c\u662f\u6df1\u5ea6\u5b66\u4e60\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u7684\u91cd\u8981\u7a81\u7834\u3002AlexNet \u5728 ImageNet \u6311\u6218\u8d5b\u4e2d\u7684\u51fa\u8272\u8868\u73b0\uff0c\u4f7f\u5f97\u6df1\u5ea6\u5b66\u4e60\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u8fc5\u901f\u666e\u53ca\uff0c\u5e76\u4e14\u6807\u5fd7\u7740\u5927\u89c4\u6a21\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6210\u529f\u3002</li> </ul> <p>AlexNet \u7684\u67b6\u6784\u5982\u4e0b\uff0c\u5f53\u521d\u4e3a\u4e86\u5728\u4e24\u4e2a GPU \u4e0a\u8ba1\u7b97\uff0c\u4f7f\u7528\u4e86\u4e24\u4e2a\u901a\u9053\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u5de5\u7a0b\u6280\u5de7\uff0c\u540e\u9762\u968f\u7740 GPU \u7684\u53d1\u5c55\u548c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u51fa\u73b0\uff0c\u6211\u4eec\u65e0\u9700\u5b8c\u6210\u90a3\u4e48\u591a\u7684\u5de5\u4f5c\u91cf\u5373\u53ef\u8f7b\u677e\u590d\u73b0\u7f51\u7edc</p> <p></p> <p></p> <p>AlexNet \u7684\u7b2c\u4e00\u5c42\u662f\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u4f7f\u7528\u4e86 11x11 \u7684\u5377\u79ef\u6838\uff0c\u8f93\u51fa 64 \u4e2a\u7279\u5f81\u901a\u9053\uff0c\u6b65\u957f\u4e3a 4\uff0c\u586b\u5145\u4e3a 2\u3002\u8fd9\u4e9b\u8bbe\u8ba1\u53c2\u6570\u662f\u4e3a\u4e86\u5728\u6709\u9650\u7684\u8ba1\u7b97\u80fd\u529b\u4e0b\u5c3d\u53ef\u80fd\u4fdd\u7559\u56fe\u50cf\u7684\u7279\u5f81\u4fe1\u606f\uff0c\u5e76\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002</p> \\[ width = height =\\dfrac{(227\u221211+2\u00d72)}{4}+1 =\\dfrac{220}{4}+1 = 56 \\] <p>\u56e0\u6b64\u7b2c\u4e00\u5c42\u7684\u5377\u79ef\u5c42\u8f93\u51fa\u4e3a \\(56 \\times 56 \\times 64\\)</p> <p>\u7b2c\u4e8c\u5c42\u662f\u4e00\u4e2a\u6c60\u5316\u5c42\uff0cMax Pooling\uff0c\\(3 \\times 3\\)\uff0c\u6b65\u957f\u4e3a 2</p> \\[ width = height =\\dfrac{(56-3)}{2}+1 =\\dfrac{53}{2}+1 = 27 \\] <p>Max Pooling \u5e76\u4e0d\u6539\u53d8\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\uff0c\u56e0\u6b64\u7b2c\u4e8c\u5c42\u6c60\u5316\u5c42\u7684\u8f93\u51fa\u4e3a \\(27 \\times 27 \\times 64\\)</p> <p>\u2026\u2026\u2026\u2026</p> <p>Flatten \u64cd\u4f5c\uff1a\u5c06\u6c60\u5316\u5c42\u8f93\u51fa\u7684 <code>6\u00d76\u00d7256</code> \u5f20\u91cf\u5c55\u5e73\u4e3a\u957f\u5ea6\u4e3a <code>6\u00d76\u00d7256 = 9216</code> \u7684\u5411\u91cf\u3002</p> <p>\u5168\u8fde\u63a5\u5c42: FC1\u3001FC2\u3001FC3\uff0c\u5206\u522b\u8f93\u51fa 4096\u30014096 \u548c 1000 \u4e2a\u7279\u5f81\u3002</p> <p>Softmax \u5c42: \u5c06\u6700\u540e\u7684 1000 \u4e2a\u7279\u5f81\u8f6c\u5316\u4e3a\u6982\u7387\u5206\u5e03\uff0c\u8f93\u51fa\u5206\u7c7b\u7ed3\u679c\u3002</p> <p></p> <p>\u5185\u5b58\u5f00\u9500\u548c\u8ba1\u7b97\u590d\u6742\u5ea6</p> <ul> <li>\u5377\u79ef\u5c42\uff1a\u5377\u79ef\u5c42\u7684\u5185\u5b58\u5f00\u9500\u4e0e\u8ba1\u7b97\u590d\u6742\u5ea6\u4e3b\u8981\u7531\u5377\u79ef\u6838\u7684\u6570\u91cf\u3001\u5927\u5c0f\u3001\u8f93\u5165\u7279\u5f81\u56fe\u7684\u5927\u5c0f\u548c\u901a\u9053\u6570\u51b3\u5b9a\u3002\u5377\u79ef\u64cd\u4f5c\u7684\u672c\u8d28\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\uff0c\u5c24\u5176\u662f\u5728\u8f93\u5165\u56fe\u50cf\u5206\u8fa8\u7387\u8f83\u9ad8\u65f6\uff0c\u65e9\u671f\u5c42\u9700\u8981\u5904\u7406\u5927\u91cf\u7684\u50cf\u7d20\u70b9\u3002\u56e0\u6b64\uff0c\u5377\u79ef\u5c42\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u6d88\u8017\u8f83\u591a\u7684\u6d6e\u70b9\u6570\u8ba1\u7b97\u91cf\u3002</li> <li>\u5168\u8fde\u63a5\u5c42\uff1a\u5168\u8fde\u63a5\u5c42\u5360\u636e\u4e86\u7f51\u7edc\u4e2d\u7edd\u5927\u90e8\u5206\u7684\u53c2\u6570\u3002\u8fd9\u662f\u56e0\u4e3a\u5168\u8fde\u63a5\u5c42\u5c06\u524d\u4e00\u5c42\u7684\u6240\u6709\u7279\u5f81\u56fe\u5c55\u5f00\u6210\u4e00\u4e2a\u957f\u5411\u91cf\uff0c\u7136\u540e\u4e0e\u6743\u91cd\u77e9\u9635\u76f8\u4e58\u3002\u7531\u4e8e\u8fd9\u4e9b\u5411\u91cf\u548c\u6743\u91cd\u77e9\u9635\u901a\u5e38\u975e\u5e38\u5927\uff0c\u5bfc\u81f4\u5168\u8fde\u63a5\u5c42\u7684\u53c2\u6570\u6570\u91cf\u5e9e\u5927\u3002\u4f8b\u5982\uff0cAlexNet \u4e2d\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u4ece <code>6\u00d76\u00d7256</code> \u7684\u8f93\u5165\u751f\u6210 4096 \u4e2a\u8f93\u51fa\uff0c\u8fd9\u9700\u8981 <code>6\u00d76\u00d7256\u00d74096</code> \u4e2a\u53c2\u6570\u3002</li> </ul> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u4e09\u5c42\u5168\u8fde\u63a5\u5c42</p> <p>\u975e\u7ebf\u6027\u8868\u8fbe\u80fd\u529b\uff1a\u6bcf\u4e00\u5c42\u5168\u8fde\u63a5\u5c42\u540e\u9762\u901a\u5e38\u8ddf\u968f\u4e00\u4e2a\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\uff09\uff0c\u8fd9\u5927\u5927\u589e\u52a0\u4e86\u7f51\u7edc\u7684\u975e\u7ebf\u6027\u8868\u8fbe\u80fd\u529b\u3002\u591a\u5c42\u5168\u8fde\u63a5\u5c42\u901a\u8fc7\u4e0d\u65ad\u7ec4\u5408\u524d\u9762\u5c42\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u5f62\u6210\u66f4\u590d\u6742\u7684\u7279\u5f81\u8868\u793a\u3002</p> <p>AlexNet \u7684 PyTorch \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b</p> <pre><code>\u5bfc\u5165 pytorch \u5e93\nimport torch\n# \u5bfc\u5165 torch.nn \u6a21\u5757\nfrom torch import nn\n# nn.functional\uff1a(\u4e00\u822c\u5f15\u5165\u540e\u6539\u540d\u4e3a F)\u6709\u5404\u79cd\u529f\u80fd\u7ec4\u4ef6\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u5982\uff1aF.conv2d\nimport torch.nn.functional as F\n\n# \u5b9a\u4e49 AlexNet \u7f51\u7edc\u6a21\u578b\uff0c\u7ee7\u627f\u4e8e\u7236\u7c7b nn.Module\nclass AlexNet(nn.Module):\n    # \u5b50\u7c7b\u7ee7\u627f\u4e2d\u91cd\u65b0\u5b9a\u4e49 Module \u7c7b\u7684 __init__()\u548c forward()\u51fd\u6570\n    # init()\uff1a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7533\u660e\u6a21\u578b\u4e2d\u5404\u5c42\u7684\u5b9a\u4e49\n    def __init__(self):\n        # super\uff1a\u5f15\u5165\u7236\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u7ed9\u5b50\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\n        super(AlexNet, self).__init__()\n        # \u4e8c\u7ef4\u5377\u79ef\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 224 *224\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 55* 55\uff0c\u8f93\u5165\u901a\u9053\u4e3a 3\uff0c\u8f93\u51fa\u4e3a 96\uff0c\u5377\u79ef\u6838\u4e3a 11\uff0c\u6b65\u957f\u4e3a 4\n        self.c1 = nn.Conv2d(in_channels=3, out_channels=96, kernel_size=11, stride=4, padding=2)\n        # \u4f7f\u7528 ReLU \u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 Sigmoid \u51fd\u6570\u7b49\n        self.ReLU = nn.ReLU()\n        # MaxPool2d\uff1a\u6700\u5927\u6c60\u5316\u64cd\u4f5c\n        # \u4e8c\u7ef4\u6700\u5927\u6c60\u5316\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 55 *55\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 27* 27\uff0c\u8f93\u5165\u901a\u9053\u4e3a 96\uff0c\u8f93\u51fa\u4e3a 96\uff0c\u6c60\u5316\u6838\u4e3a 3\uff0c\u6b65\u957f\u4e3a 2\n        self.s1 = nn.MaxPool2d(kernel_size=3, stride=2)\n        # \u5377\u79ef\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 27 *27\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 27* 27\uff0c\u8f93\u5165\u901a\u9053\u4e3a 96\uff0c\u8f93\u51fa\u4e3a 256\uff0c\u5377\u79ef\u6838\u4e3a 5\uff0c\u6269\u5145\u8fb9\u7f18\u4e3a 2\uff0c\u6b65\u957f\u4e3a 1\n        self.c2 = nn.Conv2d(in_channels=96, out_channels=256, kernel_size=5, stride=1, padding=2)\n        # \u6700\u5927\u6c60\u5316\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 27 *27\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 13* 13\uff0c\u8f93\u5165\u901a\u9053\u4e3a 256\uff0c\u8f93\u51fa\u4e3a 256\uff0c\u6c60\u5316\u6838\u4e3a 3\uff0c\u6b65\u957f\u4e3a 2\n        self.s2 = nn.MaxPool2d(kernel_size=3, stride=2)\n        # \u5377\u79ef\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 13 *13\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 13* 13\uff0c\u8f93\u5165\u901a\u9053\u4e3a 256\uff0c\u8f93\u51fa\u4e3a 384\uff0c\u5377\u79ef\u6838\u4e3a 3\uff0c\u6269\u5145\u8fb9\u7f18\u4e3a 1\uff0c\u6b65\u957f\u4e3a 1\n        self.c3 = nn.Conv2d(in_channels=256, out_channels=384, kernel_size=3, stride=1, padding=1)\n        # \u5377\u79ef\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 13 *13\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 13* 13\uff0c\u8f93\u5165\u901a\u9053\u4e3a 384\uff0c\u8f93\u51fa\u4e3a 384\uff0c\u5377\u79ef\u6838\u4e3a 3\uff0c\u6269\u5145\u8fb9\u7f18\u4e3a 1\uff0c\u6b65\u957f\u4e3a 1\n        self.c4 = nn.Conv2d(in_channels=384, out_channels=384, kernel_size=3, stride=1, padding=1)\n        # \u5377\u79ef\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 13 *13\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 13* 13\uff0c\u8f93\u5165\u901a\u9053\u4e3a 384\uff0c\u8f93\u51fa\u4e3a 256\uff0c\u5377\u79ef\u6838\u4e3a 3\uff0c\u6269\u5145\u8fb9\u7f18\u4e3a 1\uff0c\u6b65\u957f\u4e3a 1\n        self.c5 = nn.Conv2d(in_channels=384, out_channels=256, kernel_size=3, stride=1, padding=1)\n        # \u6700\u5927\u6c60\u5316\u5c42\uff0c\u8f93\u5165\u5927\u5c0f\u4e3a 13 *13\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a 6* 6\uff0c\u8f93\u5165\u901a\u9053\u4e3a 256\uff0c\u8f93\u51fa\u4e3a 256\uff0c\u6c60\u5316\u6838\u4e3a 3\uff0c\u6b65\u957f\u4e3a 2\n        self.s5 = nn.MaxPool2d(kernel_size=3, stride=2)\n        # Flatten()\uff1a\u5c06\u5f20\u91cf\uff08\u591a\u7ef4\u6570\u7ec4\uff09\u5e73\u5766\u5316\u5904\u7406\uff0c\u795e\u7ecf\u7f51\u7edc\u4e2d\u7b2c 0 \u7ef4\u8868\u793a\u7684\u662f batch_size\uff0c\u6240\u4ee5 Flatten()\u9ed8\u8ba4\u4ece\u7b2c\u4e8c\u7ef4\u5f00\u59cb\u5e73\u5766\u5316\n        self.flatten = nn.Flatten()\n        # \u5168\u8fde\u63a5\u5c42\n        # Linear\uff08in_features\uff0cout_features\uff09\n        # in_features \u6307\u7684\u662f [batch_size, size] \u4e2d\u7684 size, \u5373\u6837\u672c\u7684\u5927\u5c0f\n        # out_features \u6307\u7684\u662f [batch_size\uff0coutput_size] \u4e2d\u7684 output_size\uff0c\u6837\u672c\u8f93\u51fa\u7684\u7ef4\u5ea6\u5927\u5c0f\uff0c\u4e5f\u4ee3\u8868\u4e86\u8be5\u5168\u8fde\u63a5\u5c42\u7684\u795e\u7ecf\u5143\u4e2a\u6570\n        self.f6 = nn.Linear(6*6*256, 4096)\n        self.f7 = nn.Linear(4096, 4096)\n        # \u5168\u8fde\u63a5\u5c42&amp;softmax\n        self.f8 = nn.Linear(4096, 1000)\n        self.f9 = nn.Linear(1000, 2)\n\n    # forward()\uff1a\u5b9a\u4e49\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b, \u63cf\u8ff0\u4e86\u5404\u5c42\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\n    def forward(self, x):\n        x = self.ReLU(self.c1(x))\n        x = self.s1(x)\n        x = self.ReLU(self.c2(x))\n        x = self.s2(x)\n        x = self.ReLU(self.c3(x))\n        x = self.ReLU(self.c4(x))\n        x = self.ReLU(self.c5(x))\n        x = self.s5(x)\n        x = self.flatten(x)\n        x = self.f6(x)\n         # Dropout\uff1a\u968f\u673a\u5730\u5c06\u8f93\u5165\u4e2d 50%\u7684\u795e\u7ecf\u5143\u6fc0\u6d3b\u8bbe\u4e3a 0\uff0c\u5373\u53bb\u6389\u4e86\u4e00\u4e9b\u795e\u7ecf\u8282\u70b9\uff0c\u9632\u6b62\u8fc7\u62df\u5408\n        # \u201c\u5931\u6d3b\u7684\u201d\u795e\u7ecf\u5143\u4e0d\u518d\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u5e76\u4e14\u4e0d\u53c2\u4e0e\u53cd\u5411\u4f20\u64ad\uff0c\u8fd9\u4e2a\u6280\u672f\u51cf\u5c11\u4e86\u590d\u6742\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u76f8\u4e92\u5f71\u54cd\n        x = F.dropout(x, p=0.5)\n        x = self.f7(x)\n        x = F.dropout(x, p=0.5)\n        x = self.f8(x)\n        x = F.dropout(x, p=0.5)\n        x = self.f9(x)\n        return x\n\n# \u6bcf\u4e2a python \u6a21\u5757\uff08python \u6587\u4ef6\uff09\u90fd\u5305\u542b\u5185\u7f6e\u7684\u53d8\u91cf __name__\uff0c\u5f53\u8be5\u6a21\u5757\u88ab\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\uff0c__name__ \u7b49\u4e8e\u6587\u4ef6\u540d\uff08\u5305\u542b\u540e\u7f00 .py \uff09\n# \u5982\u679c\u8be5\u6a21\u5757 import \u5230\u5176\u4ed6\u6a21\u5757\u4e2d\uff0c\u5219\u8be5\u6a21\u5757\u7684 __name__ \u7b49\u4e8e\u6a21\u5757\u540d\u79f0\uff08\u4e0d\u5305\u542b\u540e\u7f00.py\uff09\n# \u201c__main__\u201d \u59cb\u7ec8\u6307\u5f53\u524d\u6267\u884c\u6a21\u5757\u7684\u540d\u79f0\uff08\u5305\u542b\u540e\u7f00.py\uff09\n# if \u786e\u4fdd\u53ea\u6709\u5355\u72ec\u8fd0\u884c\u8be5\u6a21\u5757\u65f6\uff0c\u6b64\u8868\u8fbe\u5f0f\u624d\u6210\u7acb\uff0c\u624d\u53ef\u4ee5\u8fdb\u5165\u6b64\u5224\u65ad\u8bed\u6cd5\uff0c\u6267\u884c\u5176\u4e2d\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u53cd\u4e4b\u4e0d\u884c\nif __name__ == '__main__':\n    # rand\uff1a\u8fd4\u56de\u4e00\u4e2a\u5f20\u91cf\uff0c\u5305\u542b\u4e86\u4ece\u533a\u95f4[0, 1)\u7684\u5747\u5300\u5206\u5e03\u4e2d\u62bd\u53d6\u7684\u4e00\u7ec4\u968f\u673a\u6570\uff0c\u6b64\u5904\u4e3a\u56db\u7ef4\u5f20\u91cf\n    x = torch.rand([16, 3, 224, 224])\n    # \u6a21\u578b\u5b9e\u4f8b\u5316\n    model = MyAlexNet()\n    y = model(x)\n</code></pre> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u73b0\u4ee3\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5de5\u7a0b\u6280\u5de7\uff0c\u5982\u5bf9\u56fe\u7247\u8fdb\u884c\u7ffb\u8f6c\u3001\u88c1\u526a\uff0cDropout \u6b63\u5219\u5316\u7b49\u7b49</p> <p></p> <p></p>"},{"location":"CV/Lecture8_CNN_Architectures/#zf-net","title":"ZF Net","text":"<p>ZFNet (Zeiler and Fergus Net) \u662f\u5728 AlexNet \u57fa\u7840\u4e0a\u4f18\u5316\u7684\u7f51\u7edc\uff0c\u901a\u8fc7\u5bf9\u8d85\u53c2\u6570\u7684\u8c03\u6574\u63d0\u5347\u4e86\u6027\u80fd\u3002\u4e3b\u8981\u6539\u8fdb\u5305\u62ec\uff1a</p> <ol> <li>\u7b2c\u4e00\u5c42\u5377\u79ef\u6838\u4e0e\u6b65\u957f\u8c03\u6574\uff1aZFNet \u5c06\u7b2c\u4e00\u5c42\u5377\u79ef\u6838\u5c3a\u5bf8\u4ece AlexNet \u7684 11x11 \u7f29\u5c0f\u5230 7x7\uff0c\u540c\u65f6\u51cf\u5c0f\u6b65\u957f\u4e3a 2\uff08\u800c\u975e AlexNet \u7684 4\uff09\u3002\u8fd9\u4f7f\u5f97\u7f51\u7edc\u80fd\u591f\u4fdd\u7559\u66f4\u9ad8\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u6355\u6349\u5230\u66f4\u591a\u7684\u7ec6\u8282\u4fe1\u606f\u3002</li> <li>\u603b\u4f53\u67b6\u6784\u8c03\u6574\uff1aZFNet \u5728\u4fdd\u6301 AlexNet \u7684\u57fa\u672c\u7ed3\u6784\u7684\u540c\u65f6\uff0c\u4f18\u5316\u4e86\u5377\u79ef\u5c42\u7684\u8bbe\u7f6e\uff0c\u4f7f\u5f97\u7279\u5f81\u63d0\u53d6\u7684\u7cbe\u5ea6\u5f97\u5230\u4e86\u63d0\u5347\u3002\u8fd9\u8868\u660e\u5728\u5f53\u65f6\u7684\u8ba1\u7b97\u8d44\u6e90\u5141\u8bb8\u8303\u56f4\u5185\uff0c\u9002\u5f53\u589e\u5927\u7f51\u7edc\u89c4\u6a21\u53ef\u4ee5\u5e26\u6765\u6027\u80fd\u63d0\u5347\u3002</li> </ol>"},{"location":"CV/Lecture8_CNN_Architectures/#vgg-\u7f51\u7edc","title":"VGG \u7f51\u7edc","text":"<p>VGG \u7f51\u7edc\u901a\u8fc7 <code>\u4f7f\u7528\u66f4\u5c0f\u7684\u5377\u79ef\u6838\uff08\u59823x3\uff09\u4ee3\u66ff\u8f83\u5927\u7684\u5377\u79ef\u6838\uff08\u59825x5\uff09</code> \u5e26\u6765\u4e86\u65b0\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u8f83\u5c0f\u7684\u5377\u79ef\u6838\u5b9e\u73b0\u66f4\u6df1\u7684\u7f51\u7edc\uff0c\u540c\u65f6\u5728\u76f8\u540c\u8ba1\u7b97\u5f00\u9500\u4e0b\u63d0\u9ad8\u6a21\u578b\u7684\u8868\u73b0\u3002</p> <p></p> <p>\u66f4\u6df1\u66f4\u7a84\u7684\u7f51\u7edc\u6548\u679c\u66f4\u4f73\uff1a\u5728\u76f8\u540c\u8ba1\u7b97\u6210\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u591a\u4e2a\u5c0f\u5377\u79ef\u6838\uff08\u4f8b\u5982\u4e24\u6b21 3x3 \u5377\u79ef\uff09\u53ef\u4ee5\u5b9e\u73b0\u6bd4\u4e00\u6b21\u5927\u5377\u79ef\u6838\uff08\u5982 5x5 \u5377\u79ef\uff09\u66f4\u597d\u7684\u6548\u679c\u3002\u66f4\u6df1\u7684\u7f51\u7edc\u53ef\u4ee5\u6355\u6349\u5230\u66f4\u590d\u6742\u7684\u7279\u5f81\u3002</p> <p>\u89c4\u5219\u5316\u8bbe\u8ba1\uff1aVGG \u7684\u8bbe\u8ba1\u76f8\u6bd4\u4e8e AlexNet \u66f4\u52a0\u89c4\u5219\u5316\uff0c\u6240\u6709\u5377\u79ef\u5c42\u7684\u5377\u79ef\u6838\u5927\u5c0f\u5747\u4e3a 3x3\uff0c\u6b65\u5e45\u4e3a 1\uff0c\u586b\u5145\u4e3a 1\uff0c\u6c60\u5316\u5c42\u5747\u4e3a 2x2 \u6700\u5927\u6c60\u5316\u4e14\u6b65\u5e45\u4e3a 2\u3002\u8fd9\u79cd\u7edf\u4e00\u7684\u8bbe\u8ba1\u4f7f\u7f51\u7edc\u7ed3\u6784\u66f4\u52a0\u7b80\u6d01\u3001\u53ef\u590d\u7528\u3002</p> <p>\u5377\u79ef\u5757\u7684\u4f7f\u7528\uff1aVGG \u4e0d\u662f\u7b80\u5355\u5730\u5806\u53e0\u5377\u79ef\u5c42\uff0c\u800c\u662f\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u201c\u5377\u79ef\u5757\u201d\u6765\u6784\u5efa\u7f51\u7edc\u3002\u6bcf\u4e2a\u5377\u79ef\u5757\u7531\u51e0\u4e2a\u5377\u79ef\u5c42\u548c\u4e00\u4e2a\u6c60\u5316\u5c42\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5377\u79ef\u5757\u5806\u53e0\u540e\u8fde\u63a5\u5168\u8fde\u63a5\u5c42\u3002\u8fd9\u79cd\u6a21\u5757\u5316\u8bbe\u8ba1\u4f7f\u5f97 VGG \u7f51\u7edc\u6613\u4e8e\u6269\u5c55\u548c\u8c03\u6574\u3002</p> <p>\u4ee5\u4e0b\u662f\u57fa\u4e8e\u674e\u6c90\u8001\u5e08\u7684\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b\u4e2d\u7684 VGG \u5377\u79ef\u5757\u4ee3\u7801\uff1a</p> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\n\n\ndef vgg_block(num_convs, in_channels, out_channels):\n    layers = []\n    for _ in range(num_convs):\n        layers.append(nn.Conv2d(in_channels, out_channels,\n                                kernel_size=3, padding=1))\n        layers.append(nn.ReLU())\n        in_channels = out_channels\n    layers.append(nn.MaxPool2d(kernel_size=2,stride=2))\n    return nn.Sequential(*layers)\n# \u793a\u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a VGG \u5757\uff0c\u5305\u542b 2 \u4e2a\u5377\u79ef\u5c42\uff0c\u8f93\u5165\u901a\u9053\u6570\u4e3a 3\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e3a 64\nvgg_block_example = vgg_block(2, 3, 64)\nprint(vgg_block_example)\n</code></pre>"},{"location":"CV/Lecture8_CNN_Architectures/#nin\u7f51\u7edc\u4e2d\u7684\u7f51\u7edc","title":"NiN\uff1a\u7f51\u7edc\u4e2d\u7684\u7f51\u7edc","text":"<p>NiN\uff08Network in Network\uff09\u901a\u8fc7\u521b\u65b0\u6027\u5730\u5f15\u5165 1x1 \u5377\u79ef\u6838\u548c\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c42\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u975e\u7ebf\u6027\u5efa\u6a21\u80fd\u529b\u548c\u7279\u5f81\u8868\u8fbe\u80fd\u529b\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5728\u5f53\u65f6\u5f15\u9886\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u7684\u8fdb\u6b65\uff0c\u5e76\u4e3a\u540e\u7eed\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u63d0\u4f9b\u4e86\u65b0\u7684\u601d\u8def\u3002NiN \u7684\u6838\u5fc3\u601d\u60f3\u4e4b\u4e00\u662f\u7528 1x1 \u5377\u79ef\u6838\u66ff\u4ee3\u90e8\u5206\u4f20\u7edf\u5377\u79ef\u5c42\uff0c\u4f7f\u5f97\u7f51\u7edc\u4e0d\u4ec5\u5728\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u8fd8\u53ef\u4ee5\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u66f4\u6df1\u5c42\u6b21\u7684\u7279\u5f81\u7ec4\u5408\u3002\u6b64\u5916\uff0c\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c42\u7684\u5f15\u5165\uff0c\u6709\u6548\u51cf\u5c11\u4e86\u53c2\u6570\u6570\u91cf\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u964d\u4f4e\u4e86\u8fc7\u62df\u5408\u98ce\u9669\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u66f4\u7d27\u51d1\u7684\u7f51\u7edc\u8bbe\u8ba1\u3002</p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cNiN \u5c55\u793a\u4e86\u5176\u5728\u56fe\u50cf\u5206\u7c7b\u3001\u76ee\u6807\u68c0\u6d4b\u548c\u8bed\u4e49\u5206\u5272\u7b49\u4efb\u52a1\u4e2d\u7684\u4f18\u8d8a\u6027\u80fd\u3002\u5176\u63d0\u51fa\u7684 1x1 \u5377\u79ef\u6838\u7684\u8bbe\u8ba1\u7406\u5ff5\u4e5f\u88ab\u540e\u7eed\u8bf8\u591a\u6a21\u578b\u5e7f\u6cdb\u91c7\u7528\uff0c\u5982 Inception \u7cfb\u5217\u7f51\u7edc\uff0c\u8fdb\u4e00\u6b65\u63a8\u52a8\u4e86\u6df1\u5ea6\u5b66\u4e60\u7684\u7814\u7a76\u548c\u5e94\u7528\u3002</p>"},{"location":"CV/Lecture8_CNN_Architectures/#googlelenet","title":"GoogleLeNet","text":"<p>GoogleLeNet \u662f 2014 \u5e74\u8c37\u6b4c\u56e2\u961f\u4e3a\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u6548\u7387\u3001\u51cf\u5c11\u590d\u6742\u6027\u5e76\u4f7f\u5176\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u8fd0\u884c\u800c\u63d0\u51fa\u7684\u7f51\u7edc\u6a21\u578b\u3002\u5b83\u5f97\u540d\u4e8e\u5411 Yann LeCun \u548c\u4ed6\u7684 LeNet \u81f4\u656c\u3002GoogleLeNet \u7684\u4e3b\u8981\u8d21\u732e\u4e4b\u4e00\u662f\u5f15\u5165\u4e86 Inception \u6a21\u5757\uff0c\u8fd9\u79cd\u6a21\u5757\u7ed3\u6784\u4f7f\u7f51\u7edc\u5728\u4fdd\u6301\u8ba1\u7b97\u590d\u6742\u5ea6\u548c\u53c2\u6570\u6570\u91cf\u8f83\u4f4e\u7684\u540c\u65f6\uff0c\u80fd\u591f\u663e\u8457\u589e\u52a0\u6df1\u5ea6\u3002</p> <p></p> <p>Inception \u6a21\u5757\uff1a</p> <ul> <li>Inception \u6a21\u5757\u662f\u4e00\u79cd\u590d\u5408\u7ed3\u6784\uff0c\u901a\u8fc7\u591a\u4e2a\u4e0d\u540c\u7684\u5377\u79ef\u6838\u548c\u6c60\u5316\u5c42\u5e76\u884c\u5904\u7406\u8f93\u5165\u4fe1\u606f\uff0c\u518d\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u5408\u5e76\u8f93\u51fa\u3002\u8fd9\u79cd\u8bbe\u8ba1\u907f\u514d\u4e86\u4f20\u7edf\u5377\u79ef\u5c42\u7684\u5c40\u9650\u6027\uff0c\u4f7f\u7f51\u7edc\u80fd\u591f\u4ece\u591a\u4e2a\u5c3a\u5ea6\u63d0\u53d6\u7279\u5f81\uff0c\u589e\u52a0\u6a21\u578b\u8868\u8fbe\u80fd\u529b\u7684\u540c\u65f6\u51cf\u5c11\u53c2\u6570\u91cf\u3002</li> <li>\u6bcf\u4e2a Inception \u6a21\u5757\u90fd\u5305\u62ec 1x1\u30013x3\u30015x5 \u7684\u5377\u79ef\u5c42\u548c 3x3 \u7684\u6700\u5927\u6c60\u5316\u5c42\uff0c\u5e76\u4e14\u901a\u8fc7 1x1 \u5377\u79ef\u8fdb\u884c\u901a\u9053\u6570\u7684\u538b\u7f29\u4ee5\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002</li> </ul> <p>\u7f51\u7edc\u7ed3\u6784\uff1a</p> <ul> <li>GoogleLeNet \u7684\u6df1\u5ea6\u8d85\u8fc7 100 \u5c42\uff0c\u662f\u5f53\u65f6\u6df1\u5ea6\u6700\u5927\u7684\u7f51\u7edc\u4e4b\u4e00\u3002\u8fd9\u79cd\u6df1\u5ea6\u6781\u5927\u63d0\u5347\u4e86\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5c3d\u7ba1\u5f53\u65f6\u8fd8\u6ca1\u6709\u4f7f\u7528\u6279\u91cf\u5f52\u4e00\u5316\uff08Batch Normalization\uff09\u6280\u672f\u3002</li> </ul> <p>\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff1a</p> <ul> <li>\u5728\u7f51\u7edc\u7684\u6700\u540e\uff0cGoogleLeNet \u4f7f\u7528\u4e86\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c42\u6765\u66ff\u4ee3\u5168\u8fde\u63a5\u5c42\uff0c\u8fd9\u51cf\u5c11\u4e86\u6a21\u578b\u53c2\u6570\u5e76\u964d\u4f4e\u4e86\u8fc7\u62df\u5408\u98ce\u9669\u3002</li> </ul>"},{"location":"CV/Lecture8_CNN_Architectures/#\u6279\u91cf\u5f52\u4e00\u5316","title":"\u6279\u91cf\u5f52\u4e00\u5316","text":"<p>\u6279\u91cf\u5f52\u4e00\u5316\uff08Batch Normalization\uff0cBN\uff09\u662f\u4e00\u79cd\u5e7f\u6cdb\u7528\u4e8e\u52a0\u901f\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u6536\u655b\u7684\u6280\u672f\u3002\u5b83\u901a\u8fc7\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5bf9\u6bcf\u4e2a\u6279\u91cf\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\uff0c<code>\u4f7f\u5f97\u7f51\u7edc\u5728\u5404\u5c42\u7684\u8f93\u5165\u5206\u5e03\u66f4\u52a0\u7a33\u5b9a\uff0c\u6709\u52a9\u4e8e\u89e3\u51b3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\uff0c\u4ece\u800c\u52a0\u901f\u6536\u655b</code>\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u635f\u5931\u662f\u5728\u7f51\u7edc\u6700\u540e\uff0c\u5f53\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u4e0a\u6d41\u7684\u68af\u5ea6\u8f83\u5927\uff0c\u4f46\u662f\u4e0b\u5c42\u7684\u68af\u5ea6\u4f1a\u5f88\u5c0f\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u68af\u5ea6\u53ef\u80fd\u90fd\u4e0d\u5927\uff0c\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7d2f\u4e58\u4f1a\u5bfc\u81f4\u68af\u5ea6\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8d8a\u9760\u8fd1\u6570\u636e\u5c42\uff0c\u68af\u5ea6\u66f4\u65b0\u7684\u8d8a\u6162\uff0c\u5b66\u4e60\u7684\u4e5f\u5c31\u8d8a\u6162\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u6bcf\u4e00\u5c42\u66f4\u65b0\u4e0b\u5c42\u4e4b\u540e\uff0c\u4e0a\u5c42\u4e5f\u8981\u91cd\u65b0\u5f00\u59cb\u8bad\u7ec3\uff0c\u6240\u4ee5\u6279\u91cf\u5f52\u4e00\u5316\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u5728\u5b66\u4e60\u5e95\u90e8\u5c42\u7684\u65f6\u5019\u907f\u514d\u53d8\u5316\u9876\u90e8\u5c42</p> <p>\u6279\u91cf\u5f52\u4e00\u5316\u7684\u539f\u7406\u548c\u4f5c\u7528</p> <ul> <li> <p>\u5747\u503c\u548c\u65b9\u5dee\u7684\u5f52\u4e00\u5316\uff1a \u6279\u91cf\u5f52\u4e00\u5316\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5bf9\u6bcf\u4e2a\u6279\u91cf\u7684\u6570\u636e\u8fdb\u884c\u5747\u503c\u548c\u65b9\u5dee\u7684\u5f52\u4e00\u5316\u5904\u7406\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7279\u5f81\u7684 <code>\u5206\u5e03\u7a33\u5b9a\u57280\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u9644\u8fd1</code>\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u4e0d\u540c\u6279\u6b21\u6570\u636e\u5206\u5e03\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u6709\u5229\u4e8e\u63d0\u9ad8\u7f51\u7edc\u7684\u6cdb\u5316\u80fd\u529b\u548c\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002</p> </li> <li> <p>\u5f52\u4e00\u5316\u516c\u5f0f\uff1a</p> </li> </ul> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6279\u91cf\u6570\u636e\u96c6\u5408 \\(B\\)\uff0c\u6279\u91cf\u5f52\u4e00\u5316\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a </p> \\[ \\mu_B = \\frac{1}{|B|}\\sum_{i\\in B}x_i\\\\ \\sigma_B^2 = \\frac{1}{|B|}\\sum_{i\\in B}(x_i - \\mu_B)^2 + \\epsilon \\] <p>\u5176\u4e2d\uff0c\\(\\mu_B\\) \u662f\u6279\u91cf\u6570\u636e\u7684\u5747\u503c\uff0c\\(\\sigma_B^2\\) \u662f\u6279\u91cf\u6570\u636e\u7684\u65b9\u5dee\uff08\u52a0\u4e0a\u5c0f\u7684\u5e38\u6570 \\(\\epsilon\\) \u6765\u9632\u6b62\u9664\u4ee5\u96f6\uff09\uff0c\\(x_i\\) \u662f\u6279\u91cf\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u3002</p> <ul> <li>\u5f52\u4e00\u5316\u540e\u7684\u53d8\u6362\uff1a</li> </ul> <p>\u5f52\u4e00\u5316\u540e\uff0c\u6bcf\u4e2a\u6837\u672c \\(x_i\\) \u88ab\u8f6c\u6362\u4e3a\uff1a</p> \\[ \\hat{x}_i = \\frac{x_i - \\mu_B}{\\sqrt{\\sigma_B^2 + \\epsilon}} \\] <p>\u7136\u540e\u901a\u8fc7\u53ef\u5b66\u4e60\u7684\u62c9\u4f38\u53c2\u6570 \\(\\gamma\\) \u548c\u504f\u79fb\u53c2\u6570 \\(\\beta\\) \u6765\u8c03\u6574\u5f52\u4e00\u5316\u540e\u7684\u7ed3\u679c\uff1a </p> \\[ y_i = \\gamma \\hat{x}_i + \\beta \\] <p>\u8fd9\u91cc \\(\\gamma\\) \u548c \\(\\beta\\) \u662f\u53ef\u4ee5\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u8fdb\u884c\u4f18\u5316\u7684\u53c2\u6570\uff0c\u7528\u6765\u5b66\u4e60\u6700\u4f73\u7684\u6570\u636e\u5206\u5e03\u3002</p> <ul> <li>\u4f5c\u7528\u4e8e\u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\uff1a</li> </ul> <p>\u6279\u91cf\u5f52\u4e00\u5316\u901a\u5e38 <code>\u5e94\u7528\u5728\u6bcf\u5c42\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\uff0c\u5373\u4f5c\u7528\u4e8e\u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u7684\u8f93\u51fa</code>\u3002\u8fd9\u79cd\u65b9\u5f0f\u6709\u52a9\u4e8e\u4f7f\u5f97\u6bcf\u5c42\u8f93\u5165\u7684\u5206\u5e03\u66f4\u7a33\u5b9a\uff0c\u63d0\u9ad8\u4e86\u7f51\u7edc\u8bad\u7ec3\u65f6\u7684\u68af\u5ea6\u6d41\u52a8\u6027\uff0c\u52a0\u901f\u4e86\u6a21\u578b\u7684\u6536\u655b\u901f\u5ea6\u3002</p>"},{"location":"CV/Lecture8_CNN_Architectures/#resnet","title":"ResNet","text":"<p>ResNet\uff08Residual Network\uff0c\u6b8b\u5dee\u7f51\u7edc\uff09\uff0c\u5b83\u901a\u8fc7\u5f15\u5165 \u6b8b\u5dee\u5b66\u4e60 \u7684\u601d\u60f3\uff0c\u6210\u529f\u89e3\u51b3\u4e86\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u4f7f\u5f97\u7f51\u7edc\u6df1\u5ea6\u80fd\u591f\u5927\u5e45\u5ea6\u589e\u52a0\uff0c\u63a8\u52a8\u4e86\u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u3002</p> <p>\u6b8b\u5dee\u5b66\u4e60\uff08Residual Learning\uff09\uff1a</p> <ul> <li>ResNet \u7684\u6838\u5fc3\u601d\u60f3\u662f\u5f15\u5165\u201c\u6b8b\u5dee\u5757\u201d\uff08Residual Block\uff09\uff0c\u901a\u8fc7 \u8df3\u8dc3\u8fde\u63a5\uff08skip connection\uff09\u76f4\u63a5\u5c06\u8f93\u5165\u4fe1\u606f\u4f20\u9012\u5230\u66f4\u6df1\u7684\u5c42\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u7f51\u7edc\u5728\u5c42\u6570\u589e\u52a0\u65f6\u51fa\u73b0\u7684\u9000\u5316\u95ee\u9898\u3002 \u6b8b\u5dee\u5757\u7684\u7ed3\u6784\u5982\u4e0b\uff1a\\(y = F(x, \\{W_i\\}) + x\\)</li> <li>\u5176\u4e2d\uff0c\\(x\\) \u662f\u8f93\u5165\uff0c\\(F(x, {W_i})\\) \u662f\u5377\u79ef\u5c42\u7684\u8f93\u51fa\uff0c\u6b8b\u5dee\u5757\u76f4\u63a5\u5c06\u8f93\u5165 \\(x\\) \u52a0\u5230\u8f93\u51fa\u4e0a\u3002\u8fd9\u6837\uff0c\u5373\u4f7f \\(F(x)\\) \u8d8b\u8fd1\u4e8e 0\uff0c\u7f51\u7edc\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8df3\u8dc3\u8fde\u63a5\u4fdd\u6301\u4fe1\u606f\u7684\u6d41\u52a8\u3002</li> </ul> <p>\u89e3\u51b3\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff1a</p> <ul> <li>\u968f\u7740\u7f51\u7edc\u6df1\u5ea6\u7684\u589e\u52a0\uff0c\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u4f1a\u53d8\u5f97\u66f4\u52a0\u4e25\u91cd\uff0c\u5bfc\u81f4\u8bad\u7ec3\u56f0\u96be\u3002\u901a\u8fc7\u5f15\u5165\u6b8b\u5dee\u5b66\u4e60\uff0cResNet \u53ef\u4ee5\u786e\u4fdd\u68af\u5ea6\u80fd\u591f\u987a\u7545\u5730\u4ece\u7f51\u7edc\u540e\u5c42\u4f20\u64ad\u5230\u524d\u5c42\uff0c\u4ece\u800c\u7f13\u89e3\u4e86\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\uff0c\u4f7f\u5f97\u7f51\u7edc\u53ef\u4ee5\u8f7b\u677e\u5730\u589e\u52a0\u5230\u6570\u767e\u5c42\u6df1\u3002</li> </ul> <p>\u6df1\u5c42\u7f51\u7edc\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u5728 ResNet \u4e4b\u524d\uff0c\u7f51\u7edc\u6df1\u5ea6\u7684\u589e\u52a0\u5e76\u4e0d\u603b\u662f\u5e26\u6765\u66f4\u597d\u7684\u6027\u80fd\uff0c\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u6a21\u578b\u9000\u5316\uff0c\u51fa\u73b0\u8bad\u7ec3\u8bef\u5dee\u589e\u5927\u7684\u73b0\u8c61\u3002ResNet \u901a\u8fc7\u6b8b\u5dee\u5757\u4f7f\u5f97\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u4e5f\u80fd\u591f\u6709\u6548\u8bad\u7ec3\uff0c\u4ece\u800c\u663e\u8457\u63d0\u9ad8\u4e86\u6a21\u578b\u7684\u8868\u73b0\u3002\u5728 ImageNet \u6311\u6218\u8d5b\u4e2d\uff0cResNet-152 \u663e\u8457\u8d85\u8d8a\u4e86\u4e4b\u524d\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u83b7\u5f97\u4e86\u51a0\u519b\u3002</li> </ul>"},{"location":"CV/Lecture8_CNN_Architectures/#mobilenet","title":"MobileNet","text":"<p>MobileNet \u7684\u4f18\u52bf</p> <ul> <li>\u9ad8\u6548\u6027\uff1a\u901a\u8fc7\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u3001\u5bbd\u5ea6\u4e58\u5b50\u548c\u5206\u8fa8\u7387\u4e58\u5b50\u7684\u7ed3\u5408\uff0cMobileNet \u5927\u5e45\u5ea6\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\uff0c\u4f7f\u5176\u5728\u8d44\u6e90\u53d7\u9650\u7684\u8bbe\u5907\u4e0a\u80fd\u591f\u9ad8\u6548\u8fd0\u884c\u3002</li> <li>\u53ef\u5b9a\u5236\u6027\uff1a\u7528\u6237\u53ef\u4ee5\u6839\u636e\u8ba1\u7b97\u8d44\u6e90\u548c\u5e94\u7528\u9700\u6c42\uff0c\u901a\u8fc7\u8c03\u6574\u5bbd\u5ea6\u4e58\u5b50\u548c\u5206\u8fa8\u7387\u4e58\u5b50\u6765\u7075\u6d3b\u63a7\u5236\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u8fbe\u5230\u51c6\u786e\u7387\u4e0e\u6548\u7387\u7684\u5e73\u8861\u3002</li> <li>\u5e7f\u6cdb\u5e94\u7528\uff1aMobileNet \u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd\u79fb\u52a8\u548c\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u7684\u4efb\u52a1\uff0c\u5982\u56fe\u50cf\u5206\u7c7b\u3001\u76ee\u6807\u68c0\u6d4b\u3001\u4eba\u8138\u8bc6\u522b\u7b49\u3002</li> </ul> <p>MobileNet \u7684\u5c40\u9650\u6027</p> <p>\u5c3d\u7ba1 MobileNet \u5728\u8f7b\u91cf\u5316\u8bbe\u8ba1\u4e0a\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u4f46\u7531\u4e8e\u5176\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u7684\u51cf\u5c11\uff0c\u5176\u5728\u67d0\u4e9b\u4efb\u52a1\u4e0a\u7684\u51c6\u786e\u7387\u53ef\u80fd\u4e0d\u5982\u66f4\u590d\u6742\u7684\u5927\u578b\u7f51\u7edc\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\uff0c\u540e\u7eed\u63d0\u51fa\u4e86 MobileNetV2 \u548c MobileNetV3\uff0c\u8fd9\u4e9b\u6539\u8fdb\u7248\u672c\u8fdb\u4e00\u6b65\u4f18\u5316\u4e86\u7f51\u7edc\u7ed3\u6784\uff0c\u63d0\u5347\u4e86\u51c6\u786e\u7387\u548c\u6027\u80fd\u3002</p>"},{"location":"CV/Lecture9_Hardware_and_Software/","title":"Hardware and Software","text":"<p> \u7ea6 3303 \u4e2a\u5b57  24 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u539f\u6587\u5982\u4e0b","title":"\u539f\u6587\u5982\u4e0b","text":"<p>\u5185\u5bb9\u5217\u8868\uff1a</p> <ul> <li>\u4e0d\u7528\u5927\u8111\u505a\u7c7b\u6bd4\u7684\u5feb\u901f\u7b80\u4ecb</li> <li>\u5355\u4e2a\u795e\u7ecf\u5143\u5efa\u6a21<ul> <li>\u751f\u7269\u52a8\u673a\u548c\u8fde\u63a5</li> <li>\u4f5c\u4e3a\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u5355\u4e2a\u795e\u7ecf\u5143</li> <li>\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570 </li> </ul> </li> <li>\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784 \u8bd1\u8005\u6ce8\uff1a\u4e0b\u7bc7\u7ffb\u8bd1\u8d77\u59cb\u5904<ul> <li>\u5c42\u7ec4\u7ec7</li> <li>\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\u4f8b\u5b50</li> <li>\u8868\u8fbe\u80fd\u529b</li> <li>\u8bbe\u7f6e\u5c42\u7684\u6570\u91cf\u548c\u5c3a\u5bf8</li> </ul> </li> <li>\u5c0f\u8282</li> </ul>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784","title":"\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784","text":""},{"location":"CV/Lecture9_Hardware_and_Software/#\u7075\u6d3b\u7684\u7ec4\u7ec7\u5c42","title":"\u7075\u6d3b\u7684\u7ec4\u7ec7\u5c42","text":"<ul> <li>\u56fe\u5f62\u5316\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\uff1a</li> </ul> <p>\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u795e\u7ecf\u5143\uff08\u5355\u5143\uff09\u8fdb\u884c\u5efa\u6a21\uff0c\u8fd9\u4e9b\u795e\u7ecf\u5143\u76f8\u4e92\u8fde\u63a5\uff0c\u5f62\u6210\u65e0\u73af\u56fe\u7ed3\u6784\u3002\u8fd9\u610f\u5473\u7740\u5728\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u8f93\u5165\uff0c\u4f46\u4e0d\u80fd\u5f62\u6210\u5faa\u73af\u8def\u5f84\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u524d\u5411\u4f20\u64ad\u4e2d\u7684\u65e0\u9650\u5faa\u73af\u95ee\u9898\u3002\u4e0e\u751f\u7269\u795e\u7ecf\u5143\u4e0d\u540c\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u795e\u7ecf\u5143\u662f\u5206\u5c42\u7ec4\u7ec7\u7684\uff0c\u4ee5\u4fbf\u4e8e\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u548c\u5176\u4ed6\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u3002</p> <ul> <li>\u5168\u8fde\u63a5\u5c42\uff08Fully-Connected Layer\uff09\uff1a   \u5728\u666e\u901a\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6700\u5e38\u89c1\u7684\u5c42\u7c7b\u578b\u662f\u5168\u8fde\u63a5\u5c42\u3002\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u4e0e\u524d\u4e00\u5c42\u548c\u540e\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\u63a5\uff0c\u4f46\u5728\u540c\u4e00\u5c42\u5185\uff0c\u795e\u7ecf\u5143\u4e4b\u95f4\u6ca1\u6709\u8fde\u63a5\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u4e24\u4e2a\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff1a</li> </ul> <p></p> <p>\u5de6\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u4e24\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u4e00\u4e2a4\u4e2a\u795e\u7ecf\u5143\u7684\u9690\u5c42\u548c\u4e00\u4e2a2\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5c42\u3002\u53f3\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u4e24\u4e2a4\u4e2a\u795e\u7ecf\u5143\u7684\u9690\u5c42\u3002\u8bf7\u6ce8\u610f\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u7684\u795e\u7ecf\u5143\u662f\u5168\u8fde\u63a5\u7684\uff0c\u800c\u5c42\u5185\u7684\u795e\u7ecf\u5143\u6ca1\u6709\u8fde\u63a5\u3002</p> <ul> <li>\u547d\u540d\u89c4\u5219</li> </ul> <p>\u5f53\u6211\u4eec\u8bf4\u5230\u201cN\u5c42\u795e\u7ecf\u7f51\u7edc\u201d\u65f6\uff0c\u4e0d\u5305\u62ec\u8f93\u5165\u5c42\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5355\u5c42\u795e\u7ecf\u7f51\u7edc\u610f\u5473\u7740\u6ca1\u6709\u9690\u5c42\uff0c\u8f93\u5165\u76f4\u63a5\u6620\u5c04\u5230\u8f93\u51fa\u3002\u57fa\u4e8e\u6b64\uff0c\u903b\u8f91\u56de\u5f52\u548cSVM\u53ef\u4ee5\u770b\u4f5c\u662f\u5355\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u7279\u4f8b\u3002</p> <p>\u7814\u7a76\u8005\u901a\u5e38\u4f7f\u7528\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08Artificial Neural Networks, ANN\uff09\u6216\u591a\u5c42\u611f\u77e5\u5668\uff08Multi-Layer Perceptrons, MLP\uff09\u6765\u6307\u4ee3\u795e\u7ecf\u7f51\u7edc\u3002\u7531\u4e8e\u4e00\u4e9b\u7814\u7a76\u8005\u4e0d\u559c\u6b22\u795e\u7ecf\u7f51\u7edc\u4e0e\u4eba\u7c7b\u5927\u8111\u4e4b\u95f4\u7684\u7c7b\u6bd4\uff0c\u4ed6\u4eec\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u5355\u5143\uff08Unit\uff09\u800c\u4e0d\u662f\u201c\u795e\u7ecf\u5143\u201d\u8fd9\u4e2a\u672f\u8bed\u3002</p> <ul> <li> <p>\u8f93\u51fa\u5c42\u3002 \u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u901a\u5e38\u4e0d\u4f1a\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\uff0c\u6216\u8005\u4f7f\u7528\u7b49\u6548\u4e8e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u7684\u6052\u7b49\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3a\u8f93\u51fa\u5c42\u7528\u4e8e\u8868\u793a\u5206\u7c7b\u5f97\u5206\u6216\u56de\u5f52\u9884\u6d4b\u503c\uff0c\u8fd9\u4e9b\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b9e\u6570\u3002</p> </li> <li> <p>\u786e\u5b9a\u7f51\u7edc\u5c3a\u5bf8\u3002 \u7528\u6765\u5ea6\u91cf\u795e\u7ecf\u7f51\u7edc\u7684\u5c3a\u5bf8\u7684\u6807\u51c6\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a\u4e00\u4e2a\u662f\u795e\u7ecf\u5143\u7684\u4e2a\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u53c2\u6570\u7684\u4e2a\u6570\uff0c\u7528\u4e0a\u9762\u56fe\u793a\u7684\u4e24\u4e2a\u7f51\u7edc\u4e3e\u4f8b\uff1a</p> </li> <li> <p>\u7b2c\u4e00\u4e2a\u7f51\u7edc\u6709 \\(4+2 = 6\\)\u4e2a\u795e\u7ecf\u5143\uff08\u8f93\u5165\u5c42\u4e0d\u7b97\uff09\uff0c\\([3\\times4]+[4\\times2] = 20\\) \u4e2a\u6743\u91cd\uff0c\u8fd8\u6709 \\(4+2 = 6\\) \u4e2a\u504f\u7f6e\uff0c\u5171 26 \u4e2a\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u7f51\u7edc\u6709 \\(4+4+1 = 9\\) \u4e2a\u795e\u7ecf\u5143\uff0c\\([3\\times4]+[4\\times4]+[4\\times1] = 32\\) \u4e2a\u6743\u91cd\uff0c\\(4+4+1 = 9\\) \u4e2a\u504f\u7f6e\uff0c\u5171 41 \u4e2a\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u3002 </p> </li> </ul> <p>\u73b0\u4ee3\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u901a\u5e38\u5305\u542b\u6570\u4ebf\u4e2a\u53c2\u6570\uff0c\u5e76\u753110-20\u5c42\u7ec4\u6210\uff0c\u5f62\u6210\u6240\u8c13\u7684\u201c\u6df1\u5ea6\u5b66\u4e60\u201d\u6a21\u578b\u3002\u7136\u800c\uff0c\u7531\u4e8e\u53c2\u6570\u5171\u4eab\u7684\u5b58\u5728\uff0c\u6709\u6548\u8fde\u63a5\u7684\u6570\u91cf\u5927\u5927\u589e\u52a0\u3002</p>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\u4e3e\u4f8b","title":"\u524d\u5411\u4f20\u64ad\u8ba1\u7b97\u4e3e\u4f8b","text":"<p>\u795e\u7ecf\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u77e9\u9635\u4e58\u6cd5\u548c\u6fc0\u6d3b\u51fd\u6570\u5e94\u7528\u5b9e\u73b0\u7684\u3002\u7f51\u7edc\u88ab\u7ec4\u7ec7\u6210\u5c42\u72b6\u7ed3\u6784\uff0c\u80fd\u591f\u7b80\u5316\u5e76\u9ad8\u6548\u5730\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002\u4ee5\u4e0b\u901a\u8fc7\u4e00\u4e2a\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u4f8b\u5b50\uff0c\u8be6\u7ec6\u8bf4\u660e\u524d\u5411\u4f20\u64ad\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002</p> <p> </p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\uff1a</p> <ol> <li>\u8f93\u5165\u5c42\uff1a\u7ef4\u5ea6\u4e3a3\uff08\u53733\u4e2a\u8f93\u5165\u7279\u5f81\uff09\u3002\u8f93\u5165\u662f [3x1] \u7684\u5411\u91cf</li> <li>\u7b2c\u4e00\u4e2a\u9690\u5c42\uff1a4\u4e2a\u795e\u7ecf\u5143\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u9690\u5c42\uff1a4\u4e2a\u795e\u7ecf\u5143\u3002</li> <li>\u8f93\u51fa\u5c42\uff1a1\u4e2a\u795e\u7ecf\u5143\u3002</li> </ol> <p>\u5bf9\u4e8e\u8be5\u7f51\u7edc\uff0c\u4ee5\u4e0b\u662f\u6743\u91cd\u77e9\u9635\u548c\u504f\u7f6e\u5411\u91cf\u7684\u7ef4\u5ea6\uff1a</p> <ul> <li>W1\uff1a\u5f62\u72b6\u4e3a[4x3]\uff0c\u7528\u4e8e\u7b2c\u4e00\u4e2a\u9690\u5c42\u7684\u8fde\u63a5\u6743\u91cd\u3002\u77e9\u9635\u4e58\u6cd5 np.dot(W1, x) \u5c31\u80fd\u8ba1\u7b97\u8be5\u5c42\u4e2d\u6240\u6709\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u6570\u636e</li> <li>b1\uff1a\u5f62\u72b6\u4e3a[4x1]\uff0c\u7528\u4e8e\u7b2c\u4e00\u4e2a\u9690\u5c42\u7684\u504f\u7f6e\u3002</li> <li>W2\uff1a\u5f62\u72b6\u4e3a[4x4]\uff0c\u7528\u4e8e\u7b2c\u4e8c\u4e2a\u9690\u5c42\u7684\u8fde\u63a5\u6743\u91cd\u3002</li> <li>b2\uff1a\u5f62\u72b6\u4e3a[4x1]\uff0c\u7528\u4e8e\u7b2c\u4e8c\u4e2a\u9690\u5c42\u7684\u504f\u7f6e\u3002</li> <li>W3\uff1a\u5f62\u72b6\u4e3a[1x4]\uff0c\u7528\u4e8e\u8f93\u51fa\u5c42\u7684\u8fde\u63a5\u6743\u91cd\u3002</li> <li>b3\uff1a\u5f62\u72b6\u4e3a[1x1]\uff0c\u7528\u4e8e\u8f93\u51fa\u5c42\u7684\u504f\u7f6e\u3002</li> </ul> <pre><code>import numpy as np\n\n# \u5b9a\u4e49\u6fc0\u6d3b\u51fd\u6570 (Sigmoid)\nf = lambda x: 1.0 / (1.0 + np.exp(-x))\n\n# \u968f\u673a\u521d\u59cb\u5316\u8f93\u5165\u5411\u91cf\nx = np.random.randn(3, 1)  # \u8f93\u5165\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a [3x1]\n\n# \u968f\u673a\u521d\u59cb\u5316\u6743\u91cd\u77e9\u9635\u548c\u504f\u7f6e\u5411\u91cf\nW1 = np.random.randn(4, 3)  # \u7b2c\u4e00\u5c42\u6743\u91cd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a [4x3]\nb1 = np.random.randn(4, 1)  # \u7b2c\u4e00\u5c42\u504f\u7f6e\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a [4x1]\n\nW2 = np.random.randn(4, 4)  # \u7b2c\u4e8c\u5c42\u6743\u91cd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a [4x4]\nb2 = np.random.randn(4, 1)  # \u7b2c\u4e8c\u5c42\u504f\u7f6e\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a [4x1]\n\nW3 = np.random.randn(1, 4)  # \u8f93\u51fa\u5c42\u6743\u91cd\u77e9\u9635\uff0c\u5f62\u72b6\u4e3a [1x4]\nb3 = np.random.randn(1, 1)  # \u8f93\u51fa\u5c42\u504f\u7f6e\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a [1x1]\n\n# \u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\nh1 = f(np.dot(W1, x) + b1)  # \u7b2c\u4e00\u4e2a\u9690\u5c42\u6fc0\u6d3b\nh2 = f(np.dot(W2, h1) + b2)  # \u7b2c\u4e8c\u4e2a\u9690\u5c42\u6fc0\u6d3b\nout = np.dot(W3, h2) + b3  # \u8f93\u51fa\u5c42\u7684\u8f93\u51fa\n\nprint(\"\u8f93\u51fa\u7ed3\u679c:\", out)\n</code></pre> <ol> <li>\u8f93\u5165\u5411\u91cf\uff1a   \u5047\u8bbe\u8f93\u5165\u5411\u91cf <code>x</code> \u7684\u5f62\u72b6\u4e3a[3x1]\uff0c\u4ee3\u8868\u8f93\u5165\u7684\u4e09\u4e2a\u7279\u5f81\u3002</li> <li>\u7b2c\u4e00\u4e2a\u9690\u5c42\u8ba1\u7b97\uff1a   \u8ba1\u7b97\u7b2c\u4e00\u4e2a\u9690\u5c42\u7684\u7ebf\u6027\u7ec4\u5408\uff1a<code>z1 = np.dot(W1, x) + b1</code>\uff0c\u5176\u4e2d <code>z1</code> \u5f62\u72b6\u4e3a[4x1]\u3002   \u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 Sigmoid\uff09\uff1a<code>h1 = f(z1)</code>\uff0c\u5176\u4e2d <code>h1</code> \u4e5f\u662f[4x1]\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u9690\u5c42\u8ba1\u7b97\uff1a   \u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u9690\u5c42\u7684\u7ebf\u6027\u7ec4\u5408\uff1a<code>z2 = np.dot(W2, h1) + b2</code>\uff0c\u5176\u4e2d <code>z2</code> \u5f62\u72b6\u4e3a[4x1]\u3002   \u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\uff1a<code>h2 = f(z2)</code>\uff0c\u5176\u4e2d <code>h2</code> \u4e5f\u662f[4x1]\u3002</li> <li>\u8f93\u51fa\u5c42\u8ba1\u7b97\uff1a   \u8ba1\u7b97\u8f93\u51fa\u5c42\u7684\u7ebf\u6027\u7ec4\u5408\uff1a<code>out = np.dot(W3, h2) + b3</code>\uff0c\u5176\u4e2d <code>out</code> \u5f62\u72b6\u4e3a[1x1]\u3002   \u8f93\u51fa\u5c42\u901a\u5e38\u4e0d\u5305\u542b\u6fc0\u6d3b\u51fd\u6570\uff0c\u5c24\u5176\u662f\u5728\u56de\u5f52\u4efb\u52a1\u6216\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u8bc4\u5206\u9636\u6bb5\u3002</li> </ol> <p>\u5168\u8fde\u63a5\u5c42\u7684\u524d\u5411\u4f20\u64ad\u4e00\u822c\u5c31\u662f\u5148\u8fdb\u884c\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\uff0c\u7136\u540e\u52a0\u4e0a\u504f\u7f6e\u5e76\u8fd0\u7528\u6fc0\u6d3b\u51fd\u6570\u3002 </p>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u8868\u8fbe\u80fd\u529b","title":"\u8868\u8fbe\u80fd\u529b","text":"<p>\u795e\u7ecf\u7f51\u7edc\u88ab\u8ba4\u4e3a\u662f\u901a\u7528\u8fd1\u4f3c\u5668\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u9690\u5c42\u7684\u7f51\u7edc\u3002\u8fd9\u4e2a\u7406\u8bba\u7684\u57fa\u7840\u6765\u6e90\u4e8e1989\u5e74\u7684\u7814\u7a76\uff0c\u8fd9\u4e9b\u7814\u7a76\u8bc1\u660e\u4e86\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u903c\u8fd1\u4efb\u610f\u7684\u8fde\u7eed\u51fd\u6570\u3002\u5177\u4f53\u800c\u8a00\uff0c\u7ed9\u5b9a\u4efb\u610f\u8fde\u7eed\u51fd\u6570 \\(f(x)\\) \u548c\u4efb\u610f \\(\\epsilon &gt; 0\\)\uff0c\u603b\u80fd\u627e\u5230\u4e00\u4e2a\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u9690\u5c42\u7684\u795e\u7ecf\u7f51\u7edc \\(g(x)\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u7684 \\(x\\)\uff0c\u6709 \\(|f(x) - g(x)| &lt; \\epsilon\\)\u3002\u8fd9\u8868\u660e\uff0c\u53ea\u8981\u9002\u5f53\u5730\u9009\u62e9\u7f51\u7edc\u7ed3\u6784\u548c\u6fc0\u6d3b\u51fd\u6570\uff08\u5982Sigmoid\u51fd\u6570\uff09\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u5177\u5907\u8db3\u591f\u7684\u8868\u8fbe\u80fd\u529b\u6765\u903c\u8fd1\u51e0\u4e4e\u4efb\u4f55\u51fd\u6570\u3002</p> <p><code>\u4e3a\u4ec0\u4e48\u9700\u8981\u66f4\u6df1\u7684\u7f51\u7edc\uff1f</code></p> <p>\u5c3d\u7ba1\u7406\u8bba\u4e0a\u4e00\u4e2a\u542b\u6709\u8db3\u591f\u795e\u7ecf\u5143\u7684\u4e24\u5c42\u7f51\u7edc\u5c31\u53ef\u4ee5\u8fd1\u4f3c\u4efb\u610f\u8fde\u7eed\u51fd\u6570\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u6df1\u5ea6\u7f51\u7edc\uff08\u5177\u6709\u591a\u4e2a\u9690\u5c42\u7684\u7f51\u7edc\uff09\u5f80\u5f80\u8868\u73b0\u66f4\u597d\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a</p> <ol> <li>\u5e73\u6ed1\u6027\u4e0e\u53ef\u5b66\u4e60\u6027\uff1a\u6df1\u5ea6\u7f51\u7edc\u80fd\u591f\u5b66\u4e60\u5230\u66f4\u5e73\u6ed1\u4e14\u66f4\u9002\u5408\u6570\u636e\u7edf\u8ba1\u7279\u6027\u7684\u51fd\u6570\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4e0d\u4ec5\u5728\u903c\u8fd1\u51fd\u6570\u65f6\u8868\u73b0\u51fa\u8272\uff0c\u8fd8\u80fd\u6709\u6548\u5730\u8fdb\u884c\u63a8\u5e7f\u3002\u540c\u65f6\uff0c\u7f51\u7edc\u901a\u8fc7\u6700\u4f18\u5316\u7b97\u6cd5\uff08\u4f8b\u5982\u68af\u5ea6\u4e0b\u964d\uff09\u80fd\u6bd4\u8f83\u5bb9\u6613\u5730\u5b66\u4e60\u5230\u8fd9\u4e2a\u51fd\u6570\u3002</li> <li>\u7ed3\u6784\u5316\u6570\u636e\uff1a\u5728\u5904\u7406\u56fe\u50cf\u3001\u8bed\u97f3\u7b49\u5177\u6709\u5c42\u6b21\u5316\u7ed3\u6784\u7684\u6570\u636e\u65f6\uff0c\u6df1\u5ea6\u7f51\u7edc\u7684\u591a\u5c42\u5904\u7406\u6709\u52a9\u4e8e\u9010\u7ea7\u63d0\u53d6\u9ad8\u5c42\u7279\u5f81\uff0c\u8fd9\u6837\u80fd\u66f4\u597d\u5730\u6355\u6349\u6570\u636e\u7684\u590d\u6742\u6a21\u5f0f\u3002\u4f8b\u5982\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\u7684\u591a\u5c42\u7ed3\u6784\u5728\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u4e2d\u53d6\u5f97\u4e86\u663e\u8457\u6210\u529f\u3002</li> </ol> <p><code>\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6df1\u5ea6\u4e0e\u6027\u80fd</code></p> <p>\u5c3d\u7ba1\u7406\u8bba\u4e0a\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u8db3\u4ee5\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u5b9e\u9a8c\u8bc1\u660e\u589e\u52a0\u7f51\u7edc\u6df1\u5ea6\uff08\u5982\u6269\u5c55\u52304\u5c42\u6216\u66f4\u591a\u5c42\uff09\u5728\u67d0\u4e9b\u4efb\u52a1\u4e2d\u5e76\u6ca1\u6709\u663e\u8457\u7684\u63d0\u5347\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7b49\u7279\u6b8a\u7ed3\u6784\uff0c\u6df1\u5ea6\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u8bc6\u522b\u7cfb\u7edf\u7684\u8868\u73b0\u3002\u8fd9\u79cd\u6548\u679c\u7684\u539f\u56e0\u53ef\u80fd\u5728\u4e8e\u8fd9\u4e9b\u6570\u636e\u5177\u6709\u5c42\u6b21\u7ed3\u6784\uff0c\u6df1\u5ea6\u7f51\u7edc\u80fd\u591f\u9010\u5c42\u62bd\u8c61\u51fa\u4e0d\u540c\u7ea7\u522b\u7684\u7279\u5f81\u3002</p>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u8bbe\u7f6e\u5c42\u7684\u6570\u91cf\u548c\u5c3a\u5bf8","title":"\u8bbe\u7f6e\u5c42\u7684\u6570\u91cf\u548c\u5c3a\u5bf8","text":"<p>\u5728\u9762\u5bf9\u4e00\u4e2a\u5177\u4f53\u95ee\u9898\u7684\u65f6\u5019\u8be5\u786e\u5b9a\u7f51\u7edc\u7ed3\u6784\u5462\uff1f\u5230\u5e95\u662f\u4e0d\u7528\u9690\u5c42\u5462\uff1f\u8fd8\u662f\u4e00\u4e2a\u9690\u5c42\uff1f\u4e24\u4e2a\u9690\u5c42\u6216\u66f4\u591a\uff1f\u6bcf\u4e2a\u5c42\u7684\u5c3a\u5bf8\u8be5\u591a\u5927\uff1f</p> <p>\u7ebf\u6027\u95ee\u9898\uff1a\u5982\u679c\u95ee\u9898\u662f\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u901a\u5e38\u65e0\u9700\u4f7f\u7528\u9690\u5c42\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\uff08\u4f8b\u5982\u7ebf\u6027\u56de\u5f52\u3001\u903b\u8f91\u56de\u5f52\uff09\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u975e\u7ebf\u6027\u95ee\u9898\uff1a\u5982\u679c\u95ee\u9898\u8f83\u4e3a\u590d\u6742\u4e14\u5177\u6709\u975e\u7ebf\u6027\u7279\u5f81\uff0c\u5219\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u9690\u5c42\u6765\u6355\u6349\u975e\u7ebf\u6027\u5173\u7cfb\u3002</p> <p>\u6839\u636e\u6570\u636e\u7279\u5f81\u9009\u62e9\u5c42\u6570</p> <ul> <li>\u4e00\u4e2a\u9690\u5c42\uff1a\u5bf9\u4e8e\u4e00\u822c\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u4e00\u4e2a\u9690\u5c42\u7684\u7f51\u7edc\uff08\u5373\u4e24\u5c42\u7f51\u7edc\uff0c\u5305\u62ec\u8f93\u5165\u5c42\uff09\u5c31\u8db3\u4ee5\u8fd1\u4f3c\u4efb\u4f55\u8fde\u7eed\u51fd\u6570\u3002\u901a\u5e38\uff0c\u8fd9\u4e2a\u9690\u5c42\u5305\u542b\u8f83\u5c11\u7684\u795e\u7ecf\u5143\uff08\u598210\u5230100\u4e2a\uff09\u5373\u53ef\u89e3\u51b3\u7b80\u5355\u6216\u4e2d\u7b49\u590d\u6742\u5ea6\u7684\u95ee\u9898\u3002</li> <li>\u591a\u4e2a\u9690\u5c42\uff1a\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u4efb\u52a1\uff0c\u5982\u56fe\u50cf\u5206\u7c7b\u3001\u8bed\u97f3\u8bc6\u522b\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\uff0c\u4f7f\u7528\u591a\u4e2a\u9690\u5c42\u7684\u6df1\u5ea6\u7f51\u7edc\u53ef\u80fd\u66f4\u5408\u9002\u3002\u6df1\u5ea6\u7f51\u7edc\u53ef\u4ee5\u6355\u6349\u6570\u636e\u7684\u5c42\u6b21\u5316\u7ed3\u6784\uff0c\u6709\u6548\u5904\u7406\u66f4\u590d\u6742\u7684\u6a21\u5f0f\u3002</li> </ul> <p></p> <p>\u66f4\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u8868\u8fbe\u66f4\u590d\u6742\u7684\u51fd\u6570\u3002\u6570\u636e\u662f\u7528\u4e0d\u540c\u989c\u8272\u7684\u5706\u70b9\u8868\u793a\u4ed6\u4eec\u7684\u4e0d\u540c\u7c7b\u522b\uff0c\u51b3\u7b56\u8fb9\u754c\u662f\u7531\u8bad\u7ec3\u8fc7\u7684\u795e\u7ecf\u7f51\u7edc\u505a\u51fa\u7684\u3002\u4f60\u53ef\u4ee5\u5728[ConvNetsJS demo__][26]\u4e0a\u7ec3\u7ec3\u624b\u3002</p> <p>\u5f53\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u8fc7\u5927\uff08\u5373\u795e\u7ecf\u5143\u6570\u91cf\u548c\u5c42\u6570\u8f83\u591a\uff09\u65f6\uff0c\u7f51\u7edc\u53ef\u80fd\u4f1a\u975e\u5e38\u7075\u6d3b\uff0c\u80fd\u591f\u7cbe\u786e\u5730\u62df\u5408\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u6240\u6709\u7ec6\u8282\uff0c\u5305\u62ec\u566a\u58f0\u548c\u5f02\u5e38\u70b9\u3002\u867d\u7136\u8fd9\u4f1a\u4f7f\u8bad\u7ec3\u8bef\u5dee\u5f88\u4f4e\uff0c\u4f46\u4e5f\u4f1a\u5bfc\u81f4\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u4e0b\u964d\uff0c\u5373\u5728\u6d4b\u8bd5\u96c6\u6216\u65b0\u6570\u636e\u4e0a\u7684\u8868\u73b0\u8f83\u5dee\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u670920\u4e2a\u795e\u7ecf\u5143\u9690\u5c42\u7684\u7f51\u7edc\uff0c\u5b83\u53ef\u80fd\u4f1a\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u6570\u636e\uff0c\u5bfc\u81f4\u51b3\u7b56\u8fb9\u754c\u53d8\u5f97\u975e\u5e38\u590d\u6742\uff0c\u51fa\u73b0\u8bb8\u591a\u4e0d\u76f8\u8fde\u7684\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u53ef\u80fd\u53ea\u662f\u5728\u7279\u5b9a\u6570\u636e\u70b9\u9644\u8fd1\u5212\u5206\u51fa\u6765\u7684\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u67093\u4e2a\u795e\u7ecf\u5143\u7684\u9690\u5c42\u6a21\u578b\uff0c\u5b83\u7684\u51b3\u7b56\u8fb9\u754c\u4f1a\u66f4\u52a0\u5e73\u6ed1\uff0c\u5373\u4f7f\u65e0\u6cd5\u5b8c\u7f8e\u5730\u5206\u7c7b\u6240\u6709\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u5b83\u66f4\u6709\u53ef\u80fd\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u56e0\u4e3a\u5b83\u66f4\u503e\u5411\u4e8e\u6355\u6349\u6570\u636e\u7684\u6574\u4f53\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u7279\u5b9a\u6570\u636e\u70b9\u7684\u566a\u58f0\u3002</p> <p>\u9632\u6b62\u8fc7\u62df\u5408\u7684\u6709\u6548\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>L2 \u6b63\u5219\u5316\uff1a\u901a\u8fc7\u6dfb\u52a0\u60e9\u7f5a\u9879\u6765\u6291\u5236\u8fc7\u5927\u7684\u6743\u91cd\u503c\u3002</li> <li>Dropout\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u968f\u673a\u4e22\u5f03\u90e8\u5206\u795e\u7ecf\u5143\uff0c\u51cf\u5c11\u7f51\u7edc\u5bf9\u7279\u5b9a\u8def\u5f84\u7684\u4f9d\u8d56\u3002</li> <li>\u6570\u636e\u589e\u5f3a\u548c\u8f93\u5165\u566a\u58f0\uff1a\u901a\u8fc7\u4eba\u4e3a\u589e\u52a0\u6570\u636e\u7684\u591a\u6837\u6027\uff0c\u63d0\u5347\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002</li> </ul> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6b63\u5219\u5316\u65b9\u6cd5\u5982 L2 \u6b63\u5219\u5316\u548c Dropout \u662f\u9632\u6b62\u5927\u7f51\u7edc\u8fc7\u62df\u5408\u7684\u6709\u6548\u624b\u6bb5\u3002\u6b63\u5219\u5316\u901a\u8fc7\u5728\u635f\u5931\u51fd\u6570\u4e2d\u5f15\u5165\u60e9\u7f5a\u9879\u6216\u968f\u673a\u4e22\u5f03\u795e\u7ecf\u5143\uff0c\u51cf\u5c11\u4e86\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u4e2d\u566a\u58f0\u7684\u4f9d\u8d56\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u968f\u7740\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u589e\u52a0\uff0c\u51b3\u7b56\u8fb9\u754c\u53d8\u5f97\u66f4\u52a0\u5e73\u6ed1\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002</p> <p> </p> <p>\u5728\u975e\u51f8\u7684\u795e\u7ecf\u7f51\u7edc\u635f\u5931\u51fd\u6570\u4e2d\uff0c\u5c40\u90e8\u6781\u5c0f\u503c\u7684\u5b58\u5728\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u8f83\u5c0f\u7684\u7f51\u7edc\u7531\u4e8e\u5bb9\u91cf\u9650\u5236\uff0c\u53ef\u80fd\u4f1a\u66f4\u5feb\u5730\u6536\u655b\u5230\u8fd9\u4e9b\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u4f46\u8fd9\u4e9b\u6781\u5c0f\u503c\u7684\u635f\u5931\u503c\u901a\u5e38\u8f83\u9ad8\uff0c\u5bfc\u81f4\u6a21\u578b\u7684\u6700\u7ec8\u8868\u73b0\u4e0d\u4f73\u3002\u76f8\u53cd\uff0c\u8f83\u5927\u7684\u7f51\u7edc\u867d\u7136\u4e5f\u9762\u4e34\u5c40\u90e8\u6781\u5c0f\u503c\u7684\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u5b83\u4eec\u6709\u66f4\u9ad8\u7684\u5bb9\u91cf\u548c\u66f4\u590d\u6742\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5f80\u5f80\u80fd\u627e\u5230\u66f4\u597d\u7684\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u4f4e\u7684\u635f\u5931\u503c\u3002</p> <p>\u8fd9\u4e00\u73b0\u8c61\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5927\u7f51\u7edc\u901a\u5e38\u8868\u73b0\u66f4\u7a33\u5b9a\uff1a\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u521d\u59cb\u5316\u6761\u4ef6\u4e0b\u8bad\u7ec3\u65f6\uff0c\u5373\u4f7f\u6700\u7ec8\u7684\u89e3\u4e0d\u540c\uff0c\u635f\u5931\u503c\u4e5f\u4e0d\u4f1a\u76f8\u5dee\u592a\u5927\u3002\u8f83\u5927\u7684\u7f51\u7edc\u5f80\u5f80\u80fd\u591f\u6536\u655b\u5230\u591a\u4e2a\u8f83\u597d\u7684\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u6700\u7ec8\u8868\u73b0\u66f4\u4e00\u81f4\u4e14\u66f4\u4f18\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u9762\u5bf9\u5177\u4f53\u95ee\u9898\u65f6\uff0c\u4e0d\u5e94\u56e0\u62c5\u5fc3\u8fc7\u62df\u5408\u800c\u9650\u5236\u7f51\u7edc\u7684\u5927\u5c0f\u3002\u76f8\u53cd\uff0c\u5e94\u4f18\u5148\u9009\u62e9\u8f83\u5927\u7684\u7f51\u7edc\uff0c\u5e76\u901a\u8fc7\u6b63\u5219\u5316\u7b49\u6280\u672f\u624b\u6bb5\u6765\u63a7\u5236\u8fc7\u62df\u5408\u3002\u8fd9\u6837\u7684\u7b56\u7565\u4e0d\u4ec5\u80fd\u786e\u4fdd\u6a21\u578b\u6709\u8db3\u591f\u7684\u5bb9\u91cf\u6765\u5b66\u4e60\u590d\u6742\u7684\u6a21\u5f0f\uff0c\u8fd8\u80fd\u907f\u514d\u9677\u5165\u8868\u73b0\u4e0d\u4f73\u7684\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u6700\u7ec8\u5b9e\u73b0\u66f4\u597d\u7684\u6cdb\u5316\u80fd\u529b\u548c\u66f4\u7a33\u5b9a\u7684\u6027\u80fd\u8868\u73b0\u3002  </p>"},{"location":"CV/Lecture9_Hardware_and_Software/#\u5c0f\u7ed3","title":"\u5c0f\u7ed3","text":"<p>\u5c0f\u7ed3\u5982\u4e0b\uff1a</p> <ul> <li>\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff1a\u4ecb\u7ecd\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u672c\u67b6\u6784\uff0c\u5f3a\u8c03\u4e86\u795e\u7ecf\u5143\u901a\u8fc7\u5168\u8fde\u63a5\u5c42\u76f8\u8fde\uff0c\u5c42\u95f4\u795e\u7ecf\u5143\u4e24\u4e24\u76f8\u8fde\uff0c\u800c\u5c42\u5185\u795e\u7ecf\u5143\u4e0d\u76f8\u8fde\u7684\u7279\u70b9\u3002</li> <li>\u5206\u5c42\u7ed3\u6784\u7684\u4f18\u52bf\uff1a\u7406\u89e3\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u5206\u5c42\u7ed3\u6784\u6709\u52a9\u4e8e\u9ad8\u6548\u6267\u884c\u77e9\u9635\u4e58\u6cd5\u548c\u6fc0\u6d3b\u51fd\u6570\u8fd0\u7b97\uff0c\u4ece\u800c\u63d0\u9ad8\u7f51\u7edc\u7684\u8ba1\u7b97\u6548\u7387\u3002</li> <li>\u901a\u7528\u51fd\u6570\u8fd1\u4f3c\u5668\uff1a\u7406\u89e3\u4e86\u795e\u7ecf\u7f51\u7edc\u5177\u6709\u901a\u7528\u51fd\u6570\u8fd1\u4f3c\u80fd\u529b\uff0c\u4f46\u8fd9\u4e00\u6027\u8d28\u5e76\u975e\u5176\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e3b\u8981\u539f\u56e0\u3002\u795e\u7ecf\u7f51\u7edc\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u80fd\u591f\u5bf9\u5b9e\u9645\u95ee\u9898\u4e2d\u7684\u51fd\u6570\u5f62\u5f0f\u505a\u51fa\u5408\u7406\u7684\u5047\u8bbe\u3002</li> <li>\u7f51\u7edc\u5bb9\u91cf\u4e0e\u6b63\u5219\u5316\uff1a\u8ba8\u8bba\u4e86\u7f51\u7edc\u5bb9\u91cf\u4e0e\u6a21\u578b\u6027\u80fd\u7684\u5173\u7cfb\uff0c\u660e\u786e\u4e86\u66f4\u5927\u5bb9\u91cf\u7684\u7f51\u7edc\u5728\u7406\u8bba\u4e0a\u8868\u73b0\u66f4\u4f18\uff0c\u4f46\u9700\u8981\u901a\u8fc7\u52a0\u5f3a\u6b63\u5219\u5316\uff08\u5982\u6743\u91cd\u8870\u51cf\uff09\u6765\u9632\u6b62\u8fc7\u62df\u5408\u3002\u540e\u7eed\u7ae0\u8282\u5c06\u8fdb\u4e00\u6b65\u63a2\u8ba8\u6b63\u5219\u5316\u6280\u672f\uff0c\u7279\u522b\u662f dropout\u3002</li> </ul>"},{"location":"DB/","title":"Index","text":"<p> \u7ea6 30 \u4e2a\u5b57 </p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u6570\u636e\u5e93\u7cfb\u7edf\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>\u6559\u6750: Database System Concepts 7th</li> <li>\u8001\u5e08: \u5b59\u5efa\u4f36</li> </ul>"},{"location":"DB/1.%20Introduction/","title":"1. Introduction","text":"<p> \u7ea6 1376 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Edgar F. Codd Turing Award 1981</p> <p>Charles W. Bachman 1973 ACM Turing Award for his outstanding contribution to database technology\u3002</p> <p>Jim Gray</p> Abstract <ul> <li>Database Systems</li> <li>Database Applications</li> <li>Purpose of Database Systems</li> <li>View of Data</li> <li>Data Models</li> <li>Database Languages</li> <li>Database Design</li> <li>Database Engine</li> <li>Database Users and Administrators</li> <li>History of Database Systems</li> </ul>"},{"location":"DB/1.%20Introduction/#database-systems","title":"Database Systems","text":"<p>DBMS (Database Management System)</p>"},{"location":"DB/1.%20Introduction/#11-purpose-of-database-systems","title":"1.1 Purpose of Database Systems","text":"<p>Database systems offer solutions to all the below problems.  </p> <ul> <li><code>data redundancy</code> (\u6570\u636e\u5197\u4f59) and inconsistency (\u4e0d\u4e00\u81f4)</li> </ul> <p>\u4e0d\u540c\u6587\u4ef6\u4e2d\u4fe1\u606f\u91cd\u590d</p> <ul> <li><code>data isolation</code> (\u6570\u636e\u5b64\u7acb\uff0c\u6570\u636e\u5b64\u5c9b)</li> </ul> <p>\u591a\u79cd\u6587\u4ef6\u548c\u683c\u5f0f</p> <ul> <li> <p>difficulty in <code>accessing data</code>\uff08\u5b58\u53d6\u6570\u636e\u56f0\u96be\uff09</p> </li> <li> <p><code>Integrity problems (\u5b8c\u6574\u6027\u95ee\u9898)</code></p> <ul> <li>\u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6\u88ab\u85cf\u5728\u6570\u636e\u548c\u4ee3\u7801\u4e2d\uff0c\u800c\u4e0d\u662f\u663e\u5f0f\u5730\u58f0\u660e\u3002</li> <li>e.g. \"account balance \\(\\geq\\) 1\"</li> </ul> </li> <li> <p><code>Atomicity problems (\u539f\u5b50\u6027\u95ee\u9898)</code></p> <ul> <li>Failures may leave database in an inconsistent state with partial updates carried out </li> <li>e.g. \u4ece A \u8d26\u6237\u8f6c\u8d26\u5230 B, \u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1 A \u8f6c\u51fa B \u8f6c\u5165\u8fd9\u4e24\u4ef6\u4e8b\u540c\u65f6\u8fdb\u884c\uff0c\u4e0d\u80fd\u88ab\u6253\u65ad\u3002\u8981\u4e48\u5b8c\u6210\uff0c\u8981\u4e48\u4e0d\u8fdb\u884c\u3002</li> </ul> </li> <li> <p><code>Concurrent access anomalies (\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38)</code></p> <ul> <li>Uncontrolled concurrent accesses can lead to inconsistencies  </li> </ul> <p> </p> </li> <li> <p>Security problems  </p> <ul> <li>Authentication (\u8ba4\u8bc1), Priviledge (\u6743\u9650), Audit (\u5ba1\u8ba1)</li> </ul> </li> </ul>"},{"location":"DB/1.%20Introduction/#111-characteristics-of-databases","title":"1.1.1 Characteristics of Databases","text":"<ul> <li>data persistence (\u6570\u636e\u6301\u4e45\u6027)</li> <li>convenience in accessing data (\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027)</li> <li>data integrity(\u6570\u636e\u5b8c\u6574\u6027)</li> <li>concurrency control for multiple user (\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236)</li> <li>failure recovery (\u6545\u969c\u6062\u590d)</li> <li>security control (\u5b89\u5168\u63a7\u5236)</li> </ul>"},{"location":"DB/1.%20Introduction/#12-view-of-data","title":"1.2 View of Data","text":"<p>Three-level abstraction of databases  </p> <p></p> <ul> <li>physical level: \u7269\u7406\u4e2d\u5982\u4f55\u4fdd\u5b58\u3001\u5b9e\u73b0\uff08\u5982\u78c1\u76d8\uff09</li> <li>logical level: \u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u4ec0\u4e48\u6570\u636e\uff1f\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f</li> <li>view level: \u4e0d\u540c\u4eba\u770b\u5230\u4e0d\u540c\u7684\u4ed6\u4eec\u6240\u9700\u8981\u7684\u6570\u636e</li> </ul> <p>Advantages:  </p> <ul> <li>Hide the complexities</li> <li><code>Enhance the adaptation to changes</code>    \u7269\u7406\u72ec\u7acb\u6027\uff1a\u786c\u4ef6\u73af\u5883\u53d8\u5316 (physical level), \u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u903b\u8f91\u5173\u7cfb\u548c\u6620\u5c04\u6765\u9002\u5e94\u65b0\u7684\u786c\u4ef6\u73af\u5883\u3002     \u903b\u8f91\u72ec\u7acb\u6027\uff1a\u903b\u8f91\u73af\u5883\u53d8\u5316 (logic level), \u53ef\u4ee5\u901a\u8fc7 view \u548c logic \u7684\u6620\u5c04\u4f7f\u5f97 view \u5c3d\u91cf\u5c11\u53d8\u5316\u3002  </li> </ul>"},{"location":"DB/1.%20Introduction/#schema-and-instance","title":"Schema and Instance","text":"<p>Similar to types and variables in programming languages.  </p> <ul> <li>Schema (\u6a21\u5f0f)\u2013 the logical structure of the database (physical/logical)</li> <li>Instance (\u5b9e\u4f8b) \u2013 the actual content of the database at a particular point in time </li> </ul>"},{"location":"DB/1.%20Introduction/#data-independence","title":"Data Independence","text":"<ul> <li>Physical Data Independence (\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027) \u2013 the ability to modify the physical schema without changing the logical schema</li> <li>Logical Data Independence (\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027) - the ability to modify the logical schema without changing the user view schema</li> </ul> <p>\u6620\u5c04\u4fee\u6539\uff0c\u4f46\u4e0d\u7528\u4fee\u6539 schema. </p>"},{"location":"DB/1.%20Introduction/#13-data-models","title":"1.3 Data Models","text":"<p>Data models is a collection of tools for describing data, data relationships, data semantics, data constraints.  </p> <ul> <li><code>Relational model(\u5173\u7cfb\u6a21\u578b)</code>   \uff08\u8868\u683c\uff09\u6570\u636e\u5e93\u7cfb\u7edf\u5c42\u9762</li> <li>Entity-Relationship(\u5b9e\u4f53-\u8054\u7cfb) data model    \u9700\u6c42\u5206\u6790\u5c42\u9762</li> <li>Object-based data models <ul> <li>Object-oriented  (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li><code>Object-relational (\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</code></li> </ul> </li> <li>Semistructured data model  (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</li> <li>Other older models:<ul> <li>Network model (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul> </li> </ul> <p>Relational Model</p> <p> </p> <p>12 tuples/rows, 4 attributes/columns. </p>"},{"location":"DB/1.%20Introduction/#14-datahase-languages","title":"1.4 Datahase Languages","text":""},{"location":"DB/1.%20Introduction/#141-data-definition-language-ddl-\u6570\u636e\u5b9a\u4e49\u8bed\u8a00","title":"1.4.1 Data Definition Language (DDL, \u6570\u636e\u5b9a\u4e49\u8bed\u8a00)","text":"<p>C \u8bed\u8a00\u91cc\u7684 struct \u7ecf\u8fc7\u7f16\u8bd1\u540e\u5168\u90e8\u53d8\u4e3a\u4e86\u4ee3\u7801\uff08\u6709\u4e00\u5f20\u7b26\u53f7\u8868\uff09\u4f46\u6570\u636e\u5e93\u91cc\u4e0d\u4f1a\u3002</p> <p>Data dictionary contains metadata (\u5143\u6570\u636e\uff0ci.e. data about data)</p> <ul> <li>DDL compiler generates a set of table templates stored in a data dictionary (\u6570\u636e\u5b57\u5178)</li> <li>Database schema </li> <li>Integrity constraints (\u5b8c\u6574\u6027\u7ea6\u675f)    Primary key (ID <code>uniquely</code>identifies instructors, \u4e3b\u952e)   Referential integrity (references constraint in SQL, \u53c2\u7167\u5b8c\u6574\u6027)   e.g. dept_name value in any instructor tuple must appear in department relation</li> <li>Authorization (\u6743\u9650)</li> </ul>"},{"location":"DB/1.%20Introduction/#142-data-manipulation-language-dml-\u6570\u636e\u64cd\u4f5c\u8bed\u8a00","title":"1.4.2 Data Manipulation Language (DML, \u6570\u636e\u64cd\u4f5c\u8bed\u8a00)","text":"<p>Two classes of languages </p> <ul> <li>Procedural (\u8fc7\u7a0b\u5f0f)\u2013 user specifies what data is required and how to get those data e.g. C</li> <li>Declarative (nonprocedural\uff0c\u9648\u8ff0\u5f0f\uff0c\u975e\u8fc7\u7a0b\u5f0f) \u2013 user specifies what data is required without specifying how to get those data e.g. SQL</li> </ul> <p>SQL is the most widely used query language</p>"},{"location":"DB/1.%20Introduction/#143-sql-query-language","title":"1.4.3 SQL Query Language","text":""},{"location":"DB/1.%20Introduction/#144-database-access-from-application-program","title":"1.4.4 Database Access from Application Program","text":"<p>\u6570\u636e\u5e93\u5fc5\u987b\u7531\u8fc7\u7a0b\u5f0f\u8bed\u8a00\u7f16\u5199\u3002</p> <p>Such computations and actions must be written in a host language \uff08\u5bbf\u4e3b\u8bed\u8a00\uff09 , such as C/C++, Java or Python.</p> <p>Application programs generally access databases through one of</p> <ul> <li>Language extensions to allow embedded SQL e.g. \u901a\u8fc7\u9884\u5904\u7406\u5668\uff0c\u5c06 select \u8bed\u53e5\u8bc6\u522b\u51fa\u6765\uff0c\u7ffb\u8bd1\u6210 C \u8bed\u8a00\u7684\u51fd\u6570\u8c03\u7528\u3002</li> <li><code>**API** (Application program interface)</code> e.g. ODBC/JDBC which allow SQL queries to be sent to a database. </li> </ul>"},{"location":"DB/1.%20Introduction/#15-database-design","title":"1.5 Database Design","text":"<ul> <li>Entity Relationship Model (\u5b9e\u4f53-\u8054\u7cfb\u6a21\u578b)    \u4e00\u5bf9\u4e00/\u4e00\u5bf9\u591a/\u591a\u5bf9\u4e00/\u591a\u5bf9\u591a  </li> </ul> <p><code>\u65e0\u7bad\u5934\uff0c\u8868\u793a\u591a\u5bf9\uff1f\u4e0a\u56fe\u4e2d\u4e3a\u591a\u5bf9\u591a</code></p> <p>\u56fe\u662f\u4e2d\u7acb\u7684\uff0c\u53ef\u4ee5\u7528\u5173\u7cfb\u6570\u636e\u5e93/\u9762\u5411\u5bf9\u8c61\u6570\u636e\u5e93\u5b9e\u73b0</p> <ul> <li> <p>Normalization Theory (\u89c4\u8303\u5316\u7406\u8bba)   Formalize what designs are bad, and test for them  </p> <p>Example</p> <p> </p> <pre><code>\u8fd9\u4e2a\u8868\u5b58\u5728\u5197\u4f59, department \u6709\u91cd\u590d\uff0c\u5e94\u8be5\u62c6\u5206\u4e3a\u4e24\u4e2a\u8868\uff08\u524d\u4e09\u5217\u548c\u540e\u4e09\u5217\uff09\n</code></pre> </li> </ul>"},{"location":"DB/1.%20Introduction/#16-database-enginee","title":"1.6 Database Enginee","text":"<ul> <li>The storage manager,</li> <li>The query processor component, </li> <li>The transaction management component.</li> </ul>"},{"location":"DB/1.%20Introduction/#storage-manager","title":"Storage Manager","text":"<p>\u4e3a\u4e86\u6570\u636e\u6301\u4e45\u5316\uff0c\u653e\u5728\u786c\u76d8\u91cc\uff0c\u4f46\u6570\u636e\u5904\u7406\u8981\u8fdb\u5165\u5185\u5b58\uff0c\u8fd9\u4e4b\u95f4\u5b58\u5728\u6570\u636e\u9e3f\u6c9f\u3002  </p> <p><code>\u6309\u5757\u8bbf\u95ee\u5185\u5b58</code> (4k/16k), \u7f13\u51b2\u7ba1\u7406\u3002</p> <ul> <li>File manager</li> <li>Buffer manager \u6570\u636e\u8fdb\u5165\u5185\u5b58\uff0c\u7f13\u51b2\u7ba1\u7406</li> <li>Authorization and integrity manager</li> <li>Transaction\uff08\u4e8b\u52a1\uff09 manager </li> </ul> <p>\u6570\u636e\u5e93\u91cc\u653e\u7684\u662f</p> <ul> <li>data files \u771f\u6b63\u7684\u6570\u636e</li> <li>data dictionary \u653e\u7684\u662f metadata</li> <li>statistical data \u7528\u4e8e\u6570\u636e\u5e93\u7684\u67e5\u8be2\u5904\u7406</li> <li>indices</li> </ul>"},{"location":"DB/1.%20Introduction/#query-processor","title":"Query Processor","text":"<p>The query processor components include:  </p> <ul> <li>DDL interpreter -- interprets DDL statements and records the definitions in the data dictionary.</li> <li>DML compiler -- translates DML statements in a query language into an evaluation plan consisting of low-level instructions that the query evaluation engine understands.<ul> <li>The DML compiler performs query optimization (\u67e5\u8be2\u4f18\u5316); that is, it picks the lowest cost evaluation plan from among the various alternatives.     \u6267\u884c\u8ba1\u5212\u4f1a\u6839\u636e\u7edf\u8ba1\u6570\u636e\u7684\u6539\u53d8\u800c\u6539\u53d8\u3002  </li> </ul> </li> <li>Query evaluation engine -- executes low-level instructions generated by the DML compiler.  </li> </ul> <ul> <li>Parsing(\u89e3\u6790) and translation</li> <li>Optimization(\u4f18\u5316)</li> <li>Evaluation(\u8bc4\u4f30)</li> </ul>"},{"location":"DB/1.%20Introduction/#transaction-management-\u4e8b\u52a1\u7ba1\u7406","title":"Transaction Management (\u4e8b\u52a1\u7ba1\u7406)","text":"<p>\u94f6\u884c\u8f6c\u8d26\uff0cA \u8f6c\u8d26\u5230 B, A \u4f59\u989d\u51cf\u6389 B \u4f59\u989d\u52a0\u4e0a\u3002 \u8981\u6709\u9694\u79bb\u6027\uff0c\u5ef6\u8fdf\u5199\u56de</p> <ul> <li>Recover Manager    ensures that the database remains in a consistent (correct) state despite system failures (e.g. power failures and operating system crashes) and transaction failures.   \u65e5\u5fd7\uff0c\u9632\u6b62\u5199\u56de\u6570\u636e\u5e93\u65f6\u51fa\u73b0\u65ad\u7535\u6216\u8005\u5d29\u6e83\u3002  </li> <li>Concurrency-control manager   controls the interaction among the concurrent transactions, to ensure the consistency of the database.   </li> </ul>"},{"location":"DB/1.%20Introduction/#17-database-users","title":"1.7 Database Users","text":"<p>\u521d\u7ea7\u7528\u6237-&gt; \u7a0b\u5e8f\u5458 -&gt; \u9ad8\u7ea7\u7528\u6237\uff08\u5206\u6790\u5e08\uff09-&gt; \u6570\u636e\u5e93\u7ba1\u7406\u5458</p> <p></p> <ul> <li>Database Administrator (DBA)</li> </ul>"},{"location":"DB/1.%20Introduction/#18-history","title":"1.8 History","text":"<ul> <li>1973 Turing Award: Charles W. Bachman   father of databases</li> <li>1981 Turing Award: Edgar F. Codd  </li> <li>1998 Turing Award: Jim Gray </li> <li>2014 Turing Award: Michael Stonebraker</li> </ul>"},{"location":"DB/10.%20Indexing/","title":"10. Indexing","text":"<p> \u7ea6 4731 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 24 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Basic Concepts</li> <li>Ordered Indices </li> <li>B+-Tree Index</li> <li>B+-Tree File Organization </li> <li>B-Tree Index Files</li> <li>Indices on Multiple Keys</li> <li>Indexing on Flash</li> <li>Indexing in Main Memory</li> <li>Write Optimized Indices</li> <li>Log Structured Merge (LSM) Tree</li> <li>Buffer Tree</li> <li>Bitmap Indices</li> </ul>"},{"location":"DB/10.%20Indexing/#101-basic-concepts","title":"10.1 Basic Concepts","text":"<p>Indexing mechanisms used to <code>speed up access</code> to desired data.    </p> <p>Search Key - attribute to set of attributes used to look up records in a file.  </p> <p>\u641c\u7d22\u952e - \u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u8bb0\u5f55\u7684\u4e00\u7ec4\u5c5e\u6027\u7684\u5c5e\u6027\u3002</p> <p>An index file consists of records (called index entries) of the form.  </p> <p>\u7d22\u5f15\u6587\u4ef6\u7531\u8868\u5355\u7684\u8bb0\u5f55\uff08\u79f0\u4e3a\u7d22\u5f15\u6761\u76ee\uff09\u7ec4\u6210\u3002</p> <p>Two basic kinds of indices:</p> <ul> <li> <p>Ordered indices: search keys are stored in sorted order</p> </li> <li> <p>Hash indices: search keys are distributed uniformly across \u201cbuckets\u201d using a \u201chash function\u201d. </p> </li> </ul>"},{"location":"DB/10.%20Indexing/#1011-index-evaluation-metrics","title":"10.1.1 Index Evaluation Metrics","text":"<p>\u8bc4\u4f30\u6307\u6807</p> <ul> <li>Access types supported efficiently<ul> <li>Point query: records with a specified value in the attribute. \u70b9\u67e5\u8be2\uff1a\u5c5e\u6027\u4e2d\u5177\u6709\u6307\u5b9a\u503c\u7684\u8bb0\u5f55</li> <li>Range query: records with an attribute value falling in a specified range of values.  \u8303\u56f4\u67e5\u8be2\uff1a\u5c5e\u6027\u503c\u843d\u5728\u6307\u5b9a\u503c\u8303\u56f4\u5185\u7684\u8bb0\u5f55\u3002</li> </ul> </li> <li>Access time</li> <li>Insertion time</li> <li>Deletion time</li> <li>Space overhead</li> </ul>"},{"location":"DB/10.%20Indexing/#102-ordered-indices","title":"10.2 Ordered Indices","text":"<ul> <li> <p>Primary index\uff08\u4e3b\u7d22\u5f15\uff09: in a <code>sequentially ordered file</code>, the index whose search key specifies the sequential order of the file.  </p> <p>\u4e3b\u7d22\u5f15\uff1a\u5728\u6309\u987a\u5e8f\u6392\u5e8f\u7684\u6587\u4ef6\u4e2d\uff0c\u5176\u641c\u7d22\u952e\u6307\u5b9a\u6587\u4ef6\u987a\u5e8f\u7684\u7d22\u5f15\u3002<code>\u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u6070\u597d\u6309\u7167search key \u8fdb\u884c\u6392\u5e8f</code></p> <ul> <li> <p>Also called clustering index\uff08\u805a\u96c6\u7d22\u5f15\uff09</p> </li> <li> <p>The search key of a primary index is usually but not necessarily the primary key.</p> </li> </ul> <p><code>search key\u901a\u5e38\u662f\u4e3b\u952e\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u662f\u4e3b\u952e\uff0c\u56e0\u4e3aprimary key\u53ef\u80fd\u7531\u591a\u4e2a\u5c5e\u6027\u7ec4\u5408\uff0c\u4f46\u662fsearch\u53ea\u80fd\u662f\u4e00\u79cd</code></p> </li> <li> <p>Secondary index\uff08\u8f85\u52a9\u7d22\u5f15\uff09: an index whose search key specifies an order different from the sequential order of the file.  Also called non-clustering index.</p> <p>\u8f85\u52a9\u7d22\u5f15\uff1a\u641c\u7d22\u952e\u6307\u5b9a\u7684\u987a\u5e8f\u4e0e\u6587\u4ef6\u7684\u987a\u5e8f\u4e0d\u540c\u7684\u7d22\u5f15\uff08\u4f8b\u5982\uff1a\u5b66\u751f\u7684\u5b66\u53f7\u641c\u7d22\u548cid\u4e0d\u4e00\u81f4\uff09</p> </li> </ul> <p>primary index on ID attribute of instructor</p> <p>\u4e3b\u7d22\u5f15\u548c\u6570\u636e\u5185\u7684\u987a\u5e8f\u662f\u4e00\u6837\u7684\u3002\u70b9\u67e5\u548c\u8303\u56f4\u67e5\u90fd\u662f\u6bd4\u8f83\u9ad8\u6548\u7684\u3002</p> <p> </p> <p>Secondary index on salary attribute of instructor</p> <p><code>\u5982\u679c key \u4e0d\u662f\u4e00\u4e2a\u4e3b\u952e\uff0c\u90a3\u53ef\u80fd\u4f1a\u5bf9\u5e94\u591a\u4e2a\u8bb0\u5f55\u3002</code></p> <p>\u5de5\u8d44\u4f5c\u4e3a\u8f85\u52a9\u7d22\u5f15\uff0c\u70b9\u641c\u7d22\uff0c\u9700\u8981\u5148\u6536\u96c6\u6240\u6709\u6307\u5b9a\u5de5\u8d44\u7684\u8001\u5e08\u7684\u5730\u5740\uff0c\u518d\u7528\u4e00\u4e2a\u5934\u6307\u9488\u8054\u7cfb\u5728\u4e00\u8d77\u3002value -&gt; \u5934\u7ed3\u70b9\uff08\u591a\u4e2a\uff09 -&gt; \u7ed3\u679c</p> <p> </p> <p>Primary index \u662f\u5f88\u5b9d\u8d35\u7684\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u5176\u4ed6\u90fd\u662f\u8f85\u52a9\u7d22\u5f15\u3002    </p> <ul> <li> <p>Dense index(\u7a20\u5bc6\u7d22\u5f15) \u2014 Index record appears for every search-key value in the file.   </p> <p>\u6bcf\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\u4e2d\u7684\u7d22\u5f15\u503c\uff0c\u90fd\u8981\u51fa\u73b0\u5728\u7d22\u5f15\u6587\u4ef6\u91cc\u9762\u3002</p> </li> </ul> <p><code>\u6839\u636e\u641c\u7d22\u7ed3\u679c\uff0c\u6bcf\u4e00\u4e2a\u641c\u7d22\u952e\u503c\u90fd\u6709\u4e00\u4e2a\u7d22\u5f15</code></p> <p> </p> <ul> <li> <p>Sparse Index\uff08\u7a00\u758f\u7d22\u5f15\uff09:  contains index records for only some search-key values.</p> <p>\u7a00\u758f\u7d22\u5f15\uff08\u7a00\u758f\u7d22\u5f15\uff09\uff1a\u4ec5\u5305\u542b\u67d0\u4e9b\u641c\u7d22\u952e\u503c\u7684\u7d22\u5f15\u8bb0\u5f55\u3002</p> <p> </p> <ul> <li> <p>Less space and less maintenance overhead for insertions and deletions.</p> <p>\u66f4\u5c11\u7684\u7a7a\u95f4\u548c\u66f4\u5c11\u7684\u63d2\u5165\u548c\u5220\u9664\u7ef4\u62a4\u5f00\u9500\u3002</p> </li> <li> <p>Generally slower than dense index for locating records.</p> <p>\u7528\u4e8e\u67e5\u627e\u8bb0\u5f55\uff0c\u901a\u5e38\u6bd4\u5bc6\u96c6\u7d22\u5f15\u6162\uff0c</p> </li> </ul> </li> </ul> <p>Good tradeoff: sparse index with an index entry for every block in file, corresponding to least search-key value in the block.</p> <p>\u826f\u597d\u7684\u6743\u8861\uff1a\u7a00\u758f\u7d22\u5f15\uff0c\u6587\u4ef6\u4e2d\u6bcf\u4e2a\u5757\u90fd\u6709\u4e00\u4e2a\u7d22\u5f15\u6761\u76ee\uff0c\u5bf9\u5e94\u4e8e\u5757\u4e2d\u7684\u6700\u5c0f\u641c\u7d22\u952e\u503c\u3002</p> <ul> <li>Multilevel Index \u591a\u7ea7\u7d22\u5f15</li> </ul> <p></p> <p>\u5982\u679c\u4e3b\u7d22\u5f15\u4e0d\u9002\u5408\u653e\u5728\u5185\u5b58\uff08\u7d22\u5f15\u8fc7\u5927\uff09\uff0c\u6b64\u65f6\u8bbf\u95ee\u4f1a\u53d8\u5f97\u5341\u5206\u9ad8\u6602</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a<code>\u5c06\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\u4e3b\u7d22\u5f15\u770b\u4f5c\u662f\u4e00\u4e2a\u987a\u5e8f\u6587\u4ef6\uff0c\u5728\u4e3b\u7d22\u5f15\u4e0a\u8fdb\u4e00\u6b65\u6784\u9020\u7a00\u758f\u7d22\u5f15</code></p> <ul> <li>\u5916\u90e8\u7d22\u5f15\u2014\u2014\u4e3b\u7d22\u5f15\u7684\u7a00\u758f\u7d22\u5f15</li> <li>\u5185\u90e8\u7d22\u5f15\u2014\u2014primary index</li> </ul> <p>\u5982\u679c\u5916\u90e8\u7d22\u5f15\u4f9d\u7136\u8fc7\u5927\uff0c\u53ef\u4ee5\u9488\u5bf9\u5916\u90e8\u7d22\u5f15\u8fdb\u4e00\u6b65\u521b\u5efa\u7d22\u5f15\u3002\u4ece\u8bb0\u5f55\u6587\u4ef6\u4e2d\u63d2\u5165\u6216\u8005\u5220\u9664\u65f6\uff0c\u5fc5\u987b\u66f4\u65b0\u6240\u6709\u7ea7\u522b\u7684\u7d22\u5f15\u3002</p>"},{"location":"DB/10.%20Indexing/#103-b-tree-index","title":"10.3 B+-Tree Index","text":"<ul> <li> <p>All paths from root to leaf are of the same length</p> <p>\u4ece\u6839\u5230\u53f6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6</p> </li> <li> <p>Inner node(not a root or a leaf): between \\(\\lceil n/2\\rceil\\) and \\(n\\) children.</p> <p>\u5185\u90e8\u8282\u70b9\uff08\u4e0d\u662f\u6839\u6216\u53f6\uff09\uff1a\\(\\lceil n/2\\rceil\\) \u5230 \\(n\\) \u4e2a\u5b69\u5b50</p> </li> <li> <p>Leaf node: between \\(\\lfloor n/2\\rfloor\\) and \\(n\u20131\\) values</p> </li> <li> <p>Special cases: </p> <ul> <li>If the root is not a leaf:  at least 2 children.</li> <li>If the root is a leaf :  between 0 and (n\u20131)values.</li> </ul> </li> </ul> <p><code>\u4e00\u822c\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u5757\u7684\u5927\u5c0f, 4K.</code></p> <p>B+ \u6811\u7684\u53c9\u662f\u975e\u5e38\u591a\u7684\uff0c\u76f8\u5e94\u7684\u9ad8\u5ea6\u5c31\u5f88\u4f4e\u3002</p> <p>eg: \u5047\u8bbe\u5b58\u653e\u7684\u6570\u636e\u662f\u5b66\u53f7\u536010 bytes\uff0c\u6307\u9488\u53604 bytes\uff0c\u90a3\u4e48\u5206\u53c9\u6570(max)= \uff084096 / \uff0810+4\uff09\uff09+1 = 293. \u5206\u53c9\u6570(min) =  \\(\\lceil n/2\\rceil\\) = 147</p> <p></p> <p>\u5173\u4e8einner node\u7ed3\u70b9\u7684\u7ed3\u6784</p> <p>\u4f60\u4f1a\u53d1\u73b0\u6307\u9488\u7684\u6570\u91cf\u662fvalue\u6570\u91cf+1\uff0c\u8bf4\u660e\u5206\u53c9\u6570(\u5b69\u5b50\u6570)\u662fserach key value\u6570\u91cf+1</p> <p></p> <p>\u5173\u4e8e\u53f6\u7ed3\u70b9\u7684\u7ed3\u6784</p> <ul> <li>\u7531\u4e8eB+\u6811\u7684\u53f6\u7ed3\u70b9\u53ea\u80fd\u591f\\(n-1\\)\u4e2avalue\uff0c\u6240\u4ee5\u5bf9\u4e8e$ i = 1\uff0c 2\uff0c . . .\uff0c n\u20131\\(\uff0c\u6307\u9488\\) Pi$ \u6307\u5411\u641c\u7d22\u952e\u503c\u4e3a \\(Ki\\) \u7684\u6587\u4ef6\u8bb0\u5f55</li> <li>\u591a\u51fa\u6765\u7684\u6307\u9488\\(P_n\\)\u6307\u5411\u4e0b\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u4e5f\u5c31\u662f\u5c06\u6240\u6709\u7684\u53f6\u5b50\u7ed3\u70b9\u8fde\u63a5\u5728\u4e00\u8d77</li> </ul> <p></p> <p>*<code>Example of B+-tree*</code></p> <ul> <li> <p>B+-tree for instructor file (n = 6) \u5185\u90e8\u7ed3\u70b9\u6307\u9488\u6700\u5927\u4e2a\u6570\uff08\u5206\u53c9\u6570\uff09</p> </li> <li> <p>Leaf nodes must have between 3 and 5 values </p> <p>between \\(\\lceil (n\u20131)/2\\rceil\\) and \\(n\u20131\\) values</p> </li> <li> <p>Non-leaf nodes other than root must have between 3 and 6 children</p> <p>between \\(\\lceil n/2\\rceil\\)  or \\(\\lfloor (n+1)/2 \\rfloor\\)and \\(n\\) children.</p> <p>\u76f8\u5e94\u7684value\u7684\u6570\u91cf\u4e3abetween\\(\\lceil n/2\\rceil - 1\\) and \\(n\u20131\\)</p> </li> <li> <p>Root must have at least 2 children.</p> </li> </ul> <p></p>"},{"location":"DB/10.%20Indexing/#1031-observations-about-b-trees","title":"10.3.1 Observations about B+-trees","text":"<p>\u5982\u679c\u6709\u5f88\u591a\u6587\u4ef6\u4e00\u6b21\u6027\u5efa\u7acb B+ \u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u5efa\u7acb\u3002</p> <ul> <li> <p>Level below root has at least \\(2 \\times \\lceil n/2\\rceil\\) \u6307\u9488</p> <p><code>\u6bcf\u4e00\u4e2ainner node \u6700\u5c11\u5177\u6709</code>\\(\\lfloor (n+1)/2 \\rfloor\\)\u4e2a\u6307\u9488</p> <p>\u6839\u7ed3\u70b9\u81f3\u5c11\u6709\u4e24\u4e2a\u5b69\u5b50</p> </li> <li> <p>Next level has at least \\(2 \\times \\lceil n/2\\rceil \\times \\lceil n/2\\rceil\\)\u6307\u9488s</p> <p>\u5982\u679c\u6709 K \u4e2a\u7d22\u5f15\u9879\uff08K\u4e2a\u6839\u7ed3\u70b9\uff09\uff0c\u5219\u6811\u9ad8\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 \\(\\lceil \\log_{\\lceil n/2 \\rceil}(K/2)\\rceil + 1\\).  \u9ad8\u5ea6\u6700\u5c0f\u4e3a \\(\\log_n(K)\\)</p> </li> </ul>"},{"location":"DB/10.%20Indexing/#1032-find--insert--delete","title":"10.3.2 Find &amp; Insert &amp; Delete","text":"<p>Example \u201cQuery on B+ Tree\u201d</p> <p>\u5bf9\u4e8erange query\uff0c\u5148\u627e\u5230\u4e0b\u754c\u548c\u4e0a\u754c\uff0c\u518d\u5229\u7528leaf\u662f\u5229\u7528\u6307\u9488\u8fde\u63a5\u5728\u4e00\u8d77\u7684\uff0c\u6240\u4ee5\u80fd\u83b7\u5f97\u7ed3\u679c</p> <p></p> <p>Example \"Examples of Insert on B+-Tree\"</p> <p></p> <p>B+-Tree before and after insertion of \u201cAdams \u201d</p> <p></p> <p><code>inner node \u7684 split</code></p> <p></p> <p>\u6ce8\u610f\u5185\u70b9\u7684 split \u548c\u53f6\u5b50\u7684\u4e0d\u4e00\u6837\u3002\u8981\u628a\u4e2d\u95f4\u7684\u8282\u70b9 move \u4e0a\u53bb\u3002</p> <p>Example \"Examples of Delete on B+-Tree\"</p> <p></p> <p>\u5f53\u4e00\u4e2ablcok\u4e2d\u7684\u8bb0\u5f55\u88ab\u5220\u9664\u65f6\uff0c\u5224\u65ad\u6b64\u65f6\u8fd9\u4e2a\u53f6\u7ed3\u70b9\u4e2dvalue\u7684\u6570\u91cf\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\\(\\lfloor n/2 \\rfloor\\)\u3002\u5982\u679c\u5c0f\u4e8e\u4e86\uff0c\u5c31\u8981\u5bfb\u6c42\u4e0e\u5144\u5f1f\u7ed3\u70b9\u5408\u5e76\u3002</p> <ul> <li>\u5982\u679c\u53ef\u4ee5\u4e0e\u5144\u5f1f\u7ed3\u70b9\u5408\u5e76\uff0c\u5c31\u8981\u5728\u5408\u5e76\u4e4b\u540e\uff0c\u68c0\u67e5\u7236\u4eb2\u7ed3\u70b9\u7684\u6307\u9488\u6570\u76ee\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\\(\\lfloor (n+1)/2 \\rfloor\\),\u4f9d\u6b21\u7c7b\u63a8</li> <li>\u5982\u679c\u4e0d\u80fd\u5408\u5e76\uff0c\u5144\u5f1f\u8282\u70b9\u7684value\u5df2\u7ecf\u6ee1\u4e86\u3002\u90a3\u4e48\u5c31\u4ece\u5144\u5f1f\u7ed3\u70b9\u4e2d\u501f\u4e00\u6761\u8bb0\u5f55\uff0c\u8865\u5145\u5230\u5f53\u524d\u7ed3\u70b9</li> </ul> <p></p> <p></p>"},{"location":"DB/10.%20Indexing/#1033-b--tree--height-and-size-estimation","title":"10.3.3 B+- tree : height and size estimation","text":"<p>\u5047\u8bbe\u4e00\u4e2ablock\u7684\u5927\u5c0f\u662f4K\uff0c\u6bcf\u4e00\u4e2aperson\u7684\u5927\u5c0f\u662f68\uff0c\u56e0\u6b64\u4e00\u4e2ablock\u4e2d\u7684\u8bb0\u5f55\u6570\u91cf\u662f60\u4e2a\u3002</p> <p>\u4e3a\u4e86\u8bb0\u5f551000000\u4e2aperson\uff0c\u6211\u4eec\u9700\u898116667\u4e2ablock\u3002</p> <p><code>B+\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u4e0d\u518d\u653e\u5165\u8bb0\u5f55\u6307\u9488\uff0c\u800c\u662f\u653e\u5165\u8bb0\u5f55\u672c\u8eab</code></p> <p>\u4e0b\u9762\u8ba1\u7b97B+\u6811\u7684n\u3002\u7531\u4e8eB+\u6811\u7684\u4e00\u4e2a\u5757\u662f4096\u5927\u5c0f\uff0c\u5305\u542bn\u4e2a\u6307\u9488\uff08\u5927\u5c0f\u4e3a4\uff09\uff0c\u4e0en-1\u4e2a\u5173\u952e\u5b57\u5927\u5c0f\uff08\u4e3apid\uff0c\u5927\u5c0f\u4e3a18\uff09\uff0c\u56e0\u6b64\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a\\(\uff084096-4\uff09/(18+4) + 1 = 187\\)\u3002</p> <p>\u5bf9\u4e8e\u5185\u90e8\u7ed3\u70b9\uff0c\u5176\u5b69\u5b50\u6307\u9488\u6700\u591a\u6709n = 187\u4e2a\uff0c\u5176\u5b69\u5b50\u6307\u9488\u6700\u5c11\u6709\\(\\lceil n/2 \\rceil = 94\\)\u4e2a\uff0c\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9\uff0cvalue\u6700\u591a\u6709\\(n-1 = 186\\)\u4e2a\uff0c\u6700\u5c11\u6709\\(94 -1 = 93\\)\u4e2a</p> <p>\u4e24\u5c42\u592a\u5c11\uff0c\u56db\u5c42\u592a\u591a\uff0c\u53ef\u4ee5\u5224\u65ad\u51fa\uff0c\u8868\u793a1000000\u4e2aperson\uff0c\u9700\u8981\u8fd9\u6837\u7684B+\u6811\u6070\u597d\u662f\u4e09\u5c42\u3002</p> <p>\u6c42\u51fa\u7528\u4e09\u5c42\u7684n\u4e3a187\u7684B+\u6811\u6765\u8868\u793a1000000\u4e2aperson\uff0c\u6240\u9700\u7ed3\u70b9\u6570\u76ee\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c</p> <ul> <li> <p>\u6700\u5927\u503c\uff1a\u5bf9\u4e8e\u53f6\u7ed3\u70b9\uff0c\u8ba9\u53f6\u7ed3\u70b9\u4fdd\u7559\u6700\u5c11\u7684value\uff0c\u4e5f\u5c31\u662f93\uff0c\u6b64\u65f6\u6240\u9700\u7684\u53f6\u7ed3\u70b9\u6570\u91cf\u6700\u591a,\u9700\u8981\\(1000000 / 93 = 10752.69\\),<code>\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u5411\u4e0b\u53d6\u6574\uff0c\u5426\u5219\u4f1a\u6709\u53f6\u7ed3\u70b9\u7684value\u5c0f\u4e8e93</code>\u3002\u7b2c\u4e8c\u5c42\u7684\u8ba1\u7b97\u548c\u6839\u7ed3\u70b9\u7684\u8ba1\u7b97\u90fd\u662f\u7528\u6700\u5c11\u7684\u6307\u9488\u657094\uff0c\u9700\u8981\\(\\lfloor 10752/94 \\rfloor = 114\\),\u6700\u540e\u8fd8\u9700\u8981\u4e00\u4e2a\u6839\u7ed3\u70b9\u3002</p> <p>\u6700\u7ec8\u9700\u8981\\(10752 + 114 + 1 = 10867\\)\u4e2a\u7ed3\u70b9</p> </li> <li> <p>\u5bf9\u4e8e\u53f6\u8282\u70b9\uff0c\u6700\u591a\u6709186\u4e2a\u503c\uff0c\u56e0\u6b64\u53f6\u8282\u70b9\u6700\u5c11\u4e2a\u6570\u53ef\u4ee5\u7528\\(1000000/186\\)\uff0c\u5f97\u52305736.344\uff0c<code>\u6ce8\u610f\u8fd9\u91cc\u8981\u8fdb\u884c\u4e0a\u53d6\u6574\uff0c\u5426\u5219\u5c06\u81f3\u5c11\u6709\u4e00\u4e2a\u53f6\u7ed3\u70b9\u5305\u542b\u7684\u503c\u5927\u4e8e186\u4e2a</code>\u3002\u5176\u4f59\u7b2c\u4e8c\u5c42\u4e0e\u6839\u8282\u70b9\u7684\u8ba1\u7b97\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7531\u4e8e\u7b2c\u4e8c\u5c42\u7684\u5b69\u5b50\u4e2a\u6570\u6700\u591a\u4e3a187\u4e2a\uff0c\u56e0\u6b64\u7b2c\u4e8c\u5c42\u5c065377\u9664\u4ee5187\uff0c\u5e76\u4e14\u5411\u4e0a\u53d6\u6574\u3002</p> <p>\u6700\u7ec8\u9700\u8981\\(5377 + 29 + 1 = 5407\\)\u4e2a\u7ed3\u70b9</p> </li> </ul>"},{"location":"DB/10.%20Indexing/#104-b-tree-file-organization","title":"10.4 B+-Tree File Organization","text":"<p>File Organization: heap\u5806\u7ed3\u6784\uff0csequential\u987a\u5e8f\u7ed3\u6784\uff0chash\u7ed3\u6784\uff0cB+\u6811\u7ed3\u6784</p> <p>\u6587\u4ef6\u7ec4\u7ec7  B+-Tree File Organization:</p> <ul> <li> <p>Leaf nodes in a B+-tree file organization store records, instead of pointers  </p> <p>\u53f6\u5b50\u8282\u70b9\u4e0d\u518d\u653e\u7d22\u5f15\u9879\uff0c\u653e\u8bb0\u5f55\u672c\u8eab\u3002 </p> </li> <li> <p>Helps keep data records clustered even when there are insertions/deletions/updates  </p> </li> </ul> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u534a\u6ee1\u7684\u8981\u6c42\u4ee5\u63d0\u9ad8\u7a7a\u95f4\u5229\u7528\u7387\u3002</p>"},{"location":"DB/10.%20Indexing/#1041-other-issues-in-indexing","title":"10.4.1 Other Issues in Indexing","text":"<ul> <li> <p>Record relocation and secondary indices</p> <p>\u8bb0\u5f55\u642c\u8fc1\u548c\u8f85\u52a9\u7d22\u5f15 </p> <p>If a record moves, all secondary indices that store record pointers have to be updated   </p> <p>\u5982\u679c\u8bb0\u5f55\u79fb\u52a8\uff0c\u5219\u5fc5\u987b\u66f4\u65b0\u5b58\u50a8\u8bb0\u5f55\u6307\u9488\u7684\u6240\u6709\u8f85\u52a9\u7d22\u5f15</p> <p>Node splits in B+-tree file organizations become very expensive  </p> <p>Solution: use primary-index search key instead of record pointer in secondary index</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u5728\u8f85\u52a9\u7d22\u5f15\u4e2d\u4f7f\u7528\u4e3b\u7d22\u5f15\u641c\u7d22\u952e\u800c\u4e0d\u662f\u8bb0\u5f55\u6307\u9488</p> <p>\u4f8b\u5982\uff1a\u5229\u7528\u5b66\u751f\u7684\u540d\u5b57\u627e\u5230primary key\uff08\u8f85\u52a9\u7d22\u5f15\uff09\uff0c\u518d\u5229\u7528primary key\u5bf9\u5e94\u7269\u7406\u5730\u5740\uff08\u4e3b\u7d22\u5f15\uff09\uff0c\u4e00\u65e6\u5730\u5740\u6539\u53d8\uff0c\u53ea\u9700\u8981\u4fee\u6539\u4e3b\u7d22\u5f15\u4e2d\u7684primary key\u5373\u53ef</p> <p><code>\u597d\u5904\u662f\uff1a\u5730\u5740\u6539\u53d8\u65f6\u53ea\u9700\u8981\u4fee\u6539\u5c40\u90e8\uff0c\u574f\u5904\u662f\uff1a\u67e5\u627e\u65f6\u9700\u8981\u5148\u627e\u5230primary key\uff0c\u518d\u901a\u8fc7primary key\u627e\u5230\u5bf9\u5e94\u7684\u5730\u5740</code></p> </li> <li> <p>Variable length strings as keys \u53d8\u957f\u5b57\u7b26\u4e32\u4f5c\u4e3akey </p> <p>Variable fanout  \u4f7f\u7528\u7a7a\u95f4\u5229\u7528\u7387\uff08space utilization\uff09\u4f5c\u4e3a\u62c6\u5206\u7684\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u6307\u9488\u6570</p> </li> <li> <p>Prefix compression \u524d\u7f00\u538b\u7f29 </p> <p>Key values at internal nodes can be prefixes of full key  </p> <p>\u5185\u90e8\u8282\u70b9\u7684\u952e\u503c\u53ef\u4ee5\u662f\u5b8c\u6574\u952e\u7684\u524d\u7f00</p> <p>Keep enough characters to distinguish entries in the subtrees separated by the key value</p> <p>\u4fdd\u7559\u8db3\u591f\u7684\u5b57\u7b26\u6765\u533a\u5206\u5b50\u6811\u4e2d\u7531\u952e\u503c\u5206\u9694\u7684\u6761\u76ee</p> <p>Keys in leaf node can be compressed by sharing common prefixes</p> <p>\u53f6\u8282\u70b9\u4e2d\u7684\u952e\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u516c\u5171\u524d\u7f00\u6765\u538b\u7f29</p> </li> </ul>"},{"location":"DB/10.%20Indexing/#105-bulk-loading-and-bottom-up-build","title":"10.5 Bulk Loading and Bottom-Up Build","text":""},{"location":"DB/10.%20Indexing/#1051-bottom-up-build","title":"10.5.1 Bottom-Up Build","text":"<p>Inserting entries one-at-a-time into a B+-tree requires \\(\\geq 1\\) IO per entry   </p> <p>\u7ed9\u5b9a\u4e00\u5927\u6279\u7684\u6570\u636e\uff0c\u9700\u8981\u5efa\u7acbB+\u6811\u7d22\u5f15\uff0c\u76f8\u5f53\u4e8e\u8981\u4e00\u6b21\u6027\u63d2\u5165\u5f88\u591a\u7d22\u5f15\u9879</p> <ul> <li> <p><code>Efficient alternative 1: Insert in sorted order</code></p> <p>\u5148\u6392\u5e8f\u518d\u63d2\u5165\uff0c\u5c40\u90e8\u6027\u8f83\u597d\uff0c\u51cf\u5c11 I/O. </p> <p>\u7f3a\u70b9\uff1a\u5927\u591a\u6570\u53f6\u8282\u70b9\u662f\u534a\u6ee1\u7684\uff0cB+\u6811\u6548\u7387\u8f83\u4f4e\u3002</p> </li> <li> <p><code>Efficient alternative 2: Bottom-up B+-tree construction</code></p> <ul> <li> <p>First sort index entries  \u9996\u5148\u5bf9\u7d22\u5f15\u6761\u76ee\u8fdb\u884c\u6392\u5e8f</p> </li> <li> <p>Then create B+-tree layer-by-layer, starting with leaf level</p> <p>\u7136\u540e\u9010\u5c42\u521b\u5efa B+-tree\uff0c\u4ece\u53f6\u7ea7\u522b\u5f00\u59cb</p> </li> <li> <p>The built B+-tree is written to disk using sequential I/O operations</p> <p>\u4f7f\u7528\u987a\u5e8f I/O \u64cd\u4f5c\u5c06\u6784\u5efa\u7684 B+ \u6811\u5199\u5165\u78c1\u76d8</p> </li> </ul> </li> </ul> <p> </p> <p>\u5b58\u5728\u95ee\u9898\uff1a\u5047\u5982\u9700\u8981\u6392\u5e8f\u7684\u7d22\u5f15\u80fd\u591f\u653e\u5728\u5185\u5b58\u5f53\u4e2d\uff0c\u90a3\u4e48\u5185\u90e8\u6392\u5e8f\u4e00\u6b21\u6392\u597d\u3002\u5047\u5982\u9700\u8981\u6392\u5e8f\u7684\u7d22\u5f15\u4e0d\u80fd\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528\u5916\u90e8\u6392\u5e8f\u65b9\u6cd5\u3002</p> <p>\u81ea\u5e95\u5411\u4e0a\u6784\u5efaB+\u6811\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u5982\u4f55\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff1f\u53ef\u4ee5\u4e00\u6b21\u6027\u5199\u56de\u53bb\uff0c\u4e5f\u53ef\u4ee5\u8fb9\u6784\u5efa\u8fb9\u5199\u56de\u53bb\u3002</p> <p><code>\u6700\u597d\u7684\u65b9\u5f0f\uff1a\u4e00\u5c42\u4e00\u5c42\u5199\u56de\u53bb\uff0c\u4ece\u53f6\u5b50\u5c42\u5f00\u59cb\uff0c\u5c42\u5e8f\u5411\u4e0a\u904d\u5386\u3002\uff08\u672c\u8d28\u662f\u8fb9\u6784\u5efa\u8fb9\u5199\u56de\uff09</code></p> <p>\u4ee3\u4ef7\uff1a1 seek\uff08\u5b9a\u4f4d\uff09 + 9 block transfer</p> <p>\u8fd9\u6837\u7684\u597d\u5904\u662f\uff1a\u5047\u5982\u6211\u4eec\u8981\u987a\u5e8f\u8bbf\u95ee\uff08\u626b\u63cf\u6216\u8005range query\uff09\u6240\u6709\u7684\u7d22\u5f15\u9879\uff0c\u8fd9\u4e9b\u7d22\u5f15\u9879\u662f\u5168\u90e8\u653e\u5728\u78c1\u76d8\u7684\u540c\u4e00\u533a\u57df\u7684\uff0c\u4e14\u662f\u8fde\u7eed\u653e\u7f6e\u7684\u3002\u78c1\u76d8\u8bfb\u5199\u5934\u53ea\u9700\u8981\u4e00\u6b21\u5b9a\u4f4d</p>"},{"location":"DB/10.%20Indexing/#1052-bulk-insert-index-entries","title":"10.5.2 Bulk insert index entries","text":"<p>\u6279\u91cf\u88c5\u8f7d</p> <p>\u5047\u5982\u6709\u4e24\u9897B+\u6811\uff0c\u90fd\u662f\u7531\u5e95\u5411\u4e0a\u6784\u5efa\u8d77\u6765\u7684\uff0c\u90a3\u4e48\u6b64\u65f6\u5982\u679c\u6211\u4eec\u60f3\u8981Merge\u8fd9\u4e24\u68f5B+\u6811\uff0c\u8be5\u600e\u4e48\u529e</p> <p>\u76f4\u63a5\u91cd\u6784\u4e00\u4e2aB+\u6811\u3002\u5148\u5bf9\u6240\u6709\u7684\u53f6\u7ed3\u70b9\u7684\u952e\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4e24\u68f5B+\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f\u6709\u5e8f\u7684\u4e14\u8fde\u7eed\u5b58\u653e\u5728\u78c1\u76d8\u4e2d\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u8fd9\u4e24\u68f5\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u7684\u952e\u503c\u5206\u522b\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21Seek\uff0c\u518d\u5229\u7528mergesort\u5373\u53ef</p> <p> </p> <ul> <li>\u7b2c\u4e00\u6b65\uff1a\u5148\u5bf9\u8fd9\u4e9b\u952e\u503c\u6392\u597d\u5e8f\u3002</li> <li>\u7b2c\u4e8c\u6b65\uff1a\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u4e0a\u4e00\u4e2aB+\u6811\u7684\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\uff0c\u8fdb\u5165\u5185\u5b58\u5f53\u4e2d\uff0c\u7531\u4e8e\u4e0a\u4e00\u4e2aB+\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff0c\u56e0\u6b64\u9700\u89811\u6b21Seek\uff0c6\u6b21Block Transfer\u3002</li> <li>\u7b2c\u4e09\u6b65\uff1a\u5229\u7528\u8fd9\u4e9b\u65b0\u7684\u952e\u503c\uff0c\u548c\u524d\u9762\u90a3\u9897B+\u6811\u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u7684\u952e\u503c\uff0c\u6392\u597d\u5e8f\uff0c\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u51fa\u65b0\u7684B+\u6811</li> <li>\u7b2c\u56db\u6b65\uff1a\u628a\u8fd9\u4e2a\u5904\u4e8e\u5185\u5b58\u4e2d\u7684B+\u6811\u6309\u7167\u4ece\u5e95\u5411\u4e0a\u5c42\u5e8f\u904d\u5386\u7684\u987a\u5e8f\uff0c\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u9700\u89811\u6b21Seek\uff0c13\u4e2aBlock Transfer\u3002</li> </ul> <p>Merge two existing two B+-trees , to create a new B+-tree using the Bottom-UP Build algorithm, as in LSM-tree Index  </p> <p>\u5047\u8bbe\u6709\u4e24\u68f5\u8fd9\u6837\u751f\u6210\u7684 B+ \u6811\uff0c\u5c06\u4ed6\u4eec\u5408\u5e76\u5728\u4e00\u8d77\u3002\u9996\u5148\u628a\u53f6\u5b50\u8282\u70b9\u62ff\u51fa\u6765\u6392\u5e8f\u3002  </p>"},{"location":"DB/10.%20Indexing/#106-multiple-key-access","title":"10.6 Multiple-Key Access","text":"<ol> <li><code>\u65b9\u6cd5\u4e00\uff1a</code>\u5206\u522b\u5bf9dept_name \u548c salary\u90fd\u5efa\u7acb\u7d22\u5f15\uff0c\u67e5\u8be2\u4e4b\u540e\u6c42\u4ea4\u96c6\u5373\u53ef</li> <li><code>\u65b9\u6cd5\u4e8c\uff1a</code>\u5efa\u7acb\u4e8c\u5143\u7ec4\uff08\u7b26\u5408\u641c\u7d22\u952e\uff09\uff0c\u8bcd\u5178\u6392\u5e8f</li> </ol>"},{"location":"DB/10.%20Indexing/#1061-indices-on-multiple-keys","title":"10.6.1 Indices on Multiple Keys","text":"<p>Composite search keys are search keys containing more than one attribute  \u590d\u5408\u641c\u7d22\u952e\u662f\u5305\u542b\u591a\u4e2a\u5c5e\u6027\u7684\u641c\u7d22\u952e</p> <p>Lexicographic ordering: \\((a_1, a_2) &lt; (b_1, b_2)\\) if either \\(a_1 &lt; b_1\\), or \\(a_1=b_1\\) and \\(a_2 &lt; b_2\\).  </p> <p>\u5355\u4e2a key, \u4e0d\u540c key \u4e4b\u95f4\u7ec4\u5408\u90fd\u53ef\u4ee5\u5efa\u7acb B+ \u6811\u3002\u8fd9\u6837\u4f1a\u6709\u5f88\u591a\u7ec4\u5408\uff0c\u53ef\u4ee5\u5728\u9891\u7e41\u51fa\u73b0\u7684\u67e5\u8be2\u5c5e\u6027\u4e0a\u5efa\u7acb B+ \u6811\u3002</p> <p></p> <p><code>\u5229\u7528\u590d\u5408\u641c\u7d22\u952e\u6784\u5efa\u7684B+\u6811\uff0c\u5982\u679c\u4ec5\u4ec5\u5229\u7528\u7b2c\u4e8c\u4e2a\u5c5e\u6027\u8fdb\u884c\u67e5\u8be2\uff0c\u6548\u679c\u5f80\u5f80\u4e0d\u9002\u5408\u5f88\u597d\uff0c\u5982\u4e0a\u65b9\u7684salary\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u4e1c\u4e00\u5757\u897f\u4e00\u5757</code></p>"},{"location":"DB/10.%20Indexing/#107-indexing-in-main-memory","title":"10.7 Indexing in Main Memory","text":"<p><code>cache \u6309 cache line \u4f20\u8f93, \u53ea\u6709 64B.</code> </p> <ul> <li> <p>Random access in memory  </p> <ul> <li> <p>Much cheaper than on disk/flash, but still expensive compared to cache read</p> </li> <li> <p>Binary search for a key value within a large B+-tree node results in many cache misses  </p> <p>\u4e8c\u5206\u67e5\u627e\u53ef\u80fd\u5e26\u6765\u5f88\u591a cache miss.  </p> </li> <li> <p>Data structures that make best use of cache preferable \u2013 cache conscious </p> <p>\u6700\u597d\u5229\u7528cache\u7684\u6570\u636e\u7ed3\u6784 - \u7f13\u5b58\u610f\u8bc6</p> </li> </ul> </li> </ul> <p>B+- trees with small nodes that fit in cache line are preferable to reduce cache misses  \u6700\u597d\u4f7f\u7528\u5177\u6709\u9002\u5408\u7f13\u5b58\u884c\u7684 \u5c0f\u8282\u70b9 \u7684 B+- \u6811\u6765\u51cf\u5c11\u7f13\u5b58miss</p> <p>search key \u548c pointer \u53ef\u4ee5\u5206\u5f00\u653e\u3002</p> <p>Key idea:  </p> <ul> <li> <p>use large node size to optimize disk access, </p> </li> <li> <p>but structure data within a node using a tree with small node size, instead of using an array, to optimize cache access.</p> </li> </ul> <p>\u4f46\u662f\u4f7f\u7528\u8282\u70b9\u5927\u5c0f\u8f83\u5c0f\u7684\u6811\u800c\u4e0d\u662f\u4f7f\u7528\u6570\u7ec4\u6765\u6784\u5efa\u8282\u70b9\u5185\u7684\u6570\u636e\uff0c\u4ee5\u4f18\u5316\u7f13\u5b58\u8bbf\u95ee\u3002</p> <p></p> <p>\u4f8b\u5982\uff0c\u628aB+\u6811\u7684\u7ed3\u70b9\u548c\u6307\u9488\u5206\u5f00\u6765\u6392\u5217\uff1b\u53c8\u4f8b\u5982\uff0c\u628aB+\u6811\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u4e0a\uff0c\u5efa\u7acb\u4e00\u4e2a\u5c0fB+\u6811\uff0c\u7528\u6765\u5feb\u901f\u67e5\u627e\u952e\u503c\u3002</p>"},{"location":"DB/10.%20Indexing/#108-indexing-on-flash","title":"10.8 Indexing on Flash","text":"<p>Flash \u91cc\u4e0d\u662f\u5373\u65f6\u4fee\u6539\uff0c\u800c\u662f\u5148\u64e6\u6389\u518d\u5199\u3002\u540c\u65f6\u64e6\u7684\u6b21\u6570\u662f\u6709\u9650\u5236\u7684\u3002\u56e0\u6b64\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4ece\u5e95\u6784\u5efa\uff0c\u7136\u540e\u987a\u5e8f\u5199\u5165\u3002</p> <ul> <li> <p>Random I/O cost much lower on flash  </p> <p>20 to 100 microseconds for read/write</p> </li> <li> <p>Writes are not in-place, and (eventually) require a more expensive erase \u5199\u5165\u4e0d\u662f\u5c31\u5730\u7684\uff0c\u5e76\u4e14\uff08\u6700\u7ec8\uff09\u9700\u8981\u66f4\u6602\u8d35\u7684\u64e6\u9664</p> </li> <li> <p>Optimum page size therefore much smaller</p> </li> <li> <p>Bulk-loading still useful since it minimizes page erases</p> <p>\u6279\u91cf\u52a0\u8f7d\u4ecd\u7136\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9875\u9762\u64e6\u9664</p> </li> <li> <p>Write-optimized tree structures (i.e., LSM-tree) have been adapted to minimize page writes for flash-optimized search trees  </p> </li> </ul> <p>\u5199\u4f18\u5316\u7d22\u5f15\u7ed3\u6784 </p> <p>Two approaches to reducing cost of writes</p> <ul> <li> <p>Log-structured merge tree (LSM-tree)</p> </li> <li> <p>Buffer tree</p> </li> </ul>"},{"location":"DB/10.%20Indexing/#1081-log-structured-merge-lsm-tree","title":"10.8.1 Log Structured Merge (LSM) Tree","text":"<p>\u65e5\u5fd7\u5f52\u5e76\u6811</p> <ul> <li>\u9996\u5148\u5185\u5b58\u4e2d\u6709\u4e00\u4e2aB+\u6811\\(L_0\\),\u5185\u5b58\u4e2d\u7684B+\u6811\u5199\u6ee1\u4e4b\u540e\uff0c\u9a6c\u4e0a\u5199\u5165\u5230\u78c1\u76d8\u4e2d\u3002\u8fd9\u4e2a\u5199\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u628aB+\u6811\u53f6\u5b50\u7ed3\u70b9\u4e0a\u7684\u8fd9\u4e9b\u5757\u5199\u8fdb\u78c1\u76d8\uff0c\u53ef\u4ee5\u505a\u5230\u521a\u521a\u6240\u8ff0\u7684 1\u6b21Seek\uff0c\u7136\u540e\u8fde\u7eed\u5199\u5165\u3002</li> <li>\u4e0b\u6b21\uff0c\u5185\u5b58\u4e2d\u7684B+\u6811\uff08\\(L_0\\)\uff09\u53c8\u6ee1\u4e86\uff0c\u5c31\u53ef\u4ee5\u548c\u78c1\u76d8\u4e2d\u7684B+\u6811(\\(L_1\\))\u8fdb\u884c\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e\u5185\u5b58\u4e2dB+\u6811\u7684\u53f6\u5b50\uff0c\u8981\u548c\u78c1\u76d8\u4e2dB+\u6811\u7684\u53f6\u5b50\u5408\u5e76\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e24\u6b21Seek\uff0c\u52a0\u4e0a\u5408\u5e76\u597d\u7684\u6811\u7684\u7ed3\u70b9\u6570\u76ee\u4e2aTransfer + \u78c1\u76d8\u4e2dB+\u6811\u53f6\u8282\u70b9\u5757\u6570\u4e2aTransfer\u3002</li> <li>\u5728\u78c1\u76d8\u4e2d\uff0c\u5982\u679c\\(L1\\)\u8fd9\u4e2aB+\u6811\u6ee1\u4e86\uff08\u78c1\u76d8\u4e2d\u5bf9\u5404\u4e2a\u5927\u5c0f\u7684B+\u6811\u90fd\u6709\u5927\u5c0f\u9650\u5236\uff09\uff0c\u90a3\u4e48\u5c31\u4f1a\u81ea\u52a8\u62f7\u8d1d\u5230\\(L2\\)\u7684\u4f4d\u7f6e\uff0c\u628aL1\u7684\u4f4d\u7f6e\u7a7a\u51fa\u6765\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li> <li><code>Size threshold for $L_{i+1}$ tree is $k$ times size threshold for $L_i$ tree</code></li> </ul> <p>\u8fd9\u6837\u6211\u4eec\u628a\u968f\u673a\u5199\u53d8\u4e3a\u4e86\u987a\u5e8f\u5199\u3002\u4f46\u6b64\u65f6\u67e5\u627e\u4e00\u4e2a\u7d22\u5f15\uff0c\u5c31\u8981\u904d\u5386\u6240\u6709 B+ \u6811\u3002</p> <ul> <li> <p>Benefits of LSM approach</p> <ul> <li> <p>Inserts are done using only sequential I/O operations</p> <p>\u4ec5\u4f7f\u7528\u987a\u5e8f I/O \u64cd\u4f5c\u5b8c\u6210\u63d2\u5165</p> </li> <li> <p>Leaves are full, avoiding space wastage</p> <p>\u53f6\u5b50\u9971\u6ee1\uff0c\u907f\u514d\u7a7a\u95f4\u6d6a\u8d39</p> </li> <li> <p>Reduced number of I/O operations per record inserted as compared to normal B+-tree (up to some size)</p> <p>\u4e0e\u666e\u901a B+ \u6811\u76f8\u6bd4\uff0c\u6bcf\u6761\u8bb0\u5f55\u63d2\u5165\u7684 I/O \u64cd\u4f5c\u6570\u51cf\u5c11\uff08\u6700\u591a\u4e00\u4e9b\u5927\u5c0f\uff09</p> </li> </ul> </li> <li> <p>Drawback of LSM approach</p> <ul> <li> <p>Queries have to search multiple trees</p> <p>\u5047\u5982\u6211\u4eec\u8981\u67e5\u627e\u4e00\u4e2a\u952e\u503c\uff0c\u672c\u6765\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e00\u4e2aB+\u6811\u4e2d\u67e5\u627e\uff0c\u73b0\u5728\u6211\u4eec\u8981\u5728L0\u3001L1\u3001L2\u2026\u8fd9\u4e9bB+\u6811\u79cd\uff0c\u90fd\u8981\u67e5\u627e\uff0c\u67e5\u8be2\u4ee3\u4ef7\u589e\u5927\u3002</p> </li> <li> <p>Entire content of each level copied multiple times</p> <p>\u6bcf\u4e2alevel\u7684\u5168\u90e8\u5185\u5bb9\u88ab\u590d\u5236\u4e86\u591a\u6b21</p> <p>\u6bcf\u6b21\u5185\u5b58\u79cd\u7684B+\u6811\u6ee1\u4e86\u4ee5\u540e\u90fd\u9700\u8981\u5408\u5e76\uff0c\u5408\u5e76\u6b21\u6570\u592a\u591a\u3002</p> </li> </ul> </li> </ul> <p>Stepped Merge Index </p> <p></p> <p><code>Stepped-merge index: variant of LSM tree with *k* trees at each level on disk</code></p> <ul> <li>When all k indices exist at a level, merge them into one index of next level. </li> <li>Reduces write cost compared to LSM tree</li> </ul> <p>But queries are even more expensive since many trees need to be queries</p> <p>\u539f\u5148\u7684\u7ed3\u6784\u4e2d\uff0cMerge \u64cd\u4f5c\u592a\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u5408\u5e76\u3002</p> <p>\u5185\u5b58\u4e2d\u7684B+\u6811\u6ee1\u4e86\uff0c\u5148\u5199\u5230\u78c1\u76d8\u4e2d\uff1b\u4e0b\u6b21\u5185\u5b58\u4e2dB+\u6811\u53c8\u6ee1\u4e86\uff0c\u53c8\u5199\u5230\u5185\u5b58\u4e2d\u3002\u76f4\u5230\u78c1\u76d8\u4e2dL0\u7ea7\u522b\u5927\u5c0f\u7684B+\u6811\u8fbe\u5230K\u4e2a\u4ee5\u540e\uff0c\u518d\u4e00\u8d77\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u7684L1\u3002</p> <p>\u4e0a\u8ff0\u4f18\u5316\u7ed3\u6784\uff0c\u867d\u7136\u51cf\u5c11\u4e86Merge\u7684\u6b21\u6570\uff0c\u4e14\u7531\u4e8e\u6bcf\u6b21\u5408\u5e76\u662f\u987a\u5e8f\u8bbf\u95ee\uff0c\u51cf\u5c11\u78c1\u76d8I/O\u7684\u6b21\u6570\uff1b\u4f46\u662f\u7f3a\u70b9\u662f\u67e5\u627e\u66f4\u52a0\u9ebb\u70e6(\u78c1\u76d8\u4e2dB+\u6811\u7684\u6570\u91cf\u66f4\u591a\uff0c\u56e0\u6b64\u67e5\u627e\u4e00\u4e2a\u952e\u503c\uff0c\u9700\u8981\u6bcf\u4e00\u4e2aB+\u6811\u90fd\u67e5\u627e\u4e00\u904d)\u3002</p> <p>Bloom Filter</p> <p>Bloom Filter \u76f8\u5f53\u4e8e\u5bf9\u6570\u636e\u7684bit\u8fdb\u884c\u8bb0\u5f55\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u662f1\uff0c\u5c31\u5f53\u68c0\u6d4b\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e3a1\uff0c\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u5c06\u67e5\u8be2key\u7684\u503c\u4e0e\u68c0\u6d4bbits\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u6709\u4e00\u4f4d\u5bf9\u4e0d\u4e0a\uff0c\u8bf4\u660e\u80af\u5b9a\u627e\u4e0d\u5230\uff0c\u5982\u679c\u5168\u90fd\u5bf9\u4e0a\u4e86\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u627e\u5230</p> <p>\u4e3a\u6b64\uff0c\u53ef\u4ee5\u5728\u78c1\u76d8\u4e0a\u6bcf\u4e00\u4e2aB+\u6811\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u5e03\u9686\u8fc7\u6ee4\u5668\u3002\u6bcf\u6b21\u8981\u67e5\u627e\u4e00\u4e2a\u952e\u503c\u65f6\uff0c\u9996\u5148\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u952e\u503c\u53ef\u4e0d\u53ef\u80fd\u5728\u8fd9\u68f5\u6811\u4e2d\uff1b\u82e5\u4e0d\u53ef\u80fd\uff0c\u90a3\u4e48\u8fd9\u68f5\u6811\u6839\u672c\u4e0d\u7528\u53bb\u67e5\u627e\u3002</p>"},{"location":"DB/10.%20Indexing/#1082-buffer-tree","title":"10.8.2 Buffer Tree","text":"<ul> <li> <p>\u5411B+\u6811\u4e2d\u63d2\u5165\u4e00\u4e2a\u952e\u503c\u65f6\uff0c\u4e0d\u662f\u76f4\u63a5\u5411\u4e0b\u4f20\u8f93\uff0c\u4f20\u5230\u53f6\u8282\u70b9\u4e2d\uff0c\u800c\u662f\u5148\u653e\u5728\u5185\u90e8\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u5c0f\u5c0f\u7684Buffer\u4e2d\u3002</p> </li> <li> <p>\u7f13\u51b2\u533a\u6ee1\u4e86\u4ee5\u540e\uff0c\u63d2\u5165\u7684\u5185\u5bb9\u4f1a\u79fb\u52a8\u5230\u66f4\u4f4e\u7684\u7ea7\u522b\uff0c\u4e5f\u5c31\u662f\u4e0b\u4e00\u5c42\uff0c\u8fd9\u4e00\u5c42\u7684\u5b50\u8282\u70b9\u7684buffer\u3002</p> </li> <li> <p><code>\u5047\u5982\u4e00\u4e2abuffer tree\u7684\u5185\u90e8\u7ed3\u70b9\u9700\u8981\u5206\u88c2\uff0c\u90a3\u4e48\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\u4e5f\u4f1a\u5206\u88c2\uff0c\u5404\u81ea\u5206\u88c2\u8fdb\u5165\u5404\u81ea\u7684\u90e8\u5206</code>\u3002</p> </li> </ul> <p>\u597d\u5904\uff1a\u53ef\u4ee5\u51cf\u5c11\u67e5\u8be2\u5f00\u9500\u3002\u6bcf\u6b21\u67e5\u8be2\u6709\u53ef\u80fd\u4e0d\u5fc5\u67e5\u8be2\u5230\u53f6\u5b50\u7ed3\u70b9\u624d\u80fd\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u574f\u5904\uff1a\u76f8\u6bd4LSM\u6811\u5728\u78c1\u76d8\u4e2d\u987a\u5e8f\u5b58\u653e\u7684\u7ed3\u6784,Buffer Tree \u7684\u78c1\u76d8I/O\u5f00\u9500\u589e\u5927\u3002</p>"},{"location":"DB/10.%20Indexing/#109-bitmap-indices","title":"10.9 Bitmap Indices","text":"<p>\u9002\u7528\u4e8e\u5927\u6570\u636e\u5206\u6790</p> <p></p> <p>\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u8fdb\u884c\u5bf9\u5e94bit\u6570\u7ec4\u7684AND\u5373\u53ef</p>"},{"location":"DB/11.%20Query%20Processing/","title":"11. Query Processing","text":"<p> \u7ea6 10045 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 50 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Basic Steps in Query Processing</li> <li>Measures of Query Cost</li> <li>Selection Operation  </li> <li>Sorting </li> <li>Join Operation </li> <li>Other Operations</li> <li>Evaluation of Expressions</li> </ul>"},{"location":"DB/11.%20Query%20Processing/#111-basic-steps-in-query-processing","title":"11.1 Basic Steps in Query Processing","text":"<ul> <li> <p>Parsing and translation <code>\u8bed\u6cd5\u68c0\u67e5</code></p> <ul> <li> <p>translate the query into its internal form. This is then translated into relational algebra.</p> <p>\u5c06\u67e5\u8be2\u8f6c\u6362\u4e3a\u5176\u5185\u90e8\u5f62\u5f0f\u3002\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u5173\u7cfb\u4ee3\u6570\u3002</p> </li> <li> <p>Parser checks syntax, verifies relations</p> </li> <li> <p>\u89e3\u6790\u5668\u68c0\u67e5\u8bed\u6cd5\uff0c\u9a8c\u8bc1\u5173\u7cfb</p> </li> </ul> </li> <li> <p>Optimization</p> <ul> <li>Amongst all equivalent evaluation plans choose the one with lowest cost. </li> </ul> </li> <li> <p>Evaluation</p> <ul> <li> <p>The query-execution engine takes a query-evaluation plan, executes that plan, and returns the answers to the query.</p> <p>\u67e5\u8be2\u6267\u884c\u5f15\u64ce\u91c7\u7528\u67e5\u8be2\u8bc4\u4f30\u8ba1\u5212\uff0c\u6267\u884c\u8be5\u8ba1\u5212\uff0c\u5e76\u8fd4\u56de\u67e5\u8be2\u7684\u7b54\u6848\u3002</p> </li> </ul> </li> </ul> <p>\u7ecf\u8fc7\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u68c0\u67e5\u7ffb\u8bd1\u6210\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u7ecf\u8fc7\u67e5\u8be2\u4f18\u5316\u8f6c\u5316\u6210\u6267\u884c\u8ba1\u5212\uff08\u76ee\u6807\u4ee3\u7801\uff09\uff0c\u7531\u6c42\u503c\u5f15\u64ce\u5f97\u5230\u8f93\u51fa\u3002</p> <p> </p> <p>\u903b\u8f91\u4f18\u5316\uff1a\u628a\u9009\u62e9\u8fd0\u7b97\u5f80\u53f6\u5b50\u4e0a\u63a8\uff1b\u5148\u8fde\u63a5\u7684\u662f\u7ed3\u679c\u6bd4\u8f83\u5c0f\u7684\uff08\u4f7f\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u5c0f\uff09\u3002 </p> <p>An evaluation plan defines exactly what algorithm is used for each operation, and how the execution of the operations is coordinated.  </p> <p>\u8bc4\u4f30\u8ba1\u5212\u51c6\u786e\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u64cd\u4f5c\u4f7f\u7528\u7684\u7b97\u6cd5\uff0c\u4ee5\u53ca\u5982\u4f55\u534f\u8c03\u64cd\u4f5c\u7684\u6267\u884c\u3002</p> <p>\u7ecf\u8fc7\u4ee3\u4ef7\u4f30\u7b97\uff0c\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u7b97\u6cd5\u7684\u4ee3\u4ef7\u6700\u5c0f\u3002\u5982\u4e0a\u56fe\u5de6\u8fb9\u4f7f\u7528\u4e86 B+ \u6811\u7d22\u5f15\uff0c\u53f3\u8fb9\u4f7f\u7528\u4e86\u7ebf\u6027\u626b\u63cf\u3002  </p> <p>\u81ea\u7136\u8fde\u63a5\u7684\u7b97\u6cd5\u5305\u62ec\uff1aHash join\uff0cMerge join.....\uff0cmerge join \u8981\u6c42\u8fde\u63a5\u5c5e\u6027\u672c\u8eab\u6709\u5e8f</p> <p>\u6267\u884c\u65b9\u5f0f\u5305\u62ec\uff1a\u987a\u5e8f\u6267\u884c\uff08\u987a\u5e8f\u5b58\u50a8\uff09\u548cpipeline\uff08\u6d41\u6c34\u7ebf\uff09</p>"},{"location":"DB/11.%20Query%20Processing/#112-measures-of-query-cost","title":"11.2 Measures of Query Cost","text":"<p>Typically disk access is the predominant cost, and is also relatively easy to estimate.   \u78c1\u76d8\u8bbf\u95ee\uff08I/O\uff09\u662f\u4e3b\u8981\u6210\u672c\uff0c\u5e76\u4e14\u4e5f\u76f8\u5bf9\u5bb9\u6613\u4f30\u8ba1\u3002</p> <p>\u5ffd\u7565 CPU cost.  </p> <p>Measured by taking into account</p> <ul> <li> <p>Number of seeks \uff08\u628a\u8bfb\u5199\u5934\u5b9a\u4f4d\u5230\u6247\u533a\uff09        </p> </li> <li> <p>Number of blocks read </p> </li> <li> <p>Number of blocks written </p> </li> </ul> <p><code>\u901a\u5e38write\u6240\u9700\u7684\u65f6\u95f4\u5927\u4e8eread\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u6267\u884cwrite\u64cd\u4f5c\u540e\u9700\u8981\u91cd\u65b0\u8bfb\u53d6\u6570\u636e\u786e\u4fdd\u5199\u5165\u6ca1\u6709\u95ee\u9898\uff08\u591a\u4e86\u9a8c\u8bc1\u73af\u8282\uff09</code></p> <p>For simplicity we just use the number of block transfers from disk and the number of seeks as the cost measures\u3002<code>block transfer\u5c31\u8868\u793ablock\u7684read\u548cwrite\u64cd\u4f5c</code></p> <p>\\(t_T\\)\u2013 time to transfer one block \\(t_S\\)\u2013 time for one seek * Cost for b block transfers plus S seeks\\(b * t_T + S * t_S\\)</p> <p>\\(t_T\\)\u548c\\(t_S\\)\u4e4b\u95f4\u5173\u7cfb\uff1aseek\u82b1\u8d39\u7684\u65f6\u95f4\u66f4\u957f\u3002\u5728\u78c1\u76d8\u4e2d\uff0c\\(t_S / t_T \\approx 40\\),\u5728\u56fa\u6001\u786c\u76d8\u4e2d\uff0c\\(t_S / t_T \\approx 10\\)\u3002\u56e0\u4e3aseek\u5bfb\u9053\u662f\u673a\u68b0\u8fd0\u52a8\uff0c\u6bd4\u4f20\u8f93\u82b1\u8d39\u7684\u65f6\u95f4\u66f4\u591a.</p> <p>\u7ea6\u5b9a\uff1a</p> <ol> <li> <p>\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5ffd\u7565CPU\u7684\u6210\u672c\uff08\u8bfe\u7a0b\u67e5\u8be2\u4ee3\u4ef7\u7684\u8ba1\u7b97\uff09\u3002\u5e76\u4e14\u6211\u4eec\u5728\u6210\u672c\u516c\u5f0f\u4e2d\u5ffd\u7565\u5c06\u8f93\u51fa\u5199\u5165\u5230\u78c1\u76d8\u7684\u6210\u672c\u3002<code>\u53ef\u80fd\u662f\u6d41\u6c34\u7ebf\u4e0d\u9700\u8981\u5199\u9053\u78c1\u76d8\uff0c\u4f46\u662f\u5982\u679c\u9898\u76ee\u4e2d\u660e\u786e\u63d0\u51fa\u5c06\u6700\u7ec8\u7684\u7ed3\u679c\u5199\u5165\u5230\u78c1\u76d8\u4e2d\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8003\u8651\u5199\u5165\u5230\u78c1\u76d8\u7684\u4ee3\u4ef7\u4e86</code></p> </li> <li> <p>\u8861\u91cf\u7b97\u6cd5\u7684\u4ee3\u4ef7\uff0c\u5b58\u5728\u786c\u4ef6\u6761\u4ef6\u7684\u5dee\u5f02\uff0c\u5047\u8bbe\u5185\u5b58\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u628a\u6574\u4e2a\u6570\u636e\u5e93\u90fd\u88c5\u5230\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u4e00\u6b21\u78c1\u76d8\u7684seek\u64cd\u4f5c\uff0c\u7136\u540e\u5168\u90e8\u8bfb\u8fdb\u5185\u5b58\u4e2d\u5c31\u597d\u3002\u4f46\u5728\u5b9e\u9645\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u7684\u662f\u6700\u574f\u7684\u60c5\u51b5\uff0c\u53ef\u7528\u7684\u7f13\u51b2\u533a\u5b9e\u9645\u5185\u5b58\u91cf\u53d6\u51b3\u4e8e\u5176\u4ed6\u5e76\u53d1\u67e5\u8be2\u548c\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\uff0c\u53ea\u6709\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u6211\u4eec\u624d\u77e5\u9053\u6709\u591a\u5c11\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u53ef\u4ee5\u7528\u3002</p> <p>\u56e0\u6b64\u6700\u574f\u60c5\u51b5\u4f30\u8ba1\uff0c\u6309\u7167\u64cd\u4f5c\u6700\u5c11\u9700\u8981\u7684buffer\u6570\u91cf\u8fdb\u884c\u8ba1\u7b97\u3002\uff08\u4f8b\u5982\uff0c\u5173\u7cfbR\u548cS\u7684join\uff0c\u6700\u5c11\u9700\u89813\u4e2abuffer\uff0c\u4e00\u4e2a\u5b58\u653eR\u7684\u6570\u636e\uff0c\u4e00\u4e2a\u5b58\u653eS\uff0c\u5269\u4e0b\u4e00\u4e2a\u653e\u7ed3\u679c\uff09</p> </li> <li> <p>\u5e76\u4e14\uff0c\u6211\u4eec\u5047\u8bbe\u6240\u6709\u9700\u8981\u7684\u6570\u636e\u90fd\u5fc5\u987b\u5728\u78c1\u76d8\u4e2d\u53bb\u8bfb\uff0c\u5e76\u6ca1\u6709\u5728\u5185\u5b58\uff08\u7f13\u51b2\u533a\uff09\u4e2d\u547d\u4e2d\u3002</p> </li> </ol>"},{"location":"DB/11.%20Query%20Processing/#113-selection-operation","title":"11.3 Selection Operation","text":""},{"location":"DB/11.%20Query%20Processing/#1131-file-scan","title":"11.3.1 File scan","text":"<p>Algorithm A1 (linear search). Scan each file block and test all records to see whether they satisfy the selection condition.  \uff08<code>\u5047\u5b9a\u6570\u636e\u5757\u90fd\u662f\u8fde\u7eed\u5b58\u653e\u7684</code>\uff09</p> <ul> <li>worst cost =\\(b_r*t_T+t_S\\) </li> </ul> <p>\\(b_r\\)denotes number of blocks containing records from relation r</p> <pre><code>\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21seek\uff0c\u76f8\u5e94\u7684\u6709\u5173\u7684block\u90fd\u9700\u8981\u8fdb\u884cread\n</code></pre> <ul> <li> <p>average cost =\\(b_r/2*t_T+t_S\\) </p> <p>\u8fd9\u91cc\u5982\u679c\u641c\u7d22\u7684\u662f key attribute\uff08\u6bcf\u4e00\u4e2a\u6570\u503c\u90fd\u552f\u4e00\uff09, \u90a3\u6211\u4eec\u626b\u5230\u8fd9\u4e2a\u8bb0\u5f55\u5c31\u53ef\u4ee5\u505c\u6b62\u3002</p> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#1132-index-scan","title":"11.3.2 Index scan","text":"<p>Index scan \u2013 <code>search algorithms that use an index\u3002selection condition must be on search-key of index.</code></p> <p>A2 (primary B+-tree index / clustering B+-tree index, equality on key). </p> <p>\u4e3bB+\u6811\u7d22\u5f15/\u805a\u7c7bB+\u6811\u7d22\u5f15\uff0c\u5728\u4e3b\u952e\u4e0a\u7b49\u503c\u67e5\u627e</p> <p>cost =\\((h_i+1)* (t_T+t_S)\\)\u3002</p> <p>B+\u6811\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5c31\u662f\u4e00\u4e2ablock\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2ablock\u5728\u78c1\u76d8\u4e2d\u662f\u4e0d\u8fde\u7eed\u5206\u5e03\u7684\u3002\u56e0\u6b64\u5bf9\u4e8eB+\u6811\u4e0a\u7684\u7ed3\u70b9\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u4e00\u6b21seek+transfer\u3002</p> <p>\u8fd9\u91cc\u7684\u9ad8\u5ea6\u4ece 1 \u5f00\u59cb\uff08+1 \u8868\u793a\u6700\u540e\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u6307\u9488\u6307\u5411\u6700\u7ec8\u6570\u636e\uff0c\u9700\u8981\u4ece\u78c1\u76d8\u4e2d\u8bfb\uff09</p> <p> </p> <p>A3 (primary B+-tree index/ clustering B+-tree index, equality on nonkey).  </p> <p><code>\u6b64\u65f6\u7d22\u5f15\u7684\u503c\u4e0d\u662f\u4e3b\u952e. \u53ef\u80fd\u5b58\u5728\u591a\u6761record\uff0c\u5728\u6700\u540e\u4e00\u6b21\uff0c\u4ece\u53f6\u5b50\u7ed3\u70b9\u51fa\u53d1\u627e\u5230\u6700\u7ec8\u7ed3\u679c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5f15\u53d1\u4f20\u8f93\u7684block\u6570\u53d1\u751f\u53d8\u5316</code>\u3002</p> <p>Records will be on consecutive blocks  \uff08\u6b64\u4e3aseek\u6570\u4fdd\u6301\u4e3a1\u7684\u524d\u63d0\uff09</p> <p>b\u8868\u793a\uff0c\u5339\u914d\u7684\u8bb0\u5f55\u6240\u5360\u5757\u7684\u4e2a\u6570\u3002\u4e0b\u65b9\u7684\u4f8b\u5b50\u4e2d\uff0c\u6587\u4ef6\u4e2d\u7684\u5757\u5df2\u7ecf\u6309\u7167\u67e5\u8be2\u7684\u6761\u4ef6\u6392\u597d\u5e8f\uff0c\u8fde\u7eed\u5b58\u653e\uff0c\u800c\u5339\u914d\u7684\u8bb0\u5f55\u4e00\u5171\u56db\u6761\uff0c\u5360\u7528\u4e24\u4e2a\u5757\uff0c\u56e0\u6b64b = 2\u3002</p> <p>cost =\\(h_i *(t_T+t_S) + t_S + t_T *b\\)</p> <p>Example \"\u4e3b\u7d22\u5f15, nonkey \u4e0a\u7684\u7b49\u503c\u67e5\u627e\"</p> <p></p> <p>A4 (secondary B+-tree index , equality on key).    </p> <p><code>\u8f85\u52a9\u7d22\u5f15\u548c\u4e3b\u7d22\u5f15\u76f8\u6bd4\uff0c\u4e3b\u7d22\u5f15\u8981\u6c42\u6587\u4ef6\u7684\u5b58\u50a8\u6392\u5e8f\u6839\u636e\u7684\u5c5e\u6027\u548cindex\u5efa\u7acb\u6839\u636e\u7684\u5c5e\u6027\u76f8\u540c\uff0c\u8f85\u52a9\u7d22\u5f15\u5e76\u65e0\u8fd9\u4e2a\u8981\u6c42\u3002\u7528\u4e00\u4e2a\u4f8b\u5b50\u8868\u793a\u8f85\u52a9\u7d22\u5f15B+\u6570\uff0cequality on key\uff0c\u6211\u4eec\u8981\u67e5\u627e\u7684\u662fkey\u662f\u5b66\u53f7\uff0c\u4f46\u662f\u6587\u4ef6\u5b58\u50a8\u4e0a\uff0c\u662f\u6309\u7167dept_name\u8fdb\u884c\u6392\u5e8f\u7684</code></p> <p>\u4f46\u662f\uff0c\u5982\u679c\u6b64\u65f6\u662fKey\u4e0a\u76f8\u7b49\uff0c\u800c\u7531\u4e8eKey\u5bf9\u5e94\u7684\u8bb0\u5f55\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64\uff0c\u67e5\u627eKey\u65f6\uff0c\u8f85\u52a9\u7d22\u5f15\u4e0e\u4e3b\u7d22\u5f15\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002</p> <p>cost =\\((h_i + 1) * (t_T + t_S)\\)</p> <p>Example \"\u8f85\u52a9\u7d22\u5f15, key \u4e0a\u7684\u7b49\u503c\u67e5\u627e\"</p> <p> </p> <p>A4\u2019 (secondary B+-index on nonkey, equality).</p> <p>\u6b64\u65f6\u662f\u8f85\u52a9\u7d22\u5f15\uff0c\u5e76\u4e14\u641c\u7d22\u7684\u8fd8\u662f\u975ekey\uff0c\u8bf4\u660e\u6211\u4eec\u641c\u7d22\u7684record\u5728\u6587\u4ef6\u65e2\u4e0d\u662f\u6392\u597d\u5e8f\u7684\uff0c\u4e5f\u4e0d\u662f\u552f\u4e00\u7684\u3002</p> <p>Cost =\\((h_i + m+ n) * (t_T + t_S)\\) </p> <p>\u8fd9\u91cc m \u8868\u793a\u653e\u6307\u9488\u7684\u5757\u7684\u6570\u91cf, n \u8868\u793a\u5bf9\u5e94\u78c1\u76d8\u91cc\u7684\u8bb0\u5f55\u6240\u5728\u7684\u5757\u7684\u6570\u91cf\u3002</p> <p>\u6211\u4eec\u6309\u7167\u641c\u7d22\u6761\u4ef6\uff0c\u641c\u7d22\u5230\u4e00\u4e9b\u7b26\u5408\u6761\u4ef6\u7684\u3001\u653e\u7740\u6307\u9488\u7684block\u3002\u5047\u8bbe\u653e\u6307\u5411\u5b9e\u9645\u6570\u636e\u8bb0\u5f55\u7684\u6307\u9488\u7684block\u6709m\u4e2a\uff0c\u5e76\u4e14\u5b9e\u9645\u7684\u6570\u636e\u90fd\u5206\u6563\u5728\u4e0d\u540c\u7684block\u4e2d\uff0c\u4e00\u5171\u5b58\u5728\u4e8en\u4e2a\u5757\u4e2d\u3002</p> <p>\\(h_i(t_T+t_S)\\)\u4e0d\u53d8\uff0c\u4e00\u76f4\u627e\u5230leaf\u3002\u63a5\u4e0b\u6765\u641c\u7d22m\u4e2a\u653e\u7f6e\u5b9e\u9645\u8bb0\u5f55\u6307\u9488\u7684\u6570\u636e\u5757\uff0c\u5bf9\u8fd9m\u4e2ablock\u9700\u8981\u4e2a\u8fdb\u884c\u4e00\u6b21seek\u548ctransfer\uff08\u5206\u6563\u7684block\uff09\uff0c\u77e5\u9053\u6307\u9488\u540e\uff0c\u5bf9\u8bb0\u5f55\u8fdb\u884c\u67e5\u627e\uff0c\u6240\u6709\u7684\u8bb0\u5f55\u5206\u6563\u5728n\u4e2ablock\u4e2d\uff0c\u90a3\u4e48\u5c31\u9700\u8981\\(n(t_T+t_S)\\)</p> <p>\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u4e3aCost =\\((h_i + m+ n) * (t_T + t_S)\\) </p> <p>Example \"\u8f85\u52a9\u7d22\u5f15, nonkey \u4e0a\u7684\u7b49\u503c\u67e5\u627e\"</p> <p> </p>"},{"location":"DB/11.%20Query%20Processing/#1134-selections-involving-comparisons","title":"11.3.4 Selections Involving Comparisons","text":"<p>\u6d89\u53ca\u5230\u6bd4\u8f83\u7684\u67e5\u8be2</p> <p>\u67e5\u8be2\\(\\sigma_{A\\leq V}(r)\\)(or\\(\\sigma_{A\\geq V}(r)\\))</p> <p>A5 (primary B+-index / clustering B+-index index, comparison). (Relation is sorted on A) </p> <ul> <li>\u67e5\u627e\u8be5\u5c5e\u6027\u5927\u4e8e\u7b49\u4e8eA\u7684\u8bb0\u5f55\uff0c\u53ef\u4ee5\u5728B+\u6811\u4e2d\u627e\u5230\u5927\u4e8e\u7b49\u4e8eA\u7684\u7b2c\u4e00\u4e2a\u5757\uff0c\u7136\u540e\u5bf9\u5269\u4e0b\u7684\u8fdb\u884c\u8fde\u7eed\u7684\u626b\u63cf\u3002\uff08\u56e0\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u5728\u6587\u4ef6\u4e2d\u662f\u4e3b\u7d22\u5f15\uff0c\u56e0\u6b64\u662f\u8bb0\u5f55\u662f\u6309\u7167\u8be5\u5c5e\u6027\u6392\u597d\u5e8f\u8fde\u7eed\u5b58\u653e\u7684\uff09</li> <li><code>\u9700\u8981\u8fdb\u884c\u6811\u9ad8\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u64cd\u4f5c\u4e0e\u5757\u4f20\u8f93\u64cd\u4f5c\uff0c\u4e0e\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u64cd\u4f5c\u627e\u5230\u5927\u4e8e\u7b49\u4e8eA\u7684\u7b2c\u4e00\u4e2a\u5757\uff0c\u7136\u540eb\u6b21\u5757\u4f20\u8f93\u64cd\u4f5c\uff0c\u8fdb\u884c\u8fde\u7eed\u7684\u626b\u63cf\u3002</code></li> <li>Cost =\\(h_i * (t_T + t_S) + t_S + t_T * b\\)(\u540c\u60c5\u51b5 3 primary b+ tree\uff0cnonkey)</li> </ul> <p>\u5bf9\u4e8e\u67e5\u627e\u8be5\u5c5e\u6027\u5c0f\u4e8eA\u7684\u8bb0\u5f55\uff0c\u4e0d\u9700\u8981\u5229\u7528B+\u6811\u7d22\u5f15\uff0c\u53ea\u9700\u8981\u5bf9\u653e\u7f6e\u8bb0\u5f55\u7684\u6587\u4ef6\uff0c\u4ece\u5934\u5f00\u59cb\u626b\u63cf\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u8be5\u5c5e\u6027\u5927\u4e8e\u7b49\u4e8eA\u7684\u8bb0\u5f55\u3002</p> <p>\u56e0\u4e3a\u8fd9\u662fprimary B+tree\uff0c\u641c\u7d22\u952e\u6307\u5b9a\u6587\u4ef6\u7684\u6392\u5217\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u6587\u4ef6\u662f\u6309\u7167\u6211\u4eec\u7684search key\u6392\u5217\u597d\u7684\uff0c\u5e76\u4e14\u662f\u8fde\u7eed\u5b58\u653e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e00\u6b21seek+b\u6b21transfer</p> <p>Example \"\u4e3b\u7d22\u5f15, key \u4e0a\u7684\u6bd4\u8f83\"</p> <p> </p> <p>A6 (secondary B+-tree index, comparison).  \u60c5\u51b5\u7c7b\u4f3c A4\uff08secondary B+ tree\uff0c nonkey\uff09</p> <ol> <li>\u67e5\u627e\u7b2c\u4e00\u4e2a\u5c5e\u6027\u5927\u4e8e\u7b49\u4e8eA\u7684\u8bb0\u5f55\u3002\u4f7f\u7528\u7d22\u5f15\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8eA\u7684\u8bb0\u5f55\u7684\u53f6\u7ed3\u70b9\uff0c\u63a5\u4e0b\u6765\u4e00\u6b21\u7684\u8be5\u53f6\u7ed3\u70b9\u53f3\u4fa7\u7684\u53f6\u7ed3\u70b9\u8fdb\u884c\u626b\u63cf\uff0c\u8fd9\u6837\u5c31\u80fd\u5f97\u5230\u6240\u6709\u7684\u7b26\u5408\u6761\u4ef6\u7684\u3001\u653e\u7740\u6307\u9488\u7684block</li> <li>\u7136\u540e\u7c7b\u6bd4A4\uff0c\u53ea\u9700\u8981\u77e5\u9053\u653e\u7740\u6307\u9488\u7684block\u7684\u6570\u91cfm\uff0c\u548c\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\u5206\u5728block\u7684\u5757\u6570m\u5373\u53ef</li> <li>Cost =\\((h_i + m+ n) * (t_T + t_S)\\) </li> </ol> <p>\u67e5\u627e\u8be5\u5c5e\u6027\u5c0f\u4e8eA\u7684\u8bb0\u5f55\uff0c\u76f4\u63a5\u4ece\u5934\u5f00\u59cb\u626b\u63cf\u8be5\u5c5e\u6027\u7684B+\u6811\u7684\u53f6\u7ed3\u70b9\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u8be5\u5c5e\u6027\u5927\u4e8e\u7b49\u4e8eA\u7684\u5730\u65b9\uff0c\u627e\u5230\u8fd9\u4e4b\u95f4\u7684\u6240\u6709\u7684\u6307\u5411\u8bb0\u5f55\u7684\u6307\u9488</p> <p><code>\u8fd9\u79cd\u8303\u56f4\u67e5\u627e\u3002\u7ebf\u6027\u641c\u7d22\u82b1\u8d39\u7684\u65f6\u95f4\u66f4\u5c11</code></p> <p>Example \"\u8f85\u52a9\u7d22\u5f15, nonkey \u4e0a\u7684\u6bd4\u8f83\"</p> <p> </p>"},{"location":"DB/11.%20Query%20Processing/#1134-implementation-of-complex-selectionsand","title":"11.3.4 Implementation of Complex Selections\uff08AND\uff09","text":"<p>Conjunction\\(\\sigma_{\\theta_1} \\wedge \\ldots \\wedge_{\\theta_n}(r)\\) </p> <p>\u53ef\u4ee5\u7ebf\u6027\u626b\u63cf\uff0c\u6216\u8005\u5229\u7528\u67d0\u4e2a\u5c5e\u6027\u7684 index \u5148\u67e5\u8be2\uff0c\u628a\u7b26\u5408\u7684\u8bfb\u5230\u5185\u5b58\u4e2d\uff0c\u518d\u68c0\u67e5\u5176\u4ed6\u5c5e\u6027\u3002  \u5982\u679c\u6709\u5f88\u591a\u4e2a\u5c5e\u6027\u90fd\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u9009\u62e9\u4e2d\u95f4\u7ed3\u679c\u5c11\u7684\u3002</p> <p>A7 (conjunctive selection using one index). </p> <ul> <li> <p>Select a combination of\\(\\theta_i\\)and algorithms A1 through A6 that results in the least cost for\\(\\sigma_{\\theta_i}(r)\\).</p> </li> <li> <p>Test other conditions on tuple after fetching it into memory buffer.</p> <p>\u628a\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u9009\u62e9\u540e\u7684\u8fd9\u4e9b\u8bb0\u5f55\u8bfb\u53d6\u5230\u5185\u5b58\uff08buffer\uff09\u4e2d\u53bb\uff0c\u7136\u540e\u5728\u5185\u5b58\u4e2d\u53bb\u6d4b\u8bd5\u5176\u4ed6\u6761\u4ef6\u3002</p> </li> </ul> <p>\u5148\u5bf9\u5176\u4e2d\u4e00\u4e2a\u9009\u62e9\u6761\u4ef6\u8fdb\u884c\u9009\u62e9\uff0c\u8981\u6c42\u80fd\u591f\u8fc7\u6ee4\u5c3d\u53ef\u80fd\u591a\u7684\u8bb0\u5f55\u3002</p> <p>A8 (conjunctive selection using composite index). </p> <p>Use appropriate composite (multiple-key) index if available.  </p> <p>\u4f18\u5148\u4f7f\u7528\u5df2\u7ecf\u5efa\u7acb\u597d\u7684\u590d \u5408\u7d22\u5f15\uff0c\u6700\u597d\u7684\u60c5\u51b5\u662f\uff0c\u8981\u9009\u62e9\u7684\u6761\u4ef6\u4e2d\u521a\u597d\u80fd\u591f\u5408\u6210\u73b0\u6709\u7684\u4e00\u4e2a\u590d\u5408\u7d22\u5f15</p> <p>A9 (conjunctive selection by intersection of identifiers). </p> <p>\u5bf9\u6bcf\u4e2a\u7d22\u5f15\u90fd\u8fdb\u884c\u67e5\u8be2\uff0c\u5c06\u7ed3\u679c\u62fc\u8d77\u6765\uff08\u53d6\u4ea4\u96c6\uff09</p>"},{"location":"DB/11.%20Query%20Processing/#1135-algorithms-for-complex-selectionsor","title":"11.3.5 Algorithms for Complex Selections\uff08OR\uff09","text":"<ul> <li> <p>Disjunction:\\(\\sigma_{\\theta_1} \\vee \\ldots \\vee_{\\theta_n}(r)\\) </p> <p>A10 (disjunctive selection by union of identifiers). </p> <ul> <li>Applicable if all conditions have available indices.  </li> <li>Otherwise use linear scan.</li> <li>Use corresponding index for each condition, and take union of all the obtained sets of record pointers. </li> <li>Then fetch records from file</li> <li> <p>\u8bf7\u786e\u4fdd\u6240\u6709\u9650\u5236\u6761\u4ef6\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u90fd\u6709\u5efa\u7acb\u76f8\u5e94\u7684\u7d22\u5f15\uff0c\u5426\u5219\uff0c\u8981\u5229\u7528\u7ebf\u6027\u626b\u63cf\u6765\u8fdb\u884c\u4e0a\u8ff0\u67e5\u8be2\u3002</p> <pre><code>&gt; \u5bf9\u6bcf\u4e00\u4e2a\u6761\u4ef6\uff0c\u90fd\u5229\u7528\u524d\u9762\u8bf4\u5230\u7684A1\u5230A6\u7b97\u6cd5\uff0c\u627e\u5230\u76f8\u5e94\u7b26\u5408\u7684\u8bb0\u5f55\u96c6\u5408\uff0c\u7136\u540e\u518d\u53d6\u5e76\u96c6\u3002\n</code></pre> </li> </ul> </li> <li> <p>Negation:\\(\\sigma_{\\neg \\theta}(r)\\)</p> <ul> <li>Use linear scan on file   </li> <li>If very few records satisfy\\(\\neg \\theta\\), and an index is applicable to\\(\\theta\\) Find satisfying records using index and fetch from file</li> </ul> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#1136-bitmap-index-scan","title":"11.3.6 Bitmap Index Scan","text":"<p>\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e00\u4e2abitmap\uff0cbitmap with 1 bit per page in relation\u3002</p> <p>\u64cd\u4f5c\u6d41\u7a0b\uff1aindex scan \u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684record id\uff0c\u5c06\u5bf9\u5e94\u7684id block\u5bf9\u5e94\u7684bit\u8bbe\u7f6e\u4e3a1\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u7ebf\u6027\u626b\u63cf\u83b7\u53d6bit\u88ab\u8bbe\u7f6e\u4e3a1\u7684block</p> <p><code>\u597d\u5904\u662f\u51cf\u5c11\u4e86B+\u6811 \u4ece\u53f6\u5b50\u5230\u6570\u636eblock\u7684seek\u64cd\u4f5c\u6b21\u6570\uff0c\u56e0\u4e3aseek\u672c\u8eab\u5c31\u662f\u673a\u68b0\u8fd0\u52a8\u9700\u8981\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u3002</code></p>"},{"location":"DB/11.%20Query%20Processing/#114-sorting","title":"11.4 Sorting","text":"<p>For relations that fit in memory, techniques like quicksort can be used</p> <p>For relations that don\u2019t fit in memory, external sort-merge is a good choice. </p> <p>\u5bf9\u4e8e\u9002\u5408\u5185\u5b58\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u7b49\u6280\u672f\u3002</p> <p>\u5bf9\u4e8e\u4e0d\u9002\u5408\u5185\u5b58\u7684\u5173\u7cfb\uff0c\u5229\u7528\u5916\u90e8\u6392\u5e8f\u3002</p> <p>\u5047\u8bbe\u521d\u59cb\u7684\u5173\u7cfb\u975e\u5e38\u5927\uff0c\u6ca1\u529e\u6cd5\u5168\u90e8\u653e\u5165\u5185\u5b58\uff1a</p> <p>Example: External Sorting Using Sort-Merge</p> <p> </p> <p>\u521d\u59cb\u5185\u5b58\u653e\u4e0d\u4e0b\uff0c\u53ea\u80fd\u653e\\(M\\)pages. \u4e00\u6b21\u6027\u8bfb\\(M\\)\u5757\uff0c\u5728\u5185\u5b58\u5185\u6392\u5e8f\uff0c\u6392\u597d\u540e\u5148\u5199\u56de\uff0c\u5f62\u6210\u4e00\u4e2a\u5f52\u5e76\u6bb5\u3002\u518d\u8bfb\u5165\u7b2c\u4e8c\u6bb5\u5230\u5185\u5b58\u4e2d\uff0c\u6392\u5e8f\u540e\u518d\u5199\u56de\uff0c\u5f97\u5230\u82e5\u5e72\u5f52\u5e76\u6bb5(\\(\\dfrac{b_r}{M}\\)) \u4f1a\u6709\\(2*\\dfrac{b_r}{M}\\)\u6b21 seek,\\(2*b_r\\)\u6b21 transfer. </p> <p>\u9996\u5148\u5047\u8bbe\u5b58\u50a8\u8fd9\u4e2a\u5173\u7cfb\u7684\u6587\u4ef6\u4e00\u5171\u6709\\(b_r\\)\u4e2ablock\uff0c\u4f46\u662f\u5185\u5b58\u4e00\u6b21\u6700\u591a\u653e\u5165m\u5757\u3002\u56e0\u6b64\u6211\u4eec\u8981\u5c06\\(b_r\\)\u4e2a\u5757\u5206\u6210\\(\\lceil \\dfrac{b_r}{m} \\rceil\\)\u4e2a\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u90fd\u6700\u591am\u5757\uff0c\u7136\u540e\u4e00\u6bb5\u4e00\u6bb5\u5730\u653e\u8fdb\u5185\u5b58\u4e2d\u8fdb\u884c\u6392\u5e8f\u3002<code>\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u4e2d\u6bcf\u4e00\u4e2ablock\u90fd\u4f1a\u8fdb\u5165\u5230\u5185\u5b58\u4e2d\u4e00\u6b21\u3002\u63a5\u4e0b\u6765\uff0c\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u5185\u90e8\u6392\u5e8f\u540e\uff0c\u6bcf\u4e00\u4e2ablock\u53c8\u4f1a\u5199\u51fa\u6765\u4e00\u6b21\u3002</code>\u56e0\u6b64block transfer\u7684\u6b21\u6570\u4e3a\\(2 * b_r\\)</p> <p>\u63a5\u4e0b\u6765\u662f\u78c1\u76d8\u8bfb\u5199\u5934\u7684\u91cd\u5b9a\u5411\u64cd\u4f5c\u3002<code>\u5c06\u6240\u6709\u7684block\u5206\u6210$\\lceil \\dfrac{b_r}{m} \\rceil$\u540e\uff0c\u9700\u8981\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u6b64\u65f6\u6bcf\u4e00\u6bb5\u9700\u8981\u4e00\u6b21\u78c1\u76d8\u8bfb\u5199\u5934\u91cd\u5b9a\u5411\u64cd\u4f5c\u3002\u56e0\u4e3a\u6bcf\u6b21\u628a\u4e00\u6bb5\u653e\u5165\u5185\u5b58\u4e2d\u6392\u597d\u5e8f\u540e\uff0c\u9700\u8981\u91cd\u65b0\u5b9a\u4f4d\u5230\u4e0b\u4e00\u4e2a\u6bb5\u3002</code>\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u5728\u5185\u5b58\u4e2d\u6392\u597d\u5e8f\u4e4b\u540e\u9700\u8981\u5199\u51fa\u6765\uff0c\u6240\u4ee5seek\u7684\u603b\u6b21\u6570\u4e3a\\(2\\lceil \\dfrac{b_r}{m} \\rceil\\)</p>"},{"location":"DB/11.%20Query%20Processing/#1141-procedure","title":"11.4.1 Procedure","text":"<p>Let\\(M\\)denote memory size (in pages). </p> <ul> <li> <p>Create sorted runs(\u5f52\u5e76\u6bb5) </p> <p>Repeatedly do the following till the end of the relation:</p> <ul> <li>Read M blocks of relation into memory     </li> <li>Sort the in-memory blocks</li> <li>Write sorted data to run\\(R_i\\); increment i.</li> <li>\u5047\u8bbe\u751f\u6210\u4e86\\(N\\)\u4e2a\u5f52\u5e76\u6bb5</li> </ul> </li> <li> <p>Merge the runs </p> </li> </ul> <ol> <li>\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\u4e25\u683c\u5c0f\u4e8e\u5185\u5b58\u6700\u5927\u5bb9\u91cf\u7684\u5757\u6570\uff0cN &lt; M</li> </ol> <p>\u5047\u8bbe\u751f\u6210\u7684\u5c0f\u7684\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\u662fN\uff0c\u5185\u5b58\u4e2d\u6700\u5927\u5757\u7684\u6570\u91cf\u662fM\uff0c\u5047\u8bbe\\(N &lt;= M-1\\),<code>\u90a3\u4e48\u53ea\u9700\u8981\u5355\u6b21\u5408\u5e76\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002</code></p> <p>\u6b64\u65f6\u5728\u5185\u5b58\u4e2d\u4f7f\u7528N\u4e2a\u5757\u4f5c\u4e3a\u8f93\u5165\u7f13\u51b2\u533a\uff0c\u4f7f\u7528\u4e00\u4e2a\u5757\u4f5c\u4e3a\u8f93\u51fa\u7f13\u51b2\u5757\u3002</p> <p>\u6700\u521d\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\u7684\u7b2c\u4e00\u4e2a\u5757\uff08\u5373\u5c5e\u6027\u503c\u6700\u5c0f\u7684\u5757\uff09\u653e\u5165\u5185\u5b58\u4e2d\uff08\u4e00\u5171N\u4e2a\uff0c\\(\\(N = \\lceil \\dfrac{b_r}{m} \\rceil\\)\\)\uff09,\u5728\u5185\u5b58\u4e2d\u4fdd\u7559\u4e00\u4e2a\u5757\u4f5c\u4e3a\u8f93\u51fa\u7f13\u51b2\u5757\u3002\u7136\u540e\u8fdb\u884c\u5f52\u5e76\uff0c\u628a\u5f52\u5e76\u7684\u7ed3\u679c\u5199\u5230\u8f93\u51fa\u7f13\u51b2\u5757\u4e2d\u3002\u4e00\u65e6\u67d0\u4e00\u6761\u8bb0\u5f55\u88ab\u5f52\u5e76\u6389\uff0c\u90a3\u4e48\u8fd9\u6761\u8bb0\u5f55\u5c31\u4f1a\u4ece\u5b83\u6240\u5c5e\u7684\u5185\u5b58\u7684\u90a3\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u4e2d\u5220\u9664\u3002\u5982\u679c\u5185\u5b58\u4e2d\u67d0\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u7684\u5185\u5bb9\u88ab\u5220\u9664\u7a7a\u4e86\uff0c\u90a3\u4e48\u5c31\u5c06\u5bf9\u5e94\u7684\u5f52\u5e76\u6bb5\u7684\u4e0b\u4e00\u4e2a\u5757\u62ff\u4e0a\u6765\u3002</p> <p>\u5bf9\u4e8e\u8f93\u51fa\u7f13\u51b2\u5757\uff0c\u6bcf\u5f53\u5b83\u88ab\u5199\u6ee1\u4e86\uff0c\u5c31\u5c06\u5176\u5199\u51fa\u6765\uff0c\u5199\u5230\u78c1\u76d8\u4e2d\u3002</p> <p></p> <p>\u4f8b\u5982\uff1a\u4e0a\u56fe\u4e2d\uff0c\u751f\u6210\u4e86\u4e24\u4e2a\u5f52\u5e76\u6bb5\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u6bb5\u90fd\u67094\u5757\u3002\u8fd9\u8bf4\u660e\u5185\u5b58\u4e2d\u6700\u591a\u5b58\u653e4\u4e2ablock\uff0c\u8fd9\u4e2a\u5173\u7cfb\u4e00\u5171\u67098\u4e2ablock</p> <p>\u7531\u4e8e\\(2 &lt; 4(N &lt; M)\\),\u6240\u4ee5\u4e00\u6b21\u5f52\u5e76\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002\u9996\u5148\u5c06\u4e24\u4e2a\u5f52\u5e76\u6bb5\u7684\u7b2c\u4e00\u4e2a\u5757\u653e\u5165\u5230\u5185\u5b58\u4e2d\uff08\u8f93\u5165\u7f13\u51b2\u5757buffer\uff09\uff0c\uff081\uff0c3\uff0c5\uff09\uff082\uff0c4\uff0c6\uff09\u3002\u73b0\u5728\u8f93\u51fa\u7f13\u51b2\u5757\u4e2d\u5148\u5199\u51651\uff0c\u5bf9\u5e94\u7684\u5220\u9664\uff081\uff0c3\uff0c5\uff09\u76841\u3002\u76f4\u5230\u8f93\u51fa\u7f13\u51b2\u5757\u5199\u6ee1\uff0c\u5f53\u4e0b\u4e00\u4e2a\u5143\u7d204\u5199\u5165\u65f6\uff0c\u9700\u8981\u5148\u628a\u8f93\u51fa\u7f13\u51b2\u5757\u4e2d\u7684\u5185\u5bb9\u5199\u9053\u78c1\u76d8\u4e2d\u3002\u63a5\u7740\uff0c\u8f93\u51fa\u7f13\u51b2\u5757\u8981\u5199\u51655\uff0c\u6b64\u65f6\u6709\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u53d8\u7a7a\u4e86\u3002\u8fd9\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u7684\u5185\u5bb9\u5c31\u8981\u88ab(7,9,11)\u6765\u4ee3\u66ff\u3002</p> <p>2.\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e\u5185\u5b58\u6700\u5927\u5bb9\u91cf\u7684\u5757\u6570</p> <p>\u9700\u8981\u591a\u8f6e\u6b21\u7684\u5408\u5e76\u3002\u5728\u6bcf\u4e00\u4e2a\u8f6e\u6b21\u4e2d\uff0cM-1\u4e2a\u5f52\u5e76\u6bb5\u88ab\u5f52\u5e76\u8d77\u6765\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbeM\u4e3a11\uff0c\u539f\u672c\u670990\u4e2a\u5f52\u5e76\u6bb5\u3002\u90a3\u4e48\u6bcf\u6b21\u653e\u516510\u4e2a\u5f52\u5e76\u6bb5\uff0c\u5408\u4e3a1\u4e2a\u3002\u6700\u540e\u4f1a\u4ea7\u751f9\u4e2a\u8f83\u5927\u7684\u5f52\u5e76\u6bb5\u3002\u5c06\u8fd99\u4e2a\u8f83\u5927\u7684\u5f52\u5e76\u6bb5\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\uff0c\u5c31\u4f1a\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5f52\u5e76\u7ed3\u679c\u3002\uff08<code>\u4e3a\u4ec0\u4e48\u80fd\u591f\u5c06\u8f83\u5927\u7684\u5f52\u5e76\u6bb5\u653e\u5165\u5185\u5b58\u4e2d\u5462\uff1f\u672c\u8d28\u4e0a\u8fd8\u662f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u6bcf\u4e00\u6b21\u90fd\u662f\u5c06\u5f52\u5e76\u6bb5\u7684\u7b2c\u4e00\u4e2ablock\u5199\u5165\u5230\u8f93\u5165\u7f13\u51b2\u5feb\u4e2d\uff0c\u540e\u9762\u7684block\u4e0d\u4f1a\u5360\u5185\u5b58\u80fd\u5bb9\u7eb3\u7684\u5757\u6570\uff0c\u4e0d\u4ea7\u751f\u5f71\u54cd</code>\uff09</p>"},{"location":"DB/11.%20Query%20Processing/#1142-cost-analysis","title":"11.4.2 Cost analysis","text":"<p>transfer cost</p> <p></p> <ul> <li> <p>\u6700\u521d\u59cb\u65f6\uff0c\u751f\u6210\u7684\u6700\u5c0f\u5f52\u5e76\u6bb5\u7684\u6570\u76ee\u4e3a\uff1a\\(\\lceil \\dfrac{b_r}{m} \\rceil\\)</p> </li> <li> <p>\u7531\u4e8e\u6bcf\u4e00\u8f6e\u6b21\uff08\u5c06\u5c0f\u7684\u5f52\u5e76\u6bb5\uff0c\u901a\u8fc7\u5f52\u5e76\u5408\u5e76\u4e3a\u8f83\u5927\u7684\u5f52\u5e76\u6bb5\uff0c\u4f8b\u5982\uff0c\u521a\u521a90\u4e2a\u5c0f\u5f52\u5e76\u6bb5\uff0c\u548c\u5e76\u4e3a9\u4e2a\u5927\u7684\u5f52\u5e76\u6bb5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u4e00\u8f6e\uff09\uff0c\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\u51cf\u5c11\u4e3a\u539f\u6765\u7684\\(\\dfrac{1}{m-1}\\),\u6240\u4ee5\u8f6e\u6570\u8868\u793a\u4e3a\\(log_{m-1}(\\dfrac{b_r}{m})\\)</p> </li> <li> <p><code>\u5728\u751f\u6210\u521d\u59cb\u5f52\u5e76\u6bb5\u7684\u65f6\u5019\uff0c\u5c31\u9700\u89812br\u6b21\u7684\u4f20\u8f93\u548c2*br/m\u6b21\u7684seek\u3002\u7136\u540e\u6700\u540e\u4e00\u8f6e\u6211\u4eec\u5ffd\u7565\u5c06\u751f\u6210\u7684\u5f52\u5e76\u7ed3\u679c\u5199\u5165\u5230\u78c1\u76d8\u7684\u5f00\u9500\u3002\uff08\u56e0\u4e3a\u53ef\u80fd\u6d41\u6c34\u7ebf\u4f1a\u76f4\u63a5\u628a\u7ed3\u679c\u4ea4\u7ed9\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff09</code>  $$   total  number  = 2 b_r + \\lceil log_{m-1}\\dfrac{b_r}{m}\\rceil \\times 2b_r - b_r =  b_r + 2b_r\\lceil log_{m-1}(b_r/m)\\rceil  $$</p> </li> </ul> <p>seek cost</p> <ul> <li> <p>\u751f\u6210\u5f52\u5e76\u6bb5\u7684\u9636\u6bb5\uff08\u5c06\u5f52\u5e76\u6bb5\u5185\u90e8\u6392\u597d\u5e8f\uff09\uff1a\u9700\u8981\u4e00\u6b21seek\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\uff0c\u7531\u4e8e\u5f52\u5e76\u6bb5\u662f\u7531\u8fde\u7eed\u7684block\u7ec4\u6210\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21seek\uff0c\u540e\u7eed\u987a\u5e8f\u67e5\u627e\u5373\u53ef\uff0c\u5168\u90e8\u8bfb\u5165\u5230\u8f93\u5165\u7f13\u51b2\u5feb\u4e2d\uff0c\u6392\u597d\u5e8f\u540e\uff0c\u5199\u56de\u65f6\u9700\u8981\u4e00\u6b21seek\uff0c\u540e\u7eed\u987a\u5e8f\u586b\u8865\u5373\u53ef</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5f52\u5e76\u6bb5\u9700\u8981\u4e24\u6b21seek\uff0c\u90a3\u4e48\u603b\u6570\u4e3a\\(2\\lceil b_r/m \\rceil\\), <code>2 * the number of runs</code></p> </li> <li> <p>merger\u9636\u6bb5\uff1a\u5728\u5bf9\u521d\u59cb\u7684\u5f52\u5e76\u6bb5\u8fdb\u884c\u5f52\u5e76\u64cd\u4f5c\u7684\u6bcf\u4e00\u8f6e\uff0c\u6bcf\u4e00\u4e2a\u5757\u7684\u8bfb\u5199\uff0c\u90fd\u9700\u8981\u4e00\u4e2a\u5355\u72ec\u7684\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4dseek\uff0c<code>\u8fd9\u662f\u56e0\u4e3a\u8bfb\u5199\u64cd\u4f5c\u662f\u4e0d\u77e5\u9053\u987a\u5e8f\uff0c\u4f60\u6839\u672c\u4e0d\u77e5\u9053\u54ea\u4e2a\u5757\u7684\u8bb0\u5f55\u4f1a\u88ab\u7387\u5148\u5220\u9664\u5b8c</code>\uff0c\u8f93\u51fa\u7f13\u51b2\u5757\u5199\u56de\u78c1\u76d8\u7684\u65f6\u5019\u4e5f\u9700\u8981\u91cd\u5b9a\u5411\u4e00\u6b21\uff0c<code>\u56e0\u4e3a\u53ef\u4ee5\u539f\u672c\u7684\u8bfb\u5199\u5934\u8fd8\u5728\u8f93\u5165\u7684\u5f52\u5e76\u6bb5\u90a3\u91cc</code>\u3002\u6240\u4ee5\u6bcf\u4e00\u8f6eseek\u64cd\u4f5c\u7684\u6b21\u6570\u662f\\(2b_r\\)</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u540e\u4e00\u8f6e\u751f\u6210\u7684\u5f52\u5e76\u7ed3\u679c\u4e0d\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u6240\u4ee5\u5c11\u4e86br\u6b21seek\u64cd\u4f5c  $$   \\begin{aligned}   total  number &amp;= 2\\lceil b_r/m \\rceil + \\lceil log_{m-1}\\dfrac{b_r}{m}\\rceil \\times 2b_r - b_r \\   &amp;= 2\\lceil b_r/m \\rceil + b_r(2\\lceil log_{m-1}(b_r/m)\\rceil - 1 )   \\end{aligned}  $$</p> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#1143-advanced-version","title":"11.4.3 Advanced version","text":"<p>\u6bcf\u4e00\u6b21\u8bfb\u8fdb\u53bb\u90fd\u8981 seek, \u53ef\u4ee5\u6539\u8fdb\u3002\u4e3a\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\u5206\u914d\u591a\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u3002\u8fd9\u6837\u6211\u4eec\u5b9a\u4f4d\u4e00\u6b21\u4e4b\u540e\u53ef\u4ee5\u8bfb\u5165\u591a\u5757\u8fdb\u5165\u8f93\u5165\u7f13\u51b2\u533a\u3002 </p> <p></p> <p>\u5047\u8bbe\u6211\u4eec\u4e3a\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\uff0c\u5206\u914d\\(b_b\\)\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u3002\u8fd9\u6837\u4e00\u6b21seek\u7684\u64cd\u4f5c\uff0c\u5c31\u80fd\u8bfb\u5199\u8fdb\u5165\\(b_b\\)\u5757\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u5bfc\u81f4\u8f6e\u6570\u7684\u589e\u52a0\u3002<code>\u56e0\u4e3a\uff0c\u8f93\u5165\u7f13\u51b2\u5757\u7684\u6570\u91cf\u662f\u6709\u9650\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e3a\u4e00\u4e2a\u5f52\u5e76\u6bb5\u5206\u914d\u66f4\u591a\u7684\u8f93\u5165\u7f13\u51b2\u5757\u4f1a\u5bfc\u81f4\u6bcf\u4e00\u8f6e\u80fd\u591f\u5904\u7406\u7684\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\u53d1\u751f\u51cf\u5c11\u3002</code></p> <p>\u6b64\u65f6\uff0c\u6bcf\u4e00\u8f6e\u80fd\u591f\u5904\u7406\u7684\u5f52\u5e76\u6bb5\u6570\u91cf\u53d8\u4e3a\\(M/b_b - 1\\)(<code>\u8bf7\u6ce8\u610f\u6b64\u65f6\u7684\u8f93\u51fa\u7f13\u51b2\u5757\u4e5f\u662fbb\u5757\uff0cm/bb\u5c31\u8868\u793a\u6700\u591a\u80fd\u591f\u5bb9\u7eb3\u7684\u5f52\u5e76\u6bb5\u7684\u6570\u91cf\uff0c-1\u662f\u4e3a\u4e86\u8f93\u51fa\u7f13\u51b2\u5757</code>)\u3002\u603b\u7684\u8f6e\u6b21\u53d8\u4e3a\uff1a $$ total  number  of merge  pass = \\lceil log_{\\lfloor{m}/{b_b}\\rfloor -1}(b_r / m)\\rceil $$</p> <p>block transfer</p> <p>\u4f46\u662f\u4f20\u8f93\u64cd\u4f5c\u662f\u6ca1\u6709\u6539\u53d8\u7684\uff0c\u6bcf\u4e00\u8f6e\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u6240\u6709\u5757\u7684\u8bfb\u5165\uff0c\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u6240\u6709\u5757\u7684\u5199\u51fa\u3002\u56e0\u6b64\u6bcf\u4e00\u8f6e\u7684\u4f20\u8f93\u64cd\u4f5c\u6b21\u6570\u4f9d\u65e7\u662f2*br\u3002</p> <p>\u603b\u7684block transfer\u7684\u6b21\u6570\u53d8\u4e3a\uff1a $$ 2b_r+2b_r \\times \\lceil log_{\\lfloor{m}/{b_b}\\rfloor -1}(b_r / m)\\rceil - b_r = b_r(2\\lceil log_{\\lfloor{m}/{b_b}\\rfloor -1}(b_r / m)\\rceil + 1) $$</p> <p>block seek</p> <p></p> <ul> <li> <p>\u751f\u6210\u5f52\u5e76\u6bb5\u7684\u9636\u6bb5\uff08\u5c06\u5f52\u5e76\u6bb5\u5185\u90e8\u6392\u597d\u5e8f\uff09\uff1a\u9700\u8981\u4e00\u6b21seek\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\uff0c\u7531\u4e8e\u5f52\u5e76\u6bb5\u662f\u7531\u8fde\u7eed\u7684block\u7ec4\u6210\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21seek\uff0c\u540e\u7eed\u987a\u5e8f\u67e5\u627e\u5373\u53ef\uff0c\u5168\u90e8\u8bfb\u5165\u5230\u8f93\u5165\u7f13\u51b2\u5feb\u4e2d\uff0c\u6392\u597d\u5e8f\u540e\uff0c\u5199\u56de\u65f6\u9700\u8981\u4e00\u6b21seek\uff0c\u540e\u7eed\u987a\u5e8f\u586b\u8865\u5373\u53ef\u3002</p> <p><code>\u4fdd\u6301\u4e0d\u53d8\uff0c\u6b21\u6570\u4ecd\u4e3a 2*br/m</code></p> </li> <li> <p>\u5f52\u5e76\u9636\u6bb5\uff1a\u7531\u4e8e\u4e00\u6b21\u8bfb\u5199\u5934\u7684\u91cd\u5b9a\u5411\u5c06\u8bfb\u53d6\\(b_b\\)\u4e2ablock\uff0c\u6240\u4ee5seek\u7684\u6b21\u6570\u5c06\u4e3a\u51cf\u5c11\uff0c\u8f6c\u5316\u4e3a\\(2\\lceil b_r/b_b \\rceil\\).\u90a3\u4e48\u603b\u7684block seek\u7684\u6b21\u6570\u53d8\u4e3a  $$   2\\lceil b_r/m \\rceil + [b_r/b_b]\\lceil (2log_{\\lfloor{m}/{b_b}\\rfloor -1}(b_r / m)\\rceil - 1)  $$</p> </li> </ul> <p>\\(b_b\\) \u7684\u589e\u52a0\uff0c\u867d\u7136\u4f1a\u51cf\u5c11\u6bcf\u4e00\u8f6e\u8fd0\u884c\u65f6\u7684\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u6b21\u6570\uff0c\u4ecebr\u6b21\u5230br/bb\u6b21\uff0c\u4f46\u662f\u4f1a\u589e\u52a0\u8f6e\u6570\uff0c\u56e0\u6b64\u8fd8\u4f1a\u589e\u52a0\u6570\u636e\u4f20\u8f93\u7684\u6b21\u6570\u3002<code>\u672c\u8d28\u662f\u540cblock transfer\u65f6\u95f4\u8f83\u77ed\u7684\u64cd\u4f5c\u9009\u9879\u5f25\u8865\u65f6\u95f4\u8f83\u957f\u7684block seek</code></p>"},{"location":"DB/11.%20Query%20Processing/#115-join-operation","title":"11.5 Join Operation","text":"<p>Several different algorithms to implement joins</p> <ul> <li>Nested-loop join</li> <li>Block nested-loop join</li> <li>Indexed nested-loop join</li> <li>Merge-join</li> <li>Hash-join</li> </ul>"},{"location":"DB/11.%20Query%20Processing/#1151-nested-loop-join-\u5d4c\u5957\u5faa\u73af","title":"11.5.1 Nested-Loop Join \u5d4c\u5957\u5faa\u73af","text":"<p>\\(r\\)is called the outer relation\u5916\u5faa\u73af\uff0c\u5bf9\u5e94\u7684\u5757\u6570\u662f\\(b_r\\)\uff0cand\\(s\\)the inner relation* of the join.\u5185\u5faa\u73af\uff0c\u5bf9\u5e94\u7684\u5757\u6570\u662f\\(b_s\\) </p> <p>block transfer</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u8981\u6c42\u628a\u5916\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u548c\u5185\u5faa\u73af\u5173\u7cfbs\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u7ec4\u5408\u8d77\u6765\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u5173\u7cfb\u3002\u56e0\u6b64\u5916\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u5757\uff0c\u90fd\u53ea\u9700\u8981\u8fdb\u5165\u5230\u5185\u5b58\u4e00\u6b21\u3002\u4f46\u662f\u5bf9\u4e8e\u5916\u5faa\u73af\u5173\u7cfb\u4e2d\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\uff0c\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u5757\u90fd\u8981\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\u3002\u6240\u4ee5\u4f20\u8f93\u7684\u6b21\u6570\u4e3a\uff1a $$ n_r * b_s + b_r\\ n_r \u8868\u793a\u5916\u5faa\u73af\u5173\u7cfbr\u8bb0\u5f55\uff08record\uff09\u7684\u6570\u76ee $$</p> <p>block seek</p> <ul> <li> <p>\u5916\u5faa\u73af\u4e2d\uff0c\u6bcf\u4e00\u5757\u90fd\u9700\u8981\u8fdb\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u78c1\u76d8\u8bfb\u5199\u5934\u91cd\u5b9a\u5411\u7684\u6b21\u6570\u4e3a\\(b_r\\)</p> </li> <li> <p>\u5bf9\u4e8e\u5185\u5faa\u73af\uff0c\u9700\u8981\u53bb\u904d\u5386\u5185\u5faa\u73af\u7684\u6bcf\u4e00\u6761record\uff0c\u4f46\u662f\u5185\u5faa\u73af\u7684\u6587\u4ef6s\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u56e0\u6b64\u6bcf\u6b21\u8fdb\u5165\u5185\u5faa\u73af\uff0c\u53ea\u9700\u8981\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u4e00\u6b21\u3002<code>\u9000\u51fa\u5185\u5faa\u73af\u540e\uff0c\u56de\u5230\u5916\u5faa\u73af\uff0c\u53ea\u9700\u8981\u5916\u5faa\u73af\u5f53\u524d\u5728\u8f93\u5165\u7f13\u51b2\u5757\u7684record\u4e0b\u79fb\uff0c\u8bfb\u5199\u5934\u91cd\u65b0\u5b9a\u4f4d\u5230\u5185\u5faa\u73af\u7684\u7b2c\u4e00\u4e2ablock</code>\u3002\u56e0\u6b64\uff0c\u5916\u5faa\u73af\u8fdb\u884c\u591a\u5c11\u6b21\uff0c\u5185\u5faa\u73af\u5173\u7cfb\u7684\u8bfb\u5199\u5934\u5c31\u91cd\u5b9a\u4f4d\u591a\u5c11\u6b21\u3002</p> </li> <li>\u4e0a\u8ff0\u7b97\u6cd5\u4e2d\uff0c\u5916\u5faa\u73af\u6bcf\u4e00\u4e2a\u5143\u7ec4\u90fd\u8981\u548c\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6574\u4e2a\u5173\u7cfb\u8fdb\u884c\u5339\u914d\uff0c\u56e0\u6b64\u5916\u5faa\u73af\u5173\u7cfb\u6709\u591a\u5c11\u4e2a\u5143\u7ec4\\(n_r\\)\uff0c\u5916\u5faa\u73af\u5c31\u8981\u8fdb\u884c\u591a\u5c11\u6b21\uff0c\u5185\u5faa\u73af\u5173\u7cfb\u7684\u8bfb\u5199\u5934\u5c31\u8981\u91cd\u5b9a\u4f4d\u591a\u5c11\u6b21\u3002</li> </ul> \\[ total \\ number \\ of \\ seek = b_r + n_r \\] <p><code>\u5982\u679c\u5185\u5b58\u80fd\u591f\u5bb9\u7eb3\u6240\u6709\u7684\u5173\u7cfb\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8fdb\u884c2\u6b21seek\uff08\u5173\u7cfbr\u548c\u5173\u7cfbs\uff09\uff0cb_r + b_s\u6b21transfer\u3002\u56e0\u4e3a\u8fd9\u65f6\u5173\u7cfbr\u4e2d\u6240\u6709\u7684\u5757\u4e00\u6b21\u6027\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u4e0d\u9700\u8981\u5728\u8df3\u51fa\u5185\u5faa\u73af\u8fdb\u5165\u5916\u5faa\u73af\u53d1\u73b0\u5f53\u524d\u8f93\u5165\u7f13\u51b2\u5757\u6ca1\u6709record\u540e\uff0c\u91cd\u65b0\u8bfb\u5199\u5934\u91cd\u5b9a\u5411\u8bfb\u53d6\u5916\u5faa\u73af\u7684\u4e0b\u4e00\u4e2ablock\u3002\u540c\u65f6\u7531\u4e8e\u5173\u7cfbs\u7684\u6240\u6709\u5757\u90fd\u8bfb\u5165\u5185\u5b58\uff0c\u6240\u4ee5\u5bf9\u5916\u5faa\u73af\u6bcf\u4e00\u6761record\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u8bfb\u53d6\u5185\u5faa\u73af\u6240\u6709\u7684block\uff0c\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u62ff\u5373\u53ef</code></p>"},{"location":"DB/11.%20Query%20Processing/#1152-block-nested-loop-join","title":"11.5.2 Block Nested-Loop Join","text":"<p>\u5757\u5d4c\u5957\u5faa\u73af\u8fde\u63a5</p> <p>\u5bf9\u4e8e\u5916\u5faa\u73af\u7684\u6bcf\u4e00\u4e2a\u5757\uff0c\u5c06\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u4e2a\u5757\u8bfb\u5165\u5185\u5b58\u4e2d\u3002\u7136\u540e\u5728\u5185\u5b58\u4e2d\u9488\u5bf9\u8fd9\u4e24\u4e2a\u5757\u8fdb\u884c\u5145\u5206\u7684\u8fde\u63a5\u3002</p> <p>\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u4f20\u8f93\u9700\u8981\u53d1\u751f\u7684\u6b21\u6570\uff1ablock transfer</p> <p>$$ b_r * b_s + b_r $$ \u8fd9\u662f\u56e0\u4e3a\uff0c\u5916\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u4e2a\u5757\u80af\u5b9a\u8981\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\u3002\u5bf9\u4e8e\u5916\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u4e2a\u5757\uff0c\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6bcf\u4e00\u4e2a\u5feb\u90fd\u8981\u8fdb\u5165\u5230\u5185\u5b58\u4e00\u6b21\uff0c\u9700\u8981\\(b_r * b_s\\)\u6b21\u4f20\u8f93</p> <p>\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u4f20\u8f93\u9700\u8981\u53d1\u751f\u7684\u6b21\u6570\uff1ablock seek</p> <p>\u5bf9\u4e8e\u5185\u5faa\u73af\uff0c\u4e00\u6b21\u5b9a\u4f4d\u5373\u53ef\u5c06\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6587\u4ef6\u987a\u5e8f\u5730\u8bfb\u5230\u5185\u5b58\u4e2d\u53bb\u3002\u56e0\u6b64\uff0c\u5916\u5faa\u73af\u8fdb\u884c\u51e0\u6b21\uff0c\u5bf9\u4e8e\u5185\u5faa\u73af\u5173\u7cfb\u5c31\u4f1a\u53d1\u751f\u591a\u5c11\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u64cd\u4f5c\u3002</p> <p>\u4f46\u662f\u6bcf\u6b21\u9000\u51fa\u5185\u5faa\u73af\uff0c\u56de\u5230\u5916\u5faa\u73af\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u8bfb\u5199\u5934\u91cd\u65b0\u5b9a\u4f4d\uff0c\u4ee5\u4f7f\u5f97\u5916\u5faa\u73af\u5173\u7cfb\u7684\u6587\u4ef6\u7684\u4e0b\u4e00\u5757\u8fdb\u5165\u5230\u5185\u5b58\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u5916\u5faa\u73af\u6709\u591a\u5c11\u4e2a\u5757\uff0c\u5bf9\u4e8e\u5916\u5faa\u73af\u5173\u7cfb\u6587\u4ef6\u7684\u8bfb\u5199\u5934\u91cd\u65b0\u5b9a\u4f4d\u5c31\u4f1a\u53d1\u751f\u591a\u5c11\u6b21\uff0c\u5bf9\u4e8e\u5185\u5faa\u73af\u5173\u7cfb\u6587\u4ef6\u7684\u8bfb\u5199\u5934\u91cd\u65b0\u5b9a\u4f4d\u5c31\u4f1a\u53d1\u751f\u591a\u5c11\u6b21\u3002</p> <p>Seek\u64cd\u4f5c\u53d1\u751f\u7684\u603b\u6b21\u6570\u4e3a\uff1a\\(2 \\times b_r\\)</p> <p><code>\u4ecetransfer\u548cseek\u7684\u6b21\u6570\u6765\u770b\uff0c\u8981\u4f7f\u603b\u7684cost\u6700\u4f4e\uff0c\u90a3\u8981\u4f7f$b_r$\u5c3d\u53ef\u80fd\u5730\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5757\u6570\u5c11\u5730\u5173\u7cfb\u4f5c\u4e3a\u5916\u5173\u7cfb\uff0c\u540c\u65f6\u51cf\u5c11seek\u548ctransfer\u7684\u6b21\u6570</code></p> <p>\u6700\u597d\u7684\u60c5\u51b5\u662f\uff1a\u5047\u8bbe\u5185\u5b58\u7a7a\u95f4\u8db3\u591f\u5927\uff0c\u90a3\u4e48\u4e24\u4e2a\u5173\u7cfb\u6240\u6709\u7684\u5757\u90fd\u80fd\u591f\u4e00\u6b21\u6027\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\u53bb\u3002\u6b64\u65f6block transfer\u7684\u6b21\u6570\u4e3a\uff1a\\(b_r + b_s\\), block seek \u7684\u6b21\u6570\u4e3a2\u6b21</p> <p>Improvements to block nested loop algorithms:  </p> <p>\u6211\u4eec\u6bcf\u6b21\u9000\u51fa\u5185\u5faa\u73af\uff0c\u56de\u5230\u5916\u5faa\u73af\u65f6\uff0c\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u64cd\u4f5c\u3002\u4e3a\u4f55\u4e0d\u8ba9\u8fd9\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u64cd\u4f5c\u4e00\u6b21\u8bfb\u53d6\u591a\u4e2a\u5757\uff1f</p> <p>\u73b0\u5728\uff0c\u5047\u8bbe\u5185\u5b58\u4e2d\u6700\u5927\u5bb9\u91cf\u662fM\u4e2a\u5757\u3002\u7559\u4e00\u4e2a\u5757\u4f5c\u4e3a\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u53ea\u9700\u8981\u7559\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u7559\u7ed9\u5185\u5faa\u73af\u5173\u7cfb\uff08<code>\u56e0\u4e3a\u4e0d\u7ba1\u7559\u51e0\u4e2a\u5757\u7ed9\u5185\u5faa\u73af\uff0c\u5185\u5faa\u73af\u90fd\u662f\u53ea\u9700\u8981\u91cd\u5b9a\u4f4d\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u5168\u90e8\u8bfb\u8fdb\u6765</code>\uff09\uff0c\u5269\u4e0b\\(M-2\\)\u4e2a\u5757\u5168\u90e8\u7559\u7ed9\u5916\u5faa\u73af\uff0c\u4f5c\u4e3a\u8f93\u5165\u7f13\u51b2\u533a\u3002</p> <p>block transfer</p> <p>\u5916\u5faa\u73af\u7684\u6bcf\u4e00\u4e2a\u5757\u8fd8\u662f\u5fc5\u987b\u8981\u8bfb\u5165\u5185\u5b58\u4e2d\u4e00\u6b21\u3002\u8fd9\u6d88\u8017br\u6b21Transfer\u3002</p> <p>\u6bcf\u4e00\u8f6e\u5faa\u73af\uff0c\u5916\u5faa\u73af\u5173\u7cfb\u8bfb\u8fdb\u5185\u5b58\u7684\u6709m-2\u4e2a\u5757\uff0c\u56e0\u6b64\u5faa\u73af\u6b21\u6570\u53d8\u6210\u4e86\u539f\u6765\u7684M-2\u5206\u4e4b\u4e00\u3002\u73b0\u5728\u5faa\u73af\u6b21\u6570\u53d8\u4e3a\uff1a\\(\\lceil b_r / (m-2) \\rceil\\)</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u8f6e\u5faa\u73af\uff0c\u90fd\u9700\u8981\u5c06\u5185\u5faa\u73af\u5173\u7cfb\u7684\u6240\u6709\u5757\u5168\u90e8\u8bfb\u8fdb\u6765 $$ total  number  of  transfer: b_r + b_s \\times \\lceil b_r / (m-2) \\rceil $$</p> <p>block seek</p> <p>\u6bcf\u4e00\u8f6e\u5faa\u73af\u65f6\uff0c\u8981\u8fdb\u884c\u4e00\u6b21\u5916\u5faa\u73af\u5173\u7cfb\u7684\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u3002</p> <p>\u5bf9\u4e8e\u5185\u5faa\u73af\uff0c\u5728\u6bcf\u6b21\u6267\u884c\u5185\u5faa\u73af\u7684\u65f6\u5019\uff0c\u8981\u8fdb\u884c\u4e00\u6b21\u5185\u5faa\u73af\u5173\u7cfb\u7684\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u3002 $$ total  number of seek = 2\\lceil b_r / (m-2) \\rceil $$ Cost =\\(\\lceil b_r  / (M-2) \\rceil * b_s + b_r\\)block transfers +\\(2 \\lceil b_r  / (M-2)\\rceil\\)seeks</p> <ul> <li> <p>If equi-join attribute forms a key on the inner relation, stop inner loop on first match  </p> <p>\u5982\u679c\u8fde\u63a5\u7684\u5c5e\u6027\u662f key, \u90a3\u4e48\u5f53\u6211\u4eec\u5339\u914d\u4e0a\u4e4b\u540e\u5c31\u53ef\u4ee5\u505c\u6b62\u5185\u5faa\u73af\u3002</p> </li> <li> <p>Scan inner loop forward and backward alternately, to make use of the blocks remaining in buffer (with LRU replacement)  </p> <p>\u5229\u7528 LRU \u7b56\u7565\u7684\u7279\u70b9\uff0cinner \u6b63\u5411\u626b\u63cf\u540e\u518d\u53cd\u8fc7\u6765\uff0c\u8fd9\u6837\u6700\u8fd1\u7684\u5757\u5f88\u53ef\u80fd\u8fd8\u5728\u5185\u5b58\u4e2d\uff0c\u63d0\u9ad8\u7f13\u51b2\u547d\u4e2d\u7387\u3002</p> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#1153-indexed-nested-loop-join","title":"11.5.3 Indexed Nested-Loop Join","text":"<p>\u9700\u8981\u8fde\u63a5\u7684\u5c5e\u6027\u4e0a\uff0c\u5185\u5faa\u73af\u5173\u7cfb\u9488\u5bf9\u8be5\u5c5e\u6027\u6709\u4e00\u4e2aB+\u6811\u7d22\u5f15\u3002\u90a3\u4e48\uff0c\u5c31\u6ca1\u5fc5\u8981\u6bcf\u6b21\u53bb\u904d\u5386\u5185\u5faa\u73af\u7684\u6bcf\u4e00\u4e2a\u5143\u7ec4\u3002\u6211\u4eec\u53ea\u8981\u6839\u636e\u5916\u5faa\u73af\u8be5\u6761\u8bb0\u5f55\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\uff0c\u5728\u5185\u5faa\u73af\u7684B+\u6811\u7d22\u5f15\u4e2d\u67e5\u627e\u5373\u53ef\u3002</p> <p>Index lookups can replace file scans if</p> <ul> <li> <p>join is an equi-join or natural join and <code>\u9002\u7528\u4e8e\u81ea\u7136\u8fde\u63a5\u548c\u7b49\u503c\u8fde\u63a5\uff0c\u76f8\u5f53\u4e8e\u6211\u5df2\u77e5\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u7136\u540e\u5728B+\u6811\u4e2d\u5bfb\u627e\u76f8\u7b49\u7684\u503c</code></p> </li> <li> <p>an index is available on the inner relation\u2019s join attribute  </p> <p>\u8fde\u63a5\u5c5e\u6027\u6709\u7d22\u5f15</p> </li> </ul> <p>\u5047\u8bbe\u5916\u5173\u7cfb\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u533a</p> <ol> <li><code>block transfer</code><ul> <li>\u5bf9\u4e8e\u5916\u5173\u7cfb\uff0c\u6bcf\u4e00\u4e2a\u5757\u90fd\u4f1a\u4f20\u8f93\u8fdb\u5165\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u8fd9\u9700\u8981\\(b_r\\)\u6b21Transfer\u64cd\u4f5c\u3002</li> <li>\u5bf9\u4e8e\u5185\u5173\u7cfb\uff0c\u4e0d\u7528\u5c06\u5b83\u8bfb\u5165\u5185\u5b58\u4e2d\uff0c\u76f4\u63a5\u5229\u7528B+\u6811\u67e5\u627e\u5373\u53ef\u3002\u5185\u5173\u7cfb\u4e0d\u9700\u8981\u4f20\u8f93\u64cd\u4f5c\u3002</li> </ul> </li> <li><code>block seek</code><ul> <li>\u5bf9\u4e8e\u5916\u5173\u7cfb\uff0c\u6bcf\u4e00\u6b21\u9000\u51fa\u5185\u5faa\u73af\uff0c\u63a5\u7740\u5916\u5faa\u73af\u8fdb\u884c\u65f6\uff0c\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u3002\u56e0\u6b64\uff0c\u9700\u8981\\(b_r\\)\u6b21Seek\u64cd\u4f5c\u3002</li> </ul> </li> </ol> <p>\u5047\u8bbe\u5916\u5173\u7cfb\u5728\u5185\u5b58\u4e2d\u5206\u914dM-2\u4e2a\u8f93\u5165\u7f13\u51b2\u5757</p> <ol> <li> <p><code>block transfer</code></p> <ul> <li>\u5bf9\u4e8e\u5916\u5173\u7cfb\uff0c\u6bcf\u4e00\u4e2a\u5757\u90fd\u4f1a\u4f20\u8f93\u8fdb\u5165\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\\(b_r\\)\u6b21Transfer\u64cd\u4f5c\u3002</li> </ul> </li> <li> <p><code>block seek</code></p> <ul> <li>\u5bf9\u4e8e\u5916\u5173\u7cfb\uff0c\u6bcf\u4e00\u6b21\u9000\u51fa\u5185\u5faa\u73af\uff0c\u63a5\u7740\u5916\u5faa\u73af\u8fdb\u884c\u65f6\uff0c\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\uff0c\u56e0\u6b64\uff0c\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u7684\u6b21\u6570\u4e0e\u5faa\u73af\u7684\u8f6e\u6570\u76f8\u7b49\u3002</li> </ul> <p>\u56e0\u6b64\u9700\u8981\\(\\lceil br/M-2 \\rceil\\)\u6b21Seek\u64cd\u4f5c\u3002</p> </li> </ol> <p>\u8fd9\u91cc\u5047\u5b9a\u7ed9\u5916\u5173\u7cfb\u4e00\u5757\u5185\u5b58.\\(c\\)\u8868\u793a\u904d\u5386\u7d22\u5f15\u5e76\u53d6\u51fa\u6240\u6709\u5339\u914d\u7684\u5143\u7ec4\u7684\u65f6\u95f4\u3002</p> <p>Cost of the join:\\(b_r (t_T + t_S) + n_r * c\\) </p> <p><code>\u56e0\u6b64\u9009\u62e9\u5177\u6709\u8f83\u5c11record\u7684\u5173\u7cfb\u4f5c\u4e3a\u5916\u5faa\u73af</code></p> <p></p> <p><code>\u6bd4\u8f83\u540e\u53d1\u73b0\uff0c\u5916\u5173\u7cfbrecord\u6570\u91cf\u8f83\u5c0f\u7684\u8bdd\uff0c\u9002\u7528\u4e8eindexed nested loops</code></p>"},{"location":"DB/11.%20Query%20Processing/#1154-merge-join","title":"11.5.4 Merge Join","text":"<p>\u5047\u8bbe\u4e24\u4e2a\u5173\u7cfb\u5df2\u7ecf\u57fa\u4e8e\u8fde\u63a5\u5c5e\u6027\u6392\u597d\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5f52\u5e76\u7684\u601d\u60f3\u8fde\u63a5\u3002<code>\u540c\u6837\u9002\u7528\u4e8e\u7b49\u503c\u8fde\u63a5</code> </p> <ul> <li> <p>Sort both relations on their join attribute (if not already sorted on the join attributes).  </p> </li> <li> <p>Merge the sorted relations to join them</p> <ul> <li> <p>Join step is similar to the merge stage of the sort-merge algorithm.  </p> </li> <li> <p>Main difference is handling of duplicate values in join attribute \u2014 every pair with same value on join attribute must be matched</p> </li> </ul> <p>\u4e3b\u8981\u533a\u522b\u662f\u8fde\u63a5\u5c5e\u6027\u4e2d\u91cd\u590d\u503c\u7684\u5904\u7406 - \u8fde\u63a5\u5c5e\u6027\u4e0a\u5177\u6709\u76f8\u540c\u503c\u7684\u6bcf\u4e00\u5bf9\u90fd\u5fc5\u987b\u5339\u914d\uff08<code>pair\u7684\u6570\u91cf\u662f m * n</code>\uff09</p> </li> </ul> <p>\u5047\u8bbe\u6bcf\u4e00\u4e2a\u5173\u7cfb\uff0c\u5728\u5185\u5b58\u4e2d\u53ea\u5206\u914d\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u5757</p> <ol> <li> <p><code>block transfer</code></p> <p>\u7531\u4e8e\u4e24\u4e2a\u5173\u7cfb\u7684\u6bcf\u4e00\u4e2a\u5757\u4e00\u5b9a\u4f1a\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\uff0c\u56e0\u6b64\uff0c\u4ee3\u4ef7\u4e3a\\(b_r+b_s\\)\u3002</p> </li> <li> <p><code>block seek</code></p> <p>Merge\u64cd\u4f5c\u4e2d\uff0c<code>\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5757\u8fdb\u5165\u5185\u5b58\u7684\u987a\u5e8f\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\uff0c\u6700\u574f\u60c5\u51b5\u6bcf\u4e00\u4e2a\u5757\u8fdb\u53bb\u5185\u5b58\u90fd\u8981\u8fdb\u884c\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d</code>\u3002\u56e0\u6b64\u4ee3\u4ef7\u4e3a\\(b_r+b_s\\)\u3002</p> </li> </ol> <p>\u5047\u8bbe\u6bcf\u4e00\u4e2a\u5173\u7cfb\uff0c\u5728\u5185\u5b58\u4e2d\u5206\u914d\\(b_b\\)\u4e2a\u8f93\u5165\u7f13\u51b2\u533a</p> <p>\\(b_r + b_s\\)block transfers +\\(\\lceil b_r / b_b\\rceil + \\lceil b_s / b_b\\rceil\\)seeks  </p> <p>If the buffer memory size is M pages, in order to minimize the cost of merge join, how to assign M blocks to r and s respectively? </p> <p>\u5047\u8bbe\u5185\u5b58\u4e0a\u9650\u4e3aM\u5757\uff0c\u600e\u4e48\u5206\u914d\u8f93\u5165\u7f13\u51b2\u533a\u7684\u5757\u6570\uff08s\u5173\u7cfb\u5206\u914dk\u5757\uff0cr\u5173\u7cfb\u5206\u914dM-k\u5757\uff09\uff0c\u4ece\u800c\u4f7f\u5f97Seek\u7684\u4ee3\u4ef7\u6700\u5c11\uff1f</p> <p>The estimated cost is\\(b_r + b_s\\)block transfers +\\(\\lceil b_r / x_r\\rceil + \\lceil b_s / x_s\\rceil\\)seeks (\\(x_r+x_s=M\\))  </p> <p></p> <p>\u5982\u679c\u4e24\u4e2a\u8868\u90fd\u65e0\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6392\u5e8f\u518d Merge-join, \u8fd9\u65f6\u8fd8\u8981\u7b97\u4e0a\u6392\u5e8f\u7684\u4ee3\u4ef7\u3002</p> <p></p> <p><code>\u7b2c\u4e00\u6b65\u5c06\u5173\u7cfbr\u548c\u5173\u7cfbs\u7684\u53f6\u7ed3\u70b9\u8fdb\u884cmerge\uff0c\u8fd9\u662f\u5f97\u5230\u7684\u662fpair\u662f\u5173\u7cfbr\u7684\u5c5e\u6027\u503c\uff0c\u548c\u6307\u5411\u5173\u7cfbs\u7684\u6307\u9488\u96c6\u5408\u3002block\u548cseek\u7684\u6b21\u6570\u90fd\u662fbr+bs</code></p> <p><code>\u7b2c\u4e8c\u6b65\u662f\u5c06\u6307\u5411\u5173\u7cfbs\u6307\u5b9a\u503c\u7684\u6307\u9488\u6309\u7167\u5730\u5740\u6392\u597d\u5e8f\u3002\u76ee\u7684\u662f\u76f8\u90bb\u5730\u5740\u7684\u6307\u9488\u53ef\u80fd\u5728\u540c\u4e00\u4e2ablock\u4e2d\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u51cf\u5c11seek\u7684\u6b21\u6570\u3002</code>\u5982\u679c\u6307\u9488\u90fd\u5df2\u7ecf\u5728\u5185\u5b58\u5185\u4e86\uff0c\u90a3\u4e48\u53ea\u9700\u770b\u5173\u7cfbr\u7684block\u5757\u6570\uff0cbr\u6b21\u7684seek\u548ctransfer</p> <p><code>\u7b2c\u4e09\u6b65\u5c06\u5730\u5740\u91cc\u9762\u7684\u6570\u636e\u53d6\u51fa\u6765\uff0c\u548c\u539f\u5148\u5173\u7cfbr\u7684\u5c5e\u6027\u503c\u8fdb\u884cmerge</code></p>"},{"location":"DB/11.%20Query%20Processing/#1155-hash-join","title":"11.5.5 Hash Join","text":"<p>hash join\u9002\u7528\u4e8e\u81ea\u7136\u8fde\u63a5\u548c\u7b49\u503c\u8fde\u63a5\uff08\u8ffd\u6c42\u76f8\u7b49\uff0c\u8fd9\u4e48hash\u503c\u4e5f\u4f1a\u76f8\u7b49\uff09</p> <p>\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u5bf9\u5173\u7cfbr\u7684\u8fde\u63a5\u5c5e\u6027\u4e0e\u5173\u7cfbs\u8fde\u63a5\u5c5e\u6027\uff0c\u901a\u8fc7\u8ba1\u7b97\u54c8\u5e0c\u503c\u8fdb\u884c\u5206\u7247\u3002</p> <p>\u628a\u5927\u7684\u5173\u7cfb\u5206\u6210\u4e00\u7247\u4e00\u7247\u7684\u5c0f\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u8981\u6c42\u5176\u4e2d\u67d0\u4e2a\u7684\u5c0f\u5173\u7cfb\u8981\u80fd\u4e00\u6b21\u653e\u5230\u5185\u5b58\u4e2d\u3002</p> <p><code>\u539f\u7406\u662f\uff1a\u80fd\u591f\u8fde\u63a5\u4e0a\u7684\u4e24\u6761\u8bb0\u5f55\uff08\u7b49\u503c\u8fde\u63a5\uff09\uff0c\u5229\u7528\u5bf9\u5e94\u7684\u8fde\u63a5\u5c5e\u6027\uff08\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u503c\u76f8\u7b49\uff09\u7b97\u51fa\u6765\u7684\u54c8\u5e0c\u503c\u662f\u76f8\u540c\u7684\u3002\u6ce8\u610f\u4e00\u4e0bhash\u503c\u76f8\u540c\u7684\uff0c\u53ef\u80fd\u80fd\u591f\u8fde\u63a5\uff1bhash\u503c\u4e0d\u540c\u7684\uff0c\u4e00\u5b9a\u4e0d\u80fd\u591f\u8fde\u63a5</code>\u3002</p> <p>\u56e0\u6b64\uff0c\u5c06\u5173\u7cfbs\u5206\u7247\u4e2d\u7684\u5206\u72470\uff0c\u4e0e\u5c06\u5173\u7cfbr\u5206\u7247\u4e2d\u7684\u5206\u72470\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6240\u6709\u54c8\u5e0c\u503c\u4e3a0\u7684\uff0c\u80fd\u4e92\u76f8\u8fdb\u884c\u7b49\u503c\u8fde\u63a5\u7684\u8bb0\u5f55\u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5173\u7cfbs\u7b97\u51fa\u7684\u5206\u72470\u4e0e\u5173\u7cfbr\u7b97\u51fa\u7684\u5206\u72470\u8fdb\u884c\u8fde\u63a5\u3001\u5bf9\u5173\u7cfbs\u7b97\u51fa\u7684\u5206\u72471\u4e0e\u5173\u7cfbr\u7b97\u51fa\u7684\u5206\u72471\u8fdb\u884c\u8fde\u63a5\u3001\u5bf9\u5173\u7cfbs\u7b97\u51fa\u7684\u5206\u72472\u4e0e\u5173\u7cfbr\u7b97\u51fa\u7684\u5206\u72472\u8fdb\u884c\u8fde\u63a5\u2026\u2026\u6700\u540e\u518d\u8fdb\u884c\u7ec4\u5408\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u4e0d\u9700\u8981\u8003\u8651\u5173\u7cfbs\u7b97\u51fa\u7684\u5206\u72470\u4e0e\u5173\u7cfbr\u7b97\u51fa\u7684\u5206\u72471\u8fdb\u884c\u8fde\u63a5\u7b49\uff0c\u56e0\u4e3a\u54c8\u5e0c\u51fd\u6570\u662f\u76f8\u540c\u7684\uff0c\u5047\u8bbes\u4e2d\u67d0\u4e00\u4e2a\u8bb0\u5f55\u8be5\u5c5e\u6027\u7684\u503c\u88ab\u6620\u5c04\u5230\u72470\uff0cr\u4e2d\u67d0\u4e00\u4e2a\u8bb0\u5f55\u8be5\u5c5e\u6027\u7684\u503c\u88ab\u6620\u5c04\u5230\u72471\uff0c\u90a3\u4e48s\u4e2d\u7684\u8fd9\u4e00\u4e2a\u8bb0\u5f55\u548cr\u4e2d\u7684\u8fd9\u4e00\u4e2a\u8bb0\u5f55\u5728\u8fde\u63a5\u5c5e\u6027\u4e0a\u4e00\u5b9a\u4e0d\u76f8\u7b49\uff0c\u56e0\u6b64\uff0cs\u7684\u7247i\u4e0er\u7684\u7247j\uff08i!=j\uff09\u4e00\u5b9a\u4e0d\u9700\u8981\u8003\u8651\u3002</p> <p>\u540c\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u7684\u662f\uff0c\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\uff08\u4f8b\u5982\u5173\u7cfbs\uff09\u7684\u5206\u7247\u5927\u5c0f\uff0c\u80fd\u591f\u653e\u5165\u5230\u5185\u5b58\u4e2d\u53bb\u3002</p> <p>\u5c06\u5173\u7cfbs\u7684\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u76f4\u63a5\u4e00\u6b21\u6027\u7684\u8bfb\u5230\u5185\u5b58\u4e2d\u53bb\uff0c\uff08\u4f8b\u5982\u6b64\u65f6\u8bfb\u5165\u72470\uff09\uff0c\u7136\u540e\u518d\u5bf9\u5173\u7cfbr\u4e2d\u7684\u72470\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u6216\u8005\u6bcf\u4e00\u4e2a\u8bb0\u5f55\uff0c\u4e0es\u5173\u7cfb\u7684\u72470\u5728\u5185\u5b58\u4e2d\u76f4\u63a5\u8fdb\u884c\u5339\u914d\u8fde\u63a5\u3002</p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u4f8b\u5982r\u7684\u5206\u72470\u4e0es\u7684\u5206\u72470\uff0c\u90fd\u53ea\u9700\u8981\u4f20\u8f93\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\u3002\u5bf9r\u7684\u72470\u7684\u6bcf\u4e00\u4e2a\u5757\u8fdb\u884c\u5faa\u73af\u8bfb\u5165\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5757\u548c\u5df2\u7ecf\u5168\u90e8\u5728\u5185\u5b58\u4e2d\u7684s\u7684\u72470\u8fdb\u884c\u5339\u914d\uff0c<code>\u5faa\u73af\u8bfb\u5165\u72470\u7684\u5757\uff0c\u4e0d\u9700\u8981\u53cd\u590d\u8bfb\u5165\u5173\u7cfbs\u7684\u72470\uff0c\u51cf\u5c11seek\u548ctransfer\u7684\u6b21\u6570</code>\u3002</p> <p>\u56e0\u6b64\uff0cs\u7684\u5206\u72470\u4e0d\u9700\u8981\u5728\u6bcf\u6b21r\u7684\u72470\u7684\u6bcf\u4e00\u4e2a\u5757\u8bfb\u8fdb\u53bb\u7684\u65f6\u5019\uff0c\u91cd\u65b0\u5faa\u73af\u8bfb\u5165\u4e00\u6b21\uff0c\u800c\u662f\u4e00\u76f4\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u7b49\u5f85r\u7684\u4e00\u5757\u4e00\u5757\u8bfb\u8fdb\u6765\u8fdb\u884c\u5339\u914d\u3002</p> <p>\u6b64\u5916\uff0c\u5728\u540e\u9762\u8fdb\u884c\u5206\u7247\u7684join\u64cd\u4f5c\u65f6\uff0c\u8fd9\u662f\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u7684\u3002\u5bf9\u4e8e\u5173\u7cfbr\u7684\u5206\u7247i\u7684\u6bcf\u4e00\u4e2a\u5757\uff0c\u53bb\u8ddf\u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u7684\u5173\u7cfbs\u7684\u5206\u7247i\u8fdb\u884c\u8fde\u63a5\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5229\u7528\u5185\u5b58\u4e2d\u5173\u7cfbs\u7684\u5206\u7247i\u7684<code>\u54c8\u5e0c\u7d22\u5f15</code>\u8fdb\u884c\u3002</p> <p>\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u5efa\u7acb\u8d77\u6bd4\u8f83\u6709\u6548\u7684<code>\u54c8\u5e0c\u7d22\u5f15</code>\u3002\u5728\u5bf9\u5173\u7cfbr\u7684\u5206\u7247i\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u7684\u8fde\u63a5\u5c5e\u6027\u503c\uff0c\u5728\u5173\u7cfbs\u7684\u5206\u7247i\u4e2d\u8fdb\u884c\u67e5\u627e\u8fdb\u884c\u7b49\u503c\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u8fd9\u4e2a\u54c8\u5e0c\u7d22\u5f15\u51fd\u6570\u8ba1\u7b97\u4e00\u4e0b\uff0c\u5c31\u80fd\u5728\u5173\u7cfbs\u7684\u5206\u7247i\u67e5\u627e\u5230\u7b26\u5408\u7b49\u503c\u8fde\u63a5\u7684\u8bb0\u5f55\u3002</p> <p>hash\u51fd\u6570\u5e94\u8be5\u5982\u4f55\u8bbe\u8ba1\u5462\uff1f\u5e94\u5f53\u5c06\u5173\u7cfbr\u548c\u5173\u7cfbs\u81f3\u5c11\u5206\u6210\u591a\u5c11\u7247\uff1f</p> \\[ n \\geq \\lceil b_s/m \\rceil \\] <p><code>\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\uff0c\u5173\u7cfbs\u7684\u6bcf\u4e00\u4e2a\u5206\u7247\u90fd\u80fd\u88c5\u5165\u5230\u5185\u5b58\u4e2d\u53bb\u3002\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u4e2a\u5206\u7247\u7684block\u6570\u91cf\u8981\u5c0f\u4e8e\u6bcf\u4e00\u4e2abuffer\u6240\u80fd\u5bb9\u7eb3\u7684block\u6570\u91cf</code></p> <p>\u8fd8\u6709\u95ee\u9898\uff1a\u5047\u5982\u8868S\u5f88\u5927\uff0cM\u76f8\u5bf9\u6765\u8bf4\u5f88\u5c0f\u3002\u6b64\u65f6\u5229\u7528hash\u51fd\u6570\uff0c\u5c06\u5173\u7cfbs\u8fdb\u884c\u5206\u7247\uff0c\u5206\u7684\u7247\u6570\u5c31\u9700\u8981\u5f88\u591a\u3002\u90a3\u4e48\u5047\u5982\u5185\u5b58\u4e0d\u591f\u5927\uff0c\u4e00\u6b21\u65e0\u6cd5\u5206\u914d\u51fa\u6765\u8fd9\u4e48\u591a\u7684\u5206\u7247\uff0c\u5e94\u5f53\u5982\u4f55\u5904\u7406\uff1f</p> <ul> <li> <p>\u9996\u5148\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u5185\u5b58\u4e0d\u591f\u5927\uff0c\u5c31\u65e0\u6cd5\u4e00\u6b21\u5206\u914d\u8fd9\u4e48\u591a\u7684\u5206\u7247\uff1f</p> <p><code>\u8fd9\u662f\u56e0\u4e3a\u5047\u5982\u6211\u4eec\u628a\u5173\u7cfbs\u5206\u4e3aN\u4e2a\u5206\u7247\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u5206\u7247\u5728\u5185\u5b58\u4e2d\u90fd\u8981\u5177\u6709\u4e00\u4e2ablock\u5927\u5c0f\u7684\u8f93\u5165\u7f13\u51b2\u533a\u3002\u7b2ci\u4e2a\u7f13\u51b2\u533a\u7684\u4f5c\u7528\u5c31\u662f\u63a5\u53d7hash\u503c\u4e3ai\u7684record\u3002\u5f53\u7b2ci\u4e2a\u8f93\u5165\u7f13\u51b2\u533a\u5199\u6ee1\u4e86\uff0c\u5c31\u8981\u5199\u51fa\u53bb\u3002\u56e0\u6b64N&gt;M,\u5185\u5b58\u4e2d\u5757\u7684\u6570\u91cf\u4e0d\u591fN\uff0c\u65e0\u6cd5\u5c06\u5173\u7cfbs\u5206\u4e3aN\u4e2a\u5206\u7247</code></p> </li> <li> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u591a\u6b21\u5206\u7247\u3002\u5047\u8bbe\u7b2c\u4e00\u6b21\u5206\u7247\uff0c\u6211\u4eec\u628a\u5173\u7cfbr\u548c\u5173\u7cfbs\u5206\u4e3a\u4e864\u4e2a\u5206\u7247\uff0c\u4f46\u8fd9\u4e9b\u5206\u7247\u5927\u5c0f\u8fd8\u592a\u5927\uff0c\u653e\u4e0d\u8fdb\u53bb\u5185\u5b58\u4e2d\u3002\u6b64\u65f6\u9700\u8981\u518d\u6b21\u8fdb\u884c\u7ec6\u5206\uff0c\u9012\u5f52\u5730\u5206\u5272\u3002</p> </li> </ul> <p>\u3010definition\u3011</p> <ul> <li>\u80fd\u591f\u88ab\u5206\u7247\uff0c\u5206\u7247\u4e00\u6b21\u6027\u653e\u5165\u5230\u5185\u5b58\u4e2d\u7684\u90a3\u4e2a\u5173\u7cfb\uff08\u5982\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684\u5173\u7cfbs\uff09\uff0c\u53eb\u505abuild input\uff08\u5efa\u7acb\u8f93\u5165\uff09\u3002</li> <li>\u5bf9\u4e8e\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684\u5173\u7cfbr\uff0c\u53eb\u505aprobe input\uff08\u63a2\u9488\u8f93\u5165\uff09\u3002</li> </ul> <ol> <li>\u5bf9\u4e8e\u5173\u7cfbr\uff0c\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570h\uff0c\u8fdb\u884c\u5206\u7247\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u5185\u5b58\u4e2d\u90fd\u9700\u8981\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u3002</li> <li>\u5bf9\u4e8e\u5173\u7cfbs\uff0c\u4f7f\u7528\u76f8\u540c\u54c8\u5e0c\u51fd\u6570h\uff0c\u8fdb\u884c\u5206\u7247\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u5185\u5b58\u4e2d\u90fd\u9700\u8981\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u5757\u3002<code>\u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e3a\u4ec0\u4e48\u6709\u7684\u5206\u7247\u65e0\u6cd5\u6267\u884c\uff08\u5185\u5b58\u592a\u5c0f\uff09</code></li> <li>\u5bf9\u6bcf\u4e00\u4e2ahash\u503ci<ul> <li>\u5c06\\(si\\)\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u53bb\uff0c\u7136\u540e\u9488\u5bf9\\(si\\)\u7684\u7b49\u503c\u8fde\u63a5\u5c5e\u6027\uff0c\u6784\u5efa\u4e00\u4e2a\u5185\u5b58<code>\u54c8\u5e0c\u7d22\u5f15</code>\u3002\u8fd9\u4e2a\u5185\u5b58\u54c8\u5e0c\u7d22\u5f15\uff0c\u4f7f\u7528\u4e0e\u521a\u521a\u5206\u7247\u65f6\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570h\u2019\u3002</li> <li>\u4ece\u78c1\u76d8\u4e2d\u4e00\u6b21\u8bfb\u5165\\(r_i\\)\u7684\u6bcf\u4e00\u4e2a\u5143\u7ec4\\(t_j\\)(<code>\u672c\u8d28\u4e0a\u662f\u5c06ri\u7684\u6bcf\u4e00\u4e2ablock\u90fd\u8bfb\u5165\u8981\u5185\u5b58\u4e2d\uff0c\u5bf9block\u5185\u7684record\u8fdb\u884c\u64cd\u4f5c</code>)\uff0c\u5728\u5185\u5b58\u4e2d\u4e0e\\(s_i\\)\u8fdb\u884c\u5339\u914d\u8fde\u63a5\u3002\u5bf9\u4e8e\u5143\u7ec4tj\uff0c\u5229\u7528\u521a\u521a\u5728\u5206\u7247si\u4e2d\u6784\u5efa\u597d\u7684hash\u7d22\u5f15\uff0c\u5728si\u4e2d\u5339\u914d\u5bf9\u5e94\u7684\u5c5e\u6027\u4e0a\u7684\u7b49\u503c\u5143\u7ec4tk\uff0c\u5c06tj\u548ctk\u8fdb\u884c\u6765\u8fde\u63a5\u5f97\u5230\u7ed3\u679c</li> </ul> </li> </ol> <p>\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u5229\u7528hash\u51fd\u6570\u8fdb\u884c\u5206\u7247\uff0c\u5176\u5206\u51fa\u6765\u7684\u7247\u4e0d\u4e00\u5b9a\u662f\u5747\u5300\u7684\u3002\u4e3a\u4e86\u4fdd\u8bc1build input\u7684\u6bcf\u4e00\u4e2a\u5206\u7247\u90fd\u80fd\u591f\u653e\u5165\u5230\u5185\u5b58\u4e2d\u3002\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u4fee\u6b63\u56e0\u5b50f\uff0c\u8ba9\u5206\u7247\u7684\u6570\u91cfn\u5927\u4e8e\u6807\u51c6\u503c</p> <p>\\(n \\geq \\lceil b_s / m \\rceil * f\\)</p>"},{"location":"DB/11.%20Query%20Processing/#11551-recursive-partitioning","title":"11.5.5.1 Recursive partitioning","text":"<p>Recursive partitioning required if number of partitions n is greater than number of pages M of memory.</p> <p><code>\u9012\u5f52\u7684\u5206\u5272\u7528\u4e8e\uff1a\u5185\u5b58\u5927\u5c0f\u4e0d\u591f\u5927\uff0c\u9700\u8981\u5206\u5272\u51fa\u6765\u7684\u6700\u5c0f\u7247\u6570n\uff0c\u5927\u4e8e\u4e86\u5185\u5b58\u7684\u6700\u5927\u5757\u6570M\uff0c\u56e0\u6b64\u9700\u8981\u5206\u5272\u51fa\u6765\u7684\u7247\u6570n\u4e0d\u80fd\u6bcf\u4e00\u7247\u90fd\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u533a</code></p> <ul> <li> <p>\u4e0d\u9700\u8981\u5206\u5272\u7684\u60c5\u51b5\uff1a</p> <p>\u8981\u8ba9\u5173\u7cfbS\u7684\u6bcf\u4e00\u5206\u7247\u90fd\u80fd\u653e\u8fdb\u5185\u5b58\u6240\u9700\u7684\u6700\u5c0fn\uff0c\u5c0f\u4e8e\u5185\u5b58\u4e2d\u6700\u5927\u5b58\u653e\u7684\u5757\u7684\u6570\u91cfM\uff0c\u5373\u6bcf\u4e00\u4e2a\u7247\u90fd\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u83b7\u5f97\u8f93\u5165\u7f13\u51b2\u533a $$   \\begin{aligned}     &amp;M &gt; n+1\\   \\Rightarrow   &amp;n \\geq \\lceil b_s/M \\rceil \\   \\Rightarrow   &amp; M &gt; (b_s / M) + 1\\   \\Rightarrow   &amp; M &gt; \\sqrt{b_s}   \\end{aligned} $$</p> <p>A relation does not need recursive partitioning if\\(M &gt; n_h + 1\\), or equivalently\\(M &gt; (b_s/M) + 1\\), which simplifies (approximately) to\\(M &gt; \\sqrt{b_s}\\). </p> <p> </p> </li> <li> <p>\u5df2\u77e5\u4fe1\u606f\uff1a\u5185\u5b58\u4e3a12M\uff0c\u4e00\u4e2ablock\u67094K byte\u3002\u90a3\u4e48\u5185\u5b58\u4e2d\u7684\u6700\u5927\u5bb9\u91cf\u662f3K \u4e2ablock</p> </li> <li> <p>\u5982\u679c\u6709\u4e00\u4e2a\u5173\u7cfb\uff0c\u5e0c\u671b\u4e0d\u7528\u9012\u5f52\u7684\u5206\u5272\uff0c\u6c42\u8fd9\u4e2a\u5173\u7cfb\u6700\u5927\u6709\u591a\u5c11block</p> <p>\u5229\u7528\u6570\u5b66\u5173\u7cfb\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\\(M &gt; \\sqrt{b_r}\\)</p> <p>\u6240\u4ee5\\(b_r &lt; M^2\\),\u56e0\u6b64\u8fd9\u4e2a\u5173\u7cfb\u6700\u591a\u5177\u67093K\\(\\times\\)3K\u4e2ablock\uff0c\u5bf9\u5e94\u7684byte\u6570\u91cf\u5c31\u662f3K\\(\\times\\)3K\\(\\times\\)4K</p> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#11552-cost-of-hash-join","title":"11.5.5.2 Cost of Hash-Join","text":"\\[ b_b = \\lfloor M / (b_s / M + 1) \\rfloor \\] <p>\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u9012\u5f52\u7684\u5206\u5272</p> <ol> <li> <p>block transfer</p> <ul> <li> <p>\u5229\u7528hash\u51fd\u6570\u5206\u5272\u65f6\uff0c\u5173\u7cfbr\u548c\u5173\u7cfbs\u7684\u6bcf\u4e00\u4e2a\u5757\u90fd\u8981\u8bfb\u5165\u5230\u5185\u5b58\u7684\u8f93\u5165\u7f13\u51b2\u5757\u4e00\u6b21\uff0c\u7136\u540e\u518d\u5199\u51fa\u6765\u3002\u8fd9\u6837\u5c31\u6d88\u8017\u4e86\\(2(b_s+b_r)\\)\u6b21\u7684block transfer</p> </li> <li> <p>\u63a5\u4e0b\u6765\u8fdb\u5165\u8fde\u63a5\u73af\u8282\u3002\u5bf9\u4e8e\u5173\u7cfb r \u7684\u6bcf\u4e00\u4e2a\u5206\u7247 i \uff0c\u6211\u4eec\u5c06 build input\u7684si \u8bfb\u5165\u5230\u5185\u5b58\u4e2d\uff0c\u540e\u7eed\u5c06 ri \u4e2d\u7684\u6bcf\u4e00\u4e2ablock\u4e00\u6b21\u8bfb\u5230\u5185\u5b58\u4e2d\uff0c\u4e0e si \u8fdb\u884c\u8fde\u63a5</p> <p>\u8fd9\u6837\u5c31\u6d88\u8017\u4e86\\(b_r+b_s\\)\u6b21block transfer</p> </li> <li> <p>\u7531\u4e8e\u90e8\u5206\u586b\u5145\u5757\u7684\u5b58\u5728\uff0chash\u5206\u5272\u5360\u7528\u7684\u5757\u6570\u53ef\u80fd\u7565\u591a\u4e8e\\(br +bs\\)\u3002 \u8bbf\u95ee\u6b64\u7c7b\u90e8\u5206\u586b\u5145\u7684\u5757\u6700\u591a\u53ef\u4e3a\u6bcf\u4e2a\u5173\u7cfb\u589e\u52a0\\(2nh\\)\u7684\u5f00\u9500\uff0c\u56e0\u4e3a\u6bcf\u4e2a\\(nh\\)\u5206\u533a\u90fd\u53ef\u80fd\u5177\u6709\u5fc5\u987b\u5199\u5165\u548c\u8bfb\u56de\u7684\u90e8\u5206\u586b\u5145\u7684\u5757\u3002</p> </li> <li> <p><code>\u603b\u7684transfer\u7684\u6570\u91cf\u4e3a\uff1a</code>\\(3(b_r+b_s) + 4n_h\\)</p> </li> </ul> </li> <li> <p>block seek</p> <ul> <li> <p>\u5047\u8bbe\u6211\u4eec\u5bf9\u5173\u7cfbr\u4e0e\u5173\u7cfbs\u7684\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u5728\u5185\u5b58\u4e2d\u5206\u6709\\(b_b\\)\u5757\u8f93\u5165\u7f13\u51b2\u533a</p> </li> <li> <p>\u5728\u8fdb\u884chash\u5206\u7247\u65f6\uff0c\u6211\u4eec\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\uff0c\u5c31\u80fd\u8bfb\u5165\u5185\u5b58\\(b_b\\)\u5757\u3002\u76f8\u5f53\u4e8e\u4e00\u6b21\u8bfb\u5165\\(b_b\\)\u5757\u540e\uff0c\u5728\u5185\u5b58\u4e2d\u5c06\u8fd9\\(b_b\\)\u5757\u7684\u6240\u6709\u8bb0\u5f55\u8fdb\u884c\u6620\u5c04\uff0c\u653e\u5230\u8f93\u51fa\u7f13\u51b2\u533a\u4e2d\u8f93\u51fa\u3002</p> <p>\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u7684\u6210\u672c\u662f\uff1a\\(2(b_r/b_b + b_s/b_b)\\)</p> </li> <li> <p>\u5728\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5c06\\(n_h\\)\u4e2a\u5206\u533a\u90fd\u8fdb\u884c\u91cd\u5b9a\u5411\uff0c\u6240\u4ee5\u9700\u8981\\(2n_h\\)</p> </li> <li> <p><code>\u603b\u7684seek\u6570\u91cf\u4e3a\uff1a</code>\\(2(b_r/b_b + b_s/b_b) + 2n_h\\)</p> </li> </ul> </li> </ol> <p>2. \u5982\u679c\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u5206\u5272</p> <ul> <li> <p>\u5047\u8bbe\u6bcf\u6b21\u5206\u7247\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5173\u7cfb\uff08r\u6216\u8005s\uff09\u7684\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u5185\u5b58\u4e2d\u90fd\u5206\u914dbb\u5757\u4f5c\u4e3a\u8f93\u5165\u7f13\u51b2\u533a\uff0c\u540c\u65f6\u5185\u5b58\u4e2d\u8fd8\u7559\u6709\u4e00\u4e2abb\u5757\u5927\u5c0f\u7684\u8f93\u51fa\u7f13\u51b2\u533a\u3002</p> <p><code>\u90a3\u4e48\u4e00\u6b21\u5206\u7247\u5c31\u80fd\u5f97\u5230</code>\\(\\lfloor M/b_b \\rfloor - 1\\)\u4e2a\u5206\u7247</p> <p>\u4e8e\u662f\u6211\u4eec\u80fd\u591f\u8ba1\u7b97\u51fa\u5206\u7247\u7684\u8f6e\u6570\uff1a\\(\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_s/M) \\rceil\\)</p> <p>\u6bcf\u4e00\u6b21\u5206\u7247\uff0c\u90fd\u8ba9\u5206\u7247\u7684\u5927\u5c0f\u53d8\u4e3a\u4e4b\u524d\u7684\\(1/\\lfloor M/b_b \\rfloor - 1\\)</p> </li> <li> <p>block transfer</p> <ul> <li>\u6bcf\u4e00\u8f6e\u5206\u7247\uff0c\u90fd\u9700\u8981\u5c06r\u5173\u7cfb\u7684\u6240\u6709\u5757\u8bfb\u5230\u5185\u5b58\u4e2d\u4e00\u6b21\uff0c\u518d\u4ece\u8f93\u51fa\u7f13\u51b2\u5757\u4e2d\u8f93\u51fa\u6765\u4e00\u6b21\uff1bs\u5173\u7cfb\u4e5f\u4e00\u6837\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6709\u9012\u5f52\u7684\u5206\u5272\u7684\u8fc7\u7a0b\uff0c\u6570\u636e\u4f20\u8f93\u7684\u603b\u6b21\u6570\u4e3a\uff1a\\(2(b_r+b_s)\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_s/M) \\rceil\\)</li> <li>\u540e\u7eed\u7684\u8fde\u63a5\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u7247i\uff0c\u6211\u4eec\u5c06build input\u7684si\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\u3002\u5bf9\u4e8e\u8fd9\u4e2asi\uff0c\u6211\u4eec\u5c06ri\u4e2d\u4e00\u5757\u4e00\u5757\u8bfb\u5230\u5185\u5b58\u6765\u3002\u8fd9\u6837\u6700\u7ec8\u7684\u7ed3\u679c\u662f\uff0c\u5173\u7cfbr\u4e0e\u5173\u7cfbs\u7684\u6bcf\u4e00\u5757\u90fd\u8bfb\u5230\u4e86\u5185\u5b58\u4e2d\u4e00\u6b21\u3002</li> <li><code>\u603b\u7684\u4f20\u8f93\u6b21\u6570\u4e3a\uff1a</code>\\(2(b_r+b_s)\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_s/M) \\rceil + (b_r + b_s)\\)</li> </ul> </li> <li> <p>block seek</p> <ul> <li> <p>\u5bf9\u4e8er\u5173\u7cfb\u8bfb\u5230\u5185\u5b58\u4e2d\u7684\u8fc7\u7a0b\uff0c\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u8f93\u5165\u7f13\u51b2\u533a\u4e00\u5171\u6709bb\u5757\uff0c\u56e0\u6b64\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u5c31\u53ef\u4ee5\u8bfb\u8fdb\u53bbbb\u5757\u3002\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u7247\uff0c\u7531\u4e8e\u8f93\u51fa\u7f13\u51b2\u533a\u4e5f\u6709bb\u5757\uff0c\u56e0\u6b64\u4e00\u6b21\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u5c31\u53ef\u4ee5\u8f93\u51fabb\u5757\u3002</p> <p>\u56e0\u6b64\uff0c\u6bcf\u4e00\u8f6e\u5bf9s\u4e0er\u7684\u5206\u7247\uff0c\u5176\u8bfb\u5199\u5934\u91cd\u5b9a\u4f4d\u7684\u603b\u6b21\u6570\u4e3a\uff1a\\(2(\\lceil b_r/b_b \\rceil + \\lceil b_s/b_b \\rceil)\\)</p> </li> <li> <p>\u518d\u4e58\u4ee5\u5206\u7247\u7684\u8f6e\u6570\uff0c\u5f97\u5230Seek\u64cd\u4f5c\u7684\u603b\u6b21\u6570\uff1a\\(2(\\lceil b_r/b_b \\rceil + \\lceil b_s/b_b \\rceil)\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_s/M) \\rceil\\)</p> </li> </ul> </li> </ul>"},{"location":"DB/11.%20Query%20Processing/#116-other-operations","title":"11.6 Other Operations","text":"<ul> <li>Duplicate elimination can be implemented via hashing or sorting.  On sorting duplicates will come adjacent to each other, and all but one set of duplicates can be deleted. \u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\uff08\u751f\u6210\u3001\u5408\u5e76\u5f52\u5e76\u6bb5\u5c31\u8fdb\u884c\u53bb\u91cd\uff09 Hashing is similar </li> <li>Aggregation Sorting or hashing can be used to bring tuples in the same group together, and then the aggregate functions can be applied on each group.  \u751f\u6210\u5f52\u5e76\u6bb5\u7684\u65f6\u5019\uff0c\u540c\u4e00\u6bb5\u7684\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7edf\u4e00\u7ed3\u679c</li> </ul>"},{"location":"DB/11.%20Query%20Processing/#117-evaluation-of-expressions","title":"11.7 Evaluation of Expressions","text":""},{"location":"DB/12.%20Query%20Optimization/","title":"12. Query Optimization","text":"<p> \u7ea6 5087 \u4e2a\u5b57  10 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 26 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Introduction </li> <li>Transformation of Relational Expressions</li> <li>Statistical Information for Cost Estimation</li> <li>Cost-based Optimization</li> <li>Dynamic Programming for Choosing Evaluation Plans</li> <li>Nested Subqueries</li> <li>Materialized Views </li> <li>Advanced Topics in Query Optimization</li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#121-introduction","title":"12.1 Introduction","text":"<p>Alternative ways of evaluating a given query</p> <ul> <li> <p>Equivalent expressions  </p> <p>\u903b\u8f91\u4f18\u5316\uff1a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\uff08\u5c3d\u91cf\u5148\u505a\u9009\u62e9\uff0c\u6295\u5f71\uff09<code>Transformation Base Optimization</code></p> </li> <li> <p>Different algorithms for each operation  </p> <p>\u7269\u7406\u5c42\u9762\uff1a\u6bcf\u4e2a\u7b97\u5b50\u9009\u62e9\u4e0d\u540c\u7684\u7b97\u6cd5 <code>Cost Based Optimization</code></p> <p> </p> </li> </ul> <p>Estimation of plan cost based on: \u8ba1\u5212\u6210\u672c\u4f30\u7b97</p> <ul> <li> <p><code>Statistical information about relations</code>. Examples:   number of tuples, number of distinct values for an attribute</p> <p>\u6709\u5173\u5173\u7cfb\u7684\u7edf\u8ba1\u4fe1\u606f\u3002\u793a\u4f8b\uff1a\u5143\u7ec4\u6570\u3001\u5c5e\u6027\u7684\u975e\u91cd\u590d\u503c\u6570</p> </li> <li> <p><code>Statistics estimation for intermediate results</code>\uff08Cardinality Estimation\uff09   to compute cost of complex expressions  </p> <p>\u4e2d\u95f4\u7ed3\u679c\u7684\u7edf\u8ba1\u4f30\u8ba1\uff08\u57fa\u6570\u4f30\u8ba1\uff09\u7528\u4e8e\u8ba1\u7b97\u590d\u6742\u8868\u8fbe\u5f0f\u7684\u6210\u672c</p> <p>\u4f30\u8ba1\u4e2d\u95f4\u7ed3\u679c\u7684\u5927\u5c0f  \u73b0\u5728\u6709\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4f30\u8ba1\u65b9\u6cd5</p> </li> <li> <p><code>Cost formulae for algorithms</code>, computed using statistics</p> <p>\u7b97\u6cd5\u7684\u6210\u672c\u516c\u5f0f\uff0c\u4f7f\u7528\u7edf\u8ba1\u6570\u636e\u8ba1\u7b97</p> </li> </ul> <p>\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u53ef\u4ee5\u7528\u67e5\u770b\u6267\u884c\u8ba1\u5212\u3002\uff08view query evaluation plan\uff09</p>"},{"location":"DB/12.%20Query%20Optimization/#122-generating-equivalent-expressions","title":"12.2 Generating Equivalent Expressions","text":"<p>Two relational algebra expressions are said to be equivalent if the two expressions generate the same set of tuples on every legal database instance  </p> <p>\u7b49\u4ef7\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\uff1a</p> <p>\u4e24\u4e2a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u7b49\u4ef7\u662f\u6307\uff1a\u5f62\u5f0f\u4e0d\u540c\uff0c\u4f46\u4ea7\u751f\u7684OUTPUT\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002  </p>"},{"location":"DB/12.%20Query%20Optimization/#1221-equivalence-rules","title":"12.2.1 Equivalence Rules","text":"<p>An equivalence rule says that expressions of two forms are equivalent</p> <p>\u7b49\u4ef7\u89c4\u5219\u8868\u793a\u4e24\u79cd\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f\u662f\u7b49\u4ef7\u7684</p> <p>Can replace expression of first form by second, or vice versa</p> <p>\u53ef\u4ee5\u7528\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u66ff\u6362\u7b2c\u4e00\u79cd\u5f62\u5f0f\u7684\u8868\u8fbe\uff0c\u53cd\u4e4b\u4ea6\u7136</p> <ul> <li> <p>selection      </p> <ol> <li> <p>\u53ef\u4ee5\u628a\u7b97\u5b50\u62c6\u5206  </p> <p>\u5982\u679c\u67d0\u4e9b\u5c5e\u6027\u6709\u7d22\u5f15\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u62c6\u5206\uff0c\u5728\u7d22\u5f15 select \u4e4b\u540e\u518d\u6267\u884c\u5176\u4ed6\u7b97\u5b50.</p> <p>\u5982\u679c\u6709\u590d\u5408\u7d22\u5f15\uff0c\u53ef\u4ee5\u9006\u5411\u8fdb\u884c</p> </li> <li> <p>\u7b97\u5b50\u53ef\u4ea4\u6362  \u5148\u6267\u884c\u6709\u7d22\u5f15\u7684\u7b97\u5b50\u3002  </p> </li> <li> <p>\u6295\u5f71\u7684\u5c5e\u6027\u53ef\u4ee5\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u7684  </p> </li> <li> <p>\u9009\u62e9\u7b97\u5b50\u53ef\u4ee5\u548c\uff08\u7b1b\u5361\u5c14\u79ef\u548c\u8fde\u63a5\uff09\u7ed3\u5408  </p> </li> </ol> </li> <li> <p>join </p> <p><code>\u81ea\u7136\u8fde\u63a5\u662f\u7ed3\u5408\u7684\uff08\u5148\u8fde\u63a5\u4e2d\u95f4\u7ed3\u679c\u5c0f\u7684\uff09</code> </p> <p> </p> <p><code>\u5982\u679c\u9009\u62e9\u7b97\u5b50\u53ea\u548c\u4e00\u4e2a\u5173\u7cfb\u6709\u5173\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u6267\u884c\u9009\u62e9\u3002\uff08\u9009\u62e9\u7b97\u5b50\u8981\u65e9\u8fdb\u884c\uff0c\u63a8\u5230\u53f6\u5b50\u4e0a\uff09</code> </p> </li> <li> <p>projection      </p> <p>\u8fd9\u4f53\u73b0\u7684\u662f\uff1a\u6295\u5f71\u8fd0\u7b97\u4e5f\u5e94\u8be5\u5c3d\u91cf\u5148\u505a\u3002\u6295\u5f71\u8fd0\u7b97\u4e0e\u9009\u62e9\u8fd0\u7b97\u90fd\u80fd\u964d\u4f4e\u7ed3\u679c\u7684\u89c4\u6a21\u3002 </p> <ul> <li> <p>\u5148\u505a\u6295\u5f71\u518d\u8fdb\u884c\u8fde\u63a5\uff08\u6709\u524d\u63d0\u6761\u4ef6\uff0c\\(\\theta\\)\u4e0d\u80fd\u6d89\u53ca\u5230L1\u548cL2\u4e4b\u5916\u7684\u5c5e\u6027\uff09\u3002</p> </li> <li> <p>\u5982\u679c\u8fde\u63a5\u8981\u7528\u5230\u6295\u5f71\u540e\u4e0d\u4fdd\u7559\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u6295\u5f71\u65f6\u8981\u628a\u8fde\u63a5\u7528\u7684\u5c5e\u6027\u4e5f\u4fdd\u7559\u4e0b\u6765\u3002</p> </li> </ul> </li> <li> <p>set operation      </p> <p>\u9488\u5bf9\u96c6\u5408\u7684\u9009\u62e9\u64cd\u4f5c\u662f\u53ef\u5206\u914d\u7684 $$ \\sigma_\\theta(E1- E2) = \\sigma_\\theta(E1) - \\sigma_\\theta(E2)\\ \\sigma_\\theta(E1 \\cap E2) = \\sigma_\\theta(E1) \\cap \\sigma_\\theta(E2)\\ \\sigma_\\theta(E1 \\cup  E2) = \\sigma_\\theta(E1) \\cup \\sigma_\\theta(E2)\\ $$ \u5bf9\u4e8e\u51cf\u6cd5\uff1a\\(E1-E2\\)\u8868\u793aE1\u6709\u4f46\u662fE2\u6ca1\u6709\u7684\u90e8\u5206\uff0c\u7136\u540e\u518d\u5bf9\u8fd9\u4e00\u90e8\u5206\u8fdb\u884c\\(\\theta\\)\u6761\u4ef6\u7684\u9009\u62e9\uff0c\u5f97\u5230\u7ed3\u679c\u3002\u5047\u8bbeE1\u548cE2\u5b58\u5728\u540c\u65f6\u6ee1\u8db3\\(\\theta\\)\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u5728\u5de6\u8fb9\u663e\u7136E1-E2\u5c31\u5df2\u7ecf\u5220\u9664\u8be5\u5143\u7d20\uff0c\u53f3\u8fb9\u540c\u7406\uff0c\u5171\u6709\u5143\u7d20\u5220\u9664\u3002 $$ \\sigma_\\theta(E1- E2) = \\sigma_\\theta(E1) - E2 \\ \\sigma_\\theta(E1 \\cap E2) = \\sigma_\\theta(E1) \\cap E2 \\ \\sigma_\\theta(E1 \\cup E2) != \\sigma_\\theta(E1) \\cup E2\\ $$ <code>\u6ce8\u610f\u6b64\u5904\u7684\u51cf\u6cd5\u5dee\u96c6\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u653e\u7f29\u4e3a\u6761\u4ef6\u66f4\u5f3a\u7684\u5f0f\u5b50\uff0c</code>\\(\\sigma_\\theta(E1)\\)\u6709\u4f46\u662fE2\u6ca1\u6709\u7684\u5143\u7d20\u4e00\u5b9a\u5c5e\u4e8e\\(\\sigma_\\theta(E1)\\)\u6709\uff0c\\(\\sigma_\\theta(E2)\\)\u6ca1\u6709\u7684\u96c6\u5408</p> <p>\u96c6\u5408\u7684\u5e76\u5bf9\u6295\u5f71\u64cd\u4f5c\u53ef\u5206\u914d</p> </li> <li> <p>other      </p> <p>\u5206\u7ec4\u64cd\u4f5c\u548c\u9009\u62e9\u64cd\u4f5c\u53ef\u4ea4\u6362</p> <p>\u5168\u8fde\u63a5\u7684\u64cd\u4f5c\u7684\u53ef\u4ea4\u6362\u6027</p> <p>\u9009\u62e9\u64cd\u4f5c\u5bf9\u5de6\u53f3\u5916\u90e8\u8fde\u63a5\u53ef\u5206\u914d</p> </li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#1222-enumeration-of-equivalent-expressions","title":"12.2.2 Enumeration of Equivalent Expressions","text":"<ul> <li> <p>Repeat</p> <ul> <li> <p>apply all applicable equivalence rules on every subexpression of every equivalent expression found so far</p> <p>\u5bf9\u76ee\u524d\u627e\u5230\u7684\u6bcf\u4e2a\u7b49\u4ef7\u8868\u8fbe\u5f0f\u7684\u6bcf\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5e94\u7528\u6240\u6709\u9002\u7528\u7684\u201c\u7b49\u4ef7\u89c4\u5219\u201d</p> </li> <li> <p>add newly generated expressions to the set of equivalent expressions </p> <p>\u5c06\u65b0\u751f\u6210\u7684\u8868\u8fbe\u5f0f\u6dfb\u52a0\u5230\u7b49\u6548\u8868\u8fbe\u5f0f\u96c6\u4e2d</p> </li> </ul> </li> <li> <p>Until no new equivalent expressions are generated above</p> </li> </ul> <p>\u53ef\u4ee5\u8fd9\u6837\u627e\u5230\u6240\u6709\u7684\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u4e2d\u6211\u4eec\u57fa\u4e8e\u4e00\u4e9b\u7ecf\u9a8c\u89c4\u5219\u8fdb\u884c\u542f\u53d1\u5f0f\u7684\u4f18\u5316</p> <p></p> <ul> <li> <p>\u51cf\u5c11\u7a7a\u95f4\u9700\u6c42\uff1a\u5171\u4eab\u76f8\u540c\u7684\u5b50\u8868\u8fbe\u5f0f</p> <p>\u4f8b\u5982\uff1a\u8fde\u63a5\u7684\u4ea4\u6362\u5f8b</p> </li> <li> <p>\u51cf\u5c11\u65f6\u95f4\u9700\u6c42\uff1a\u4f7f\u7528\u52a8\u6001\u89c4\u5212</p> <p>\u6bcf\u4e00\u6b21\u53ea\u8003\u8651\u6700\u4f18\u5b50\u5e8f\u5217\u7684\u7ec4\u5408\uff08\u957f\u5e8f\u5217\u5206\u4e3a\u4e24\u4e2a\u5b50\u5e8f\u5217\uff09</p> </li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#123-statistics-for-cost-estimation","title":"12.3 Statistics for Cost Estimation","text":"<p>\u4ee3\u4ef7\u4f30\u7b97\u9700\u8981\u7edf\u8ba1\u4fe1\u606f</p> <ul> <li> <p>\\(n_r\\): number of tuples in a relation r. </p> <p>\u5173\u7cfb r \u4e2d\u7684\u5143\u7ec4\u6570</p> </li> <li> <p>\\(b_r\\): number of blocks containing tuples of r. </p> <p>\u5173\u7cfbr\u7684block\u5757\u6570</p> </li> <li> <p>\\(l_r\\): size of a tuple of r. </p> <p>\u5173\u7cfbr\u4e00\u4e2a\u5143\u7ec4\u7684\u5927\u5c0f</p> </li> <li> <p>\\(f_r\\): blocking factor of r \u2014 i.e., the number of tuples of r that fit into one block.  </p> <p>\u4e00\u4e2a\u5757\u53ef\u4ee5\u653e\u591a\u5c11\u4e2a\u5143\u7ec4</p> </li> <li> <p>\\(V(A, r)\\): number of distinct values that appear in r for attribute A; same as the size of \\(\\Pi(r)\\).</p> <p>\u5173\u7cfb r \u4e2d\u67d0\u4e2a\u5c5e\u6027A\u4e0d\u540c\u7684\u503c\u7684\u4e2a\u6570\u3002\u8fd9\u4e5f\u7b49\u4ef7\u4e8e\u5bf9\u5173\u7cfbr\u4e2d\u5c5e\u6027A\u8fdb\u884c\u6295\u5f71\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u96c6\u5408\u5927\u5c0f\u3002</p> </li> <li> <p>If tuples of r are stored together physically\uff08<code>\u5b58\u653e\u662f\u8fde\u7eed\u7684</code>\uff09 in a file, then: \\(b_r = \\lceil \\dfrac{n_r}{f_r}\\rceil\\)</p> </li> <li> <p>Histograms</p> </li> </ul> <p>Example \"attribute age of relation person\"</p> <p>Equi-Width Equi-Depth</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5173\u7cfb r \u4e2d\u7684\u5c5e\u6027A\uff0c\u5b83\u53c8V(A,r)\u4e2a\u4e0d\u540c\u7684\u503c\uff0c\u5e0c\u671b\u80fd\u7528\u76f4\u65b9\u56fe\u8868\u793a\u8fd9\u4e9b\u4e0d\u540c\u7684\u503c\u5206\u522b\u6709\u591a\u5c11\u4e2a\u5143\u7ec4\u3002\u8fd9\u6837\u67e5\u8be2\u65f6\uff0c\u6839\u636e\u67e5\u8be2\u7684\u8303\u56f4\uff0c\u80fd\u591f\u77e5\u9053\u67e5\u8be2\u7684\u7ed3\u679c\u7684\u89c4\u6a21\u6709\u591a\u5927\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u5f80\u5f80\u6ca1\u6709\u76f4\u65b9\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u503c\uff0c\u91c7\u53d6\u5e73\u5747\u5206\u914d\u7684\u4f30\u8ba1\u65b9\u5f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u503c\uff0c\u4f30\u8ba1\u8868\u4e2d\u5b58\u5728\\(n_r/V(A,r)\\)\u4e2a\u5143\u7ec4\u5bf9\u5e94</p>"},{"location":"DB/12.%20Query%20Optimization/#1231-selection-size-estimation","title":"12.3.1 Selection Size Estimation","text":"<p>\u4e2d\u95f4\u7ed3\u679c</p> <ul> <li>\\(\\sigma_{A=v}(r)\\) </li> </ul> <p>\\(n_r / V(A,r)\\) : number of records that will satisfy the selection.   </p> <p>\u8fd9\u6837\u7684\u4f30\u7b97\u57fa\u4e8e\u503c\u662f\u5e73\u5747\u5206\u5e03\u7684 </p> <ul> <li> <p>\u82e5\u9009\u62e9\u7684\u8fd9\u4e2a\u5c5e\u6027A\u7684\u8fd9\u4e2a\u503cv\u4e0d\u662fkey\uff0c\u90a3\u4e48\u5c31\u7528\u603b\u5143\u7ec4\u6570\u9664\u4ee5\u8fd9\u4e2a\u5c5e\u6027\u7684\u4e0d\u540c\u503c\u7684\u4e2a\u6570\u8fdb\u884c\u4f30\u8ba1\uff1b</p> </li> <li> <p>\u5982\u679c\u9009\u62e9\u7684\u8fd9\u4e2a\u5c5e\u6027A\u662fkey\uff0c\u90a3\u4e48\u4f30\u7b97\u4e3a1\u3002</p> </li> <li> <p>\\(\\sigma_{A\\leq v}(r)\\) </p> <ul> <li> <p>Let \\(c\\) denote the estimated number of tuples satisfying the condition.   </p> </li> <li> <p>\\(c = 0\\) if \\(v &lt; \\min(A,r)\\) </p> </li> <li> <p>\\(c = n_r\\cdot \\dfrac{v-\\min(A,r)}{\\max(A,r) - \\min (A,r)}\\) record\u603b\u6570 * \u6bd4\u4f8b  </p> </li> <li> <p>In absence of statistical information c is assumed to be \\(n_r / 2\\)(</p> </li> </ul> <p>\u5047\u5982\u6570\u636e\u5e93\u6ca1\u6709\u7ef4\u62a4max\u6216\u8005min\u8fd9\u4e9b\u4fe1\u606f\uff0c\u53ea\u80fd\u5c06\u6240\u6709\u7684\u5c0f\u4e8e\u7b49\u4e8e\u64cd\u4f5c\u6216\u8005\u5927\u4e8e\u7b49\u4e8e\u64cd\u4f5c\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u4f30\u7b97\u4e3a\\(n_r/2\\)\u4e86\u3002</p> </li> </ul> <p>\u6ce8\u610f\u6b64\u5904\u7684OR\u8fd0\u7b97(\u6790\u53d6)\uff0c\u8f6c\u5316\u4e3aAND\u64cd\u4f5c\uff08\u5408\u53d6\uff09\uff0c\u8981\u6c42\u5404\u6761\u4ef6\u72ec\u7acb\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>\u81f3\u5c11\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3 $$ \\theta_1  or   \\theta_2 = \\neg((\\neg \\theta_1) and (\\neg \\theta_2)) $$</p>"},{"location":"DB/12.%20Query%20Optimization/#1232-estimation-of-the-size-of-joins","title":"12.3.2 Estimation of the Size of Joins","text":"<p>The Cartesian product \\(r  \\times s\\) contains \\(n_r\\cdot n_s\\) tuples; each tuple occupies \\(s_r + s_s\\) bytes.</p> <ul> <li>\\(R \\cap S = \\emptyset\\) </li> </ul> <p>\u6ca1\u6709\u516c\u5171\u5c5e\u6027\uff0c\u81ea\u7136\u8fde\u63a5\\(r \\bowtie s\\)\u7b49\u4ef7\u4e8e \\(r\\times s\\)</p> <ul> <li> <p>\\(R \\cap S\\) is a <code>key</code> for \\(R\\), then a tuple of \\(s\\) will join with at most one tuple from \\(r\\)</p> <p>(<code>the number of tuples in</code> \\(r \\bowtie s) \\leq n_s\\) </p> <p>\u4ece\u5173\u7cfbS\u7684\u89d2\u5ea6\u8fdb\u884c\u7406\u89e3\uff0c\u8fde\u63a5\u7528\u7684\u5c5e\u6027\u4e3aR\u7684key\uff0c\u663e\u7136\u8be5\u5c5e\u6027\u4e0d\u540c\u7684\u503c\u5728\u5173\u7cfbR\u4e2d\u4ec5\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u53c8\u56e0\u4e3a\u8be5\u5c5e\u6027\u4e0d\u4e00\u5b9a\u662fS\u7684key\uff0c\u6240\u4ee5S\u4e2d\u4f1a\u51fa\u73b0\u591a\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u4ece\u800c\u5bfc\u81f4\u8fde\u63a5\u4e4b\u540e\u7684\u5143\u7ec4\u4e2a\u6570\\(\\leq n_s\\)</p> <p> </p> </li> <li> <p>If \\(R \\cap S\\) in S is a <code>foreign key</code> in S referencing R, then the number of tuples in \\(r\\bowtie s\\) = <code>the number of tuples in</code> s.</p> <p>foreign\u5173\u7cfb\uff0c a foreign key in S referencing R\uff0c\u8bf4\u660e\u8fde\u63a5\u7528\u7684\u5c5e\u6027\u4e0d\u4ec5\u662fR\u7684key\uff0c\u540c\u65f6\u4efb\u4f55\u51fa\u73b0\u5728S\u4e2d\u8be5\u5c5e\u6027\u7684\u503c\u90fd\u51fa\u73b0\u5728R\u4e2d\uff0c\u6240\u4ee5\u8fde\u63a5\u4e4b\u540e\u7684\u5143\u7ec4\u6570\u91cf\u4e3a\\(n_s\\)</p> </li> <li> <p>If \\(R \\cap S = \\{A\\}\\) is not a key for R or S.  </p> <p><code>\u5047\u5982\u8fde\u63a5\u7684\u5c5e\u6027\u4e0d\u662f\u67d0\u4e00\u4e2a\u8868\u7684key</code></p> <p>\\(n_r * \\dfrac{n_s}{V(A,s)}, n_s * \\dfrac{n_r}{V(A,r)}\\).   </p> <p>\u4ee5\u7b2c\u4e8c\u4e2a\u4e3a\u4f8b\u5b50\uff0c\u7ad9\u5728 s \u7684\u89d2\u5ea6\uff0c\\(\\dfrac{n_r}{V(A,r)}\\)\u8868\u793a\u5173\u7cfb r \u4e2d\u5c5e\u6027A\u7684\u6bcf\u4e00\u4e2a\u503c\u5bf9\u5e94\u6709\u591a\u5c11\u5404\u8bb0\u5f55\uff0c\u6bcf\u4e00\u4e2a s \u53ef\u4ee5\u548c\u5c5e\u6027A\u4e2d\u6bcf\u4e00\u4e2avalue\u5bf9\u5e94\u7684\u8bb0\u5f55\u7684\u5e73\u5747\u503c\u8fde\u63a5\u3002  </p> <p>\u56e0\u4e3a\u6709\u65f6\u5019\u5173\u7cfbr\u4e2d\u7684\u4e00\u4e2a\u5143\u7ec4\u5bf9\u5e94\u5c5e\u6027\u503c\u5728s\u4e2d\u6ca1\u6709\u51fa\u73b0\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8fde\u63a5\u4e0d\u4e0a\u7684\u60c5\u51b5\uff0c\u4f1a\u5bfc\u81f4<code>\u4f30\u7b97\u7ed3\u679c\u504f\u5927</code>\uff0c\u6240\u4ee5\u901a\u5e38\u6211\u4eec\u53d6\u4e8c\u8005\u4e2d\u7684\u8f83\u5c0f\u503c\u3002 </p> <p> </p> <p></p> <p><code>\u6b64\u5904V(ID,takes) = 2500\uff0c \u8868\u793a\u5728take\u5173\u7cfb\u4e2dID\u4e0d\u540c\u7684value\u503c\u7684\u6570\u91cf\u4e3a2500\uff0c\u540c\u65f6takes\u5173\u7cfb\u8868\u4e2d\u4e00\u5171\u670910000\u4e2a\u5143\u7ec4\uff0c\u8bf4\u660e\u4e0a\u8bfe\u7684\u540c\u5b66\u4e2d\u5e73\u5747\u6bcf\u4e2a\u540c\u5b66\u4e0a\u56db\u95e8\u8bfe</code></p> <p><code>ID\u662fstudent\u5173\u7cfb\u4e2d\u7684primary key\uff0c\u6240\u4ee5student\u5173\u7cfb\u8868\u4e2d\u6709\u591a\u5c11\u5143\u7ec4\uff0cID\u7684value\u6570\u91cf\u5c31\u6709\u591a\u5c11\u3002\u56e0\u6b64V(ID,student) = n_student = 5000</code></p> <p></p> </li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#1223-size-estimation-for-other-operations","title":"12.2.3 Size Estimation for Other Operations","text":"<ol> <li> <p>\u6295\u5f71\uff1aestimated size of \\(\\prod_A(r) = V(A,r)\\)</p> </li> <li> <p>\u5206\u7ec4\uff1a<code>\u5728\u9009\u5b9a\u5206\u7ec4\u7684\u57fa\u7840\u4e0a\u6267\u884c\u805a\u5408\u51fd\u6570\uff0c\u663e\u7136\u805a\u5408\u51fd\u6570\u6839\u636e\u8f93\u5165\u7684\u503c\u53ea\u80fd\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c\uff0c\u6240\u4ee5\u6700\u4f18\u5143\u7ec4\u7684\u6570\u91cf\u4e3a\u5c5e\u6027A\u4e2dvalue\u7684\u6570\u91cf</code></p> <p></p> </li> <li> <p>\u5bf9\u96c6\u5408\u5927\u5c0f\u4e0a\u4e0b\u9650\u7684\u4f30\u7b97</p> <p>\u867d\u7136\u4e0d\u591f\u7cbe\u786e\uff0c\u4f46\u662f\u63d0\u4f9b\u4e86\u4e0a\u754c\u3002\u5bf9\u4e8e - \u64cd\u4f5c\uff0cr - s \u8868\u793a\u9009\u53d6\u7684\u662f r \u6709\u4f46\u662f s \u6ca1\u6709\u7684value\uff0c\u663e\u7136\u6700\u5927\u7684size \u4e3ar</p> <p> </p> </li> <li> <p>\u5bf9\u4e8e\u5916\u90e8\u81ea\u7136\u8fde\u63a5\u7684\u4ee3\u4ef7\u4f30\u7b97</p> <p></p> <p>\u5916\u90e8\u8fde\u63a5\u6bd4\u81ea\u7136\u8fde\u63a5\u591a\u51fa\u7684\u662f\uff1a\u5047\u5982\u662f\u5de6\u5916\u90e8\u8fde\u63a5\uff0c\u90a3\u4e48\u5de6\u8fb9\u7684\u5173\u7cfb\u6ca1\u6709\u8fde\u63a5\u4e0a\u7684\u90e8\u5206\uff0c\u4e5f\u8981\u653e\u5165\u5230\u7ed3\u679c\u96c6\u5408\u4e2d\u3002\u56e0\u6b64\u7ed3\u679c\u96c6\u5408\u7684\u4e0a\u9650\u4f30\u7b97\uff0c\u5c31\u518d\u52a0\u4e0ar\u7684\u5143\u7ec4\u4e2a\u6570\u3002</p> </li> </ol>"},{"location":"DB/12.%20Query%20Optimization/#1224-estimation-of-number-of-distinct-values","title":"12.2.4 Estimation of Number of Distinct Values","text":"<p>\u5bf9\u4e8e\u4e2d\u95f4\u7ed3\u679c\uff0c\u5728\u67d0\u4e2a\u5c5e\u6027\u4e0a\u4e0d\u540c\u503c\u7684\u4e2a\u6570</p> <p>\u4f8b\u5982\uff0c\u4f30\u7b97\u4e0b\u9762\u8fd9\u4e2a\u9009\u62e9\u64cd\u4f5c\u4e2d\u95f4\u7ed3\u679c\u5728A\u5c5e\u6027\u4e0a\u4e0d\u540c\u503c\u7684\u4e2a\u6570\uff1a</p> <p>Selections \\(\\sigma_\\theta(r)\\), estimate \\(V(A,\\sigma_\\theta(r))\\) ****</p> <ul> <li> <p>If \\(\\theta\\) forces A to take <code>a specified value</code>, \\(V(A,\\sigma_\\theta(r))=1\\) </p> <p>e.g., A = 3</p> </li> <li> <p>If \\(\\theta\\) forces A to take on one of <code>a specified set of values</code>: \\(V(A,\\sigma_\\theta(r))=\\) number of specified values  </p> <p>e.g., (A = 1 V A = 3 V A = 4)</p> </li> <li> <p>If the selection condition \\(\\theta\\) is of the form A op v, \\(V(A,\\sigma_\\theta(r))=V(A,r)*s\\) </p> <p>\u5229\u7528\u9009\u62e9\u7387 s \u8ba1\u7b97</p> </li> <li> <p>In all the other cases, use approx1imate estimate: \\(V(A,\\sigma_\\theta(r))=\\min(V(A,r), n_{\\sigma_\\theta(r)})\\)</p> <p>\u539f\u6765\u672a\u7b5b\u9009\u7684\u8868\u5728A\u5c5e\u6027\u4e0a\u4e0d\u540c\u503c\u7684\u4e2a\u6570\uff0c\u548c\u9009\u62e9\u51fa\u6765\u7684\u7ed3\u679c\u6761\u76ee\u7684\u4e2a\u6570\u53d6\u6700\u5c0f\u503c\u3002</p> </li> </ul> <p>\u4f30\u7b97\u4e0b\u9762\u8fd9\u4e2a\u8fde\u63a5\u64cd\u4f5c\u4e2d\u95f4\u7ed3\u679c\u5728A\u5c5e\u6027\uff08\u53ef\u80fd\u662f\u7ec4\u5408\u5c5e\u6027\uff09\u4e0a\u4e0d\u540c\u503c\u7684\u4e2a\u6570\uff1a</p> <p>joins \\(r\\bowtie s\\), estimate \\(V(A,r\\bowtie s)\\)</p> <ul> <li> <p>If all attributes in A are from r, the estimated \\(V(A,r\\bowtie s)=\\min(V(A,r), n_{r\\bowtie s})\\)</p> </li> <li> <p>If A contains attributes A1 from r and A2 from s, then estimated </p> </li> </ul> <p>\u82e5A\u5c5e\u6027\u4e2d\u5305\u62ec\u5c5e\u4e8er\u7684\u5c5e\u6027\u96c6\u5408A1\uff0c\u4e0e\u5c5e\u4e8es\u7684\u5c5e\u6027\u96c6\u5408A2\uff1a</p> <p>\\(V(A,r\\bowtie s)=\\min(V(A1,r)*V(A2-A1,s), V(A1-A2,r)*V(A2,s), n_{r\\bowtie s})\\)</p> <p></p>"},{"location":"DB/12.%20Query%20Optimization/#124-choice-of-evaluation-plans","title":"12.4 Choice of Evaluation Plans","text":"<p>Must consider the interaction of evaluation techniques when choosing evaluation plans</p> <p>choosing the cheapest algorithm for each operation independently may not yield best overall algorithm    </p> <p>\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u5355\u72ec\u9009\u62e9\u6700\u4fbf\u5b9c\u7684\u7b97\u6cd5\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u6700\u4f73\u7684\u6574\u4f53\u7b97\u6cd5</p> <p>e.g. merge-join may be costlier than hash-join, but may provide a sorted output which reduces the cost for an outer level aggregation.  </p> <p>Mergejoin \u4ee3\u4ef7\u9ad8\uff0c\u4f46\u662f\u6709\u4e2a\u597d\u5904\u662f join \u540e\u662f\u6709\u6b21\u5e8f\u7684\uff0c\u5bf9\u4e0a\u5c42\u64cd\u4f5c\u6709\u5229\u3002</p> <p>nested-loop join may provide opportunity for pipelining</p> <p>\u5982\u679c\u8981\u627e\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\uff0c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u901a\u5e38\u6309\u7167\u7ecf\u9a8c\u89c4\u5219\u3002  </p> <p>\u6211\u4eec\u4e3b\u8981\u8003\u8651\u8fde\u63a5\u64cd\u4f5c\u7684\u4f18\u5316\u3002</p>"},{"location":"DB/12.%20Query%20Optimization/#1241-cost-based-join-order-selection","title":"12.4.1 Cost-Based Join-Order Selection","text":""},{"location":"DB/12.%20Query%20Optimization/#12411-dynamic-programming","title":"12.4.1.1 Dynamic Programming","text":"<p>Consider finding the best join-order for \\(r_1\\bowtie    r_2\\bowtie  \\ldots r_n\\).  </p> <p>There are \\((2(n \u2013 1))!/(n \u2013 1)!\\) different join orders for above expression.</p> <p> </p> <p>\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u7684\u65b9\u5f0f\u8fdb\u884c\u8fde\u63a5\u3002\u6bd4\u5982\u8981\u8fde\u63a5\u4e94\u4e2a\u8868\uff0c\u786e\u5b9a\u8981\u5148\u8fde\u63a5\u524d\u4e09\u4e2a\u8868\u3002\u5728\u524d\u4e09\u4e2a\u8868\u4e2d\u9009\u62e9\u6700\u4f18\u7684\u65b9\u6848\uff0812\u90091\uff09\u5f97\u5230\u7ed3\u679c\u8868\uff0c\u7136\u540e\u628a\u5269\u4e0br4\uff0cr5\u548c\u7ed3\u679c\u8868\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u518d\u9009\u62e9\u6700\u4f18\u7684\u65b9\u6848\uff0812\u9009\u4e00\uff09\u8fdb\u884c\u8fde\u63a5\u3002\u4e00\u5171\u53ea\u670924\u4e2d\u9009\u62e9</p> <p>Using dynamic programming, the least-cost join order for any subset of \\(\\{r_1, r_2, \\ldots r_n\\}\\) is computed only once and stored for future use. </p> <p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\uff0c\u4efb\u4f55\u5b50\u96c6 ${\ud835\udc5f1,\ud835\udc5f2,\u2026\ud835\udc5f\ud835\udc5b} $\u7684\u6700\u4f4e\u6210\u672c\u8fde\u63a5\u987a\u5e8f\u4ec5\u8ba1\u7b97\u4e00\u6b21\u5e76\u5b58\u50a8\u4ee5\u5907\u5c06\u6765\u4f7f\u7528\u3002</p> <p><code>Join Order Optimization Algorithm</code></p> <p>\u5148\u5206\u89e3\u6210\u4e24\u4e2a\u5c0f\u7684\u96c6\u5408 \\(S_1, S-S_1\\). \u9012\u5f52\u5730\u7ec6\u5206\u3002  </p> <p>\u9012\u5f52\u5230\u6700\u5e95\u5c42\u5c31\u53d8\u4e3a\u4e86\u5bf9\u5355\u4e2a\u8868\u7684\u9009\u62e9\u65b9\u6cd5\u3002</p> <p><code>\u6bcf\u6b21\u5c06\u8981\u8fde\u63a5\u7684\u8868\u5206\u4e3a\u4e24\u4e2a\u5b50\u5e8f\u5217\uff0c\u5229\u7528\u52a8\u6001\u89c4\u5212\uff0c\u6240\u6709\u5e8f\u5217\u957f\u5ea6\u5c0f\u4e8e\u5f53\u524d\u5e8f\u5217\u7684\u96c6\u5408\u6700\u4f73\u6392\u5217\u65b9\u5f0f\u548ccost\u90fd\u5df2\u77e5\uff0c\u4e14\u4fdd\u7559\u4e0b\u6765\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u65ad\u901a\u8fc7\u53d8\u5316\u4e24\u4e2a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8ba1\u7b97\u51fa\u5f53\u524d\u5e8f\u5217\u6700\u4f73\u7684\u6392\u5217\u65b9\u5f0f\u548ccost</code></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(3^n)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(2^n)\\)</p>"},{"location":"DB/12.%20Query%20Optimization/#12412-left-deep-join-trees","title":"12.4.1.2 Left Deep Join Trees","text":"<p>In left-deep join trees, the right-hand-side input for each join is a relation, not the result of an intermediate join.</p> <p>\u5728\u5de6\u6df1\u8fde\u63a5\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8fde\u63a5\u7684\u53f3\u4fa7\u8f93\u5165\u662f\u4e00\u4e2a\u5173\u7cfb\uff0c\u800c\u4e0d\u662f\u4e2d\u95f4\u8fde\u63a5\u7684\u7ed3\u679c\u3002</p> <p>\u5de6\u8fb9\u53ef\u4ee5\u662f\u4e2d\u95f4\u7ed3\u679c\uff0c\u53f3\u8fb9\u5fc5\u987b\u662f\u4e00\u4e2a\u5173\u7cfb\u3002</p> <p>\u6784\u5efa\u5de6\u6df1\u8fde\u63a5\u6811\uff0c\u5bf9\u6700\u521d\u59cb\u7684\u8fde\u63a5\u5e8f\u5217S\uff0c\u6bcf\u6b21\u9009\u53d6\u6700\u540e\u4e00\u4e2a\u5173\u7cfb\uff0c\u5c06S\u5206\u4e3aS-r\u548cr\uff0c\u800c\u4e0d\u662f\u5bf9\u4e8eS\u7684\u4efb\u610f\u4e00\u4e2a\u975e\u7a7a\u5b50\u96c6\u8fdb\u884c\u5206\u5272\u3002</p>"},{"location":"DB/12.%20Query%20Optimization/#12413-cost-of-optimization","title":"12.4.1.3 Cost of Optimization","text":"<ul> <li>With dynamic programming <ul> <li>time complexity of optimization with bushy trees is \\(O(3^n)\\).  </li> <li>Space complexity is \\(O(2^n)\\) </li> </ul> </li> <li>left-deep join tree <ul> <li>Time complexity of finding best join order is \\(O(n 2^n)\\)</li> <li>Space complexity remains at \\(O(2^n)\\) </li> </ul> </li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#1242-heuristic-optimization","title":"12.4.2 Heuristic Optimization","text":"<p>Cost-based optimization is expensive.   \u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u4f18\u5316</p> <p><code>Heuristic optimization</code> transforms the query-tree by using a set of rules that typically (but not in all cases) improve execution performance:</p> <p>\u542f\u53d1\u5f0f\u4f18\u5316\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u89c4\u5219\u6765\u8f6c\u6362\u67e5\u8be2\u6811\uff0c\u8fd9\u4e9b\u89c4\u5219\u901a\u5e38\uff08\u4f46\u4e0d\u662f\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff09\u90fd\u4f1a\u63d0\u9ad8\u6267\u884c\u6027\u80fd\uff1a</p> <ul> <li> <p>Perform selection early (reduces the number of tuples)</p> <p>\u5c3d\u65e9\u8fdb\u884c\u9009\u62e9\u64cd\u4f5c\u3002\uff08\u51cf\u5c11\u4e2d\u95f4\u7ed3\u679c\u5143\u7ec4\u4e2a\u6570\uff09</p> </li> <li> <p>Perform projection early (reduces the number of attributes)</p> <p>\u5c3d\u65e9\u8fdb\u884c\u6295\u5f71\u64cd\u4f5c\u3002\uff08\u51cf\u5c11\u4e2d\u95f4\u7ed3\u679c\u5c5e\u6027\u4e2a\u6570\uff09</p> </li> <li> <p>Perform most restrictive selection and join operations (i.e. with smallest result size) before other similar operations.</p> <p>\u5728\u5176\u4ed6\u7c7b\u4f3c\u64cd\u4f5c\u4e4b\u524d\u6267\u884c\u9650\u5236\u6027\u6700\u5f3a\u7684<code>\u9009\u62e9\uff08select\uff09</code>\u548c<code>\u8fde\u63a5\uff08join\uff09</code>\u64cd\u4f5c\uff08\u51cf\u5c11\u4e2d\u95f4\u7ed3\u679c\u89c4\u6a21\uff09\u3002</p> </li> <li> <p>Perform left-deep join order</p> <p>\u5229\u7528\u5de6\u6df1\u8fde\u63a5\u6811\u8fdb\u884c\u8fde\u63a5\u3002\u5373\u5728\u4e3a\u8fde\u63a5\u64cd\u4f5c\u5e8f\u5217\u9009\u62e9\u6700\u4f18\u65b9\u6848\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5c06\u5e8f\u5217S\u5206\u4e3aS-r\u4e0er\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u8868\u9009\u62e9\u6700\u4f18\u8fde\u63a5\u65b9\u6848\u3002(\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6)</p> </li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#125-additional-optimization-techniques","title":"12.5 Additional Optimization Techniques","text":""},{"location":"DB/12.%20Query%20Optimization/#1251-nested-subqueries","title":"12.5.1 Nested Subqueries","text":"<p>\u4f18\u5316\u5d4c\u5957\u67e5\u8be2</p> <p></p> <p><pre><code>select name \nfrom instructor \nwhere exists \n    (select * \n     from teaches\n     where instructor.ID = teaches.ID and teaches.year = 2022)\n</code></pre> \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6559\u5e08\uff0c\u628a\u6559\u5e08\u7684ID\u5728teaches\u8868\u4e2d\u8fdb\u884c\u5faa\u73af\uff0c\u67e5\u770b\u662f\u5426\u6709\u6761\u4ef6\u6ee1\u8db3\u7684\u8bb0\u5f55\u3002</p> <p>\u8fd9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e24\u91cd\u5faa\u73af\u3002\u5916\u5faa\u73af\u662finstructor\u8868\uff0c\u5185\u5faa\u73af\u662fteaches\u8868\uff0c\u6548\u7387\u8f83\u4f4e\u3002</p> <p><code>Parameters are variables from outer level query that are used in the  nested subquery; such variables are called</code> correlation variables\uff08\u76f8\u5173\u53d8\u91cf\uff09 </p> <p>\u5047\u5982\u8bf4\u5d4c\u5957\u67e5\u8be2\uff0c\u6ca1\u6709\u51fa\u73b0\u5728\u5916\u9762\u7684\u8868\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\uff0c\u4f8b\u5982\u6b64\u5904\u7684instructor.ID\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u5148\u628a\u91cc\u9762year = 2022\u7684\u67e5\u8be2\u597d\uff0c\u518d\u4e0e\u5916\u9762\u7684\u8868\u8fde\u63a5\u5373\u53ef</p> <p>\u5373\u6765\u81ea\u5916\u5faa\u73af\u7684\u53d8\u91cf\u3002\u5982\u679c\u6ca1\u6709\u76f8\u5173\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6267\u884c\u5185\u90e8\uff0c\u7136\u540e\u518d\u6267\u884c\u5916\u90e8\u3002</p> <p>\u4f18\u5316\u65b9\u6cd51\uff1a\u5d4c\u5957\u67e5\u8be2\u6539\u53d8\u4e3a\u8fde\u63a5</p> <pre><code>select  name\nfrom   instructor, teaches\nwhere instructor.ID = teaches.ID and teaches.year = 2022\n</code></pre> <p>\u628a\u521a\u521a\u90a3\u4e2a\u4f8b\u5b50\u6539\u4e3a\u4e00\u4e2a select \u8bed\u53e5\uff0c\u90a3\u4e48\u4e00\u4e2a\u8001\u5e08\u5982\u679c\u5f00\u4e86\u5f88\u591a\u95e8\u8bfe\u5c31\u4f1a\u51fa\u73b0\u5f88\u591a\u4e2a\u540d\u5b57\u3002\u4f46\u662f\u52a0\u4e0a <code>distinct</code> \u5173\u952e\u8bcd\u540e\u53c8\u65e0\u6cd5\u533a\u5206\u540c\u540d\u60c5\u51b5\u3002</p> <p><code>\u6700\u7ec8\u6211\u4eec\u4f7f\u7528\u534a\u8fde\u63a5\uff08semijoin\uff09\u8fdb\u884c\u4f18\u5316\u3002\u534a\u8fde\u63a5\u7684\u542b\u4e49\u662f\uff1a</code></p> <p>\\(r\\ltimes_\\theta s\\)   Is a subset of r, in which every tuple \\(r_i\\) matches at least one tuple \\(s_i\\) in s under the condition \\(\\theta\\).</p> <p>\u4fdd\u7559 \\(r\\) \u4e2d\u80fd\u4e0e \\(s\\) \u76f8\u8fde\u7684\u5143\u7ec4\u3002</p> <p> $$ r \\ltimes_{\\theta} s = \\prod_R(r \\bowtie _{\\theta} s) $$</p> <p></p> <p>\u6700\u7ec8\u5d4c\u5957\u67e5\u8be2\u53ef\u4ee5\u5199\u4f5c\uff1a</p> <p></p> <pre><code>The above relational algebra query is also equivalent to\n\nselect name\nfrom instructor\nwhere ID in (select teaches.ID \n                from teaches\n                where teaches.year = 2022)\n</code></pre> <p>\u5bf9\u5d4c\u5957\u67e5\u8be2\u4f18\u5316\u7684\u4e00\u822c\u5f62\u5f0f\uff1a</p> <p>\u5176\u4e2d\\(P_2^2\\)\u8868\u793a\u4e0e\u5916\u5faa\u73af\u6709\u5173\u7684\u5c5e\u6027</p> <p>\\(P_2^1\\)\u8868\u793a\u53ea\u4e0e\u5185\u5faa\u73af\u6709\u5173\u7684\u5c5e\u6027</p> <p>\u6240\u4ee5\u5148\u7528\\(\\sigma_{P_2^1}(s1 \\times s2 ...\\times s_m)\\),\u5148\u8fdb\u884c\u9009\u62e9\uff0c\u7136\u540e\u518d\u7528\u76f8\u5173\u53d8\u91cf\u4f5c\u4e3a\u4f5c\u4e3a\u534a\u8fde\u63a5\u7684\u8fde\u63a5\u6761\u4ef6</p> <p>The process of replacing a nested query by a query with a join/semijoin (possibly with a temporary relation) is called decorrelation(\u53bb\u9664\u76f8\u5173)</p> <p>\u53e6\u4e00\u4e2a\u4f18\u5316\u5d4c\u5957\u67e5\u8be2\u7684\u4f8b\u5b50\uff1a</p> <p>Decorrelation of scalar aggregate subqueries can be done using group by/aggregation in some cases</p> <ul> <li>\u5148\u5229\u7528teaches_year\u5bf9teaches\u8868\u683c\u8fdb\u884c\u7b5b\u9009</li> <li>\u518d\u5229\u7528TID\u8fdb\u884c\u5206\u7ec4\uff0c\u5728\u6bcf\u4e00\u7ec4\u4e2d\u7b97\u51fa\u6559\u8bfe\u7684\u6570\u76ee\u3002</li> <li>\u534a\u8fde\u63a5\u65f6\uff0c\u5b9e\u9645\u4e0a\u88ab\u534a\u8fde\u63a5\u7684\u8868\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e2a\u5c5e\u6027\u7684\u8868\uff1aTID,cnt\u3002</li> <li>\u5229\u7528\u8fd9\u4e2a\u8868\uff0c\u5bf9instructor\u7684\u5143\u7ec4\u8fdb\u884c\u7b5b\u9009\uff0c\u5c06\u534a\u8fde\u63a5\u6761\u4ef6\u8bbe\u7f6e\u4e3aID = TID&amp; 1 &lt; cnt\u3002\u56e0\u6b64\uff0cinstructor\u8868\u4e2d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684ID\u6240\u5728\u7684\u884c\u5143\u7ec4\u5c31\u4f1a\u88ab\u4fdd\u7559\uff0c\u4e0d\u6ee1\u8db3\u7684\u884c\u5143\u7ec4\u4f1a\u88ab\u820d\u5f03\u3002</li> <li>\u6700\u540e\uff0c\u5bf9\u534a\u8fde\u63a5\u7ed3\u679c\uff08\u5373\u9009\u62e9\u540e\u7684instructor\u8868\uff09\u8fdb\u884c\u6295\u5f71\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002</li> </ul>"},{"location":"DB/12.%20Query%20Optimization/#1242-materialized-views","title":"12.4.2 Materialized Views","text":"<p>A materialized view is a view whose contents are computed and stored.  </p> <p>\u6709\u4e9b\u6570\u636e\u5e93\u91cc\u628a view \u5b9e\u4f8b\u5316\u4e86\uff0c\u771f\u6b63\u5b58\u50a8\u5728\u5185\u90e8\u7684\u4e34\u65f6\u8868\u3002</p> <pre><code>create view department_total_salary(dept_name, total_salary)as \nselect dept_name, sum(salary) \nfrom instructor \ngroup by dept_name\n</code></pre> <p>Materializing the above view would be very useful if the total salary by department is required frequently</p> <p>Saves the effort of finding multiple tuples and adding up their amounts</p> <p><code>\u8282\u7701\u67e5\u627e\u591a\u4e2a\u5143\u7ec4\u5e76\u5c06\u5176\u91d1\u989d\u76f8\u52a0\u7684\u7cbe\u529b\uff0c\u4f7f\u7528\u524d\u63d0\u5f80\u5f80\u662f\u4e0a\u8ff0\u89c6\u56fe\u4f7f\u7528\u9891\u7e41</code></p> <p><code>\u7f3a\u70b9\uff1a\u4f46\u662f\u9700\u8981\u65f6\u523b\u4fdd\u6301\u8fd9\u4e2a\u89c6\u56fe\u548c\u539f\u8868\u4e00\u81f4\u3002</code></p> <p>use incremental view maintenance(\u589e\u91cf\u89c6\u56fe\u7ef4\u62a4)  \uff1aChanges to database relations are used to compute changes to the materialized view, which is then updated</p> <p>\u5bf9\u6570\u636e\u5e93\u5173\u7cfb\u7684\u66f4\u6539\u7528\u4e8e\u8ba1\u7b97\u5bf9\u7269\u5316\u89c6\u56fe\u7684\u66f4\u6539\uff0c\u7136\u540e\u66f4\u65b0\u7269\u5316\u89c6\u56fe</p> <p>The changes (inserts and deletes) to a relation or expressions are referred to as its differential(\u5dee\u5206)\uff1a Set of tuples inserted to and deleted from r are denoted \\(i_r\\) and \\(d_r\\)</p> <p>\u4f8b\u5982\uff0c\u6700\u521d\uff0c\u4e24\u4e2a\u8868\u8fde\u63a5\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u73b0\u5728\uff0c\u8868\u683cr\u63d2\u5165\u4e86\u4e00\u6761\u65b0\u7684\u8bb0\u5f55\uff1a</p> <p></p> <p>\u90a3\u4e48\uff0c\u9700\u8981\u5c06\u65b0\u589e\u7684\u8fd9\u6761\u8bb0\u5f55\u548cs\u8868\u505a\u8fde\u63a5\uff0c\u5e76\u5c06\u8fde\u63a5\u7684\u7ed3\u679c\u52a0\u5165\u5230\u7269\u5316\u89c6\u56fe\u4e2d\uff0c\u4ee5\u7ef4\u62a4\u89c6\u56fe\u4fe1\u606f\u7684\u6b63\u786e\u6027\u3002</p> <ul> <li> <p>join: \\(V^{new}=V^{old}\\cup (i_r\\bowtie s), V^{new} = V^{old}-(d_r\\bowtie s)\\) </p> </li> <li> <p>select: \\(V^{new}=V^{old}\\cup \\sigma_\\theta(i_r), V^{new} = V^{old}-\\sigma_\\theta(d_r)\\)</p> <p>\u5047\u5982\u4e0d\u662f\u8fde\u63a5\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u7269\u5316\u89c6\u56fe\u662f\u7531\u53e6\u4e00\u4e2a\u8868r\u7684\u9009\u62e9\u64cd\u4f5c\u5f97\u51fa\u7684\u3002\u90a3\u4e48\u5047\u5982\u8868r\u63d2\u5165\u4e86\u4e00\u6761\u65b0\u5143\u7ec4\uff0c\u4e3a\u4e86\u7ef4\u62a4\u7269\u5316\u89c6\u56fe\uff0c\u53ea\u8981\u628a\u63d2\u8fdb\u53bb\u7684\u90a3\u4e2a\u5143\u7ec4\u5229\u7528\u76f8\u540c\u7684\u9009\u62e9\u6761\u4ef6\u8fdb\u884c\u9009\u62e9\uff0c\u5982\u679c\u9009\u62e9\u4e0a\u4e86\uff0c\u5c31\u628a\u5b83\u5e76\u5230\u7269\u5316\u89c6\u56fe\u4e2d\u3002</p> </li> <li> <p>projection:  </p> <p>For each tuple in a projection \\(\\Pi_A(r)\\), we will keep a count of how many times it was derived.  </p> <ul> <li> <p>On insert of a tuple to r, if the resultant tuple is already in \\(\\Pi_A(r)\\) we increment its count, else we add a new tuple with count = 1</p> </li> <li> <p>On delete of a tuple from r, we decrement the count of the corresponding tuple in \\(\\Pi_A(r)\\) </p> <ul> <li>if the count becomes 0, we delete the tuple from \\(\\Pi_A(r)\\)</li> </ul> <p> </p> </li> </ul> </li> <li> <p>count \\(v= _Ag_{count(B)}\\)</p> <ul> <li> <p>insert: For each tuple r in \\(i_r\\), if the corresponding group is <code>already present</code> in v, we<code>increment its count</code>, else we add a new tuple with count = 1</p> </li> <li> <p>delete: for each tuple t in \\(i_r\\).we look for the group t.A in v, and subtract 1 from the count for the group.   </p> </li> </ul> <p>If the count becomes 0, we delete from v the tuple for the group t.A</p> <p>\u5047\u5982\u7269\u5316\u89c6\u56fe\u662f\u7531\u5bf9A\u5c5e\u6027\u5bf9\u8868r\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u8fdb\u884ccount\u8ba1\u7b97\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u5047\u8bbe\u8868r\u65b0\u63d2\u5165\u4e86\u4e00\u6761\u5143\u7ec4\uff0c\u5047\u8bbe\u8fd9\u4e2a\u5143\u7ec4\u7684\u5206\u7ec4\u5c5e\u6027\u7684\u503c\u5728\u5206\u597d\u7ec4\u7684\u5206\u7ec4\u5c5e\u6027\u503c\u7684\u96c6\u5408\u4e2d\uff0c\u90a3\u4e48\u5c31\u628a\u5bf9\u5e94\u7269\u5316\u89c6\u56fe\u7684\u8fd9\u4e2acount\u503c\u52a01\u3002\u5047\u8bbe\u8fd9\u4e2a\u5143\u7ec4\u7684\u5206\u7ec4\u5c5e\u6027\u7684\u503c\u4e0d\u5728\u5206\u597d\u7ec4\u7684\u5206\u7ec4\u5c5e\u6027\u503c\u4e2d\uff0c\u90a3\u4e48\u5c31\u5728\u7269\u5316\u89c6\u56fe\u4e2d\u63d2\u5165\u65b0\u7684\u4e00\u884c\uff0c\u5305\u62ec\u8fd9\u4e2a\u5143\u7ec4\u7684\u5206\u7ec4\u5c5e\u6027\u503c\uff0c\u5bf9\u5e94\u7684count\u7f6e\u4e3a1\u3002</p> </li> <li> <p>sum \\(v= _Ag_{sum(B)}\\)</p> <p>\u4e0ecount\u7c7b\u4f3c\u3002\u5f53\u63d2\u5165\u4e00\u6761\u65b0\u7684\u5143\u7ec4\u65f6\uff0c\u6211\u4eec\u9700\u8981add\u8fd9\u4e2a\u5143\u7ec4\u4e2d\u5c5e\u6027A\u7684value</p> <p><code>\u7531\u4e8e\u5b58\u5728value=0\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8bb0\u5f55count\u6765\u68c0\u67e5groups\u4e2d\u662f\u5426\u5b58\u5728tuple\u3002\u800c\u4e0d\u80fd\u7b80\u5355\u4f9d\u9760sum=0\u8fdb\u884c\u5224\u65ad</code></p> <p>To handle the case of avg, we maintain the sum and count aggregate values separately, and divide at the end\u3002<code>\u5bf9\u4e8e\u5e73\u5747\u6570\u7684\u7ef4\u62a4\uff0c\u5206\u522b\u7ef4\u62a4sum\u548ccount\uff0c\u6700\u7ec8\u76f8\u5904\u8fdb\u884c\u8ba1\u7b97</code></p> </li> <li> <p>min, max\uff1a\\(v = _Ag_{min(B)}(r)\\)</p> <ol> <li>\u5bf9\u4e8e\u63d2\u5165\u7684\u5904\u7406\u8f83\u4e3a\u7b80\u5355\uff0c\u6bd4\u8f83\u4e00\u4e0b\u73b0\u6709\u7684min\u548cmax\u5373\u53ef</li> <li>\u7ef4\u62a4\u5220\u9664\u65f6\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u7684\u805a\u5408\u503c\u53ef\u80fd\u4f1a\u66f4\u6602\u8d35\u3002 \u6211\u4eec\u5fc5\u987b\u67e5\u770b\u540c\u4e00\u7ec4\u4e2d\u7684\u5176\u4ed6\u5143\u7ec4\u4ee5\u627e\u5230\u65b0\u7684\u6700\u5c0f\u503c(<code>\u53ef\u80fd\u4f1a\u628a\u6700\u5c0f\u503c\u6216\u8005\u6700\u5927\u503c\u5220\u9664\uff0c\u8fd9\u662f\u9700\u8981\u91cd\u65b0\u5bfb\u627e</code>)</li> </ol> </li> <li> <p>set intersection: \\(v = r \\cap s\\)</p> <ol> <li>\u5f53\u4e00\u4e2a\u5143\u7ec4\u63d2\u5165\u5230 r \u4e2d\u65f6\uff0c\u6211\u4eec\u68c0\u67e5\u5b83\u662f\u5426\u5b58\u5728\u4e8e s \u4e2d\uff0c\u5982\u679c\u5b58\u5728\uff0c\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230 v \u4e2d\u3002</li> <li>\u5982\u679c\u4ece r \u4e2d\u5220\u9664\u8be5\u5143\u7ec4\uff0c\u5219\u6211\u4eec\u5c06\u5176\u4ece\u4ea4\u96c6\u4e2d\u5220\u9664\uff08\u5982\u679c\u5b58\u5728\uff09\u3002</li> </ol> </li> </ul> <p>\u600e\u4e48\u5229\u7528\u8fd9\u4e9b view? </p> <ul> <li> <p>Rewriting queries to use materialized views:</p> <p> </p> </li> <li> <p>Replacing a use of a materialized view by the view definition</p> <p> </p> </li> </ul> <p>Materialized View Selection  </p> <p>\u6709\u54ea\u4e9b\u67e5\u8be2\uff1f\u5404\u79cd\u67e5\u8be2\u7684\u6bd4\u4f8b\uff1f</p>"},{"location":"DB/13.%20Transaction/","title":"13. Transactions","text":"<p> \u7ea6 5538 \u4e2a\u5b57  8 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 28 \u5206\u949f</p> <p>Abstract</p> <ul> <li>A Simple Transaction Model</li> <li>Concurrent Executions</li> <li>Serializability</li> <li>Recoverability</li> <li>Transaction Isolation Levels </li> <li>Transaction Definition in SQL</li> </ul>"},{"location":"DB/13.%20Transaction/#131-transaction-concept","title":"13.1 Transaction Concept","text":"<p>A transaction is a unit of program execution that accesses and  possibly updates various data items.  \u4e8b\u52a1\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u5355\u5143\uff0c\u7528\u4e8e\u8bbf\u95ee\u5e76\u53ef\u80fd\u66f4\u65b0\u5404\u79cd\u6570\u636e\u9879\u3002\uff08<code>\u539f\u5b50\u6027\u7684\u64cd\u4f5c</code>\uff09</p> <p>e.g. transaction to transfer $50 from account A to account B  </p> <pre><code>update  account  \nset  balance=balance-50  \nwhere account_number=A;\n\nupdate  account  \nset  balance=balance+50  \nwhere account_number=B;\ncommit;\n</code></pre> <ul> <li> <p>Failures of various kinds, such as hardware failures and system crashes</p> <p>\u5404\u79cd\u6545\u969c\uff0c\u5982\u786c\u4ef6\u6545\u969c\u548c\u7cfb\u7edf\u5d29\u6e83</p> </li> <li> <p>Concurrent execution of multiple transactions</p> <p>\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u4e8b\u52a1</p> </li> </ul> <p><code>ACID Properties</code></p> <ul> <li> <p>Atomicity\uff08\u539f\u5b50\u6027\uff09\uff1a\u8981\u4e48\u4e8b\u52a1\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u6b63\u786e\u53cd\u6620\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u8981\u4e48\u6ca1\u6709\uff08\u5168\u6709\u6216\u8005\u5168\u65e0\uff09</p> <p>\u7531\u6570\u636e\u5e93\u6062\u590d\u529f\u80fd\u4fdd\u8bc1</p> </li> <li> <p>Consistency\uff08\u4e00\u81f4\u6027\uff09 </p> <p>\u4fdd\u8bc1\u6570\u636e\u5e93\u5185\u7684\u5185\u5bb9\u6b63\u786e\u6027\uff0c\u4e0e\u5b9e\u9645\u4e1a\u52a1\u76f8\u7b26\u3002\u5982\u8f6c\u8d26\u662f\u4e00\u4e2a\u4eba\u4f59\u989d\u51cf\u5c11\u4e00\u4e2a\u4eba\u589e\u52a0\u3002  </p> <p>\u5728\u9694\u79bb\u72b6\u6001\u4e0b\u6267\u884c\u4e8b\u52a1\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u5e93\u7684\u4fe1\u606f\u4e00\u81f4\u6027\u3002\u4fdd\u8bc1\u6570\u636e\u5e93\u5185\u5bb9\u7684\u6b63\u786e\u6027\u3002</p> </li> <li> <p>Isolation\uff08\u9694\u79bb\u6027\uff09 </p> <p>\u5c3d\u7ba1\u6709\u591a\u4e2a\u4e8b\u52a1\u540c\u65f6\u6267\u884c\uff0c\u4f46\u6bcf\u4e2a\u4e8b\u52a1\u5fc5\u987b\u4e0d\u77e5\u9053\u5176\u4ed6\u540c\u65f6\u6267\u884c\u7684\u4efb\u52a1\u3002\u5fc5\u987b\u5bf9\u5176\u4ed6\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u9690\u85cf\u4e2d\u95f4\u7684\u4e8b\u52a1\u7ed3\u679c\u3002\u5373\u4e00\u4e2a\u4e8b\u52a1\u4e0d\u4f1a\u88ab\u53e6\u4e00\u4e2a\u4e8b\u52a1\u6240\u5f71\u54cd\u3002</p> <p>\u6ee1\u8db3\u9694\u79bb\u6027\uff0c\u6700\u7406\u60f3\u7684\u60c5\u51b5\u5c31\u662f\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u5b8c\u6bd5\u540e\u518d\u6267\u884c\u4e0b\u4e00\u4e2a\u4e8b\u52a1\u3002\u4f46\u662f\u51fa\u4e8e\u6027\u80fd\u4e0a\u7684\u8003\u8651\uff0c\u5f80\u5f80\u5b9e\u9645\u4e0a\u662f\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u3002\u8fd9\u5c31\u8981\u6c42\u4e8b\u52a1\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u53d7\u5e76\u884c\u6267\u884c\u7684\u4e8b\u52a1\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u4e0d\u80fd\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u8fd8\u6ca1\u6709commit\u7684\u4e8b\u52a1\u5199\u5165\u7684\u503c\u3002</p> </li> <li> <p>Durability\uff08\u6301\u4e45\u6027\uff09 </p> <p>\u4e8b\u52a1\u63d0\u4ea4\u540e\u88ab\u7f13\u5b58\uff0c\u6389\u7535\u4e0d\u80fd\u5931\u53bb buffer \u91cc\u7684\u5185\u5bb9\u3002  </p> <p>\u4e8b\u52a1\u6210\u529f\u5b8c\u6210\u540e\uff0c\u5373\u4f7f\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\uff0c\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u7684\u5f71\u54cd\u4e5f\u5e94\u5f53\u6c38\u4e45\u5b58\u5728\u3002</p> </li> </ul>"},{"location":"DB/13.%20Transaction/#132-a-simple-transaction-model","title":"13.2 A Simple Transaction Model","text":"<p>\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u628a\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u7b80\u5316\u4e3a\u8bfb\u5199(\u4e0d\u8003\u8651insert\u548cdelete)\u4e24\u79cd\u64cd\u4f5c\u3002 </p> <p><code>Transactions access data using two operations:(\u4e8b\u52a1\u901a\u8fc7\u4e24\u79cd\u64cd\u4f5c\u8bbf\u95ee\u6570\u636e)</code> </p> <ul> <li> <p>read(X), which transfers the data item X from the database to a variable, also called X\uff0c in  a <code>work area</code>  in  main  memory  belonging to the transaction that  executed the read  operation.  </p> <p>\u5b83\u5c06<code>\u6570\u636e\u9879 X \u4ece\u6570\u636e\u5e93\u4f20\u8f93\u5230\u4e3b\u5185\u5b58</code>\u4e2d\u5c5e\u4e8e\u6267\u884c\u8bfb\u53d6\u64cd\u4f5c\u7684\u4e8b\u52a1\u7684\u5de5\u4f5c\u533a\u4e2d\u7684\u53d8\u91cf\uff08\u4e5f\u79f0\u4e3a X\uff09\u3002</p> <p>\u5982\u679c\u6570\u636e\u5728buffer\u4e2d\uff0c\u901a\u8fc7read\u64cd\u4f5c\u5c06\u6570\u636e\u8bfb\u53d6\u5230work area\uff0c\u5982\u679c\u6570\u636e\u4e0d\u5728buffer\u4e2d\uff0c\u5148\u901a\u8fc7input\u5c06\u6570\u636e\u4ecedisk\u8bfb\u53d6\u5230buffer\uff0c\u518d\u6267\u884c\u5c06\u6570\u636e\u4ecebuffer \u8bfb\u53d6\u5230work area</p> </li> <li> <p>write(X), which transfers the value in the variable X  in the main memory <code>work area</code> of the transaction that executed the write operation to the data item X in database.   </p> <p>\u5b83\u5c06\u6267\u884c\u5199\u5165\u64cd\u4f5c\u7684\u4e8b\u52a1\u7684<code>\u4e3b\u5185\u5b58\u5de5\u4f5c\u533a\u4e2d\u53d8\u91cf X \u4e2d\u7684\u503c\u4f20\u8f93\u5230\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u9879 X</code>\u3002</p> </li> </ul> <p>\u6bcf\u4e2a\u4e8b\u52a1\uff0c\u90fd\u6709\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u3002\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u6709\u8be5\u4e8b\u52a1\u9700\u8981\u8bbf\u95ee\u5230\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u6570\u636e\uff0c\u5728\u67d0\u4e9b\u5185\u5b58\u5757\u7684\u91cc\u9762\u3002\u5982\u679c\u662fwrite\uff0c\u4fee\u6539\u597d\u4e86\u8fd9\u4e9b\u6570\u636e\u4ee5\u540e\uff0c\u4f1a\u518d\u5199\u56de\u5230\u5185\u5b58\u4e2d\u53bb\u3002</p> <p>!!! Example \"Example of Fund Transfer\"\u4ee5\u8f6c\u8d26\u64cd\u4f5c\u4e3a\u4f8b\uff1a</p> <p> </p> <ul> <li> <p>Atomicity requirement   </p> <p>\u5982\u679c\u4e8b\u52a1\u5728\u6b65\u9aa4 3 \u4e4b\u540e\u548c\u6b65\u9aa4 6 \u4e4b\u524d\u5931\u8d25\uff0c\u5219\u8d44\u91d1\u5c06\u201c\u4e22\u5931\u201d\uff0c\u4ece\u800c\u5bfc\u81f4\u6570\u636e\u5e93\u72b6\u6001\u4e0d\u4e00\u81f4 \u6545\u969c\u53ef\u80fd\u662f\u7531\u4e8e\u8f6f\u4ef6\u6216\u786c\u4ef6\u9020\u6210\u7684 \u7cfb\u7edf\u5e94\u786e\u4fdd\u90e8\u5206\u6267\u884c\u7684\u4e8b\u52a1\u7684\u66f4\u65b0\u4e0d\u4f1a\u53cd\u6620\u5728\u6570\u636e\u5e93\u4e2d\uff08\u5982\u679c\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6570\u636e\u5e93\u5e94\u8be5\u8981\u64a4\u9500\u4e4b\u524d\u7684\u64cd\u4f5c\uff09</p> </li> <li> <p>Durability requirement  </p> <p>\u5982\u679c\u4e8b\u52a1\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u5c31\u628a\u66f4\u65b0\u540c\u6b65</p> </li> <li> <p>Consistency requirement  </p> <ul> <li> <p>Explicitly\uff08\u663e\u5f0f\uff09 specified integrity constraints </p> <p>e.g. primary keys , foreign keys  </p> <p>\u6570\u636e\u5e93\u628a\u8fd9\u4e2a\u5b9a\u4e49\u653e\u5728\u5185\u90e8\uff0c\u4f1a\u81ea\u5df1\u7ef4\u62a4</p> </li> <li> <p>Implicit \uff08\u9690\u5f0f\uff09 integrity constraints </p> <p>e.g. sum of balances of all accounts minus sum of loan amounts must equal value of cash-in-hand</p> </li> </ul> <p>\u5728\u4e8b\u52a1\u6267\u884c\u671f\u95f4\uff0c\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u6682\u65f6\u4e0d\u4e00\u81f4\u3002 \u5f53\u4e8b\u52a1\u6210\u529f\u5b8c\u6210\u65f6\uff0c\u6570\u636e\u5e93\u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u3002\u9519\u8bef\u7684\u4e8b\u52a1\u903b\u8f91\u53ef\u80fd\u5bfc\u81f4\u4e0d\u4e00\u81f4</p> </li> <li> <p>Isolation requirement  </p> <p></p> <p>\u5728 step 3 6 \u4e4b\u95f4\uff0c\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5982\u679c\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u88ab\u90e8\u5206\u66f4\u65b0\u7684\u6570\u636e\u5e93\uff0c\u90a3\u4e48A+B \u4f1a\u5c0f\u4e8e\u6b63\u786e\u7b54\u6848\u3002\u8fd9\u662f\u56e0\u4e3a\u7834\u574f\u4e86\u9694\u79bb\u6027\u3002</p> <p>\u9694\u79bb\u6027\u8981\u6c42\uff1a\u6267\u884c\u4e8b\u52a1\u4e32\u884c\uff08one after another\uff09</p> </li> </ul>"},{"location":"DB/13.%20Transaction/#1321-transaction-state","title":"13.2.1 Transaction State","text":"<ul> <li> <p>Active \u2013 the initial state; the transaction stays in this state while it is executing</p> <p>\u4e8b\u52a1\u5728\u6b63\u5e38\u6267\u884c\u7684\u72b6\u6001</p> </li> <li> <p>Partially committed \u2013 after the final statement has been executed.  </p> <p>\u5982\u679c\u4e8b\u52a1\u7684\u64cd\u4f5c\uff0c\u5df2\u7ecf\u6267\u884c\u4e86\u6700\u540e\u4e00\u6761\u8bed\u53e5\uff0c\u5c31\u8fdb\u5165\u51c6\u5907\u63d0\u4ea4\u9636\u6bb5\u3002\u80fd\u5426\u63d0\u4ea4\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u6267\u884c\u3002</p> </li> <li> <p>Failed -- after the discovery that normal execution can no longer proceed.  </p> <p>\u4e0d\u80fd\u6b63\u5e38\u63d0\u4ea4\u3002\u6216\u8005\u662f\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u95ee\u9898\u3002</p> </li> <li> <p>Aborted\uff08\u4e2d\u6b62\uff09 \u2013 after the transaction has been rolled back and the database restored to its state prior to the start of the transaction.  Two options after it has been aborted:\u3001</p> <p>\u4e8b\u52a1\u56de\u6eda\u5e76\u5c06\u6570\u636e\u5e93\u6062\u590d\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\u4e4b\u540e(\u8981\u5c06\u8be5\u4e8b\u52a1\u8fdb\u884c\u8fc7\u7684\u6240\u6709\u64cd\u4f5c\u5168\u90e8\u6e05\u7a7a)</p> <ul> <li>restart the transaction</li> <li>kill the transaction</li> </ul> </li> <li> <p>Committed \u2013 after successful completion.</p> </li> </ul>"},{"location":"DB/13.%20Transaction/#133-concurrent-executions","title":"13.3 Concurrent Executions","text":"<p><code>\u5141\u8bb8\u591a\u4e2a\u4e8b\u52a1\u5728\u7cfb\u7edf\u4e2d\u540c\u65f6\u8fd0\u884c\u7684\u4f18\u70b9\u662f\uff1a</code></p> <ul> <li> <p>increased processor and disk utilization\uff0cleading to better transaction throughput</p> <p>\u63d0\u9ad8\u5904\u7406\u5668\u548c\u78c1\u76d8\u5229\u7528\u7387\uff0c\u4ece\u800c\u63d0\u9ad8\u4e8b\u52a1\u541e\u5410\u91cf</p> <p>E.g. one transaction can be using the CPU while another is reading from or writing to the disk</p> </li> <li> <p>reduced average response time for transactions: short transactions need not wait behind long ones. </p> <p>\u51cf\u5c11\u4e8b\u52a1\u54cd\u5e94\u65f6\u95f4</p> </li> </ul> <p>\u4e8b\u52a1\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u63a7\u5236\u53ef\u80fd\u4f1a\u6709\u4ee5\u4e0b\u95ee\u9898  </p> <p>Anomalies in Concurrent Executions \u5e76\u53d1\u6267\u884c\u4e2d\u7684\u5f02\u5e38</p> <ul> <li><code>Lost Update\uff08\u4e22\u5931\u4fee\u6539\uff09</code></li> <li><code>Dirty Read\uff08\u8bfb\u810f\u6570\u636e\uff09</code></li> <li><code>Unrepeatable Read \uff08\u4e0d\u53ef\u91cd\u590d\u8bfb\uff09</code></li> <li> <p><code>Phantom Problem\uff08\u5e7d\u7075\u95ee\u9898 \uff09</code></p> </li> <li> <p>Lost Update\uff08\u4e22\u5931\u4fee\u6539\uff09 </p> <p>Example \"Lost Update Example\"</p> <p> \u5bf9\u6570\u636e\u5e93\u7684\u591a\u6b21\u4fee\u6539\uff0c\u6700\u7ec8\u4ea7\u751f\u7684\u7ed3\u679c\u53ea\u6709\u6700\u540e\u4e00\u6b21\u4fee\u6539\uff0c\u79f0\u4e3a\u4e22\u5931\u4fee\u6539\u95ee\u9898\u3002</p> <p>\u4e00\u4e2a\u4eba\u8ba2\u7968\u540e\uff0c\u53e6\u4e00\u4e2a\u4eba\u8bfb\u5230\u8fd9\u91cc\u7b2c\u4e00\u4e2a\u4eba\u8fd8\u6ca1\u6709\u4fee\u6539\u7684\u4f59\u91cf\u3002\u5bfc\u81f4\u4e22\u5931\u4e86\u4e00\u6b21\u4fee\u6539\u3002</p> </li> <li> <p>Dirty Read\uff08\u8bfb\u810f\u6570\u636e\uff09</p> <p>Example \"Dirty Read\"   \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u5199\u5165\u7684\uff0c<code>\u8fd8\u6ca1\u6709\u63d0\u4ea4</code>\u7684\u810f\u6570\u636e\u3002</p> <p>\u5047\u8bbe\u53e6\u4e00\u4e2a\u4e8b\u52a1\u6700\u7ec8\u6ca1\u6709\u63d0\u4ea4\u90a3\u4e2a\u810f\u6570\u636e\uff0c\u800c\u662f\u4ea7\u751f\u56de\u6eda\uff0c\u90a3\u4e48\u8bfb\u53d6\u810f\u6570\u636e\u7684\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u4ea7\u751f\u7684\u4fee\u6539\u5c06\u662f\u4e0d\u6b63\u786e\u7684\u3002</p> </li> </ul> <p>\u4e00\u4e2a\u4eba\u8ba2\u7968\u540e\uff0c\u53e6\u4e00\u4e2a\u4eba\u8bfb\u6570\u636e\u540e\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\u4eba\u653e\u5f03\u4e86\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u4eba\u4ecd\u7136\u662f\u7528\u7684\u810f\u6570\u636e\u3002</p> <ul> <li> <p>Unrepeatable Read \uff08\u4e0d\u53ef\u91cd\u590d\u8bfb\uff09</p> <p>Example \"Unrepeatable Read\"</p> <p> </p> <p>\u5728\u4e8b\u52a1T2\u6ca1\u6709\u63d0\u4ea4\u7684\u65f6\u5019\uff0cT1\u5c31\u8fdb\u884c\u8bfb\u53d6\u3002\u8fd9\u6837\uff0c\u7531\u4e8e\u9694\u79bb\u6027\u7684\u8981\u6c42\u662f\uff1a\u5728\u4e00\u4e2a\u4e8b\u52a1\u6ca1\u6709\u63d0\u4ea4\u65f6\uff0c\u5176\u4ed6\u7684\u4efb\u4f55\u4e8b\u52a1\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8fd9\u4e2a\u4e8b\u52a1\u3002\u4f46\u662f\uff0c\u6b64\u65f6T2\u4e8b\u52a1\u5374\u5f71\u54cd\u4e86T1\u4e8b\u52a1\u8bfb\u53d6\u6570\u636e\u7684\u7ed3\u679c\uff0c\u4e0d\u6ee1\u8db3\u6570\u636e\u5e93\u9694\u79bb\u6027\u7684\u8981\u6c42\u3002</p> <pre><code>Isolation \u8981\u6c42\u6211\u4eec\u8bfb\u5230\u7684\u6570\u636e\u5e94\u8be5\u662f\u4e00\u6837\u7684\u3002\n</code></pre> </li> <li> <p>Phantom Problem\uff08\u5e7d\u7075\u95ee\u9898\uff09</p> <p>Example \"Phantom Problem\"</p> <p> </p> <p>\u540c\u6837\uff0c\u5728\u4e8b\u52a1T2\u6ca1\u6709\u63d0\u4ea4\u7684\u65f6\u5019\uff0cT1\u5c31\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21\u67e5\u8be2\u3002\u6b64\u65f6T2\u7684\u63d2\u5165\u64cd\u4f5c\uff0c\u5f71\u54cd\u4e86T1\u5728\u4e00\u4e2a\u4e8b\u52a1\u5f53\u4e2d\u7684\u67e5\u8be2\u7ed3\u679c\uff0c\u4f7f\u524d\u540e\u4e24\u6b21\u67e5\u8be2\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u56e0\u6b64\u4ea7\u751f\u5e7d\u7075\u95ee\u9898\uff0c\u4e0d\u6ee1\u8db3\u9694\u79bb\u6027\u7684\u8981\u6c42\u3002</p> <p><code>unrepeatable \u662f\u9488\u5bf9\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\uff0c\u4f46\u662f\u6570\u636e\u7684\u503c\u4e0d\u540c. Phantom \u662f\u6307\u6570\u636e\u6570\u91cf\u4f1a\u53d8\u591a/\u51cf\u5c11\u3002</code></p> <p>\u5e7d\u7075\u95ee\u9898\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\u95ee\u9898\u7684\u533a\u522b\u662f\uff1a</p> <p>\u4e0d\u53ef\u91cd\u590d\u8bfb\u662f\u9488\u5bf9\u4e00\u4e2a\u6570\u636e\u7684\u524d\u540e\u4e24\u6b21\u8bfb\u53d6\u503c\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u6570\u636e\u672c\u8eab\u5c31\u662f\u5b58\u5728\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u3002</p> <p>\u800c\u5e7d\u7075\u95ee\u9898\u662f\u6307\u524d\u540e\u4e24\u6b21\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u4f1a\u591a\u51fa\u4e00\u4e9b\u8bb0\u5f55\uff0c\u6216\u8005\u5c11\u6389\u4e00\u4e9b\u8bb0\u5f55\u6765\u3002</p> <p>\u4e0d\u53ef\u91cd\u590d\u8bfb\u95ee\u9898\u6bd4\u8f83\u597d\u89e3\u51b3\uff0c\u53ea\u9700\u8981\u5728\u4e8b\u52a1T1\u7b2c\u4e00\u6b21\u5bf9\u6570\u636eA\u8fdb\u884c\u8bfb\u53d6\u65f6\uff0c\u52a0\u4e0a\u4e00\u4e2aS\u9501\u5373\u53ef\u3002\u90a3\u4e48\u4e8b\u52a1T2\u5c06\u4e0d\u80fd\u5bf9A\u8fdb\u884c\u66f4\u6539\u3002</p> <p>\u4f46\u5e7d\u7075\u95ee\u9898\u89e3\u51b3\u8d77\u6765\u8f83\u4e3a\u56f0\u96be\uff0c\u4ee3\u4ef7\u8f83\u9ad8\u3002</p> </li> </ul>"},{"location":"DB/13.%20Transaction/#1331-schedules","title":"13.3.1 Schedules","text":"<p>Schedule \u2013 a sequences of instructions that specify the chronological order in which instructions of concurrent transactions are executed.  </p> <p>Schedule \u2013 \u6307\u5b9a\u5e76\u53d1\u4e8b\u52a1\u6307\u4ee4\u6267\u884c\u7684\u65f6\u95f4\u987a\u5e8f\u7684\u6307\u4ee4\u5e8f\u5217</p> <p>\u6210\u529f\u5b8c\u6210\u6267\u884c\u7684\u4e8b\u52a1\u5c06\u6709\u4e00\u4e2a\u63d0\u4ea4\u6307\u4ee4commit\u4f5c\u4e3a\u6700\u540e\u4e00\u6761\u8bed\u53e5</p> <ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e8b\u52a1\u5047\u5b9a\u6267\u884c\u63d0\u4ea4\u6307\u4ee4\u4f5c\u4e3a\u5176\u6700\u540e\u4e00\u6b65</li> </ul> <p>\u672a\u80fd\u6210\u529f\u5b8c\u6210\u5176\u6267\u884c\u7684\u4e8b\u52a1\u5c06\u6709\u4e00\u4e2a\u4e2d\u6b62\u6307\u4ee4abort\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u8bed\u53e5</p> <p>\u4e8b\u52a1\u7684\u6267\u987a\u5e8f\uff0c\u53ef\u4ee5\u662f\u4ea4\u53c9\u6267\u884c\u3002</p> <ul> <li> <p>\u4f8b1\uff1a</p> <p> </p> <p>T1 \u662f\u4e00\u4e2a\u8f6c\u8d26\u4e8b\u52a1\uff0cT2\u5c06\u767e\u5206\u4e4b\u5341A\u7684\u4f59\u989d\u8f6c\u7ed9B\u3002</p> <p>\u8fd9\u4e24\u4e2a\u4e8b\u52a1\u5b8c\u5168\u662f<code>\u4e32\u884c\u6267\u884c</code>\u7684\uff0c\u8fd9\u662f<code>\u4e32\u884c\u8c03\u5ea6</code>\u3002</p> <p>\u4e32\u884c\u8c03\u5ea6\uff0c\u4e00\u5b9a\u662f\u6ee1\u8db3\u9694\u79bb\u6027\u7684\u3002</p> <p>\u4f8b2\uff1a</p> <p></p> <p>\u4e5f\u662f\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\uff0c\u4ea4\u6362\u4e86\u987a\u5e8f\u3002</p> <p>\u663e\u800c\u6613\u89c1\uff0c\u4e32\u884c\u8c03\u5ea6\u4e00\u5b9a\u662f\u6ee1\u8db3\u9694\u79bb\u6027\u7684\u3002</p> <p>\u4f8b3\uff1a</p> <p></p> <p>\u901a\u8fc7\u4e0a\u8ff0\u53d8\u5316\uff0c\u6700\u7ec8\u7ed3\u679c\u4e2d\uff0cA+B\u4ecd\u7136\u662f200\u3002\u8fd9\u662f\u7531\u4e8e\uff0c\u4e8c\u8005\u5728\u65f6\u95f4\u4e0a\u4ea4\u9519\u7684\u90e8\u5206\u90fd\u662f\u4e0d\u77db\u76fe\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ea4\u9519\u7684\u90e8\u5206\u8fdb\u884c\u4e92\u6362\uff0c\u662f\u4e0d\u5f71\u54cd\u7ed3\u679c\u7684(<code>\u4e5f\u5c31\u662f\u8bf4T1\u7684read\uff08B\uff09\u53ca\u540e\u7eed\u64cd\u4f5c\uff0c\u53ef\u4ee5\u79fb\u52a8\u5230T2\u7684read(A)\u64cd\u4f5c\u4e4b\u524d</code>)\u3002</p> <p>\u56e0\u6b64\uff0c\u8fd9\u5c31\u7b49\u4ef7\u4e8e\u4f8b1\u3002</p> <p>\u540c\u6837\uff0c\u8fd9\u4e2a\u4e8b\u52a1\u7684\u8c03\u5ea6\u6ee1\u8db3\u9694\u79bb\u6027\u8981\u6c42\u3002</p> <p>In Schedules 1, 2 and 3, the sum A + B is preserved.</p> <p>\u4f8b4\uff1a</p> <p></p> <p>\u4e8b\u52a1T1\u7684write(A)\u5728\u4e8b\u52a1T2\u7684write(A)\u4e4b\u540e\uff0c\u4e14\u65e0\u6cd5\u4ea4\u6362\u3002</p> <p>\u4e8b\u52a1T1\u7684write(B)\u5728\u4e8b\u52a1T2\u7684write(B)\u4e4b\u524d\uff0c\u4e14\u65e0\u6cd5\u4ea4\u6362\u3002</p> <p>\u56e0\u6b64\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u4e8b\u52a1\u5b58\u5728\u4e22\u5931\u4fee\u6539\u7684\u95ee\u9898\u3002\u5199\u5165\u4e86\u4e24\u6b21A\uff0c\u7b2c\u4e00\u6b21\u4e3a90\uff0c\u7b2c\u4e8c\u6b21\u4e3a50\uff0c\u7ed3\u679c\u4e3a50\u3002</p> <p>\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0cRead\u548cRead\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u6362\uff0cRead\u548cWrite\u64cd\u4f5c\u3001Write\u548cWrite\u64cd\u4f5c\u5747\u4e0d\u80fd\u4ea4\u6362\u3002</p> </li> </ul>"},{"location":"DB/13.%20Transaction/#1332-serializability","title":"13.3.2 Serializability","text":"<p>Basic Assumption \u2013 Each transaction preserves database consistency.</p> <p>\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u90fd\u80fd\u591f\u4fdd\u6301\u6570\u636e\u7684\u4e00\u81f4\u6027</p> <p>A (possibly concurrent) schedule is serializable if it is equivalent to a serial schedule.   </p> <p><code>\u5982\u679c\u4e00\u4e2a\uff08\u53ef\u80fd\u662f\u5e76\u53d1\u6267\u884c\u7684\uff09\u8ba1\u5212\uff08\u4e8b\u52a1\u96c6\u5408\uff09\uff0c\u53ef\u4ee5\u7b49\u540c\u4e3a\u4e00\u4e2a\u4e32\u884c\u7684\u8ba1\u5212\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8ba1\u5212\u79f0\u4e3a\u53ef\u4e32\u884c\u5316\u7684\u3002</code></p> <p><code>\u4e32\u884c\u8c03\u5ea6\u4e00\u5b9a\u662f\u53ef\u4e32\u884c\u5316\u7684\uff0c\u4ea4\u9519\u6267\u884c\u4e0d\u4e00\u5b9a\u3002</code></p> <ul> <li>conflict serializability(\u51b2\u7a81\u53ef\u4e32\u884c\u5316)</li> <li>view serializability(\u89c6\u56fe\u53ef\u4e32\u884c\u5316)</li> </ul>"},{"location":"DB/13.%20Transaction/#13321-conflict-serializability","title":"13.3.2.1 Conflict Serializability","text":"<p>\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0cRead\u548cRead\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u6362\uff0cRead\u548cWrite\u64cd\u4f5c\u3001Write\u548cWrite\u64cd\u4f5c\u5747\u4e0d\u80fd\u4ea4\u6362\u3002 <code>\u4e5f\u5c31\u662f\u8bf4Read\u548cRead\u4e0d\u77db\u76fe\uff0cRead\u548cWrite\uff0cWrite\u548cWirte\u662f\u51b2\u7a81\u7684</code></p> <p></p> <p>\u6307\u4ece\u51b2\u7a81\u64cd\u4f5c\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u662f\u53ef\u4e32\u884c\u5316\u7684\u3002\u4f8b\u5982Schedule 3\u4e2d\uff0c\u5c06\u4ea4\u53c9\u6267\u884c\u7684\u4e24\u4e2a\u4e8b\u52a1\u8f6c\u5316\u4e3a\u4e32\u884c\u6267\u884c\u7684\u4e24\u4e2a\u4e8b\u52a1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e24\u4e24\u8fdb\u884c\u4ea4\u6362\u7684\u64cd\u4f5c\uff0c\u6ca1\u6709\u4ea7\u751f\u524d\u540e\u4f9d\u8d56\u5173\u7cfb\uff08\u5373\u51b2\u7a81\uff09\u7684\uff0c\u6700\u7ec8\u8f6c\u5316\u79f0\u4e3a\u4e24\u4e2a\u4e32\u884c\u6267\u884c\u7684\u4e8b\u52a1\uff0c\u8fd9\u5c31\u53eb\u505a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u3002</p> <p>a conflict between \\(l_i\\) and \\(l_j\\) forces a (logical) temporal order between them.   </p> <p>\\(l_i\\) \u548c \\(l_j\\) \u4e4b\u95f4\u7684\u51b2\u7a81\u4f1a\u5f3a\u5236\u5b83\u4eec\u5728\u5b83\u4eec\u4e4b\u95f4\u5f62\u6210\uff08\u903b\u8f91\uff09\u65f6\u95f4\u987a\u5e8f\u3002  </p> <p>\u51b2\u7a81\u7684\u64cd\u4f5c\u6b21\u5e8f\u51b3\u5b9a\u4e8b\u52a1\u6267\u884c\u7684\u987a\u5e8f\uff08\u56e0\u4e3a\u51b2\u7a81\uff0c\u4e0d\u53d1\u4ea4\u6362\u987a\u5e8f\uff09</p> <p>\u5982\u679c\u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u90a3\u4e48\u4e32\u884c\u5316\u4ee5\u540e\u4e8b\u52a1\u7684\u987a\u5e8f\u662f\u7531\u5176\u4e2d\u4e00\u5bf9\u51b2\u7a81\u7684\u64cd\u4f5c\u7684\u5148\u540e\u6b21\u5e8f\u51b3\u5b9a\u7684\u3002\u54ea\u4e00\u4e2a\u4e8b\u52a1\u7684\u51b2\u7a81\u64cd\u4f5c\u5728\u524d\uff0c\u54ea\u4e00\u4e2a\u4e8b\u52a1\u4e32\u884c\u5316\u4ee5\u540e\u7684\u5148\u540e\u6b21\u5e8f\u5c31\u5728\u524d\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u9488\u5bf9\u7684\u662f\u540c\u4e00\u4e2a\u6570\u636e\u9879 Q. </p> <p><code>conflict equivalent &amp; conflict serializable</code></p> <p>If a schedule S can be transformed into a schedule S\u00b4  by a series of swaps of non-conflicting instructions, we say that S and S\u00b4 are conflict equivalent.  </p> <p>\u5982\u679c\u4e00\u4e2a\u65f6\u95f4\u8868 S \u53ef\u4ee5<code>\u901a\u8fc7\u4e00\u7cfb\u5217\u4e0d\u51b2\u7a81\u6307\u4ee4\u7684\u4ea4\u6362</code>\u8f6c\u6362\u4e3a\u65f6\u95f4\u8868 S'\uff0c\u6211\u4eec\u8bf4 S \u548c S \u662f\u51b2\u7a81\u7b49\u4ef7\u7684\u3002\uff08\u4ea4\u6362\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4\uff0c\u5f97\u5230\u7684\u662f\u51b2\u7a81\u7b49\u4ef7\u7684\u8c03\u5ea6\uff09 </p> <p>We say that a schedule S is conflict serializable if it is conflict equivalent to a serial schedule.  </p> <p>\u5982\u679c\u4e00\u4e2a\u8c03\u5ea6\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u90a3\u4e48\u5b83\u51b2\u7a81\u7b49\u4ef7\u4e8e\u4e32\u884c\u8c03\u5ea6</p> <p>example\uff1a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u4f8b\u5b50</p> <p></p> <p><code>\u6b64\u5904\u8bbf\u95ee\u4e0d\u540c\u7684\u6570\u636e\uff0cread\u548cwrite\u80fd\u591f\u4ea4\u6362</code></p> <p>example\uff1a\u4e0d\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u4f8b\u5b50</p> <p></p> <p><code>\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\uff0cread\u548cwrite\u4e0d\u80fd\u4ea4\u6362\uff0c\u51b2\u7a81</code></p>"},{"location":"DB/13.%20Transaction/#13322testing-for-serializability","title":"13.3.2.2Testing for Serializability","text":"<p>Consider some schedule of a set of transactions \\(T_1, T_2, \\ldots, T_n\\) </p> <p>Precedence graph\uff08\u524d\u9a71\u56fe\uff09 \u2014 a directed graph where the vertices are the transactions (names).  </p> <p>\u901a\u8fc7\u8003\u5bdf\u6240\u6709\u51b2\u7a81\u7684\u64cd\u4f5c\u5bf9\uff0c\u753b\u51fa\u4e00\u4e2a\u6709\u5411\u56fe\u3002 \u5982\u679c\u4e8b\u52a1\\(Ti\\)\u6709\u4e00\u4e2a\u64cd\u4f5c\u548c\\(Tj\\)\u7684\u67d0\u4e2a\u64cd\u4f5c\u51b2\u7a81\uff0c\u5982\u679c\\(Ti\\)\u7684\u8fd9\u4e2a\u64cd\u4f5c\u5728\\(Tj\\)\u7684\u5bf9\u5e94\u51b2\u7a81\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u90a3\u4e48\\(Ti\\)\u8fd9\u4e2a\u8282\u70b9\u5c31\u548c\\(Tj\\)\u8fd9\u4e2a\u8282\u70b9\u4e4b\u95f4\uff0c\u5b58\u5728\u4e00\u6761\\(Ti\\)\u6307\u5411\\(Tj\\)\u7684\u6709\u5411\u8fb9\u3002 </p> <p>\u5982\u679c\u627e\u5230\u73af\uff0c\u8bf4\u660e\u662f\u4e0d\u53ef\u4e32\u884c\u5316\u7684\u3002\u5426\u5219\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6392\u5e8f\uff08<code>\u5bfb\u627e\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u8bf4\u660e\u5f53\u524d\u4e8b\u52a1\u4e0d\u4e0e\u4efb\u4f55\u4e8b\u52a1\u4ea7\u751f\u51b2\u7a81\uff0c\u53ef\u4ee5\u4f18\u5148\u6267\u884c</code>\uff09\u3002</p> <p></p> <ol> <li> <p>A schedule is conflict serializable if and only if its precedence graph is acyclic.</p> <p>\u8c03\u5ea6\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u5f53\u4e14\u4ec5\u5f53\u524d\u9a71\u56fe\u662f\u65e0\u73af\u56fe</p> </li> <li> <p>\u5982\u679c\u6709\u5411\u56fe\u4e0d\u5b58\u5728\u73af\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4e8b\u52a1\u5c06\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u5e76\u4e14\u4e32\u884c\u5316\u4ee5\u540e\u8fd9\u4e9b\u4e8b\u52a1\u7684\u6267\u884c\u987a\u5e8f\u662f\u5bf9\u6709\u5411\u56fe\u8fdb\u884c<code>\u62d3\u6251\u6392\u5e8f</code>\u7684\u987a\u5e8f\u3002</p> </li> </ol> <p>Example</p> <p> </p> <ul> <li>T1 \u7684 readY \u548c T2 \u7684 writeY \u51b2\u7a81\uff0c\u7531\u4e8eT1\u7684readY\u9760\u524d\uff0c\u6240\u4ee5\u753b\u4e00\u6761\u4eceT1\u6307\u5411T2\u7684\u7ebf\u6bb5</li> <li>T1 \u7684 readZ \u548c T3 \u7684 writeZ \u51b2\u7a81\uff0c\u9700\u8981\u4e00\u6761\u4eceT1\u6307\u5411T3\u7684\u8fb9</li> <li> <p>\u2026\u2026</p> <p>\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff08<code>\u9009\u62e9\u5165\u5ea6\u4e3a0\u7684\u70b9</code>\uff09\uff0c\u5148\u9009\u62e9T1\uff0c\u7136\u540e\u5c06T1\u51fa\u53d1\u7684\u8fb9\u90fd\u5220\u9664\uff0c\u53ef\u4ee5\u53d1\u73b0T2\u548cT3\u7684\u5165\u5ea6\u90fd\u662f0\uff0c\u6b64\u65f6\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\u3002</p> </li> <li> <p>T1\uff0cT2\uff0cT3\uff0cT4</p> </li> <li>T1\uff0cT3\uff0cT2\uff0cT4</li> <li>T5\u53ef\u4ee5\u968f\u673a\u653e\u7f6e\uff0c\u4e94\u79cd\u60c5\u51b5\u3002\u6700\u540e\u6709 10 \u79cd\u8c03\u5ea6\u65b9\u5f0f\u3002</li> </ul>"},{"location":"DB/13.%20Transaction/#13323-view-serializability","title":"13.3.2.3 View Serializability","text":"<p>\u6761\u4ef6\u5982\u4e0b\uff1a</p> <p>1. \u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\u662f\uff1a\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u4e0e\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e4b\u95f4\uff0c\u8bfb\u5230\u5404\u4e2a\u6570\u636e\u7684\u521d\u59cb\u503c\u7684\u662f\u540c\u4e00\u4e9b\u4e8b\u52a1\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p> </p> <p>\u4ea4\u53c9\u8c03\u5ea6Schedule 3\u4e2d\uff0c\u8bfb\u53d6\u5230A\u7684\u521d\u59cb\u503c\u7684\u662fT1\uff0c\u8bfb\u53d6\u5230B\u7684\u521d\u59cb\u503c\u7684\u4e5f\u662fT1\uff1b</p> <p>\u800c\u5728\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\uff0c\u8bfb\u53d6\u5230A\u7684\u521d\u59cb\u503c\u7684\u662fT1\uff0c\u8bfb\u53d6\u5230B\u7684\u521d\u59cb\u503c\u7684\u4e5f\u662fT1\u3002</p> <p>2. \u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\u662f\uff1a\u5047\u8bbe\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\u7684\u4e8b\u52a1Ti\u6267\u884c\u4e86Read\uff08Q\uff09\u64cd\u4f5c\uff0c\u5e76\u4e14Q\u7684\u503c\u662f\u7531\u4e32\u884c\u8c03\u5ea6\u4e2d\u7684\u4e8b\u52a1Tj\u4ea7\u751f\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u4e2d\uff0c\u4e8b\u52a1Ti\u6267\u884c\u4e86Read\uff08Q\uff09\u64cd\u4f5c\uff0cQ\u7684\u503c\u4e5f\u5e94\u5f53\u662f\u5bf9\u5e94\u7684\u4e8b\u52a1Tj\u4ea7\u751f\u7684\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\u4ea4\u53c9\u8c03\u5ea6Schedule 3\u4e2d\uff0cT2\u4e8b\u52a1\u8bfb\u53d6\u4e86A\u7684\u503c\uff0cA\u7684\u503c\u662f\u7531T1\u4e8b\u52a1\u4ea7\u751f\u7684\uff1bT2\u4e8b\u52a1\u8bfb\u53d6\u4e86B\u7684\u503c\uff0cB\u7684\u503c\u662f\u7531T1\u4e8b\u52a1\u4ea7\u751f\u7684\u3002</p> <p>\u800c\u5728\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\uff0cT2\u4e8b\u52a1\u8bfb\u53d6\u4e86A\u7684\u503c\uff0cA\u7684\u503c\u662f\u7531T1\u4e8b\u52a1\u4ea7\u751f\u7684\uff1bT2\u4e8b\u52a1\u8bfb\u53d6\u4e86B\u7684\u503c\uff0cB\u7684\u503c\u662f\u7531T1\u4e8b\u52a1\u4ea7\u751f\u7684\u3002</p> <p>3. \u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u5fc5\u8981\u6761\u4ef6\u4e4b\u4e00\u662f\uff1a\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u4e0e\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e4b\u95f4\uff0c\u5199\u5165\u5404\u4e2a\u6570\u636e\u7684\u7ec8\u672b\u503c\u7684\u662f\u540c\u4e00\u4e9b\u4e8b\u52a1\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\u4ea4\u53c9\u8c03\u5ea6Schedule 3\u4e2d\uff0c\u5199\u5165A\u7684\u7ec8\u672b\u503c\u7684\u662fT2\uff0c\u5199\u5165B\u7684\u7ec8\u672b\u503c\u7684\u4e5f\u662fT2\uff1b</p> <p>\u800c\u5728\u5176\u5bf9\u5e94\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\uff0c\u5199\u5165A\u7684\u7ec8\u672b\u503c\u7684\u662fT2\uff0c\u5199\u5165B\u7684\u7ec8\u672b\u503c\u7684\u4e5f\u662fT2\uff1b</p> <p>\u4e0a\u8ff0\u4e09\u4e2a\u5fc5\u8981\u6761\u4ef6\u7ec4\u6210\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\u5145\u5206\u6761\u4ef6\u3002</p> <p><code>\u91cd\u8981\u7ed3\u8bba\uff1a\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u90fd\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u3002</code></p> <p> \u4e0a\u9762\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u4e0d\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u56e0\u4e3aT27\u4e0eT28\u4e4b\u95f4\u5b58\u5728\u73af\u3002</p> <p>\u4f46\u662f\uff0c\u4e0a\u9762\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\u3002\u5b83\u4e32\u884c\u5316\u5f97\u5230\u7684\u4e32\u884c\u8c03\u5ea6\u662fT27-&gt;T28-&gt;T29\u3002</p> <ul> <li>\u4ea4\u53c9\u8c03\u5ea6\u4e2dT27\u8bfb\u53d6Q\u7684\u521d\u59cb\u503c\uff0c\u4e32\u884c\u8c03\u5ea6\u4e2dT27\u8bfb\u53d6Q\u7684\u521d\u59cb\u503c</li> <li>\u53ea\u6709\u4e00\u4e2areadQ\u6ca1\u6709\u5f71\u54cd</li> <li>\u4ea4\u53c9\u8c03\u5ea6\u4e2dQ\u7684\u6700\u7ec8\u503c\u7531T29\u5199\u5165\uff0c\u4e32\u884c\u8c03\u5ea6\u4e2dQ\u7684\u6700\u7ec8\u503c\u4e5f\u7531T29\u5199\u5165</li> </ul> <p>\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u7684\u8be5\u4e32\u884c\u8c03\u5ea6\u6ee1\u8db3\u4e0a\u8ff0\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\u4e09\u4e2a\u6761\u4ef6\u3002</p>"},{"location":"DB/13.%20Transaction/#13324-other-notions-of-serializability","title":"13.3.2.4 Other Notions of Serializability","text":"<p>\u6709\u7684\u8c03\u5ea6\u65e2\u4e0d\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u53c8\u4e0d\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\uff0c\u4f46\u5b83\u662f\u53ef\u4e32\u884c\u5316\u7684\u3002</p> <p> </p> <ul> <li>\u4e0d\u662f\u51b2\u7a81\u53ef\u4ea4\u6362\uff0creadB\u548cwriteB\u51b2\u7a81</li> <li>\u4e0d\u662f\u89c6\u56fe\u53ef\u4e32\u884c\uff0c\u5728\u4e32\u884c\u4e2dT1\u5148\u8bfb\u5230B\uff0c\u4f46\u662f\u5728\u672c\u89c6\u56fe\u4e2dT5\u5148\u8bfb\u5230B</li> </ul> <p>\u7b49\u4ef7\u4e8e T1-T5.  </p> <p>\u52a0\u51cf\u64cd\u4f5c\u662f\u53ef\u7ed3\u5408\u7684\uff0c\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u4e8b\u52a1\u91cc\u5177\u4f53\u662f\u4ec0\u4e48\u64cd\u4f5c\u3002\u4f46\u6211\u4eec\u7684\u7b80\u5355\u6a21\u578b\u5bf9\u6b64\u4e0d\u52a0\u4ee5\u533a\u5206\u3002</p>"},{"location":"DB/13.%20Transaction/#134-recoverable-schedules","title":"13.4 Recoverable Schedules","text":"<p>Recoverable schedule(\u53ef\u6062\u590d\u8c03\u5ea6) </p> <p>\u2014 if a transaction \\(T_j\\) reads a data item previously written by a transaction \\(T_i\\) , then the commit operation of \\(T_i\\)  appears before the commit operation of \\(T_j\\).</p> <p>\u5982\u679c\u5728\u4e00\u4e2a\u8c03\u5ea6\u4e2d\uff0c\u4e8b\u52a1B\u8bfb\u53d6\u4e86\u4e8b\u52a1A\u5148\u524d\u5199\u5165\u7684\u6570\u636e\uff0c\u90a3\u4e48\u4e8b\u52a1A\u7684\u63d0\u4ea4\u64cd\u4f5c\uff0c\u51fa\u73b0\u5728\u4e8b\u52a1B\u4e4b\u524d\uff0c\u8fd9\u5c31\u79f0\u4e3a\u53ef\u6062\u590d\u8c03\u5ea6\u3002</p> <p>The following schedule (Schedule 11) is not recoverable if T9 commits immediately after the read. </p> <p>T9 \u8bfb\u53d6\u4e86T8\u5199\u5165\u7684\u6570\u636e\uff0c\u7136\u800c\uff0cT9\u7684\u63d0\u4ea4\u64cd\u4f5c\u5728T8\u4e4b\u524d\u3002\u5982\u679c\u4e4b\u540eT8\u8fdb\u884c\u4e86\u56de\u6eda\uff0c\u90a3\u4e48T9\u4e8b\u52a1\u5c06\u5411\u7528\u6237\u663e\u793a\u4e86\u4e0d\u4e00\u81f4\u7684\u6570\u636e\u5e93\u72b6\u6001\u3002\u8fd9\u5c31\u4f1a\u4ea7\u751f\u201c\u8bfb\u810f\u6570\u636e\u201d\u7684\u95ee\u9898\u3002</p> <p><code>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u7684\u810f\u6570\u636e\uff0c\u63d0\u4ea4\u6b21\u5e8f\u9700\u8981\u6709\u7ea6\u675f\uff0c\u8981\u5728\u88ab\u8bfb\u4e8b\u52a1\u7684\u540e\u9762\u63d0\u4ea4\u3002</code></p>"},{"location":"DB/13.%20Transaction/#1341-cascading-rollbacks","title":"13.4.1 Cascading Rollbacks","text":"<p>Cascading rollback(\u7ea7\u8054\u56de\u6eda)</p> <p>\u2013 a single transaction failure leads to a series of transaction rollbacks.  Consider the following schedule where none of the transactions has yet committed (so the schedule is recoverable)</p> <p>\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cT11\u8bfb\u53d6\u4e86T10\u5199\u5165\u7684\u503c\uff08\u810f\u6570\u636e\uff09\uff0cT12\u53c8\u8bfb\u53d6\u4e86T11\u5199\u5165\u7684\u503c\uff08\u810f\u6570\u636e.\u56e0\u6b64\uff0cT10\u53d1\u751f\u56de\u6eda\u540e\uff0cT11\u4e5f\u8981\u53d1\u751f\u56de\u6eda\uff0c\u8fc7\u540eT12\u4e5f\u8981\u53d1\u751f\u56de\u6eda\u3002</p> <p> </p> <p>Can lead to the undoing of a significant amount of work. </p> <p>\u6211\u4eec\u66f4\u5e0c\u671b\u7528\u975e\u7ea7\u8054\u7684\u6062\u590d\uff0c\u5426\u5219\u5f00\u9500\u592a\u5927\u3002</p> <p>\u5982\u4f55\u89e3\u51b3\uff1f\u7981\u6b62\u8bfb\u53d6\u810f\u6570\u636e</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u9700\u8981\u7b49\\(T_{10}\\)\u5b8c\u6210commit\uff0c\\(T_{11}\\)\u624d\u80fd\u6267\u884cRead\u64cd\u4f5c\u3002\u7f3a\u70b9\u662f\uff1a\u51cf\u5c0f\u4e86\u4e8b\u52a1\u6267\u884c\u7684\u541e\u5410\u91cf</p>"},{"location":"DB/13.%20Transaction/#1342-cascadeless-schedule","title":"13.4.2 Cascadeless schedule","text":"<p>Cascadeless schedules\uff08\u65e0\u7ea7\u8054\u8c03\u5ea6\uff09 </p> <p>\u2014 cascading rollbacks cannot occur; for each pair of transactions Ti and Tj such that Tj  reads a data item previously written by Ti, the commit operation of Ti  appears before the read operation of Tj.</p> <p>\u4e0d\u4f1a\u53d1\u751f\u7ea7\u8054\u56de\u6eda;\u5bf9\u4e8e\u6bcf\u5bf9\u4e8b\u52a1 Ti \u548c Tj\uff0c\u4f7f\u5f97 Tj \u8bfb\u53d6 Ti \u4e4b\u524d\u5199\u5165\u7684\u6570\u636e\u9879\uff0cTi \u7684\u63d0\u4ea4\u64cd\u4f5c\u51fa\u73b0\u5728 Tj \u7684\u8bfb\u53d6\u64cd\u4f5c\u4e4b\u524d\u3002</p> <p>Cascadeless schedules\uff08\u65e0\u7ea7\u8054\u8c03\u5ea6\uff09</p> <ul> <li> <p>\u4e0d\u80fd\u53d1\u751f\u7ea7\u8054\u56de\u6eda;</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u5bf9\u4e8b\u52a1 $Ti $\u548c \\(Tj\\)\uff0c\u4f7f\u5f97 $Tj \\(\u8bfb\u53d6 (Ti \\(\u4e4b\u524d\u5199\u5165\u7684\u6570\u636e\u9879\uff0c\\)Ti\\) \u7684\u63d0\u4ea4\u64cd\u4f5c\u51fa\u73b0\u5728\\) Tj $\u7684\u8bfb\u53d6\u64cd\u4f5c\u4e4b\u524d\u3002</p> </li> </ul> <p><code>Every cascadeless schedule is also recoverable \u6bcf\u4e2a\u65e0\u7ea7\u8054\u8ba1\u5212\u4e5f\u662f\u53ef\u6062\u590d\u7684</code></p> <p>\u6570\u636e\u5e93\u5fc5\u987b\u63d0\u4f9b\u4e00\u79cd\u673a\u5236\uff0c\u4f7f\u5f97\u6240\u6709\u53ef\u80fd\u7684\u65f6\u95f4\u8c03\u5ea6\u90fd\u662f\uff1a</p> <p>\u2460 \u51b2\u7a81\u6216\u89c6\u56fe\u53ef\u5e8f\u5217\u5316</p> <p>\u2461 \u53ef\u6062\u590d\u7684\uff0c\u6700\u597d\u662f\u975e\u7ea7\u8054\u8c03\u5ea6\u7684\u3002</p> <p>\u4ece\u800c\u9700\u8981\u5e76\u53d1\u63a7\u5236\u534f\u8bae\u6765\u4fdd\u8bc1\u53ef\u4e32\u884c\u5316</p> <p>\u5e76\u53d1\u63a7\u5236\u534f\u8bae\u5141\u8bb8\u5e76\u53d1\u8c03\u5ea6\uff0c\u4f46\u662f\u8981\u786e\u4fdd\u5e76\u53d1\u8c03\u5ea6\u662f\u51b2\u7a81\uff08\u6216\u89c6\u56fe\uff09\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u5e76\u4e14\u662f\u53ef\u6062\u590d\uff08\u6700\u597d\u662f\u65e0\u7ea7\u8054\u56de\u6eda\u7684\uff09\u3002</p> <p>\u5f31\u4e00\u81f4\u6027\u6c34\u5e73</p> <p>\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u613f\u610f\u63a5\u53d7\u8f83\u5f31\u7ea7\u522b\u7684\u4e00\u81f4\u6027\uff0c\u5141\u8bb8\u90e8\u5206\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u8c03\u5ea6\uff0c\u4ee5\u51cf\u5c11\u4ee3\u4ef7\u3002</p> <p>\u4f8b\u5982\uff0c\u60f3\u8981\u83b7\u5f97\u6240\u6709\u8d26\u6237\u7684\u5927\u81f4\u603b\u4f59\u989d\u7684\u53ea\u8bfb\u4ea4\u6613\uff1b</p> <p>\u53c8\u4f8b\u5982\uff0c\u4e3a\u67e5\u8be2\u4f18\u5316\u8ba1\u7b97\u7684\u6570\u636e\u5e93\u7edf\u8ba1\u6570\u636e\u53ef\u80fd\u662f\u8fd1\u4f3c\u7684\u3002</p> <p><code>Tradeoff accuracy for performance \u7528\u6b63\u786e\u6027\u6362\u53d6\u6027\u80fd</code></p>"},{"location":"DB/13.%20Transaction/#135-transaction-isolation-levels","title":"13.5 Transaction Isolation Levels","text":"<p>A database must provide a mechanism that will ensure that all possible schedules are </p> <ul> <li> <p>either conflict or view serializable, and   </p> <p>\u4fdd\u8bc1\u53ef\u4e32\u884c\u7684</p> </li> <li> <p>are recoverable and preferably cascadeless  </p> <p>\u4fdd\u8bc1\u53ef\u6062\u590d\u7684\uff08\u6700\u597d\u662f\u975e\u7ea7\u8054\uff09</p> </li> </ul> <p>\u6570\u636e\u5e93\u91cc\u63d0\u4f9b\u4e00\u79cd\u534f\u8bae\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u8981\u9075\u4ece\u534f\u8bae\uff0c\u9075\u4ece\u534f\u8bae\u4e0b\u4ea7\u751f\u7684\u8c03\u5ea6\u4e00\u5b9a\u662f\u53ef\u4e32\u884c\u3001\u53ef\u6062\u590d\u7684\u3002  \u8fd9\u662f\u5b8c\u5168\u7684\u9694\u79bb\uff0c\u4ee3\u4ef7\u6bd4\u8f83\u9ad8\u3002</p> <p>In SQL <code>set transaction isolation level serializable</code></p> <p>\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b\u3002</p> <ul> <li> <p>Serializable \u2014 default  </p> <p>\u610f\u5473\u7740\u56db\u79cd\u95ee\u9898\uff08\u5e7d\u7075\u95ee\u9898\u3001\u4e0d\u53ef\u91cd\u590d\u5ea6\u3001\u8bfb\u810f\u6570\u636e\u3001\u4e22\u5931\u4fee\u6539\uff09\u90fd\u4e0d\u80fd\u5b58\u5728\u3002</p> </li> <li> <p>Repeatable read \u2014 only committed records to be read, repeated reads of same record must return same value.  </p> <p>However, a transaction may not be serializable \u2013 it may find some records inserted by a transaction but not find others. <code>\u4e0d\u7ba1\u5e7d\u7075\u95ee\u9898\u3002</code></p> </li> <li> <p>Read committed \u2014 only committed records can be read, but successive reads of record may return different (but committed) values.  </p> <p>\u53ea\u8bfb\u522b\u7684\u4e8b\u52a1\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e</p> <p>\uff08\u4e0d\u5173\u5fc3\u5e7d\u7075\u95ee\u9898\uff0c\u4e5f\u4e0d\u5173\u5fc3\u4e0d\u53ef\u91cd\u590d\u8bfb\u95ee\u9898\uff0c\u4f46\u8981\u4fdd\u8bc1\u4e0d\u8bfb\u810f\u6570\u636e\uff09</p> </li> <li> <p>Read uncommitted \u2014 even uncommitted records may be read.  </p> <p>\u522b\u7684\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u66f4\u6539\u8fc7\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u8bfb\uff08\u8fde\u810f\u6570\u636e\u4e5f\u5141\u8bb8\u8bfb\uff09\u3002</p> </li> </ul> <p>Lower degrees of consistency useful for gathering approximate information about the database </p>"},{"location":"DB/13.%20Transaction/#136-concurrency-control-protocols","title":"13.6 Concurrency Control Protocols","text":"<p>\u901a\u8fc7\u4ec0\u4e48\u673a\u5236\u51b3\u5b9a\u4e8b\u52a1\u7684\u4e32\u884c\u6b21\u5e8f</p> <p>\u6bcf\u4e2a\u5e76\u53d1\u4e8b\u52a1\u90fd\u81ea\u89c9\u9075\u5b88\u8fd9\u4e2a\u534f\u8bae\uff0c\u90a3\u4e48\u5c31\u4f1a\u81ea\u53d1\u5f62\u6210\u4e00\u79cd\u76f8\u4e92\u7b49\u5f85\u5173\u7cfb\uff0c\u5f62\u6210\u4e00\u79cd\u8c03\u5ea6\uff0c\u800c\u8fd9\u79cd\u8c03\u5ea6\u53ef\u4ee5\u8bc1\u660e\u90fd\u662f\u53ef\u4e32\u884c\u7684\u3001\u53ef\u6062\u590d\u7684\u3002</p> <ul> <li> <p>Lock-Based Protocols \u57fa\u4e8e\u9501\u7684\u534f\u8bae</p> <ul> <li> <p>Lock on whole database vs lock on items  </p> <p>\u8bfb\u4e4b\u524d\u8981\u8bbf\u95ee\u4e00\u4e2a\u5171\u4eab\u9501\uff0c\u5199\u4e4b\u524d\u8981\u8bbf\u95ee\u4e00\u4e2a\u6392\u4ed6\u9501\uff0c\u51b2\u7a81\u4e86\u5c31\u8981\u7b49\u5f85\u3002\u901a\u8fc7\u9501\u5c31\u89c4\u5b9a\u4e86\u4e00\u4e2a\u6267\u884c\u7684\u6b21\u5e8f\u3002</p> <p>\u5171\u4eab\u9501\uff08\u8bfb\u9501\uff09\uff08S\u9501\uff09</p> <p>\u72ec\u5360\u9501\uff08\u5199\u9501\uff09\uff08X\u9501\uff09</p> </li> </ul> </li> <li> <p>Timestamp-Based  Protocols \u57fa\u4e8e\u65f6\u95f4\u6233\u7684\u534f\u8bae</p> <ul> <li> <p>Transaction timestamp assigned e.g. when a transaction begins   </p> <p><code>\u4e8b\u52a1\u6267\u884c\u65f6\u5206\u914d\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\u6267\u884c\u6b21\u5e8f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u3002</code></p> </li> <li> <p>Data items store two timestamps</p> <ul> <li>Read timestamp</li> <li>Write timestamp</li> </ul> </li> <li> <p>Timestamps are used to detect out of order accesses</p> </li> </ul> </li> <li> <p>Validation-Based  Protocols \u57fa\u4e8e\u9a8c\u8bc1\u7684\u534f\u8bae</p> <ul> <li> <p>Optimistic concurrency control \u5bf9\u5e76\u53d1\u63a7\u5236\u4fdd\u6301\u4e50\u89c2\u6001\u5ea6\u3002</p> </li> <li> <p>Low rate of conflicts among transactions</p> </li> <li> <p>Each transaction must go through 3 phases:  </p> </li> </ul> <p>Read phase -&gt; Validation phase -&gt; Write phase  </p> <p>\u8bbf\u95ee\u6570\u636e\uff0c\u6216\u8005\u4fee\u6539\u6570\u636e\u540e\uff0c\u5728\u8981\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u9a8c\u8bc1\u4e00\u4e0b\u548c\u5176\u4ed6\u4e8b\u52a1\u662f\u5426\u51b2\u7a81\u3002\uff08\u5728partially committed\u9636\u6bb5\uff09</p> </li> </ul>"},{"location":"DB/14.%20Concurrency%20Control/","title":"14. Concurrency Control","text":"<p> \u7ea6 6723 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 34 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Lock-Based Protocols\uff08\u57fa\u4e8e\u9501\u7684\u534f\u8bae\uff09</li> <li>Deadlock Handling \uff08\u6b7b\u9501\u5904\u7406\uff09</li> <li>Multiple Granularity \uff08\u591a\u7c92\u5ea6\uff09</li> <li>Insert and Delete Operations</li> <li>Multiversion Schemes \uff08\u591a\u7248\u672c\u673a\u5236\uff09</li> <li>timestamp-Based Protocols \uff08\u57fa\u4e8e\u65f6\u95f4\u6233\u7684\u534f\u8bae\uff09</li> <li>Validation-Based Protocols \uff08\u57fa\u4e8e\u6709\u6548\u6027\u7684\u534f\u8bae\uff09</li> </ul>"},{"location":"DB/14.%20Concurrency%20Control/#141-lock-based-protocols","title":"14.1 Lock-Based Protocols","text":"<p>\u57fa\u4e8e\u9501\u7684\u5e76\u53d1\u63a7\u5236</p> <p>A lock is a mechanism to control concurrent access to a data item</p> <p>\u9501\u662f\u4e00\u79cd\u63a7\u5236\u5bf9\u6570\u636e\u9879\u7684\u5e76\u53d1\u8bbf\u95ee\u7684\u673a\u5236</p> <ul> <li> <p>exclusive(X) \u6392\u4ed6\u9501</p> <p>Data item can be both read as well as written. <code>X-lock is requested using lock-X instruction</code>.</p> </li> <li> <p>shared(X) \u5171\u4eab\u9501</p> <p>Data item can only be read. <code>S-lock is requested using lock-S instruction</code>.</p> </li> </ul> <p>\u8981\u5199\u4e00\u4e2a\u6570\u636e\uff0c\u5148\u7533\u8bf7\u83b7\u5f97 X \u9501\uff1b\u8981\u8bfb\u4e00\u4e2a\u6570\u636e\uff0c\u5148\u7533\u8bf7\u83b7\u5f97 S \u9501\u3002 </p> <p>\u8bbf\u95ee\u7ed3\u675f\u540e\u91ca\u653e\u8fd9\u4e2a\u9501\u3002</p> <p><code>\u8bbf\u95ee\u6570\u636e\u4e4b\u524d\u5fc5\u987b\u83b7\u5f97\u5bf9\u5e94\u7684\u9501\uff0c\u5982\u679c\u9501\u51b2\u7a81\u4e86\u9700\u8981\u7b49\u5f85\u3002</code></p> <p></p>"},{"location":"DB/14.%20Concurrency%20Control/#1411-the-two-phase-locking-protocol","title":"14.1.1 The Two-Phase Locking Protocol","text":"<p>\u4e8b\u52a1\u7684\u52a0\u9501\u548c\u51cf\u9501\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\u3002  </p> <ul> <li> <p>Phase 1: Growing Phase (\u589e\u957f\u9636\u6bb5)</p> <ul> <li>transaction may obtain locks </li> <li>transaction may not release locks</li> </ul> </li> <li> <p>Phase 2: Shrinking Phase(\u7f29\u51cf\u9636\u6bb5)</p> <ul> <li> <p>transaction may release locks</p> </li> <li> <p>transaction may not obtain locks  </p> </li> </ul> <p>\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u5f00\u59cb\u91ca\u653e\u9501\uff0c\u5c31\u4e0d\u80fd\u518d\u52a0\u9501\u4e86\u3002</p> </li> </ul> <p>\u4e8b\u52a1\u4e24\u4e2a\u9636\u6bb5\u7684\u5206\u754c\u7ebf(lock point), \u5373\u83b7\u5f97\u4e86<code>\u6700\u540e\u4e00\u4e2a\u9501</code>\uff08\u5b8c\u6210\u83b7\u5f97\u8fd9\u4e2a\u52a8\u4f5c\uff09\u7684\u65f6\u95f4\u70b9\u3002 \u8fd9\u6837\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u6709\u4e00\u4e2a lock point, \u6309\u7167\u8fd9\u4e2a\u65f6\u95f4\u6392\u5e8f\u5373\u53ef\u5f97\u5230\u4e32\u884c\u5316\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p> </p> <p>Two-Phase Locking Protocol assures serializability.</p> <p><code>It can be proved that the transactions can be serialized in the order of their lock points.</code> </p> <p>\u5b9a\u7406\uff1a  \u4e00\u4e9b\u4e8b\u52a1\u53ef\u4ee5\u6309\u7167\u5176lock point\u7684\u987a\u5e8f\uff0c\u8fdb\u884c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u8c03\u5ea6\u3002</p> <p><code>\u53ef\u4ee5\u6309 lock points \u4e32\u884c\u5316\uff0c\u4f46\u4e0d\u662f\u53ea\u80fd\u6309\u7167\u8fd9\u4e48\u4e32\u884c\u5316</code></p> <p>\u8bc1\u660e\uff1a\u5982\u679c\u5728\u524d\u9a71\u56fe\u4e2d\\(Ti\\)\u5bf9(\\(Tj\\)\\)\u6709\u4e00\u6761\u6307\u5411\u7684\u6709\u5411\u8fb9\uff0c\u90a3\u4e48\\(Ti\\)\u7684lock point\u4e00\u5b9a\u5c0f\u4e8e(\\(Tj\\)\\)\u7684lock point\u3002\u56e0\u4e3a\uff0c\u5982\u679c\\(Ti\\)\u5bf9(\\(Tj\\)\\)\u6709\u4e00\u6761\u6307\u5411\u7684\u6709\u5411\u8fb9\uff0c\u90a3\u4e48\\(Ti\\)\u548c\\(Tj\\)\u4e4b\u95f4\u80af\u5b9a\u6709\u4e00\u5bf9\u51b2\u7a81\u7684\u64cd\u4f5c\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\u3002</p> <p>\u53ea\u6709\\(Ti\\)\u5c06\u8fd9\u4e2a\u6570\u636e\u7684\u9501\u653e\u6389\u540e\uff0c(\\(Tj\\)\\)\u624d\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u6570\u636e\u52a0\u9501\u3002\u7531\u4e8elock point\u8fc7\u540e\uff0c\u4e8b\u52a1\u4e0d\u4f1a\u518d\u52a0\u9501\uff0c\u56e0\u6b64\u6b64\u65f6\\(Ti\\)\u653e\u9501\u4e00\u5b9a\u5904\u4e8eti lock point\u4e4b\u540e\uff0c\\(Tj\\)\u52a0\u9501\u4e00\u5b9a\u5904\u4e8e\\(Tj\\) lock point\u4e4b\u524d\u3002\u56e0\u6b64\uff0cti\u7684lock point \u4e00\u5b9a\u5c0f\u4e8e\\(Tj\\)\u7684lock point\u3002</p> <p>\u56e0\u6b64\uff0c\u5047\u8bbe\u524d\u9a71\u56fe\u4e2d\u6709\u73af\uff0c\u90a3\u4e48\u5c31\u8868\u660elock point\u7684\u5173\u7cfb\u4e3aT1lock point &lt; T2lock point &lt;\u2026&lt; Tn lock point &lt; T1lock point\u3002</p> <p>\u5f97\u5230T1lock point &lt; T1lock point\uff0c\u77db\u76fe\u3002</p> <p>\u56e0\u6b64\u8fd9\u4e9b\u4e8b\u52a1\u7684\u524d\u9a71\u56fe\u4e2d\u4e00\u5b9a\u6ca1\u6709\u73af\u3002\u56e0\u6b64\u8fd9\u4e9b\u4e8b\u52a1\u53ef\u4ee5\u8fdb\u884c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u8c03\u5ea6\uff08\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\uff09\u3002</p> <p>\\(OP_j\\) block operation \\(OP_i\\)\uff0c \\(OP_j\\)\u5148\u5bf9D\u8fdb\u884c\u4e0a\u9501\uff0c\u5728\\(OP_j\\)\u5b8c\u6210\u89e3\u9501\u4e4b\u540e\uff0c\u624d\u80fd\u6267\u884c\\(OP_i\\)\u7684\u4e0a\u9501\u64cd\u4f5c\uff0c\u6240\u4ee5\\(T_j\\)\u7684lock point\u65e9\u4e8e\\(T_i\\)\u7684lock point</p> <p><code>\u4e0a\u9762\u57fa\u672c\u7684\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u65e0\u6cd5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u53ef\u6062\u590d\u6027(\u8981\u6c42\u4e0d\u80fd\u8bfb\u53d6\u810f\u6570\u636e)</code></p> <p>Extensions to <code>basic two-phase locking</code>\uff08\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\uff09 needed to ensure recoverability of freedom from cascading roll-back</p> <p>\u6269\u5c55\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\uff0c\u4ee5\u786e\u4fdd\u4ece\u7ea7\u8054\u56de\u6eda\u4e2d\u6062\u590d\u81ea\u7531</p> <ul> <li> <p>Strict two-phase locking\uff08\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\uff09: </p> <p>a transaction must hold all its exclusive locks till it commits/aborts. </p> <p><code>\u6240\u6709\u7684X\u9501\u9700\u8981\u5728\u4e8b\u52a1\u5373\u5c06\u63d0\u4ea4\u6216\u8005\u505c\u6b62\u65f6\u624d\u80fd\u89e3\u9501</code></p> <p>Ensures recoverability and avoids cascading roll-backs.  </p> <p>X \u9501\u52a0\u7684\u65f6\u95f4\u66f4\u957f\uff0cX\u9501\u8981\u5230\u4e8b\u52a1\u5373\u5c06\u63d0\u4ea4\u6216\u8005\u5373\u5c06\u56de\u6eda\u7684\u65f6\u5019\u518d\u653e\u5f00\uff0c\u4ee5\u9632\u6b62\u8bfb\u810f\u6570\u636e\u7684\u95ee\u9898\u3002</p> <p>\u597d\u5904\uff1a\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\uff0c\u9632\u6b62\u8bfb\u810f\u6570\u636e\u7684\u95ee\u9898\u3002</p> <p><code>\u574f\u5904\uff1a\u4ee3\u4ef7\u662fX\u9501\u7684\u65f6\u95f4\u66f4\u957f\uff0c\u5176\u4ed6\u4e8b\u52a1\u7b49\u5f85\u7684\u65f6\u95f4\u53d8\u957f\uff0c\u4f1a\u964d\u4f4e\u5e76\u53d1\u5ea6</code>\u3002</p> </li> <li> <p>Rigorous two-phase locking\uff08\u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\uff09: </p> <p>a transaction must hold all locks till commit/abort. </p> <p><code>\u6240\u6709\u7684\u9501\uff08S\u9501\u548cX\u9501\uff09\u90fd\u9700\u8981\u5728\u4e8b\u52a1\u5373\u5c06\u63d0\u4ea4\u6216\u8005\u505c\u6b62\u65f6\u624d\u80fd\u91ca\u653e</code></p> <p>transactions can be serialized in the order in which they commit.  </p> <p>\u6240\u6709\u9501\u90fd\u8981\u5230\u5373\u5c06\u63d0\u4ea4\u6216\u8005\u5373\u5c06\u56de\u6eda\u7684\u65f6\u5019\u518d\u653e\u5f00\u3002</p> </li> </ul> <p><code>Two-phase locking is not a necessary condition for serializability.</code></p> <p>\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u662f\u53ef\u4e32\u884c\u5316\u7684\u5145\u5206\u6761\u4ef6</p> <p>\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u4e0d\u662f\u53ef\u4e32\u884c\u5316\u7684\u5fc5\u8981\u6761\u4ef6</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u9075\u5faa\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u4e00\u5b9a\u80fd\u5f97\u5230\u53ef\u4e32\u884c\u5316\u7684\u4e8b\u52a1\uff0c\u4f46\u662f\u53ef\u4e32\u884c\u5316\u7684\u4e8b\u52a1\uff0c\u5e76\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u3002</p> <p>eg: <code>\u6240\u6709read/write\u64cd\u4f5c\u9488\u5bf9\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u6b64\u65f6\u53ef\u4ee5\u4efb\u610f\u4e0a\u9501\u89e3\u9501\uff0c\u4e0d\u6ee1\u8db3\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae</code></p> <p><code>\u4ee5\u4e0b\u662fread/write\u64cd\u4f5c\u9488\u5bf9\u76f8\u540c\u7684\u5bf9\u8c61</code></p> <p></p> <p>\u8fd9\u4e9b\u4e8b\u52a1\u7684\u524d\u9a71\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u56e0\u6b64\uff0c\u8fd9\u4e9b\u4e8b\u52a1\u53ef\u4ee5\u6309\u7167T3-&gt;T1-&gt;T2\u8fdb\u884c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u8c03\u5ea6\u3002</p> <p>\u8fd9\u4e9b\u4e8b\u52a1\u7684\u52a0\u9501\u4e0e\u653e\u9501\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\uff0cT1\u4e8b\u52a1\u653e\u9501\u4e4b\u540e\uff0c\u53c8\u8fdb\u884c\u4e86\u52a0\u9501\u64cd\u4f5c\u3002\u56e0\u6b64\uff0cT1\u4e8b\u52a1\u4e0d\u6ee1\u8db3\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u3002<code>\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u8981\u6c42\u53ea\u80fd\u5b58\u5728\u589e\u957f\u9636\u6bb5\u548c\u7f29\u51cf\u9636\u6bb5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u4e8b\u52a1\u5185unlock\u4e4b\u540e\u4e0d\u80fd\u518d\u6b21lock</code></p> <p>\u4e8b\u52a1\u6ee1\u8db3\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u662f\u53ef\u4ee5\u8fdb\u884c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u8c03\u5ea6\u7684\u5145\u5206\u6761\u4ef6\uff0c\u800c\u4e0d\u662f\u5fc5\u8981\u6761\u4ef6\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#1412-2pl---proof","title":"14.1.2 2PL - Proof","text":"<ul> <li> <p>Proof by Contradiction  </p> <p>\u5982\u679c\u6709 \\(T_i\\)-&gt;\\(Tj\\) \u7684\u6709\u5411\u8fb9\uff0c\u90a3 \\(T_i\\) \u7684 lockpoint \u4e00\u5b9a\u5c0f\u4e8e \\(Tj\\).  </p> <p>\\(T_i\\)-&gt;\\(Tj\\) \u80af\u5b9a\u6709\u4e00\u4e2a\u51b2\u7a81\u7684\u8bbf\u95ee\uff08\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\uff09\u90a3 \\(Tj\\) \u5728\u83b7\u5f97\u9501\u7684\u65f6\u5019\\(T_i\\)\u5df2\u7ecf\u653e\u9501\u4e86\uff0c\u5f97\u8bc1\u3002  </p> </li> <li> <p>Proof by Induction  </p> <p>\u53ea\u9700\u8bc1\u660e: Lock point \u6700\u5c0f\u7684\u4e8b\u52a1\uff0c\u53ef\u4ee5\u65e0\u969c\u788d\u5730\u4ea4\u6362\u5230\u8c03\u5ea6\u6700\u524d\u3002 </p> <p>\u5047\u5982\u6709\u4e8b\u52a1\u62e6\u4f4f\u4ed6\u4e86\uff0c\u8bc1\u660e\u8fd9\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u3002\uff08\u4e0e lock point \u6700\u5c0f\u77db\u76fe\uff09  </p> </li> </ul> <p>\\(OP_j\\) block operation \\(OP_i\\)\uff0c \\(OP_j\\)\u5148\u5bf9D\u8fdb\u884c\u4e0a\u9501\uff0c\u5728\\(OP_j\\)\u5b8c\u6210\u89e3\u9501\u4e4b\u540e\uff0c\u624d\u80fd\u6267\u884c\\(OP_i\\)\u7684\u4e0a\u9501\u64cd\u4f5c\uff0c\u6240\u4ee5\\(T_j\\)\u7684lock point\u65e9\u4e8e\\(T_i\\)\u7684lock point</p>"},{"location":"DB/14.%20Concurrency%20Control/#1413-lock-conversions","title":"14.1.3 Lock Conversions","text":"<p>\u5e26\u6709\u9501\u8f6c\u6362\u7684\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff1a</p> <p>\u6709\u4e9b\u65f6\u5019\uff0c\u8bbf\u95ee\u6570\u636e\u5e93\u6570\u636e\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5148\u8bfb\u6570\u636e\uff0c\u518d\u4fee\u6539\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u8bfb\u53d6\u6570\u636e\u52a0\u4e0aS\u9501\uff0c\u4fee\u6539\u6570\u636e\u5148\u653e\u6389S\u9501\uff0c\u518d\u52a0\u4e0aX\u9501\uff0c\u5c31\u4e0d\u6ee1\u8db3\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u5bfc\u81f4\u4e8b\u52a1\u4e4b\u95f4\u53ef\u80fd\u4e0d\u80fd\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u3002\u5047\u5982\u4e00\u5f00\u59cb\u5c31\u52a0\u4e0aX\u9501\uff0c\u53c8\u4f1a\u964d\u4f4e\u5e76\u53d1\u5ea6\u3002</p> <p><code>\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u4e00\u5f00\u59cb\u52a0\u4e0aS\u9501\uff0c\u7b49\u5230\u8981\u4fee\u6539\u6570\u636e\u65f6\uff0c\u5c06S\u9501\u5347\u7ea7\u4e3aX\u9501\u3002</code></p> <p>Two-phase locking with lock conversions:</p> <ul> <li>First Phase:        \u8fdb\u884c\u52a0\u9501\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u9501\u5347\u7ea7\u64cd\u4f5c\u3002<ul> <li>can acquire a lock-S or lock-X on a data item</li> <li><code>can convert a lock-S to a lock-X (lock-upgrade*)</code></li> </ul> </li> <li>Second Phase:   \u8fdb\u884c\u653e\u9501\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u9501\u964d\u7ea7\u64cd\u4f5c\u3002<ul> <li>can release a lock-S or lock-X</li> <li><code>can convert a lock-X to a lock-S (lock-downgrade*)</code></li> </ul> </li> </ul> <p>\u5e26\u6709\u9501\u8f6c\u6362\u7684\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\u6309\u7167lock point\u6392\u5e8f\uff0c\u662f\u53ef\u4ee5\u5b9e\u73b0\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u8c03\u5ea6\u7684\u3002</p> <p><code>\u4f8b\u5982Ti\u53d1\u751f\u5728Tj\u4e4b\u524d\uff0c\u53ea\u6709Ti\u7684\u9501\u53d1\u751f\u964d\u7ea7\u6216\u8005\u91ca\u653e\u540e\uff0cTj\u624d\u80fd\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u9501\u5347\u7ea7\u6216\u8005\u52a0\u9501\uff0c\u8fd9\u6837Ti\u7684lock point\u5c31\u5c0f\u4e8eTj\u7684lock point</code></p> <p>This protocol assures serializability.</p> <p>\u7533\u8bf7\u54ea\u4e2a\u9501\u662f\u7531\u6570\u636e\u5e93\u5185\u90e8\u7ba1\u7406\u51b3\u5b9a\uff0c\u4e0d\u662f\u7531\u7a0b\u5e8f\u5458\u663e\u793a\u8c03\u7528\u3002\uff08\u81ea\u52a8\u52a0\u9501\uff09</p> <p>\u5982\u679c\u5df2\u7ecf\u6709\u9501\u4e86\uff0c\u76f4\u63a5\u8bfb\uff1b\u5426\u5219\u7533\u8bf7\u8bfb\u9501\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#142-implementation-of-locking","title":"14.2 Implementation of Locking","text":"<p>A lock manager can be implemented as a separate process to which transactions send lock and unlock requests.  </p> <p>\u9501\u7ba1\u7406\u5668\u53ef\u4ee5\u4f5c\u4e3a\u4e8b\u52a1\u53d1\u9001\u9501\u5b9a\u548c\u89e3\u9501\u8bf7\u6c42\u7684\u5355\u72ec\u8fdb\u7a0b\u6765\u5b9e\u73b0</p> <p>\u9501\u7ba1\u7406\u5668\u901a\u8fc7\u53d1\u9001\u9501\u6388\u4e88\u6d88\u606f\uff08\u6216\u5728\u6b7b\u9501\u7684\u60c5\u51b5\u4e0b\u8981\u6c42\u4e8b\u52a1\u56de\u6eda\u7684\u6d88\u606f\uff09\u6765\u56de\u590d\u9501\u8bf7\u6c42 \u8bf7\u6c42\u4e8b\u52a1\u5c06\u7b49\u5f85\uff0c\u76f4\u5230\u5176\u8bf7\u6c42\u5f97\u5230\u54cd\u5e94</p> <p>\u9501\u7ba1\u7406\u5668\u7ef4\u62a4\u4e00\u4e2a\u79f0\u4e3a<code>\u9501\u8868(lock table)</code>\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u8bb0\u5f55\u5df2\u6388\u4e88\u7684\u9501\u548c\u5f85\u5904\u7406\u7684\u8bf7\u6c42</p> <p>\u9501\u5b9a\u8868\u901a\u5e38\u4f5c\u4e3a\u5185\u5b58\u4e2d\u7684\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u8be5\u54c8\u5e0c\u8868\u6839\u636e\u88ab\u9501\u5b9a\u7684\u6570\u636e\u9879\u7684\u540d\u79f0\u7f16\u5236\u7d22\u5f15</p>"},{"location":"DB/14.%20Concurrency%20Control/#1421-lock-table","title":"14.2.1 Lock Table","text":"<p>Lock table records granted locks and waiting requests. </p> <p>\u9501\u5b9a\u8868\u8bb0\u5f55\u5df2\u6388\u4e88\u7684\u9501\u5b9a\u548c\u7b49\u5f85\u8bf7\u6c42</p> <p>\u9501\u5b9a\u8868\u8fd8\u8bb0\u5f55\u6388\u4e88\u6216\u8bf7\u6c42\u7684\u9501\u5b9a\u7c7b\u578b</p> <p>\u65b0\u8bf7\u6c42\u5c06\u6dfb\u52a0\u5230\u6570\u636e\u9879\u8bf7\u6c42\u961f\u5217\u7684\u672b\u5c3e\uff0c\u5982\u679c\u8be5\u8bf7\u6c42\u4e0e\u6240\u6709\u65e9\u671f\u9501\u517c\u5bb9\uff0c\u5219\u6388\u4e88\u65b0\u8bf7\u6c42 \u89e3\u9501\u8bf7\u6c42\u4f1a\u5bfc\u81f4\u8bf7\u6c42\u88ab\u5220\u9664\uff0c\u5e76\u68c0\u67e5\u540e\u7eed\u8bf7\u6c42\u4ee5\u67e5\u770b\u5b83\u4eec\u73b0\u5728\u662f\u5426\u53ef\u4ee5\u6388\u4e88</p> <p>\u5982\u679c\u4e8b\u52a1\u4e2d\u6b62\uff0c\u5219\u5220\u9664\u4e8b\u52a1\u7684\u6240\u6709\u7b49\u5f85\u8bf7\u6c42\u6216\u5df2\u6388\u4e88\u8bf7\u6c42\uff08<code>\u4e5f\u5c31\u662f\u91ca\u653e\u6240\u6709\u7684\u9501</code>\uff09\u3002\u9501\u7ba1\u7406\u5668\u53ef\u4ee5\u4fdd\u7559\u6bcf\u4e2a\u4e8b\u52a1\u6301\u6709\u7684\u9501\u5217\u8868\uff0c\u4ee5\u6709\u6548\u5730\u5b9e\u73b0\u8fd9\u4e00\u70b9</p> <p>\u6bcf\u4e2a\u8bb0\u5f55\u7684 id \u53ef\u4ee5\u653e\u8fdb\u54c8\u5e0c\u8868\u3002  </p> <p><code>\u5982\u8fd9\u91cc\u8bb0\u5f55 123, T1\u3001T8 \u83b7\u5f97\u4e86 S \u9501\uff0c\u4f46 T2 \u5728\u7b49\u5f85\u83b7\u5f97 X \u9501\u3002</code> </p> <p>T1: lock-X(D) \u901a\u8fc7 D \u7684 id \u627e\u5230\u54c8\u5e0c\u8868\u4e0a\u7684\u9879\uff0c\u5728\u5bf9\u5e94\u9879\u4e0a\u589e\u52a0\u3002\u6839\u636e\u662f\u5426\u76f8\u5bb9\u51b3\u5b9a\u662f\u83b7\u5f97\u9501\u8fd8\u662f\u7b49\u5f85\u3002  </p> <p>unlock \u7c7b\u4f3c\uff0c\u5148\u627e\u5230\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u62ff\u6389\u5bf9\u5e94\u7684\u9879\u3002\u540c\u65f6\u770b\u540e\u7eed\u7684\u9879\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002</p> <p><code>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1 commit, \u9700\u8981\u653e\u6389\u6240\u6709\u7684\u9501\uff0c\u6211\u4eec\u9700\u8981\u53bb\u627e\u3002\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u4e8b\u52a1\u7684\u8868\uff0c\u6807\u660e\u6bcf\u4e2a\u4e8b\u52a1\u6240\u7528\u7684\u9501\u3002</code></p>"},{"location":"DB/14.%20Concurrency%20Control/#1422-deadlock-handling","title":"14.2.2 Deadlock Handling","text":"<p>System is deadlocked if there is a set of transactions such that every transaction in the set is waiting for another transaction in the set.</p> <p>\u5982\u679c\u5b58\u5728\u4e00\u7ec4\u4e8b\u52a1\uff0c\u4f7f\u5f97\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u5728\u7b49\u5f85\u96c6\u5408\u4e2d\u7684\u53e6\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5219\u7cfb\u7edf\u5c06\u6b7b\u9501\u3002</p> <p>Two-phase locking does not ensure freedom from deadlocks.</p> <p></p> <p>\u7531\u4e8e\u8981\u9075\u5faa<code>\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae</code>\uff0c\u56e0\u6b64T1\u7ed9A\u52a0\u9501\u4e86\u4ee5\u540e\uff0c\u5728\u6ca1\u6709\u7ed9B\u52a0\u9501\u4e4b\u524d\uff0c\u4e0d\u4f1a\u5c06A\u7684\u9501\u653e\u6389\uff1b T2 \u7ed9B\u52a0\u9501\u4e86\u4ee5\u540e\uff0c\u5728\u6ca1\u6709\u7ed9A\u52a0\u9501\u4e4b\u524d\uff0c\u4e0d\u4f1a\u5c06\u8fd9B\u7684\u9501\u653e\u6389\uff1b</p> <p>\u56e0\u6b64\uff0c\u4ea7\u751f\u4e86\u4e92\u76f8\u7b49\u5f85\uff0c\u7136\u800c\u6b64\u65f6T1\u4e0d\u4f1a\u628aA\u7684\u9501\u653e\u6389\uff0cT2\u4e5f\u4e0d\u4f1a\u628aB\u7684\u9501\u653e\u6389\uff0c\u4ece\u800c\u4e92\u76f8\u7b49\u5f85\u662f\u65e0\u9650\u5faa\u73af\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a1. Deadlock prevention 2. Timeout-Based Schemas</p> <p><code>Deadlock prevention protocols(\u6b7b\u9501\u9884\u9632\u534f\u8bae)</code> ensure that the system will never enter into a deadlock state. </p> <p>Some prevention strategies:</p> <ul> <li> <p>Require that each transaction locks all its data items before it begins execution (predeclaration).  </p> <p><code>\u6267\u884c\u524d\u4e00\u6b21\u6027\u83b7\u5f97\u6240\u6709\u9501(\u5728\u6267\u884c\u4e4b\u524d\u9884\u5148\u77e5\u9053\u9700\u8981\u7684\u9501)</code>\u3002</p> <p>\u4e00\u4e2a\u4e8b\u52a1\u8981\u8fdb\u884c\uff0c\u7533\u8bf7\u7684\u9501\u8981\u4e48\u5168\u90e8\u7ed9\u8fd9\u4e2a\u4e8b\u52a1\uff0c\u8ba9\u8fd9\u4e2a\u4e8b\u52a1\u8fdb\u884c\uff0c\u8981\u4e48\u4e00\u4e2a\u90fd\u4e0d\u7ed9\u8fd9\u4e2a\u4e8b\u52a1\uff0c\u8ba9\u8fd9\u4e2a\u4e8b\u52a1\u4e0d\u8981\u8fdb\u884c\uff0c\u9632\u6b62\u4e0e\u5176\u4ed6\u4e8b\u52a1\u5f62\u6210\u6b7b\u9501\u3002</p> </li> <li> <p>Impose partial ordering of all data items and require that a transaction can lock data items only in the order specified by the partial order (graph-based protocol).  </p> <p><code>\u5bf9\u6570\u636e\u8bbf\u95ee\u89c4\u5b9a\u4e00\u79cd\u6b21\u5e8f</code>\u3002\u6bd4\u5982\u89c4\u5b9a\u5fc5\u987b\u5148\u62ff\u5496\u5561\u518d\u62ff\u5496\u5561\u4f34\u4fa3\u3002  </p> <p>\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u89c4\u5b9a\u4e00\u79cd\u6b21\u5e8f\uff08\u504f\u5e8f\u96c6\uff09\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u4ea7\u751f\u6b7b\u9501\uff08\u5faa\u73af\u7b49\u5f85\uff09\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e24\u4e2a\u4e8b\u52a1\uff1a</p> <p>T1: A-50 B+50</p> <p>T2: B-10 A+10</p> <p>\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4f5c\uff1a</p> <p>T1: A-50 B+50</p> <p>T2: A+10 B-10</p> <p>\u8fd9\u6837\uff0c\u53ef\u4ee5\u964d\u4f4e\u51fa\u73b0\u6b7b\u9501\u7684\u6982\u7387\u3002<code>\u89c4\u5b9a\u5148\u8bbf\u95eeA\uff0c\u518d\u8bbf\u95eeB\u3002T1\u4e8b\u52a1\u5148\u7ed9A\u4e0a\u9501\uff0c\u6b64\u65f6T2\u4e8b\u52a1\u5c06\u65e0\u6cd5\u6267\u884c\uff0c\u77e5\u9053T1\u4e8b\u52a1\u5b8c\u6210\u5bf9B\u4e0a\u9501\uff0c\u5bf9A\uff0cB\u90fd\u89e3\u9501\u4e4b\u540e\uff0c\u624d\u6267\u884c\u4e8b\u52a1B</code></p> </li> </ul> <p>timeout-Based Schemes:  </p> <ul> <li> <p><code>a transaction waits for a lock only for a specified amount of time</code>. After that, the wait times out and the transaction is rolled back.   </p> <p>\u4e8b\u52a1\u4ec5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5185\u7b49\u5f85\u9501\u5b9a\u3002\u7b49\u5f85\u8d85\u65f6\uff0c\u4e8b\u52a1\u5c06\u56de\u6eda\u3002  </p> </li> <li> <p>thus deadlocks are not possible.  </p> </li> <li> <p>simple to implement; but starvation is possible. Also difficult to determine good value of the timeout interval.  </p> <p>\u65f6\u957f\u4e0d\u597d\u89c4\u5b9a\u3002\u4f46\u53ef\u80fd\u6709\u4e8b\u52a1\u8001\u662f\u7533\u8bf7\u4e0d\u5230\u81ea\u5df1\u7684\u9501\u3002</p> </li> </ul>"},{"location":"DB/14.%20Concurrency%20Control/#1423-deadlock-detection","title":"14.2.3 Deadlock Detection","text":"<p>\u5b9a\u671f\u68c0\u67e5\u6570\u636e\u5e93\u5185\u662f\u5426\u6709\u6b7b\u9501\uff0c\u5982\u679c\u6709\u5c31\u9009\u62e9\u4e00\u4e2a\u4e8b\u52a1\u5c06\u5176\u56de\u6eda\u3002  </p> <p>wait-for graph</p> <p>\u8bf7\u6ce8\u610f\uff1a\u6b64\u5904\u51fa\u73b0\u4e86\u7b2c\u4e8c\u79cd\u7c7b\u578b\u7684\u56fe</p> <ul> <li><code>\u524d\u9a71\u56fe\uff1aTi-&gt;Tj\u8868\u793aTi\u9700\u8981\u5728Tj\u4e4b\u524d\u5b8c\u6210\uff0c\u5bf9\u5e94\u6709lock-point Ti\u5c0f\u4e8eTj</code></li> <li><code>\u7b49\u5f85\u56fe\uff1aTi-&gt;Tj\u8868\u793aTi\u5728\u7b49\u5f85Tj\uff0c\u4e5f\u5c31\u662f\u8bf4Tj\u9700\u8981\u5728Ti\u4e4b\u524d\u5b8c\u6210</code></li> </ul> <p>\u6b7b\u9501\u68c0\u6d4b\uff1a</p> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\uff0c\u6570\u636e\u5e93\u540e\u53f0\u4f1a\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5b9a\u671f\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u51fa\u73b0\u6b7b\u9501\u3002</p> <p>\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u6b7b\u9501\u7684\u68c0\u67e5\u5229\u7528\u4e86\u201c\u7b49\u5f85\u56fe\u201d\u3002</p> <p>\u7b49\u5f85\u56fe\u4e2d\uff0c\u7bad\u5934\\(T_i \\rightarrow T_j\\)\u8868\u793a\uff0c\\(Ti\\)\u5728\u7b49\u5f85\\(Tj\\)\u4e8b\u52a1\u7684\u9501\u3002</p> <p><code>\u5982\u679c\u5728\u7b49\u5f85\u56fe\u4e2d\u5b58\u5728\u73af\uff0c\u8868\u793a\u51fa\u73b0\u4e86\u6b7b\u9501\u3002</code></p> <p>\u901a\u8fc7\u521a\u521a\u7684 Lock Table, \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b49\u5f85\u5173\u7cfb\u3002\uff08\u540e\u9762\u7684 waited \u7b49\u5f85\u524d\u9762\u7684 granted\uff09</p> <p>When deadlock is detected : \u5f53\u6b7b\u9501\u53d1\u751f/\u68c0\u6d4b\u5230\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f</p> <ul> <li> <p>Some transaction will have to rolled back (made a victim) to break deadlock.  Select that transaction as victim that will incur minimum cost.  </p> <p>\u67d0\u4e9b\u4e8b\u52a1\u5fc5\u987b\u56de\u6eda\uff08\u6210\u4e3a\u53d7\u5bb3\u8005\uff09\u624d\u80fd\u6253\u7834\u50f5\u5c40\u3002 \u9009\u62e9\u8be5\u4ea4\u6613\u4f5c\u4e3a\u53d7\u5bb3\u8005\uff0c\u8fd9\u5c06\u4ea7\u751f\u6700\u4f4e\u6210\u672c\u3002 <code>\u6267\u884c\u64cd\u4f5c\u6700\u5c11\u6216\u8005\u9501\u6700\u591a\u7684</code></p> </li> <li> <p>Rollback -- determine how far to roll back transaction</p> <ul> <li>Total rollback: Abort the transaction and then restart it.</li> <li>More effective to roll back transaction only as far as necessary to break deadlock.</li> </ul> </li> <li> <p>Starvation happens if same transaction is always chosen as victim. Include the number of rollbacks in the cost factor to avoid starvation</p> <p><code>\u9965\u997f\u8868\u793a\u540c\u4e00\u4e8b\u52a1\u88ab\u591a\u6b21\u9009\u4e3a\u53d7\u5bb3\u8005\uff0c\u53d1\u751frollback\u3002\u56e0\u6b64\u4e3a\u9632\u6b62\u6b64\u7c7b\u73b0\u8c61\uff0c\u9700\u8981\u5c06\u56de\u6eda\u7684\u6b21\u6570\u7eb3\u5165\u56de\u6eda\u5bf9\u8c61\u9009\u62e9\u7684\u6807\u51c6</code></p> </li> </ul> <p>Example</p> <p></p> <p>(a) \u54ea\u4e9b\u4e8b\u52a1\u4ea7\u751f\u4e86\u6b7b\u9501\uff1f</p> <p>\u4f5c\u51fa\u7b49\u5f85\u56fe\uff0c\u67e5\u770b\u73af\u3002\uff08T1/T2/T6\uff09</p> <p>(b) \u4e3a\u4e86\u89e3\u51b3\u6b7b\u9501\u95ee\u9898\uff0c\u54ea\u4e2a\u4e8b\u52a1\u9700\u8981\u88abroll back\uff1f\uff08\u5047\u5982\u8981\u6c42\u4e3a\uff1a\u56de\u6eda\u6389\u7684\u4e8b\u52a1\uff0c\u9700\u8981\u91ca\u653e\u51fa\u6700\u591a\u7684\u9501\uff09</p> <p>\u5728\u73af\u4e2d\u9009\u62e9\u4e00\u4e2a\u4e8b\u52a1\u8fdb\u884c\u56de\u6eda\u3002(T2)</p> <pre><code>T1 \u7b49 T2, T2 \u7b49 T6, T6 \u7b49 T1.(\u6ce8\u610f\u8fd9\u91cc T5 \u662f\u7b49\u5f85 T6 \u800c\u4e0d\u662f T2)\n</code></pre>"},{"location":"DB/14.%20Concurrency%20Control/#1424-graph-based-protocols","title":"14.2.4 Graph-Based Protocols","text":"<p>\u57fa\u4e8e\u56fe\u7684\u534f\u8bae</p> <p>\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u6570\u636e\u662f\u6309\u504f\u5e8f\u8bbf\u95ee\u7684\uff0c\u53ef\u4ee5\u6709\u66f4\u9ad8\u7ea7\u7684\u534f\u8bae\u3002  </p> <p>\u6570\u636e\u6309\u7167\u67d0\u79cd\u504f\u5e8f\u5173\u7cfb\u8bbf\u95ee\u3002</p> <p>The tree-protocol is a simple kind of graph protocol. <code>\u6811\u534f\u8bae</code>\u662f\u56fe\u534f\u8bae\u7684\u4e00\u79cd</p> <ul> <li> <p>Only exclusive locks are allowed.  \u53ea\u6709\u4e00\u79cd\u9501\uff1aX\u9501</p> </li> <li> <p>The first lock by \\(T_i\\) may be on any data item. Subsequently, a data Q can be locked by \\(T_i\\) only if the parent of Q is currently locked by \\(T_i\\) </p> <p>\u7b2c\u4e00\u4e2a\u9501\u53ef\u4ee5\u52a0\u5728\u6811\u7ed3\u6784\u7684\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u3002 \u4f46\u662f\uff0c\u540e\u9762\u8981\u5728\u67d0\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u52a0\u9501\u7684\u524d\u63d0\u662f\uff0c<code>\u7236\u8282\u70b9</code>\u5df2\u7ecf\u88ab\u9501\u4f4f\u4e86\u3002</p> </li> <li> <p>Data items may be unlocked at any time. </p> <p>\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u7684\u9501\uff0c\u5728\u6570\u636e\u8bbf\u95ee\u5b8c\u6bd5\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u653e\u6389\u3002</p> </li> <li> <p>A data item that has been locked and unlocked by \\(T_i\\) cannot subsequently be relocked by \\(T_i\\) </p> <p>\u653e\u4e86\u4e4b\u540e\u4e0d\u80fd\u518d\u52a0\u9501\u4e86\u3002  </p> <p>The tree protocol ensures conflict serializability as well as freedom from deadlock.</p> <p>\u6811\u534f\u8bae\u7684\u6027\u8d28\uff1a\u867d\u7136\u4e0d\u662f\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u4f46\u662f\u4fdd\u8bc1\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\uff0c\u540c\u65f6\uff0c\u53c8\u662f\u4e0d\u5b58\u5728\u6b7b\u9501\u7684\u3002</p> </li> </ul> Example <p> </p> <p>\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5148\u9501 D, \u968f\u540e\u9501 G, \u653e\u6389, \u9501 H, (\u4f46\u662f\u4e0d\u80fd\u9501J\uff0c\u56e0\u4e3a\u7236\u7ed3\u70b9H\u8fd8\u6ca1\u6709\u4e0a\u9501)\u8fd9\u65f6 D \u5df2\u7ecf\u6ca1\u7528\u4e86\u53ef\u4ee5\u653e\u6389\u3002\u968f\u540e\u6211\u4eec\u9501 J, H \u4e5f\u5c31\u6ca1\u7528\u4e86\u4e5f\u53ef\u4ee5\u653e\u6389\u3002\u6700\u540e\u653e\u6389  J. </p> <p><code>\u8981\u8bbf\u95eeG\uff0cJ\uff0c\u9700\u8981\u5148\u5bf9\u6700\u5c0f\u516c\u5171\u7956\u5148\u4e0a\u9501</code></p> <ul> <li> <p>Advantages</p> <ul> <li> <p>Unlocking may occur earlier in the tree-locking protocol than in the two-phase locking protocol.  </p> <p>shorter waiting times, and increase in concurrency  </p> <p>\u9501\u53ef\u4ee5\u66f4\u65e9\u91ca\u653e\uff0c\u4e0d\u7528\u7b49\u5f85\u7b2c\u4e8c\u9636\u6bb5\u3002\u7528\u5b8c\u5c31\u53ef\u4ee5\u653e\uff0c\u63d0\u9ad8\u4e86\u5e76\u53d1\u5ea6\u3002</p> </li> <li> <p>protocol is deadlock-free <code>\u6811\u7ed3\u6784\uff0c\u663e\u7136\u4e0d\u5b58\u5728\u73af</code></p> <p>no rollbacks are required</p> </li> </ul> <p>\u6811\u534f\u8bae\u7684\u597d\u5904\uff1a\u4e00\u4e2a\u6570\u636e\u7684\u8bbf\u95ee\u7684\u9501\uff0c\u8bbf\u95ee\u5b8c\u6bd5\u5c31\u53ef\u4ee5\u91ca\u653e\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u9ad8\u5e76\u53d1\u5ea6\uff0c\u964d\u4f4e\u9501\u4e0a\u9762\u7684\u7b49\u5f85\u65f6\u95f4\u3002\u5e76\u4e14\uff0c\u4e0d\u4f1a\u4ea7\u751f\u6b7b\u9501\u3002</p> </li> <li> <p>Disadvantages</p> <ul> <li> <p><code>Protocol does not guarantee recoverability or cascade freedom</code> </p> <p>Need to introduce commit dependencies to ensure recoverability  </p> <p>\u65e9\u653e\u9501\uff0c\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u8bfb\u810f\u6570\u636e\uff0c\u4e0d\u53ef\u6062\u590d\u3002\u8fd9\u5c31\u5bf9 commit \u987a\u5e8f\u6709\u8981\u6c42\u3002</p> </li> <li> <p>transactions may have to <code>lock more data items than needed.</code></p> <ul> <li> <p>increased locking overhead, and additional waiting time  </p> <p>\u6bd4\u5982\u521a\u521a\u7684\u56fe\u4e2d\uff0c\u6211\u4eec\u8bbf\u95ee G, J, \u9700\u8981\u4ece D \u5f00\u59cb\u8bbf\u95ee\u3002\u4f1a\u9501\u4e0a\u66f4\u591a\u6570\u636e\u3002 </p> </li> <li> <p>potential decrease in concurrency</p> </li> </ul> </li> </ul> <p>\u6811\u534f\u8bae\u7684\u7f3a\u70b9\uff1a1. \u4e0d\u80fd\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\uff0c\u5141\u8bb8\u8bfb\u810f\u6570\u636e\u3002\u56e0\u6b64\uff0c\u57fa\u4e8e\u9501\u7684\u5e76\u53d1\u63a7\u5236\u534f\u8bae\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\uff0c\u4e00\u4e2a\u4e8b\u52a1\u5982\u679c\u8bfb\u53d6\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5199\u5165\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u52a1\u7684commit\u64cd\u4f5c\uff0c\u4e00\u5b9a\u8981\u5728\u53e6\u4e00\u4e2a\u4e8b\u52a1\u4e4b\u540e\u30022. \u4f1a\u9501\u4e0a\u66f4\u591a\u4e0d\u9700\u8981\u7684\u6570\u636e\uff0c\u964d\u4f4e\u5e76\u53d1\u5ea6</p> </li> </ul>"},{"location":"DB/14.%20Concurrency%20Control/#143-multiple-granularity","title":"14.3 Multiple Granularity","text":"<p>Multiple Granularity \u591a\u7c92\u5ea6</p> <p>\u53ef\u4ee5\u9501\u5728\u8bb0\u5f55\u4e0a(\u5982 <code>update table set ...;</code>)\uff0c\u4e5f\u53ef\u4ee5\u9501\u5728\u6574\u4e2a\u8868\u4e0a(\u5982 <code>select * from table;</code>)\u3002 </p> <p>Granularity of locking (level in tree where locking is done):</p> <ul> <li>fine granularity\uff08\u7ec6\u7c92\u5ea6\uff09 (lower in tree): high concurrency, high locking overhead</li> <li>coarse granularity\uff08\u7c97\u7c92\u5ea6\uff09 (higher in tree): low locking overhead, low concurrency</li> </ul> <p>Example \"Example of Granularity Hierarchy\"</p> <p> </p> <p>The levels, starting from the coarsest (top) level are</p> <ul> <li>database</li> <li>area </li> <li>File(table)</li> <li>record   </li> </ul> <p>S\u9501\u3001X\u9501\u53ef\u4ee5\u52a0\u5230\u7ec6\u7c92\u5ea6\u7684\u5c42\u9762\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u52a0\u5230\u7c97\u7c92\u5ea6\u7684\u5c42\u9762\u4e0a\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#1431-intention-lock-modes","title":"14.3.1 Intention Lock Modes","text":"<p>\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u7c97\u7c92\u5ea6\u4e0a\u9762\u7684\u9501\u548c\u7ec6\u7c92\u5ea6\u4e0a\u9762\u7684\u9501\u5982\u4f55\u8fdb\u884c\u6709\u6548\u7684\u5224\u65ad\uff1f\u7ec6\u7c92\u5ea6\u4e0a\u5047\u5982\u5df2\u7ecf\u52a0\u4e86\u4e00\u4e2aS\u9501\u6216X\u9501\uff0c\u90a3\u4e48\u7c97\u7c92\u5ea6\u4e0a\u52a0\u9501\u662f\u5426\u51b2\u7a81\uff1f</p> <p>\u8bb0\u5f55\u548c\u8868\u4e0a\u90fd\u53ef\u4ee5\u52a0 S/X \u9501\u3002\u4f46\u662f\u5f53\u4e8b\u52a1\u6d89\u53ca\u5230\u591a\u4e2a\u7c92\u5ea6\uff0c\u5982\u4f55\u5224\u65ad\u662f\u5426\u51b2\u7a81\uff0c\u5982\u4e00\u4e2a\u8868\u7684 S \u9501\u548c\u4e00\u4e2a\u8bb0\u5f55\u7684 X \u9501\u662f\u51b2\u7a81\u7684\u3002  \u6211\u4eec\u5f15\u5165\u4e86\u5176\u4ed6\u9501\uff0c\u610f\u5411\u9501(IS, IX, SIX)</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8981\u5728\u67d0\u4e00\u4e2a\u7ec6\u7c92\u5ea6\u6570\u636e\uff08\u5982\u8bb0\u5f55\uff09\u4e0a\u9762\u52a0\u4e0aS\u9501\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u52a1\u5fc5\u987b\u8981\u5728\u8fd9\u4e2a\u7ec6\u7c92\u5ea6\u6570\u636e\u7684\u7236\u8282\u70b9\uff08\u5982\u8868\uff09\u8fd9\u4e00\u7c97\u7c92\u5ea6\u6570\u636e\u4e0a\u52a0\u4e0aIS\u9501\u3002 <code>\uff08\u610f\u5411\u5171\u4eab\u9501\uff09</code></li> <li>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8981\u5728\u67d0\u4e00\u4e2a\u7ec6\u7c92\u5ea6\u6570\u636e\uff08\u5982\u8bb0\u5f55\uff09\u4e0a\u9762\u52a0\u4e0aX\u9501\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u52a1\u5fc5\u987b\u8981\u5728\u8fd9\u4e2a\u7ec6\u7c92\u5ea6\u6570\u636e\u7684\u7236\u8282\u70b9\uff08\u5982\u8868\uff09\u8fd9\u4e00\u7c97\u7c92\u5ea6\u6570\u636e\u4e0a\u52a0\u4e0aIX\u9501\u3002 <code>\uff08\u610f\u5411\u6392\u4ed6\u9501\uff09</code></li> <li>SIX\u9501\uff0c\u662fS\u9501\u548cIX\u9501\u7684\u7ed3\u5408\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8868\u7684\u67d0\u4e9b\u8bb0\u5f55\u9700\u8981\u76f4\u63a5\u8bfb\u53d6\uff0c\u6709\u4e9b\u8bb0\u5f55\u53ef\u80fd\u4ea7\u751f\u66f4\u6539\uff0c\u5c31\u5728\u8868\u5c42\u7ea7\u4e0a\u52a0\u4e0aSIX\u9501\uff0c<code>\u8fd9\u6837\u8868\u4e2d\u9700\u8981\u8bfb\u7684\u8bb0\u5f55\u4e0d\u7528\u518d\u52a0\u4e0aS\u9501\u4e86\uff0c\u8868\u4e2d\u9700\u8981\u5199\u7684\u8bb0\u5f55\u9700\u8981\u52a0\u4e0aX\u9501</code>\u3002\uff08\u5171\u4eab\u610f\u5411\u6392\u4ed6\uff09  </li> </ul> <p>\u5982\u679c\u7c97\u7c92\u5ea6\uff08\u5982\u8868\uff09\u4e0a\u5df2\u7ecf\u52a0\u4e86IX\u9501\uff0c\u8868\u793a\u8868\u7684\u5b50\u8282\u70b9\u7684\u67d0\u6761\u8bb0\u5f55\u52a0\u4e0a X\u9501\u3002\u6b64\u65f6\u5982\u679c\u60f3\u5bf9<code>\u6574\u4e2a\u8868\u52a0\u4e0aS\u9501</code>\uff0c\u90a3\u4e48S\u9501\u4f1a\u548cIX\u9501\u4ea7\u751f\u51b2\u7a81\u3002 </p> <ol> <li>IS \u548c IX \u662f\u4e0d\u51b2\u7a81\u7684\u3002\u5728\u8868\u4e0a\u662f\u4e0d\u51b2\u7a81\u7684\uff0c\u53ef\u80fd\u5728\u8bb0\u5f55\u4e0a\u51b2\u7a81\uff08<code>\u5373\u5bf9\u4e00\u4e2a\u8bb0\u5f55\u53c8\u8bfb\u53c8\u5199\uff0c\u51b2\u7a81\u53d1\u751f\u5728\u8bb0\u5f55\u5c42\u9762\u800c\u975e\u8868</code>\uff09\u3002</li> <li>S\u548cX\u662f\u5bf9\u5f53\u524d\u7c92\u5ea6\u52a0\u9501\uff0c\u8868\u793a\u6240\u6709\u7684\u5b50\u7c92\u5ea6\u5168\u90e8\u88ab\u52a0\u4e0a\u5f53\u524d\u7684\u9501</li> <li>IS\u548cIX\u8868\u793a\u5b50\u7c92\u5ea6\u4e2d\u4e00\u4e9b\u6570\u636e\u88ab\u52a0\u4e0aS\u9501\u6216\u8005X\u9501</li> <li>SIX \u8868\u793a\u5f53\u524d\u7c92\u5ea6\u52a0S\u9501\uff0c\u5b50\u7c92\u5ea6\u6709\u4e9b\u52a0\u4e0a\u4e86X\u9501\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u5b50\u7c92\u5ea6\u90fd\u52a0\u4e0aS\u9501\uff0c\u90e8\u5206\u52a0\u4e0aX\u9501\uff08\u9700\u8981\u540e\u7eed\u7533\u8bf7\uff0c\u53d6\u4ee3\u4e4b\u524d\u7684S\u9501\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51b2\u7a81\uff09\u3002</li> </ol> <p><code>\u4e3a\u4ec0\u4e48\u540c\u4e00\u4e2a\u7ed3\u70b9\uff0cSIX\u9501\u4f1a\u548cS\u9501\u51b2\u7a81\u5462\uff1f\u56e0\u4e3a\u5f53\u524d\u7ed3\u70b9\u52a0\u4e0aSIX\u9501\u8868\u793a\u5b58\u5728\u90e8\u5206\u5b50\u7ed3\u70b9\u662fX\u9501\uff0c\u5f53\u524d\u7ed3\u70b9S\u9501\u8868\u793a\u6240\u6709\u7684\u5b50\u7ed3\u70b9\u90fd\u88ab\u52a0\u4e0aS\u9501\uff0c\u8fd9\u65f6\u5b58\u5728\u5b69\u5b50\u65e2\u6709S\u9501\u53c8\u6709X\u9501\uff0c\u9020\u6210\u51b2\u7a81\u3002</code></p> <p><code>\u4e3a\u4ec0\u4e48\u540c\u4e00\u4e2a\u7ed3\u70b9\uff0cIX\u9501\u4f1a\u548cX\u9501\u51b2\u7a81\u5462\uff1f\u9488\u5bf9X\u9501\u6bd4\u8f83\u7279\u6b8a\uff0c\u6ca1\u9501\u4f46\u662f\u786c\u52a0X\u9501\u5c31\u4f1a\u9519\u8bef\u3002\u4f46\u662fIS\u548cS\u5c31\u4e0d\u51b2\u7a81</code></p> <p>example\uff1a</p> <p>\u2460 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7ed3\u70b9Q\u4e0a\u52a0\u4e0aS\u6216\u8005IS\u9501\uff0c\u90a3\u4e48\u5176\u7236\u8282\u70b9\u4e00\u5b9a\u8981\u52a0\u4e0aIX\u9501\u6216\u8005IS\u9501\uff1a</p> <p>\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u8981\u52a0\u4e0aS\u6216\u8005IS\u9501\uff0c\u8868\u660e\u8fd9\u4e2a\u7ed3\u70b9\u7684\u5168\u90e8\u5b50\u8282\u70b9\u6216\u8005\u90e8\u5206\u5b50\u8282\u70b9\u4e0a\u52a0S\u9501\u3002\u90a3\u4e48\u7236\u8282\u70b9\u4e0d\u53ef\u80fd\u52a0S\u9501\uff0c\u56e0\u4e3aS\u9501\u4f1a\u52a0\u5728\u7236\u8282\u70b9\u7684\u66f4\u4f4e\u5c42\u7ea7\u3002\u6b64\u65f6\uff0c\u7236\u8282\u70b9\u53ea\u80fd\u52a0IS\u9501\u6216\u8005IX\u9501\u3002</p> <p>\u2461 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7ed3\u70b9Q\u4e0a\u52a0\u4e0aX\u9501\u3001SIX\u9501\u6216IX\u9501\uff0c\u90a3\u4e48\u5176\u7236\u8282\u70b9\u4e00\u5b9a\u8981\u52a0\u4e0aIX\u9501\u6216SIX\u9501\u3002</p> <p>\u5982\u679c\u8981\u5728\u4e00\u4e2a\u7ed3\u70b9Q\u4e0a\u52a0\u4e0aX\u9501\u3001SIX\u9501\u6216\u8005IX\u9501\uff0c\u8868\u793a\u8fd9\u4e2a\u7ed3\u70b9\u7684\u5168\u90e8\u5b50\u8282\u70b9\u6216\u8005\u90e8\u5206\u5b50\u8282\u70b9\u4e0a\u52a0X\u9501\u3002\u90a3\u4e48\u7236\u8282\u70b9\u4e0d\u53ef\u80fd\u52a0X\u9501\uff0c\u56e0\u4e3aX\u9501\u4f1a\u52a0\u5728\u7236\u8282\u70b9\u7684\u66f4\u4f4e\u5c42\u7ea7\u3002\u6b64\u65f6\uff0c\u7236\u8282\u70b9\u53ea\u80fd\u52a0\u4e0aIX\u9501\u6216\u8005SIX\u9501\u3002</p> <ul> <li> <p>intention-shared (IS): indicates explicit locking at a lower level of the tree but only with shared locks.  \u5728\u4e0b\u9762\u4f1a\u52a0 S \u9501\u3002</p> </li> <li> <p>intention-exclusive (IX): indicates explicit locking at a lower level with exclusive or shared locks  \u5728\u4e0b\u9762\u4f1a\u52a0 X \u9501\u3002</p> </li> <li> <p>shared and intention-exclusive (SIX): the subtree rooted by that node is locked explicitly in shared mode and explicit locking is being done at a lower level with exclusive-mode locks.</p> </li> </ul> <p>\u4e8b\u52a1T\u7528\u5982\u4e0b\u89c4\u5219\u9501\u5b9a\u7ed3\u70b9Q:</p> <p>1. \u5fc5\u987b\u9075\u5b88\u9501\u7684\u517c\u5bb9\u6027\u77e9\u9635\u3002</p> <p>2. \u9996\u5148\uff0c\u8981\u9501\u5b9a\u6811\u7684\u6839\uff0c\u5373\u6700\u7c97\u7684\u7c92\u5ea6\uff0c\u53ef\u4ee5\u4ee5\u4efb\u4f55\u65b9\u5f0f\u8fdb\u884c\u9501\u5b9a\u3002\u5047\u5982\u53ea\u8bfb\uff0c\u5c31\u52a0\u4e0aS\u9501\uff0c\u5982\u679c\u8981\u8fdb\u884c\u4fee\u6539\uff0c\u5c31\u52a0\u4e0aX\u9501\u3002</p> <p>3. \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7ed3\u70b9Q\u4e0a\u52a0\u4e0aS\u6216\u8005IS\u9501\uff0c\u90a3\u4e48\u5176\u7236\u8282\u70b9\u4e00\u5b9a\u8981\u52a0\u4e0aIX\u9501\u6216\u8005IS\u9501\u3002</p> <p>4. \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7ed3\u70b9Q\u4e0a\u52a0\u4e0aX\u9501\u3001SIX\u9501\u6216IX\u9501\uff0c\u90a3\u4e48\u5176\u7236\u8282\u70b9\u4e00\u5b9a\u8981\u52a0\u4e0aIX\u9501\u6216SIX\u9501\u3002</p> <p>5. \u4e8b\u52a1T\u9075\u5faa\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u3002</p> <p>6. \u89e3\u9501\u7ed3\u70b9Q\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u4fdd\u8bc1Q\u6ca1\u6709\u5b69\u5b50\u6b63\u5728\u88ab\u9501\u5b9a\uff08<code>\u6240\u4ee5\u89e3\u9501\u662f\u4ece\u4e0b\u5f80\u4e0a</code>\uff09\u3002</p> <p>\u8981\u7b26\u5408\u76f8\u5bb9\u77e9\u9635\u3002\u4ece\u6700\u7c97\u7684\u7c92\u5ea6\u5f00\u59cb\u8bbf\u95ee\u3002\u8981\u52a0\u9501\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u5bf9\u7236\u4eb2\u7684\u9501\u6709\u8981\u6c42\u3002</p> <p>example:</p> <p> </p> <p>\u76f4\u89c2\u6765\u8bf4\uff0c\u4e0a\u9501\u662f\u4ece\u6839\u8282\u70b9\u5411\u4e0b\u4e0a\u9501\u7684\uff0c\u653e\u9501\u662f\u4ece\u53f6\u5b50\u7ed3\u70b9\u4e00\u5c42\u5c42\u5411\u4e0a\u653e\u9501\u7684\u3002</p> <p>\u5148\u5728\u6839\u8282\u70b9\u4e0a\u52a0\u4e0aIX\u9501\uff0c\u8868\u660e\u4e0b\u9762\u7684\u7ed3\u70b9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4fee\u6539\u3002\u518d\u5728\u5de6\u5b50\u8282\u70b9\u4e0a\u52a0\u4e0aIX\u9501\uff0c\u8868\u660e\u4e0b\u9762\u7684\u7ed3\u70b9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4fee\u6539\u3002</p> <p>\u7136\u540e\uff0c\u5728\u8868\u8fd9\u4e2a\u7c92\u5ea6\u4e0a\uff0c\u5bf9\u8868Fa\u52a0\u4e0aSIX\u9501\uff0c\u8868\u660e\u8981\u8bfb\u53d6\u6574\u4e2a\u8868\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u53ef\u80fd\u5bf9\u8868\u4e2d\u67d0\u4e9b\u8bb0\u5f55\u4ea7\u751f\u66f4\u6539\u3002</p> <p>\u6700\u540e\uff0c\u5728\u8bb0\u5f55\u8fd9\u4e2a\u7ec6\u7c92\u5ea6\u4e0a\uff0c\u5bf9\u67d0\u4e9b\u8bb0\u5f55\u4e0a\u52a0\u4e0aX\u9501\uff0c\u8868\u793a\u8981\u66f4\u6539\u8fd9\u6761\u8bb0\u5f55\u3002\u5bf9\u4e8e\u52a0\u4e86X\u9501\u7684\u8fd9\u6761\u8bb0\u5f55\uff0c\u53ef\u4ee5\u53bb\u66f4\u6539\uff1b\u4f46\u662f\u5bf9\u4e8e\u5176\u4ed6\u7684\u8bb0\u5f55\uff0c\u4e0d\u7528\u518d\u52a0\u4e0aS\u9501\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u8bfb\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#144-insert-and-delete-operations","title":"14.4 Insert and Delete Operations","text":"<p>\u6570\u636e\u5e93\u91cc\u9664\u4e86 R/W \u8fd8\u6709\u63d2\u5165\u3001\u5220\u9664\u7b49\u64cd\u4f5c\u3002  </p> <p>\u9700\u8981\u5b9a\u4e49 R/W \u548c\u63d2\u5165/\u5220\u9664\u662f\u5426\u51b2\u7a81\u3002</p> <p>If two-phase locking is used :</p> <ul> <li>A delete operation may be performed only if the transaction deleting the tuple has an exclusive lock on the tuple to be deleted. </li> </ul> <p>\u5220\u9664\u524d\u9700\u8981\u52a0 X \u9501\u3002</p> <ul> <li>A transaction that inserts a new tuple into the database is given an X-mode lock on the tuple </li> </ul> <p>\u63d2\u5165\u4e4b\u524d\u662f\u6ca1\u6709\u8fd9\u4e2a\u6570\u636e\u7684\uff0c\u65e0\u6cd5\u5148\u52a0\u9501\u3002\u5e94\u8be5\u63d2\u5165\u4e4b\u540e\u9a6c\u4e0a\u52a0\u4e0a X \u9501\u3002</p> <p>Insertions and deletions can lead to the phantom phenomenon.  </p> <p><code>\u63d2\u5165\u548c\u5220\u9664\u4f1a\u5bfc\u81f4\u5e7d\u7075\u95ee\u9898\uff0c\u8be5\u5982\u4f55\u89e3\u51b3\uff1f</code></p> <p>\u5c06data\u4e0erelation\u76f8\u5173\u8054\uff0c\u4ee5\u8868\u793a\u5df2\u77e5\u5173\u7cfb\u5305\u542b\u54ea\u4e9b\u5143\u7ec4\u7684\u4fe1\u606f\u3002</p> <p>\u6dfb\u52a0\u8c13\u8bcd\u9501\uff0c\u4f8b\u5982\u6211\u73b0\u5728select age=18\u7684\u5b66\u751f\uff0c\u90a3\u4e48\u6211\u5c31\u4e0d\u80fd\u63d2\u5165\u6216\u8005\u5220\u9664age=18\u7684\u5b66\u751f\uff0c\u9700\u8981\u6dfb\u52a0lock_S(age=18)</p>"},{"location":"DB/14.%20Concurrency%20Control/#1441-index-locking-protocol","title":"14.4.1 Index Locking Protocol","text":"<p>\u5176\u5b9e\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u9690\u542b\u5730\u4fee\u6539\u4e86\u4fe1\u606f\uff0c\u53ea\u662f\u6ca1\u6709\u88ab\u8868\u793a\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e2a\u4fe1\u606f\u663e\u793a\u5316\uff0c\u52a0\u9501\u3002  \u5982\u679c\u8868\u4e0a\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u5728\u626b\u63cf\u7d22\u5f15\u7684\u65f6\u5019\u4f1a\u5728\u53f6\u5b50\u4fee\u6539\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u68c0\u6d4b\u3002</p> <p></p> Index Locking on a B+ -Tree <p> </p> <p>\u5148\u5728\u53f6\u5b50\u9875\u52a0\u9501\uff0c\u518d\u5728\u8bb0\u5f55\u4e0a\u52a0\u9501\u3002  </p> <p><code>Index-locking protocol to prevent phantoms required locking entire leaf \u7d22\u5f15\u9501\u534f\u8bae\u4e3a\u4e86\u9632\u6b62\u5e7d\u7075\u95ee\u9898\u9700\u8981\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u6574\u4e2a\u53f6\u5b50\u9501\u8d77\u6765\uff0c\u4f1a\u964d\u4f4e\u5e76\u53d1\u5ea6\uff08\u7f3a\u70b9\uff09</code></p> <p>\u5982\u679c\u6211\u4eec\u8981\u63d2\u5165\uff0c\u6bd4\u5982 18. \u8fd9\u65f6\u63d2\u5165\u5230\u4e86 10 \u8fd9\u9875\uff0c\u53d1\u73b0\u8fd9\u9875\u88ab\u9501\u4f4f\u4e86\uff0c\u65e0\u6cd5\u63d2\u5165\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u8fd9\u4e2a\u8303\u56f4\u5185\u65e0\u6cd5\u88ab\u63d2\u5165\uff0c\u4e0d\u4f1a\u6709\u5e7d\u7075\u95ee\u9898\u3002  </p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8c13\u8bcd\u9501\u3002\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u9501\u4e0a\uff08\u6bd4\u5982\u521a\u521a 11 \u5230 50 \u8fd9\u4e2a\u533a\u95f4\uff09\uff0c\u540e\u7eed\u5982\u679c\u8981\u63d2\u5165 18 \u843d\u5165\u8fd9\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u5c31\u80fd\u68c0\u67e5\u51fa\u6765\u3002\u4f46\u8fd9\u6837\u5b9e\u73b0\u662f\u6bd4\u8f83\u590d\u6742\u7684\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#1442-next-key-locking-to-prevent-phantoms","title":"14.4.2 Next-Key Locking To Prevent Phantoms","text":"<p><code>Index-locking protocol to prevent phantoms required locking entire leaf \u7d22\u5f15\u9501\u534f\u8bae\u4e3a\u4e86\u9632\u6b62\u5e7d\u7075\u95ee\u9898\u9700\u8981\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u6574\u4e2a\u53f6\u5b50\u9501\u8d77\u6765\uff0c\u4f1a\u964d\u4f4e\u5e76\u53d1\u5ea6\uff08\u7f3a\u70b9\uff09</code></p> <p>\u521a\u521a\u7684\u4f8b\u5b50\u4e2d, 10 \u4e0d\u5728\u8303\u56f4\u5185\uff0c\u4f46\u6211\u4eec\u628a\u8fd9\u9875\u90fd\u9501\u4f4f\u4e86\uff0c\u4ecd\u7136\u63d2\u4e0d\u8fdb\u53bb\uff0c\u5f71\u54cd\u4e86\u5e76\u53d1\u5ea6\u3002 </p> <p>Next-key locking protocol: provides higher concurrency</p> <ul> <li> <p>Lock all values that satisfy index lookup (match lookup value, or fall in lookup range)</p> <p>\u9501\u5b9a\u6240\u6709\u6ee1\u8db3\u7d22\u5f15\u67e5\u627e\u7684\u503c\uff08\u5339\u914d\u67e5\u627e\u503c\uff0c\u6216\u843d\u5728\u67e5\u627e\u8303\u56f4\u5185\uff09</p> </li> <li> <p>Also lock next key value in index  </p> <p><code>\u540c\u65f6\u9501\u5b9a\u7d22\u5f15\u4e2d\u7684\u4e0b\u4e00\u4e2a\u952e\u503c</code></p> <p>even for inserts/deletes</p> </li> <li> <p>Lock mode: S for lookups, X for insert/delete/update</p> <p>\u9501\u5b9a\u6a21\u5f0f\uff1aS \u7528\u4e8e\u67e5\u627e\uff0cX \u7528\u4e8e\u63d2\u5165/\u5220\u9664/\u66f4\u65b0</p> </li> </ul> <p>Next-Key Locking</p> <p> </p> <p>\u67e5\u8be2 7 \u5230 16, \u6211\u4eec\u628a\u7d22\u5f15\u9879\u9501\u8d77\u6765\uff0c\u628a\u4e0b\u4e00\u4e2a\u7d22\u5f15\u503c 18 \u4e5f\u9501\u8d77\u6765\u3002</p> <p>\u63d2\u5165\u7684\u65f6\u5019\u8981\u7533\u8bf7\u8fd9\u4e2a\u9501\u548c\u6bd4\u63d2\u5165\u503c\u5927\u7684\u4e0b\u4e00\u4e2a\u503c\u7684\u9501\uff0c\u8fd9\u91cc\u63d2\u5165 15 \u65f6\u5c31\u8981\u7533\u8bf7 15 \u548c 18 \u7684\u9501\uff0c\u51b2\u7a81\u65e0\u6cd5\u63d2\u5165\u3002\u63d2\u5165 7 \u540c\u7406\u3002</p>"},{"location":"DB/14.%20Concurrency%20Control/#145-multiversion-concurrency-control-schemes","title":"14.5 Multiversion Concurrency Control Schemes","text":"<p>Multiversion schemes keep old versions of data item to increase concurrency.</p> <p>\u591a\u7248\u672c\u65b9\u6848\u4fdd\u7559\u65e7\u7248\u672c\u7684\u6570\u636e\u9879\u4ee5\u589e\u52a0\u5e76\u53d1\u6027\u3002</p> <p>Each successful write results in the creation of a new version of the data item written.</p> <p>\u6bcf\u6b21\u6210\u529f\u5199\u5165\u90fd\u4f1a\u521b\u5efa\u5199\u5165\u7684\u6570\u636e\u9879\u7684\u65b0\u7248\u672c\u3002</p> <p>Use timestamps to label versions.</p> <p>\u4f7f\u7528\u65f6\u95f4\u6233\u6807\u8bb0\u7248\u672c\u3002</p> <p>When a read(Q) operation is issued, select an appropriate version of Q based on the timestamp of the transaction, and return the value of the selected version.  </p> <p>\u53d1\u51fa read\uff08Q\uff09 \u64cd\u4f5c\u65f6\uff0c\u6839\u636e\u4e8b\u52a1\u7684\u65f6\u95f4\u6233\u9009\u62e9\u9002\u5f53\u7684 Q \u7248\u672c\uff0c\u5e76\u8fd4\u56de\u6240\u9009\u7248\u672c\u7684\u503c\u3002 </p> <p>Read only transactions never have to wait as an appropriate version is returned immediately for every read operation..</p> <p>\u53ea\u8bfb\u4e8b\u52a1\u6c38\u8fdc\u4e0d\u5fc5\u7b49\u5f85\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8bfb\u53d6\u64cd\u4f5c\u90fd\u4f1a\u7acb\u5373\u8fd4\u56de\u9002\u5f53\u7684\u7248\u672c\u3002</p> <p> </p> <p>read-only transactions and update transactions</p> <ul> <li> <p>SET TRANSACTIOIN READ ONLY; </p> </li> <li> <p>SET TRANSACTION READ WRITE;\uff08<code>update\u64cd\u4f5c\u65e2\u9700\u8981read\u4e5f\u9700\u8981write</code>\uff09</p> </li> </ul> <ol> <li> <p>\u66f4\u65b0\u4e8b\u52a1\u7684\u64cd\u4f5c\uff1a</p> <p>\u7533\u8bf7read and write\u9501\uff0c\u9075\u5b88\u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u6240\u6709\u7684S\u9501\u548cX\u9501\u9700\u8981\u5728\u4e8b\u52a1\u5373\u5c06commit\u6216\u8005abort\u7684\u65f6\u5019\u624d\u80fd\u91ca\u653e\u3002\u6bcf\u6b21\u6210\u529f\u5199\u5165\u540e\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u53f7\uff0c\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u4e3a\u6b63\u65e0\u7a77\uff08\u9632\u6b62\u8bfb\u53d6\u810f\u6570\u636e\uff09\uff0c\u77e5\u9053commit\u7684\u65f6\u5019\uff0c\u65f6\u95f4\u6233\u53d8\u4e3a\u6700\u65b0\u7248\u672c\u53f7+1</p> <p>Each version of a data item has a single timestamp whose value is obtained from a counter ts-counter that is incremented during commit processing.</p> <p>\u6570\u636e\u9879\u7684\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u5176\u503c\u662f\u4ece\u5728\u63d0\u4ea4\u5904\u7406\u671f\u95f4<code>\u9012\u589e\u7684\u8ba1\u6570\u5668 ts</code> \u8ba1\u6570\u5668\u4e2d\u83b7\u53d6\u7684\u3002</p> <p></p> </li> <li> <p>\u53ea\u8bfb\u4e8b\u52a1\u7684\u64cd\u4f5c</p> <p>\u5728\u5f00\u59cb\u6267\u884c\u4e4b\u524d\uff0c\u901a\u8fc7\u8bfb\u53d6 ts-counter \u7684\u5f53\u524d\u503c\u6765\u5206\u914d\u65f6\u95f4\u6233\u3002</p> <p>\u5f53\u53ea\u8bfb\u4e8b\u52a1 \\(T_i\\) \u53d1\u51fa read\uff08Q\uff09 \u65f6\uff0c\u8fd4\u56de\u7684\u503c\u662f\u65f6\u95f4\u6233\u4e3a\u5c0f\u4e8e\u6216\u7b49\u4e8e TS\uff08\\(T_i\\)\uff09 \u7684\u6700\u5927\u65f6\u95f4\u6233\u7684\u7248\u672c\u7684\u5185\u5bb9</p> <p></p> </li> </ol> <p>\u521b\u5efa\u591a\u4e2a\u7248\u672c\u4f1a\u589e\u52a0\u5b58\u50a8\u5f00\u9500</p> <ul> <li> <p>\u989d\u5916\u5143\u7ec4</p> </li> <li> <p>\u6bcf\u4e2a\u5143\u7ec4\u4e2d\u90fd\u6709\u989d\u5916\u7684\u7a7a\u95f4\u7528\u4e8e\u5b58\u50a8\u7248\u672c\u4fe1\u606f</p> </li> </ul> <p><code>\u8fc7\u65f6\u7684\u7248\u672c\u5e94\u8be5\u88ab\u5783\u573e\u56de\u6536</code></p> <p>\u5728\u65f6\u95f4\u6233\u5c0f\u4e8e\u6216\u7b49\u4e8e\u7cfb\u7edf\u4e2d\u6700\u65e9\u7684\u53ea\u8bfb\u4e8b\u52a1\u65f6\u95f4\u6233\u7684\u6240\u6709\u7248\u672c\u4e2d\uff0c\u4fdd\u7559\u6700\u5e74\u8f7b\u7684\u7248\u672c \\(Qk\\)\uff0c\u5176\u4ed6\u6240\u6709\u65e9\u4e8e \\(Qk\\) \u7684\u7248\u672c\u90fd\u53ef\u4ee5\u5220\u9664\u3002</p> <p></p>"},{"location":"DB/15.%20Recovery%20System/","title":"15. Recovery System","text":"<p> \u7ea6 6771 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 34 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Failure Classification</li> <li>Storage Structure</li> <li>Data Access</li> <li>Recovery and Atomicity</li> <li>Log-Based Recovery</li> <li>Remote Backup Systems</li> <li>Recovery with Early Lock Release and Logical Undo Operations</li> <li>ARIES Recovery Algorithm</li> </ul>"},{"location":"DB/15.%20Recovery%20System/#151-failure-classification","title":"15.1 Failure Classification","text":"<ul> <li> <p>Database application  \u2014\u2014 transaction failure</p> <ul> <li> <p>\u903b\u8f91\u9519\u8bef\uff1a\u6bd4\u5982\u4e0d\u6ee1\u8db3\u6570\u636e\u5e93\u7ea6\u675f\u6761\u4ef6\uff08\u4e3b\u952e\uff09</p> </li> <li> <p>\u7cfb\u7edf\u9519\u8bef\uff1a\u6b7b\u9501\u3002</p> </li> </ul> <p>\u5e38\u7528\u65b9\u6cd5\u662f\u64a4\u9500 undo, \u628a\u8fd9\u4e2a\u4e8b\u4ef6\u62b9\u6389\u3002\uff08\u57fa\u4e8e\u65e5\u5fd7\uff0c\u5728\u4ea7\u751f\u4fee\u6539\u4e4b\u524d\u5148\u8bb0\u65e5\u5fd7\uff0c\u6545\u969c\u540e\u53ef\u4ee5\u6839\u636e\u65e5\u5fd7\u8fdb\u884c\u64a4\u9500\uff09 </p> </li> <li> <p>DBMS  </p> <ul> <li>\u6389\u7535</li> <li>\u786c\u4ef6\u6545\u969c</li> <li>\u8f6f\u4ef6\u6545\u969c  </li> </ul> <p>system crash \u662f\u5168\u5c40\u6027\u7684\uff0c\u6240\u6709\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e00\u7c7b\u662f\u4e8b\u52a1\u5df2\u7ecf\u63d0\u4ea4\uff08\u4f46\u662f\u6570\u636e\u8fd8\u5728\u7f13\u51b2\u533a\uff09\uff0c\u53e6\u4e00\u7c7b\u662f\u6b63\u5728\u6267\u884c\u7684\u4e8b\u52a1\uff08\u8fd8\u6ca1\u6709\u63d0\u4ea4\uff09\u3002 </p> <p><code>\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 redo(\u6570\u636e\u53ef\u80fd\u6ca1\u5199\u56de\u53bb), \u6ca1\u6709\u5b8c\u6210\u7684\u4e8b\u52a1\u8981 undo.</code> </p> <p>\u5148\u8bb0\u65e5\u5fd7\uff0c\u73b0\u5728\u7684\u6570\u636e\u5e93\u91c7\u7528 repeating history \u7684\u65b9\u6cd5\u3002</p> </li> <li> <p>Database  </p> <ul> <li>\u4ecb\u8d28\u6545\u969c   head crash</li> <li>other disk failure</li> </ul> <p>\u8981\u9632\u6b62\u4ecb\u8d28\u6545\u969c\uff0c\u9700\u8981\u505a\u5907\u4efd\uff08\u62f7\u8d1d\u6216\u8005\u8fdc\u7a0b\uff09 </p> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#152-storage-structure","title":"15.2 Storage Structure","text":"<p>\u65e5\u5fd7\u53ef\u80fd\u4e5f\u4f1a\u51fa\u6545\u969c\uff1f\u6211\u4eec\u5047\u8bbe\u65e5\u5fd7\u5b58\u50a8\u5728 Stable storage \u91cc\u3002</p> <ul> <li> <p>Volatile storage  <code>\u6613\u5931\u6027\u5b58\u50a8: main memory, cache</code></p> <p>\u4f1a\u5728system crash\uff08power\uff0chardware\uff0csoftware failure\uff09\u4e2d\u635f\u5931\uff0c\u7b26\u5408\u6389\u7535\u6613\u5931</p> </li> <li> <p>Nonvolatile storage   <code>\u975e\u6613\u5931\u6027\u5b58\u50a8\uff1adisk, tape, flash memory\uff0cbattery backed up RAM</code></p> <p>survives system crashes\uff0c\u4f46\u4ecd\u7136\u5b58\u5728\u4e22\u5931\u6570\u636e\u7684\u53ef\u80fd</p> </li> <li> <p>Stable storage:</p> <ul> <li> <p>a <code>mythical(\u865a\u62df\u7684)</code> form of storage that <code>survives all failures</code></p> <p>\u80fd\u5728\u6240\u6709\u6545\u969c\u4e2d\u5e78\u5b58\u4e0b\u6765</p> </li> <li> <p>approximated by maintaining multiple copies on distinct nonvolatile media  </p> <p>\u901a\u8fc7\u5728\u4e0d\u540c\u7684\u975e\u6613\u5931\u6027\u4ecb\u8d28\u4e0a\u7ef4\u62a4\u591a\u4e2a\u62f7\u8d1d\u6765\u8fd1\u4f3c</p> </li> </ul> <p><code>\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbe\u65e5\u5fd7\u90fd\u4f1a\u8bb0\u5f55\u5230stable storage\u4e2d\uff0c\u4e0d\u4f1a\u53d1\u751f\u4e22\u5931</code></p> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1521-implementation","title":"15.2.1 Implementation","text":"<ul> <li> <p>Maintain multiple copies of each block on separate disks</p> <p>\u5728\u5355\u72ec\u7684\u78c1\u76d8\u4e0a\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u591a\u4e2a\u526f\u672c</p> </li> <li> <p>Failure during data transfer can still result in inconsistent copies  </p> <p>\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u5931\u8d25\u4ecd\u53ef\u80fd\u5bfc\u81f4\u526f\u672c\u4e0d\u4e00\u81f4</p> </li> <li> <p>Protecting storage media from failure during data transfer </p> <p>\u4fdd\u62a4\u5b58\u50a8\u4ecb\u8d28\u5728\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u6545\u969c</p> </li> </ul> <p><code>Stable Storage\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\uff1a\u5229\u7528\u591a\u4e2a\u975e\u6613\u5931\u6027\u7684\u5b58\u50a8\u4ecb\u8d28\u5b58\u50a8\u591a\u4e2a\u526f\u672c\uff0c\u8fdb\u884c\u5907\u4efd\u5904\u7406\u3002\u4f46\u662f\u4ecd\u7136\u5b58\u5728\u7740\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u5931\u8d25\u5bfc\u81f4\u526f\u672c\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u73b0\u8c61\uff0c\u4f8b\u5982partial failure\uff0c\u76ee\u6807\u5757\u63a5\u53d7\u7684\u4fe1\u606f\u4e0d\u6b63\u786e\uff0ctotal failure\u76ee\u6807\u5757\u6ca1\u6709\u88ab\u66f4\u65b0</code></p> <p><code>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u62a4\u5b58\u50a8\u4ecb\u8d28\u5728\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u53d1\u751f\u6545\u969c\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a\u5148\u5c06\u6570\u636e\u5199\u5165\u7b2c\u4e00\u4e2a\u7269\u7406\u5757\u4e2d\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u5757\u6210\u529f\u4e14\u6b63\u786e\u7684\u5199\u5165\uff0c\u624d\u5c06\u76f8\u540c\u7684\u6570\u636e\u5199\u5165\u5230\u7b2c\u4e8c\u4e2a\u7269\u7406\u5757\u4e2d\uff0c\u4ee5\u6b64\u7c7b\u63a8</code></p> <p><code>\u5982\u679c\u5df2\u7ecf\u53d1\u73b0\u9519\u8bef\u4e86\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u65b9\u6cd5\u4e00\uff08expensive\uff09\uff1a\u6bd4\u8f83\u6bcf\u4e2a\u78c1\u76d8\u5757\u7684\u4e24\u4e2a\u526f\u672c\uff0c\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u76f4\u63a5\u8986\u76d6\u3002\u65b9\u6cd5\u4e8c\uff08better\uff09:\u8bb0\u5f55\u8fc7\u7a0b\u4e2d\u7684\u78c1\u76d8\u5728\u975e\u6613\u5931\u6027\u5b58\u50a8\u4e0a\u5199\u5165\u3002</code></p> <p>\u5982\u679c\u68c0\u6d4b\u5230\u4e00\u4e2a\u4e0d\u4e00\u81f4\u7684\u5757\u7684\u526f\u672c\u6709\u9519\u8bef\uff08\u6821\u9a8c\u548c\u9519\u8bef\uff09\uff0c\u8bf7\u901a\u8fc7\u5176\u4ed6\u526f\u672c\u8986\u76d6\u5b83\u3002 \u5982\u679c\u4e24\u8005\u90fd\u6ca1\u6709\u9519\u8bef\uff0c\u4f46\u6709\u6240\u4e0d\u540c\uff0c\u8bf7\u7528\u7b2c\u4e00\u4e2a\u5757\u8986\u76d6\u7b2c\u4e8c\u4e2a\u5757\u3002</p>"},{"location":"DB/15.%20Recovery%20System/#1522-database-recovery","title":"15.2.2 Database Recovery","text":"<p>Recovery algorithms are techniques to ensure database consistency and transaction atomicity and durability despite failures.  </p> <p>\u6062\u590d\u7b97\u6cd5\u662f\u5728\u53d1\u751f\u6545\u969c\u65f6<code>\u786e\u4fdd\u6570\u636e\u5e93\u4e00\u81f4\u6027\u4ee5\u53ca\u4e8b\u52a1\u539f\u5b50\u6027\u548c\u6301\u4e45\u6027</code>\u7684\u6280\u672f</p> <p>Recovery algorithms have two parts</p> <ul> <li> <p>Actions taken during normal transaction processing to ensure enough information exists to recover from failures  </p> <p>\u5728\u6b63\u5e38\u4e8b\u52a1\u5904\u7406\u671f\u95f4\u4e3a<code>\u786e\u4fdd\u5b58\u5728\u8db3\u591f\u7684\u4fe1\u606f\u4ee5\u4ece\u6545\u969c\u4e2d\u6062\u590d(\u5199\u65e5\u5fd7)</code>\u800c\u91c7\u53d6\u7684\u64cd\u4f5c</p> <p>\u5b58\u5728tradeoff\uff0c\u4e8b\u52a1\u5904\u7406\u548c\u6545\u969c\u6062\u590d\u6027\u80fd\u4e4b\u95f4\u7684\u6743\u8861</p> <p>\u7406\u60f3\u7684\u7b97\u6cd5\uff1a\u6062\u590d\u5f97\u5f88\u5feb\uff0c\u5bf9\u4e8b\u52a1\u6b63\u5e38\u64cd\u4f5c\u6ca1\u6709\u5f71\u54cd\uff08\u8bb0\u5f55\u4fe1\u606f\u7684\u65f6\u5019\u4e0d\u80fd\u6d88\u8017\u592a\u591a\u6027\u80fd\uff09\uff0c\u5373\u517c\u987e\u4e0a\u9762\u4e24\u4e2a\u90e8\u5206\u3002</p> </li> <li> <p>Actions taken after a failure to recover the database contents to a state that ensures atomicity, consistency and durability </p> <p>\u51fa\u73b0failure\u4e4b\u540e\uff0c\u91c7\u53d6\u63aa\u65bd\u4f7f\u6570\u636e\u5e93\u7684\u5185\u5bb9\u6062\u590d\u5230\u67d0\u72b6\u6001\u4ee5\u786e\u4fdd\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u6301\u4e45\u6027</p> </li> <li> <p><code>\u6062\u590d\u7b97\u6cd5\u5305\u542b\u4e24\u90e8\u5206\uff1a\u4e00\u90e8\u5206\u662f\u5728\u4e8b\u52a1\u6267\u884c\u65f6\u4fdd\u5b58\u4fe1\u606f\uff0c\u7528\u4e8e\u65e5\u540e\u7684\u6062\u590d\u3002\u4e00\u90e8\u5206\u662f\u5728\u6545\u969c\u53d1\u751f\u4e4b\u540e\uff0c\u91c7\u53d6\u63aa\u65bd\u4f7f\u5f97\u6570\u636e\u5e93\u6062\u590d\u5230\u539f\u6765\u7684\u4e00\u81f4\u6027\u539f\u5b50\u6027\u6301\u4e45\u6027\u72b6\u6001</code></p> </li> </ul> <p>We assume that strict two-phase locking ensures no dirty read. </p> <p><code>\u4f7f\u7528\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u4fdd\u8bc1\u6ca1\u6709\u810f\u6570\u636e\u3002</code> </p> <p>\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u53ef\u4ee5\u4fdd\u8bc1\u51b2\u7a81\u53ef\u4e32\u884c\u5316\uff0c\u4f46\u662f\u65e0\u6cd5\u4fdd\u8bc1\u6570\u636e\u53ef\u6062\u590d\u6027\uff08\u56e0\u4e3a\u5047\u5982\u4e8b\u52a1A\u548c\u4e8b\u52a1B\u4fdd\u6301\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u90a3\u4e48\u5047\u5982A\u8981\u8fdb\u884c\u6570\u636e\u5199\u5165\uff0c\u4f1a\u5728\u5199\u5165\u4e4b\u540e\u7acb\u9a6c\u653e\u5f00X\u9501\uff0c\u90a3\u4e48\u4e8b\u52a1B\u5c31\u6709\u53ef\u80fd\u8bfb\u53d6A\u7684\u810f\u6570\u636e\u3002\u5047\u8bbeB\u5148\u63d0\u4ea4\uff0cA\u518d\u56de\u6eda\uff0c\u90a3\u4e48B\u63d0\u4ea4\u7684\u6570\u636e\u5c06\u4e0d\u53ef\u6062\u590d\uff09\u3002</p> <p></p> <p>Idempotent(\u5e42\u7b49\u6027): An recovery algorithm is said to be idempotent if executing it several times gives the same result as executing it once.  </p> <p>\u7b97\u6cd5\u6062\u590d\u591a\u6b21\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002<code>\uff08\u6062\u590d\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4e5f\u53d1\u751f crash\uff0c\u91cd\u65b0\u6062\u590d\u4e00\u6b21\u5373\u53ef\uff09</code></p>"},{"location":"DB/15.%20Recovery%20System/#153-log-based-recovery","title":"15.3 Log-Based Recovery","text":""},{"location":"DB/15.%20Recovery%20System/#1531-log-records","title":"15.3.1 Log Records","text":"<p>A log is kept on stable storage(\u7a33\u5b9a\u5b58\u50a8\u5668). </p> <p>The log is a sequence of log records, and maintains a record of update activities on the database.</p> <ul> <li> <p>When transaction \\(Ti\\) starts, it registers itself by writing a \u201cstart\u201d log record: \\(&lt;T_i\\  start&gt;\\) </p> <p>\u4e8b\u52a1\u5f00\u59cb. \\(Ti\\) \u8868\u793a\u4e8b\u52a1\u7684 id. </p> </li> <li> <p>Before \\(Ti\\) executes write(X), writing \u201cupdate\u201d log record \\(&lt;T_i, X,  V_1,  V_2&gt;\\) </p> <p><code>\u4e8b\u52a1\u628a X \u6570\u636e\u9879\u7684\u503c\u4ece V1(old value) \u6539\u4e3a V2(new value).</code> </p> <p>\u8fd9\u4e2a\u5c31\u662f\u6062\u590d\u7684\u57fa\u7840. undo \u5f97\u5230 old value, redo \u5f97\u5230 new value. </p> <p><code>Insert \u5c31\u662f old \u4e3a\u7a7a, Delete \u5c31\u662f new \u4e3a\u7a7a\u3002</code></p> </li> <li> <p>When \\(Ti\\) finishes it last statement, writing \u201ccommit\u201d log record: \\(&lt;T_i\\  commit&gt;\\) </p> </li> <li> <p>When \\(Ti\\)  complete rollback, writing \u201cabort\u201d log record: \\(&lt;T_i\\  abort&gt;\\) </p> </li> </ul> <p><code>\u5148\u8bb0\u65e5\u5fd7\uff0c\u80fd\u591f\u5b9e\u73b0\u4e8b\u52a1\u6267\u884c\u987a\u5e8f\u5316\uff08\u4f18\u5316\u8c03\u5ea6\uff09</code></p> <p>Log Example</p> <p>\u8fd9\u91cc\u5f53\u6267\u884c\u5230 T2 \u56de\u6eda\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u8fdb\u884c\u6062\u590d\uff08\u7eff\u8272\u7684\u884c\u8868\u793a\u8865\u507f\u65e5\u5fd7\uff09\u6bd4\u5982 T2 \u628a C \u6062\u590d\u4e3a 500, T3 \u628a B \u6062\u590d\u4e3a 300, \u6700\u540e T2 abort. (undo \u64cd\u4f5c\u4e5f\u4f1a\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d) </p> <p><code>\u7eff\u8272\u90e8\u5206\u662f\u8865\u507f\u65e5\u5fd7\uff0c\u7528\u4e8erollback\u7684\u6062\u590d</code></p> <p>\u53d1\u751f crash \u7684\u65f6\u5019 repeat history(undo \u6b63\u5e38\u7684\u64cd\u4f5c\u4e5f\u4f1a\u91cd\u590d), \u968f\u540e\u5f97\u5230\u5e76\u6267\u884c undo list.(\u4e8b\u52a1\u5f00\u59cb\u540e\u5148\u628a\u4e8b\u52a1\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u4e86\u5c31\u628a\u4e8b\u52a1\u79fb\u9664) \u53ea\u9700\u8981\u628a T4 undo.(\u5047\u8bbe\u6545\u969c\u524d\u53ea\u6267\u884c\u5230 15 \u884c) </p> <p><code>\u53d1\u751fcrash\uff0c\u5148\u6062\u590d\u73b0\u573a\uff0cRepeating history\uff0c\u4e0d\u7ba1\u6709\u6ca1\u6709\u505a\u8fc7\uff0c\u628a\u6240\u6709\u7684\u64cd\u4f5c\u91cd\u65b0\u505a\u4e00\u904d\uff08\u8fd9\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u539f\u56e0\u5728\u4e8e\u6267\u884cupdate\u65f6\uff0cnew value\u6052\u5b9a\uff0c\u5e76\u4e0d\u4f1a\u5f97\u5230\u65b0\u7684\u6570\u636e\u5e93\u7ed3\u679c\uff09\uff0c\u5c06\u5404\u4e2a\u4e8b\u52a1\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5199\u5165\u5230undo list\uff0c\u9047\u5230commit\uff0c\u518d\u628a\u8be5\u4e8b\u52a1\u6240\u6709\u7684\u64cd\u4f5c\u53bb\u9664\u5373\u53ef\u3002</code></p> <p><code>\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u662fundo pass\uff0c\u4f8b\u5982T4\u91cd\u65b0\u5c06A\u53d8\u4e3a100\uff0c\u5e76\u4e14\u8bb0\u5f55\u8865\u507f\u65e5\u5fd7\uff0c\u505a\u5b8c\u4e86\u518d\u5199&lt;T4 abort&gt;.\u4ece\u6570\u636e\u5e93\u53d1\u751fcrash\u7684\u5730\u65b9\uff0c\u4e00\u76f4undo\u5230&lt;T4,start&gt;\u3002</code></p>"},{"location":"DB/15.%20Recovery%20System/#1532-write-ahead-logging","title":"15.3.2 Write-Ahead Logging","text":"<p><code>\u5148\u5199\u65e5\u5fd7\u539f\u5219</code></p> <p>Before a data in main memory is output to the database, the log records pertaining to data must have been output to stable storage.  </p> <p>\u5728\u4e3b\u5b58\u4e2d\u7684\u6570\u636e\u8f93\u51fa\u5230\u6570\u636e\u5e93\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u5c06\u4e0e\u6570\u636e\u6709\u5173\u7684\u65e5\u5fd7\u8bb0\u5f55\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u5668\u4e2d\u3002</p> <p><code>Concurrency Control and Recover</code></p> <ul> <li>\u5bf9\u4e8e\u5e76\u53d1\u4e8b\u52a1\uff0c\u6240\u6709\u7684\u4e8b\u52a1\u5171\u4eab\u4e00\u4e2a disk buffer \u548c log buffer<ul> <li>\u7f13\u51b2\u533a\u5757\u5185\u80fd\u591f\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u52a1\u66f4\u65b0\u7684\u6570\u636e\u9879</li> </ul> </li> <li>\u6211\u4eec\u5047\u5b9a\uff0c\u5982\u679c\u4e8b\u52a1 $Ti $\u4fee\u6539\u4e86\u67d0\u4e2a\u9879\uff0c\u5219\u5728 $Ti $\u63d0\u4ea4\u6216\u4e2d\u6b62\u4e4b\u524d\uff0c\u5176\u4ed6\u4e8b\u52a1\u90fd\u4e0d\u80fd\u4fee\u6539\u540c\u4e00\u4e2a\u9879\u3002\u5373\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u66f4\u65b0\u5bf9\u5176\u4ed6\u4e8b\u52a1\u4e0d\u53ef\u89c1\uff0c\u786e\u4fdd\u9694\u79bb\u6027<ul> <li>\u53ef\u4ee5\u4f7f\u7528X\u9501\uff0c\u4e00\u76f4\u5230\u4e8b\u52a1\u5373\u5c06\u63d0\u4ea4\u624d\u89e3\u9501\uff08\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff09</li> </ul> </li> </ul> <p><code>Database Modification</code></p> <ul> <li><code>immediate-modification scheme(\u7acb\u5373\u4fee\u6539\u65b9\u6848)</code> \u5141\u8bb8\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u5bf9\u7f13\u51b2\u533a\u6216\u78c1\u76d8\u672c\u8eab\u8fdb\u884c\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u66f4\u65b0<ul> <li>\u5199\u5165\u6570\u636e\u5e93\u9879\u4e4b\u524d\u5fc5\u987b\u5148\u5199\u5165\u66f4\u65b0\u65e5\u5fd7\u8bb0\u5f55</li> </ul> </li> <li><code>deferred-modification schema\uff08\u5ef6\u8fdf\u4fee\u6539\u65b9\u6848\uff09</code>\u4ec5\u5728\u4e8b\u52a1\u63d0\u4ea4\u65f6\u5bf9\u7f13\u51b2\u533a/\u78c1\u76d8\u6267\u884c\u66f4\u65b0</li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1533-transaction-commit","title":"15.3.3 Transaction Commit","text":"<ul> <li> <p>A transaction is said to have committed when its commit log record is output to stable storage </p> <p><code>commit \u65e5\u5fd7\u7ecf\u7531log buffer\u5199\u5165\u5230log file\uff08stable storage\uff09\u8868\u793a\u8be5\u4e8b\u52a1\u5df2\u7ecf\u5b8c\u6210\u63d0\u4ea4</code> </p> </li> <li> <p>all previous log records of the transaction must have been output already </p> <p><code>commit\u662f\u5f53\u524d\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\uff0c\u663e\u7136\u524d\u9762\u7684log records\u5df2\u7ecf\u5199\u5165\u5230log file</code></p> </li> <li> <p>Writes performed by a transaction may still be in the buffer when the transaction commits, and may be output later.    </p> <p><code>\u4f46\u6b64\u65f6\u4fee\u6539\u7684\u6570\u636e\u9879\u4e0d\u4e00\u5b9a\u5df2\u7ecf\u5199\u56de\u5230\u6570\u636e\u5e93\u91cc \u3002\u5982\u679c\u7acb\u523b\u5c06 block \u5199\u56de\u78c1\u76d8\u53ef\u80fd\u5f15\u8d77\u5927\u91cf I/O \u64cd\u4f5c</code></p> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1534-undo\u64a4\u9500-and-redo\u91cd\u505a-operations","title":"15.3.4 Undo(\u64a4\u9500) and Redo\uff08\u91cd\u505a\uff09 Operations","text":"<p><code>\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6267\u884cundo\u65f6\uff0c\u9700\u8981\u5199\u8865\u507f\u65e5\u5fd7\uff0c&lt;T,X,V&gt;,\u5728\u5b8c\u6210undo\u4e4b\u540e\uff0c\u9700\u8981\u4e00\u6761log record &lt;T abort&gt;</code></p> <p></p> <p><code>\u4e00\u822c\u662f\u5148\u5168\u90e8\u505a\u4e00\u904d\uff0c\u7136\u540e\u628a\u6709\u5934\u65e0\u5c3e\u7684undo\u5373\u53ef</code></p> <p></p>"},{"location":"DB/15.%20Recovery%20System/#1535-checkpoints","title":"15.3.5 Checkpoints","text":"<p>\u521a\u521arepeating history\u7684\u8fc7\u7a0b\uff0c\u662f\u4ece\u65e5\u5fd7\u7684\u5934\u90e8\u5f00\u59cb\u91cd\u6f14\uff0c\u4e00\u76f4\u91cd\u6f14\u5230\u6211\u4eec\u53d1\u751fcrush\u7684\u5730\u65b9\u3002\u91cd\u6f14\u7684\u64cd\u4f5c\u592a\u591a\uff0c\u6d6a\u8d39\u592a\u591a\u7684\u8d44\u6e90\u3002</p> <p>\u6bcf\u9694\u4e00\u5b9a\u7684\u65f6\u95f4\uff0c\u6216\u8005\u6bcf\u9694\u4e00\u5b9a\u65e5\u5fd7\u7684\u91cf\uff0c\u5c31\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u68c0\u67e5\u70b9\u3002\u68c0\u67e5\u70b9\u7684\u4f5c\u7528\u662f\u786e\u8ba4\u4e00\u4e0b\uff0c\u68c0\u67e5\u70b9\u4e4b\u524d\u7684\u6240\u6709\u6570\u636e\u548c\u64cd\u4f5c\uff0c\u90fd\u5df2\u7ecf\u6b63\u786e\u53cd\u6620\u5230\u6570\u636e\u5e93\u91cc\u9762\u4e86\u3002</p> <p>Redoing/undoing all transactions recorded in the log can be very slow. </p> <p>Streamline recovery procedure by periodically performing checkpointing. </p> <p><code>\u91cd\u6f14\u5386\u53f2\u53ef\u80fd\u5f88\u957f\u3002checkpoint \u662f\u786e\u8ba4\u4e4b\u524d\u7684\u64cd\u4f5c\u90fd\u5df2\u7ecf\u53cd\u6620\u5230\u6570\u636e\u5e93\u91cc\u53bb\u4e86\uff0c\u8fd9\u6837\u91cd\u6f14\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece checkpoint \u5f00\u59cb\u3002</code></p> <ul> <li> <p>Output all log records currently residing in main memory onto stable storage.  </p> <p>\u65e5\u5fd7\u4e0d\u662f\u751f\u6210\u5c31\u5f80\u5185\u5b58\u5199\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u65e5\u5fd7\u7f13\u51b2\u533a(stable storage)\u3002 </p> </li> <li> <p>Output all modified buffer blocks to the disk.  </p> <p>\u628a\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5185\u5b58\u5757\u5199\u56de\u5230\u78c1\u76d8\u4e2d</p> </li> <li> <p>Write a log record \\(&lt;checkpoint\\ L&gt;\\) onto stable storage where L is a list of all transactions active at the time of checkpoint.   </p> <p>\u5199\u4e00\u4e2a\u65e5\u5fd7\u7684\u6807\u8bb0\uff08\u65b0\u7684\u65e5\u5fd7\u7c7b\u578b\uff09. L \u662f\u5f53\u524d\u6b63\u5728\u5de5\u4f5c\u7684\u4e8b\u52a1\u7684\u8868\u3002\uff08\u7528\u6765\u505a undo list \u7684\u521d\u59cb\u5316\u5217\u8868\uff09</p> </li> <li> <p>All updates are stopped while doing checkpointing!!!</p> <p><code>\u505a checkpoint \u7684\u65f6\u5019\u5176\u4ed6\u6d3b\u8dc3\u4e8b\u52a1\u90fd\u8981\u505c\u4e0b\u6765.\u8fd9\u65f6\u5019\u5c31\u5b58\u5728\u4e00\u4e2atradeoff\uff0c\u6027\u80fd\u4f1a\u6536\u5230\u5f71\u54cd\u3002</code></p> </li> </ul> <p>\u8bbe\u7f6e\u68c0\u67e5\u70b9\u65f6\uff0c\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6b65\u9aa4\uff1a</p> <p>1. \u5c06\u6240\u6709\u65e5\u5fd7\u4e2d\u7684\u8bb0\u5f55\u5b58\u50a8\u5230\u7a33\u5b9a\u5b58\u50a8\u5668\u4e2d\u3002</p> <p>2. \u628a\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5185\u5b58\u5757\u5199\u56de\u5230\u78c1\u76d8\u4e2d\u3002</p> <p>3. \u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5199\u5165\u4e00\u6761\u8bb0\u5f55\uff1a\u3002\u5176\u4e2d\uff0cL\u8868\u793a\u5904\u4e8e\u8be5checkpoint\u7684\u65f6\u5019\uff0c\u6070\u597d\u6b63\u5728\u6d3b\u8dc3\u7684\u4e8b\u52a1\u3002 <p>Example \"Log File with Checkpoint : Example\"</p> <p> </p> <p>\u91cd\u6f14\u5386\u53f2\u4ece\u6700\u8fd1\u7684 checkpoint \u91cd\u6f14. {T2 T4} \u4f5c\u4e3a undo list \u7684\u521d\u59cb\u5316\u503c\u3002 </p> <p>Undo List\u7684\u521d\u59cb\u503c\u5c31\u662fcheckpoint\u4e2d\u4fdd\u5b58\u7684\u6b63\u5728\u6d3b\u8dc3\u7684\u4e8b\u52a1\u3002</p> <p>??? Example \"Example of Recovery\"</p> <p> </p> <p>\u8bbe\u7f6e\u4e86checkpoint\uff0c\u6d3b\u8dc3\u7684\u4e8b\u52a1\u7684\u521d\u59cb\u503c\u662fT0\u548cT1\u3002\u91cd\u6f14\u5386\u53f2\u7684\u65f6\u5019\uff0c\u4ece\u8fd9\u4e2acheckpoint\u5f00\u59cb\u5373\u53ef\u3002\u5728\u91cd\u6f14\u5386\u53f2\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0T1 commit\uff0cT0 abort\u3002\u4f46\u662fT2 start\u4e14\u6ca1\u6709commit\u6216abort\u3002\u56e0\u6b64\uff0c\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684Undo List\u53ea\u6709T2\u3002</p> <p>Undo \u5230T2\u5f00\u59cb\u7684\u5730\u65b9\uff0c\u5e76\u4e14\u8bb0\u5f55\u8865\u507f\u65e5\u5fd7\u5373\u53ef\u3002</p> <p><code>checkpoint \u4e4b\u95f4\u7684\u95f4\u9694\u5e94\u8be5\u5982\u4f55\u786e\u5b9a\uff1f  \u6839\u636e\u65e5\u5fd7\u91cf\u3002</code></p>"},{"location":"DB/15.%20Recovery%20System/#1536-log--buffer--database-buffer","title":"15.3.6 Log  Buffer &amp; Database Buffer","text":"<p><code>Log record buffering\uff08\u65e5\u5fd7\u8bb0\u5f55\u7f13\u51b2\uff09</code>\uff1a\u65e5\u5fd7\u8bb0\u5f55\u7f13\u51b2\u5728\u4e3b\u5185\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u3002\u5f53\u7f13\u51b2\u533a\u4e2d\u7684\u65e5\u5fd7\u8bb0\u5f55\u5757\u5df2\u6ee1\u6216\u6267\u884c\u65e5\u5fd7\u5f3a\u5236\u64cd\u4f5c\u65f6\uff0c\u65e5\u5fd7\u8bb0\u5f55\u5c06\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u3002</p> <p>\u6267\u884c\u65e5\u5fd7\u5f3a\u5236\u901a\u8fc7\u5f3a\u5236\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\uff08\u5305\u62eccommit\u8bb0\u5f55\uff09\u8fdb\u5165\u7a33\u5b9a\u5b58\u50a8\u6765\u63d0\u4ea4\u4e8b\u52a1\u3002</p> <p>\u6211\u4eec\u5728\u628a\u6570\u636e buffer \u4e2d\u7684\u5757\u5199\u5230\u6570\u636e\u5e93\u65f6\uff0c\u8981\u5148\u628a\u5757\u5bf9\u5e94\u7684\u65e5\u5fd7\u5148\u5199\u5230\u65e5\u5fd7\u6587\u4ef6\uff08\u76f4\u63a5\u628a\u65e5\u5fd7\u5168\u90e8\u5237\u5199\u4e00\u904d\uff09\u3002  </p> <p>\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\u6709\u4e00\u4e2a\u5bf9\u65e5\u5fd7\u7684\u5f3a\u5236\u5237\u5199\u3002<code>commit\u65f6\uff0c\u8981\u6c42commit\u65e5\u5fd7\u5199\u5165\u5230log file\uff0c\u786e\u4fdd\u5df2\u7ecf\u5b9e\u73b0\uff0c\u5e76\u4e14database buffer\u4e2d\u4fee\u6539\u7684block\u4e5f\u5199\u5165\u5230disk</code></p> <p>\u7f3a\u70b9\uff1a\u4f1a\u6253\u65ad\u4e8b\u52a1\uff0c\u4e8b\u52a1\u96c6\u4e2d\uff0ccommit\u8fc7\u591a\uff0ccheckpoint\u4e5f\u8fc7\u591a,IO\u64cd\u4f5c\u8fc7\u591a</p> <p><code>\u5982\u679c\u4e8b\u52a1commit\u5199\u5230log buffer\uff0c\u8fd8\u4e0d\u7b97\u662fcommit\uff0c\u6240\u4ee5\u53d1\u751f\u6389\u7535\u6545\u969c\uff0clog buffer\u4e22\u5931\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\u4e8b\u52a1\u63d0\u4ea4\u53ea\u80fd\u662fcommit\u5199\u5165\u5230log file</code></p> <p>\u7ec4\u63d0\u4ea4\uff1a\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u8f93\u51fa\u64cd\u4f5c\u8f93\u51fa\u591a\u4e2a\u65e5\u5fd7\u8bb0\u5f55\uff0c\u4ece\u800c\u964d\u4f4e I/O \u6210\u672c\u3002</p> <p>**<code>Group commit</code>: several log records can be output using a single output operation, reducing the I/O cost. commit **</p> <p>\u53ef\u80fd\u5728\u65e5\u5fd7\u91cc\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4, \u7b49\u5230 buffer \u91cc\u6709\u8db3\u591f\u591a\u7684\u65e5\u5fd7\u8bb0\u5f55\u518d\u5199\u51fa\u53bb\u3002 </p> <p><code>\u5982\u679c\u4e8b\u52a1commit\u5199\u5230log buffer\uff0c\u8fd8\u4e0d\u7b97\u662fcommit\uff0c\u6240\u4ee5\u53d1\u751f\u6389\u7535\u6545\u969c\uff0clog buffer\u4e22\u5931\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\u4e8b\u52a1\u63d0\u4ea4\u53ea\u80fd\u662fcommit\u5199\u5165\u5230log file</code></p> <ul> <li> <p>The recovery algorithm supports the no-force policy(\u975e\u5f3a\u5236): </p> <p>i.e., updated blocks need not be written to disk when transaction commits.  </p> <p>\u4e8b\u52a1commit\u540e\uff0c\u4e0d\u8981\u6c42\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7acb\u5373\u5199\u5165\u5230\u78c1\u76d8\u4e2d\u3002\uff08\u8f83\u597d\u7684\u65b9\u5f0f\uff09</p> </li> <li> <p>The recovery algorithm supports the steal policy(\u7a83\u53d6\u7b56\u7565):</p> <p>i.e., blocks containing updates of uncommitted transactions can be written to disk, even before the transaction commits. </p> <p>\u5373\u4f7f\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5305\u542b\u672a\u63d0\u4ea4\u4e8b\u52a1\u66f4\u65b0\u7684\u5757\u5199\u5165\u78c1\u76d8</p> <p><code>\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u810f\u6570\u636e\u80fd\u4e0d\u80fd\u88ab\u5199\u5230\u78c1\u76d8\u91cc\u53bb\uff1f\uff08\u540c\u6837\u5730\u9700\u8981\u5148\u628a\u65e5\u5fd7\u5199\u51fa\u53bb\uff09</code></p> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1537-fuzzy-checkpointing","title":"15.3.7 Fuzzy Checkpointing","text":"<p>Fuzzy \u6a21\u7cca</p> <p>\u505a checkpoint \u7684\u65f6\u5019\u6211\u4eec\u5982\u679c\u8981\u6c42\u5176\u4ed6\u6d3b\u8dc3\u4e8b\u52a1\u90fd\u505c\u4e0b\u6765\uff0c\u4e00\u6b21\u6027\u628a\u810f\u6570\u636e\u90fd\u5237\u5199\u51fa\u53bb\uff0c\u541e\u5410\u7387\u4f1a\u5ffd\u9ad8\u5ffd\u4f4e\uff0c\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u5c31\u6bd4\u8f83\u5dee\u3002 </p> <p>Fuzzy Checkpoint \uff1a<code>\u505acheck point\u7684\u65f6\u5019\uff0c\u628a\u5185\u5b58\u4e2d\u7684\u810f\u9875\u5168\u90e8\u8bb0\u4e0b\u6765\uff0c\u540e\u9762\u6162\u6162\u5199\u56de\u5230\u78c1\u76d8\u53bb\u5373\u53ef\u3002\u6b64\u65f6\u4e0d\u4f1a\u9020\u6210\u6570\u636e\u5e93\u7cfb\u7edf\u77ed\u6682\u7684\u505c\u987f</code></p> <p>check point\u8bbe\u7f6e\u4e4b\u540e\uff0c\u810f\u9875\u6162\u6162\u5199\u56de\u5230\u78c1\u76d8\u4e2d\u53bb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u810f\u9875\u5168\u90e8\u5199\u51fa\u540e\uff0c\u8be5check point\u53d8\u4e3a\u4e00\u4e2a\u6210\u529f\u7684check point\u3002\u5728\u786c\u76d8\u4e0a\u9762\uff0c\u6709\u4e00\u4e2a\u6307\u9488last_checkpoint\uff0c\u6307\u5411\u6700\u540e\u4e00\u4e2a\u6210\u529f\u7684check point\u3002Repeating history\u7684\u65f6\u5019\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u6210\u529f\u7684check point\u5f00\u59cb\u3002</p> <ul> <li>Temporarily stop all updates by transactions</li> <li>Write a \\(&lt;checkpoint\\ L&gt;\\) log record and force log to stable storage</li> <li>Note list M of modified buffer blocks</li> <li>Now permit transactions to proceed with their actions</li> <li>Output to disk all modified buffer blocks in list M</li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1538-failure-with-loss-of-nonvolatile-storage","title":"15.3.8 Failure with Loss of Nonvolatile Storage","text":"<p>\u8981\u4ece\u78c1\u76d8\u6545\u969c\u4e2d\u6062\u590d\uff0c\u4ece\u6700\u8fd1\u7684\u8f6c\u50a8\u4e2d\u6062\u590d\u6570\u636e\u5e93\u3002</p> <p>\u67e5\u9605\u65e5\u5fd7\u5e76\u91cd\u505a\u8f6c\u50a8\u540e\u63d0\u4ea4\u7684\u6240\u6709\u4e8b\u52a1</p> <p>\u53ef\u4ee5\u6269\u5c55\u4ee5\u5141\u8bb8\u4e8b\u52a1\u5728\u8f6c\u50a8\u671f\u95f4\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff1b\u79f0\u4e3a\u6a21\u7cca\u8f6c\u50a8\u6216\u8054\u673a\u8f6c\u50a8\u3002\u7c7b\u4f3c\u4e8e\u6a21\u7cca\u68c0\u67e5\u70b9</p>"},{"location":"DB/15.%20Recovery%20System/#154-recovery-with-early-lock-release-and-logical-undo-operations","title":"15.4 Recovery with Early Lock Release and Logical Undo Operations","text":""},{"location":"DB/15.%20Recovery%20System/#1541-logical-undo-logging","title":"15.4.1 Logical Undo Logging","text":"<p>\u4e4b\u524d\uff0c\u91c7\u53d6\u7684\u662f\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff08\u4e0d\u8bfb\u810f\u6570\u636e\uff09\uff0c\u5373\u5728\u4e00\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\uff0c\u8fd9\u4e2a\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u5176\u4ed6\u4e8b\u52a1\u8bfb\u53d6\u6216\u5199\u5165</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u4e00\u822c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff08\u5141\u8bb8\u65e9\u653e\u9501\uff09\uff0c\u63d0\u4f9b\u6570\u636e\u6062\u590d\u7b97\u6cd5\u3002\u4e00\u822c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u652f\u6301\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u672a\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u5176\u5199\u5165\u8fc7\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u88ab\u5176\u4ed6\u4e8b\u52a1\u518d\u6b21\u5199\u5165\u3002</p> <p>\u5982\u679c\u65e9\u653e\u9501\uff0c\u540e\u7eed\u6062\u590d\u4e3a old value \u53ef\u80fd\u6ca1\u6709\u610f\u4e49\u3002</p> <p>\u6bd4\u5982\u5b58\u6b3e 100, \u8f6c\u5165 100. \u90a3\u4e48\u6211\u4eec\u6062\u590d\u4e3a 100(\u7269\u7406\u64a4\u9500) \u5c31\u6ca1\u6709\u610f\u4e49\u3002\u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u91c7\u7528\u903b\u8f91\u64a4\u9500\uff0c\u5373\u5982\u679c <code>a+=100</code>, \u6062\u590d\u65f6\u5c31\u5e94\u8be5 <code>a-=100</code>. </p> <p><code>\u903b\u8f91undo\u662f\u6267\u884c\u53cd\u64cd\u4f5c\uff0c\u7269\u7406undo\u662f\u6267\u884c\u6062\u590d\u6210\u539f\u6765\u7684\u503c\u3002\u4f46\u662f\u65e9\u653e\u9501\uff0c\u610f\u5473\u7740\u522b\u4eba\u80fd\u591f\u8bfb\u53d6\u4f60\u6700\u65b0\u5199\u5165\u7684\u6570\u636e\uff0c\u4f1a\u5728\u6b64\u57fa\u7840\u4e0a\u53d1\u751f\u66f4\u6539\uff0c\u5982\u679c\u6062\u590d\u6210\u539f\u503c\uff0c\u610f\u5473\u7740\u4f60\u5ffd\u7565\u4e86\u66f4\u6539\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u6240\u4ee5\u6211\u4eec\u6267\u884c\u903b\u8f91undo\uff0c\u6267\u884c\u53cd\u64cd\u4f5c</code></p> <p>\u5982 B+ \u6811\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002  </p> <p>\u6211\u4eec\u9700\u8981\u5bf9\u903b\u8f91\u64cd\u4f5c\u8bb0\u65e5\u5fd7\u3002</p> <p><code>\u548c\u4e4b\u524d\u7684transaction commit/abort\u7c7b\u4f3c\uff0c\u5bf9\u5e94\u7684\u5b58\u5728operation-begin\u548coperation-end\u3002\u5982\u679coperation-end\u5b58\u5728\uff0c\u8fd8\u9700\u8981\u5305\u542blogic undo U\uff0c\u8bb0\u5f55\u5982\u4f55\u6062\u590d</code></p> <p><code>!!! Example \"Transaction Rollback with Logical Undo\"</code></p> <p> </p> <p>\u4f8b\u5982\uff0c\u5bf9C\u8fdb\u884c\u66f4\u6539\u7684\u65f6\u5019\uff0c\u505a\u4e86\u4e00\u4e2a+\uff08-100\uff09\u7684\u64cd\u4f5c\u3002\u8fd9\u65f6\u5019\uff0c\u8981\u8bb0\u5f55\u4e00\u4e2a\u65e5\u5fd7\uff1a</p> <p> </p> <p>operation-end \u540e\u9762\u8ddf\u7684(C, +100)\u8868\u793a\uff0c\u8981\u6062\u590d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u9700\u8981\u7ed9C\u52a0100\u3002\uff08\u8981\u64a4\u9500\u64cd\u4f5c\u5e94\u600e\u4e48\u505a\uff09\u3002</p> <p>\u8fd9\u6837\u8bb0\u5f55\u7684\u539f\u56e0\u662f\uff1a\u5047\u5982\u7ed9C\u51cf\u53bb100\u7684\u64cd\u4f5c\u6ca1\u6709\u5b8c\u6210\uff0c\u5373</p> <p> </p> <p>\u8fd8\u672a\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u5c31\u53d1\u751f\u4e86crush\u3002\u90a3\u4e48\uff0c\u6b64\u65f6\u5c31\u8981\u5bf9C\u8fdb\u884c\u7269\u7406Undo\uff0c\u76f4\u63a5\u628aC\u7531600\u6062\u590d\u4e3a\u65e7\u6570\u636e700\u5373\u53ef\u3002</p> <p>\u5728\u8fd9\u53e5\u8bdd\u540e\u9762\uff1a</p> <p> </p> <p>T0 \u4e8b\u52a1\u51b3\u5b9aabort\u3002</p> <p>\u6b64\u65f6\uff0c\u5bf9T0\u4e8b\u52a1\u8fdb\u884cUndo\u64cd\u4f5c\uff0c\u5e76\u8bb0\u5f55\u8865\u507f\u65e5\u5fd7\u5982\u4e0b\uff1a</p> <p> </p> <p>C \u52a0\u4e0a100\uff0c\u800c\u4e0d\u662f\u6062\u590d\u4e3a700\u3002</p> <p>\u9700\u8981\u628a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u65e5\u5fd7\u9879\u8bb0\u5f55\u4e0b\u6765\uff08\u5f00\u59cb\u548c\u7ed3\u675f\uff09. C \u8868\u793a\u81ea\u52a0\u64cd\u4f5c\u3002\u8fd9\u91cc\u5728 end \u65f6\u4f1a\u8bb0\u5f55 logical undo \u7684\u64cd\u4f5c(\u51cf\u6cd5\u64a4\u9500\u5bf9\u5e94\u52a0\u6cd5)  </p> <p><code>\u6ce8\u610f\u6211\u4eec\u662f\u5728 end \u7684\u65f6\u5019\u8bb0\u5f55\u903b\u8f91\u64a4\u9500\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u8fd9\u4e2a\u64cd\u4f5c\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u7269\u7406\u64a4\u9500\u3002</code> </p> <p>\u8fd9\u91cc\u6211\u4eec\u65e9\u653e\u9501\u4e86\uff0c\u6ca1\u6709\u9075\u5faa\u4e25\u683c\u4e24\u9636\u6bb5\u653e\u9501\u534f\u8bae\u3002\u5728 T0 \u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u65f6\u5019 T1 \u5c31\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u4fee\u6539.  </p> <p>\u6062\u590d\u4e2d\u505a\u7684\u662f\u7269\u7406\u64a4\u9500(old+new), begin/end \u8fd9\u4e9b\u65e5\u5fd7\u5c31\u4e0d\u9700\u8981\u8bb0\u5f55\u4e86\u3002</p> <p><code>!!! Example \"Failure Recovery with Logical Undo\"</code></p> <p> </p> <p>\u53d1\u751fcrush\u4e4b\u540e\uff0c\u5148\u4ececheck point\u5f00\u59cb\u5411\u4e0b\u91cd\u73b0\u5386\u53f2\uff0c\u5f97\u5230Undo List\uff1aT1\u3001T2\u3002</p> <p>\u7136\u540e\uff0c\u4ececrush\u7684\u5730\u65b9\uff0cUndo\u5230T1\u4e8b\u52a1\u5f00\u59cb\u7684\u5730\u65b9\u3002\u7531\u4e8ecrush\u7684\u5730\u65b9\u64cd\u4f5cO5\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u56e0\u6b64\u5bf9C\u6570\u636e\u8fdb\u884c\u6062\u590d\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u7269\u7406Undo\u5c31\u53ef\u4ee5\u3002</p> <p>\u56e0\u6b64\uff0c\u5148\u505a\u7269\u7406Undo\uff0c\u5c06C\u8bbe\u7f6e\u56de400\uff0c\u7136\u540e\u8865\u507f\u65e5\u5fd7\u4e2d\u8bb0\u5f55\uff1b\u518d\u56de\u6eda\u64cd\u4f5cO4\uff0c\u5bf9C\u81ea\u589e300\uff0c\u56e0\u6b64\u6b64\u65f6C\u53d8\u4e3a700\uff0c\u4e5f\u8981\u8bb0\u5f55\u5728\u8865\u507f\u65e5\u5fd7\u4e2d\uff1b\u7136\u540e\u5728\u8865\u507f\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u3002 <p>\u6700\u540e\uff0c\u5c06B\u8bbe\u7f6e\u56de2050\uff0c\u5e76\u8bb0\u5f55\u5728\u8865\u507f\u65e5\u5fd7\u4e2d\u3002\u6700\u540e\uff0c\u8bb0\u5f55\u3002 <p></p> <p></p> <p><code>\u6ce8\u610f\u7b2c\u4e94\u9898\uff0credo\u4e4b\u540e\u7684D\u7684\u503c\u4e3a97\uff0c\u6062\u590d\u65f6\u6267\u884c+1\u64cd\u4f5c\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e3a98\uff0c\u800c\u4e0d\u662f99</code></p> <p><code>\u6ce8\u610f\u7b2c\u516d\u9898\uff0c\u589e\u52a0&lt;T2,D,97,98&gt;; &lt;T2 , operation-abort&gt;, &lt;T2,B,20&gt;, &lt;T2 abort&gt;</code></p>"},{"location":"DB/15.%20Recovery%20System/#155-aries-recovery-algorithm","title":"15.5 ARIES Recovery Algorithm","text":"<p>ARIES is a state of the art recovery method. </p> <p></p>"},{"location":"DB/15.%20Recovery%20System/#1551-aries-data-structures","title":"15.5.1 ARIES Data Structures","text":"<ul> <li> <p>Log sequence number (LSN) identifies each log record  </p> <ul> <li>Must be sequentially increasing \u987a\u5e8f\u9012\u589e</li> </ul> </li> <li> <p>Page LSN </p> <ul> <li>\u6bcf\u4e00\u4e2a\u5185\u5b58\u9875\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2aPage LSN\uff0c\u7528\u6765\u6807\u8bb0\u8fd9\u4e2a\u9875\u6700\u8fd1\u53cd\u6620\u7684\u662f\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\u4fee\u6539\u7684\u7ed3\u679c\u3002</li> </ul> </li> <li> <p>Log records of several different types</p> </li> <li> <p>Dirty page table </p> <ul> <li>\u810f\u9875\u8868\u8bb0\u5f55\u5728\u65e5\u5fd7\u5f53\u4e2d\uff0c\u5728\u8bbe\u5b9aCheckPoint\u7684\u65f6\u5019\uff0c\u5f53\u524d\u7684\u5185\u5b58\u4e2d\u810f\u9875\u7684\u8868\uff0c\u9700\u8981\u8bb0\u5f55\u4e0b\u6765\u3002</li> <li>\u6bcf\u4e00\u4e2a\u810f\u9875\u8868\u4e2d\u7684\u9875\uff0c\u90fd\u6709\u4e00\u4e2aPage LSN\uff0c\u53cd\u6620\u5f53\u524d\u9875\u662f\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\u6700\u540e\u4fee\u6539\u4e86\u5b83\uff1b</li> </ul> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#page-lsn","title":"Page LSN","text":"<p>\u6bcf\u4e00\u4e2a\u5185\u5b58\u9875\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2aPage LSN\uff0c\u7528\u6765\u6807\u8bb0\u8fd9\u4e2a\u9875\u6700\u8fd1\u53cd\u6620\u7684\u662f\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\u4fee\u6539\u7684\u7ed3\u679c\u3002</p> <p>\u5982\u679c\u9700\u8981\u4fee\u6539\u9875\u9762\uff0c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>X-latch the page, and write the log record </li> <li>Update the page</li> <li>Record the LSN of the log record in Page LSN <code>\u5728 Page LSN\u4e0a\u8bb0\u5f55log record\u7684LSN</code></li> <li>Unlock page</li> </ul> <p><code>Page LSN \u5728\u6062\u590d\u671f\u95f4\u7528\u4e8e\u9632\u6b62\u91cd\u590d\u91cd\u505a\uff0c\u4ece\u800c\u786e\u4fdd\u5e42\u7b49\u6027</code></p>"},{"location":"DB/15.%20Recovery%20System/#log-record","title":"Log Record","text":"<ul> <li> <p>LSN\u8868\u793a\u8be5\u6761\u65e5\u5fd7\u7684\u7f16\u53f7\uff1b</p> </li> <li> <p><code>TransID</code>\u8868\u793a\u8be5\u6761\u65e5\u5fd7\u5bf9\u5e94\u7684\u4e8b\u52a1\u662f\u4ec0\u4e48\u3002</p> </li> <li> <p><code>UndoNextLSN</code>\u8868\u793a\uff0c\u5982\u679c\u8981Undo\u8fd9\u4e00\u4e2a\u4e8b\u52a1\uff0c\u4e0b\u4e00\u4e2a\u9700\u8981Undo\u7684\u65e5\u5fd7\u9879\u662f\u4ec0\u4e48\u3002\u628a\u6240\u6709\u76f8\u540c\u4e8b\u52a1\u7684Undo\u9879\u4e32\u8d77\u6765\uff0c\u65b9\u4fbfUndo\u7684\u52a0\u901f\u3002</p> <p><code>\u4f8b\u5982undo\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684transaction\u65f6\uff0c\u628a\u8be5transaction\u7684\u64cd\u4f5c\u4e32\u884c\u8d77\u6765\uff0c\u4e00\u6b21\u6027undo</code></p> </li> <li> <p><code>RedoInfo</code>\u8868\u793a\u91cd\u590d\u5386\u53f2\u7684\u76f8\u5173\u4fe1\u606f\u3002</p> </li> </ul> <p>\u4e0a\u9762\uff0c\u65e5\u5fd7\u9879\u4e00\u9879\u4e00\u9879\u5730\u8bb0\u4e0b\u6765\uff0c4\u2019\u4e3a4 Undo\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f4\u7684\u8865\u507f\u65e5\u5fd7\u30024\u2019\u6307\u54113\u8868\u793a\uff0c\u8bb0\u5f55\u5b8c\u8865\u507f\u65e5\u5fd74\u2019\uff0c\u4e0b\u4e00\u4e2a\u9700\u8981Undo\u7684\u65e5\u5fd7\u9879\u662f3\u3002</p>"},{"location":"DB/15.%20Recovery%20System/#dirty-page-table","title":"Dirty Page Table","text":"<p><code>Dirty Page Table: List of pages in the buffer that have been updated</code></p> <p>\u7528\u4e8e\u8868\u793abuffer\u4e2d\u5df2\u7ecf\u88ab\u4fee\u6539\u7684\u6570\u636e\u9875</p> <ul> <li> <p><code>PageLSN</code> of the page</p> </li> <li> <p><code>RecLSN</code> is an LSN such that log records before this LSN have already been applied to the page version on disk</p> <p>\u6bcf\u4e00\u4e2a\u9875\u8fd8\u4f1a\u8bb0\u5f55\u4e00\u4e2aRec LSN\uff0c\u53cd\u6620\u8fd9\u4e2a\u6570\u636e\u9875\u5230\u8fbe\u4e86\u78c1\u76d8\u4e4b\u524d\uff0c\u662f\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\u6700\u540e\u4fee\u6539\u4e86\u5b83\u3002</p> </li> </ul> <p>ARIES Data Structures</p> <p><code>stable data\u8868\u793a\u6b63\u786e\u53cd\u6620\u5230\u6570\u636e\u5e93\u4e2d\u7684\u5185\u5bb9\uff0c\u5bf9\u4e8eID=7200\u7684\u9875\uff0c\u6700\u540e\u66f4\u6539\u8fd9\u4e00\u9875\u7684\u65e5\u5fd7\u7684\u7f16\u53f7\u4e3a4404.\u4f46\u662f\u5728database buffer\u4e2d\uff0cID=7200\u7684\u9875\uff0c\u6700\u540e\u66f4\u6539\u8fd9\u4e00\u9875\u7684\u65e5\u5fd7\u7684\u7f16\u53f7\u4e3a7565\uff0c\u8fd9\u8868\u660e\u8fd9\u4e00\u9875\u65e2\u5728\u5185\u5b58\u4e2d\uff0c\u53c8\u88ab\u65e5\u5fd7\u66f4\u6539\u3002</code></p> <p><code>stable log\uff08PrevLSN and UndoNextLSN fields not shown\uff09\u4e2d\uff0c\u5bf9\u4e8e7565\uff08LSN\uff09\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8868\u793a\u5bf9\u4e8e\u4e8b\u52a1T143\uff0c\u5c06\u7f16\u53f7\u4e3a7200\u9875\u7684\u7b2c\u4e8c\u4e2a\u6570\u636e\uff0c\u753160\u6539\u4e3a80.\u5bf9\u4e8e7563\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8868\u793a\u5bf9\u4e8e\u4e8b\u52a1T145\uff0c\u4e8b\u52a1begin</code></p> <p><code>\u65e5\u5fd7\u8bb0\u5f55\uff0c\u6709\u7684\u5728Stable Storage\u4e2d\uff0c\u6709\u7684\u5728\u5185\u5b58\u4e2d\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7f16\u53f7\u4e3a4894\u7684\u6570\u636e\u9875\uff0c\u6570\u636e\u5185\u5b58\u4e2d\u663e\u793a\u6700\u540e\u5bf9\u8fd9\u4e00\u6570\u636e\u7684\u66f4\u6539\u662f\u7f16\u53f77567\u7684\u65e5\u5fd7\uff0c\u5bf9\u5e94log buffer\u4e2d\u76847567\u65e5\u5fd7\u9879</code></p> <p><code>\u810f\u9875\u8868\uff1a\u4f8b\u5982\uff0c\u8bb0\u5f557200 7565 7565\u8868\u793a\uff0c\u7f13\u51b2\u533a\u4e2dpage_ID\u4e3a7200\u7684\u9875\u662f\u810f\u7684\uff0c\u6700\u65b0\u4fee\u6539\u5b83\u7684\u662f7565\u8fd9\u4e2a\u65e5\u5fd7\uff0c\u5e76\u4e14\u4ece7565\u8fd9\u6761\u65e5\u5fd7\u4e4b\u540e\u7684\u66f4\u6539\uff0c\u90fd\u6ca1\u6709\u53cd\u6620\u5230\u6570\u636e\u5e93\u7cfb\u7edf\u4e4b\u4e2d\u3002</code></p> <p><code>\u53c8\u4f8b\u5982\uff0c4894 7567 7564\u8868\u793a\uff0c\u7f13\u51b2\u533a\u4e2dpage_ID\u4e3a4894\u7684\u9875\u662f\u810f\u7684\uff0c\u6700\u65b0\u4fee\u6539\u5b83\u7684\u662f7567\u8fd9\u4e2a\u65e5\u5fd7\uff0c\u4f46\u662f\uff0c\u4ece7564\u8fd9\u4e2a\u65e5\u5fd7\u5f00\u59cb\uff0c\u66f4\u6539\u5c31\u6ca1\u6709\u53cd\u6620\u5230\u6570\u636e\u5e93\u4e2d\u4e86\u3002</code>\u770blog buffer\uff0c7567\u65e5\u5fd7\u9879\u8fd8\u6ca1\u6709\u5199\u5165\u5230stable log</p> <p><code>\u8fd9\u8fb9\u7279\u522b\u6ce8\u610fPage LSN\u548cRec LSN\u7684\u4e0d\u540c\u4e4b\u5904</code></p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1aRec LSN\u8bb0\u5f55\u7684\u662f\u78c1\u76d8\u4e2d\uff0c\u6700\u540e\u4e00\u6b21\u5bf9\u8be5\u6570\u636e\u4ea7\u751f\u66f4\u6539\u7684\u65e5\u5fd7\u9879\u7f16\u53f7\uff1b</p> <p>Page LSN \u8bb0\u5f55\u7684\u662f\u65e5\u5fd7\u5185\u5b58\u4e2d\uff0c\u6700\u540e\u4e00\u6b21\u5bf9\u8be5\u6570\u636e\u4ea7\u751f\u66f4\u6539\u7684\u65e5\u5fd7\u9879\u7f16\u53f7\u3002</p> <p><code>\u4e00\u4e2a\u662f\u78c1\u76d8\u4e2d\uff0c\u4e00\u4e2a\u662f\u65e5\u5fd7\u5185\u5b58\u4e2d\uff0c\u65e5\u5fd7\u5185\u5b58\u8fd8\u6ca1\u6709\u5199\u5165\u5230stable log\u4e2d</code></p> <ul> <li> <p>Checkpoint log record</p> <ul> <li> <p>Contains: </p> <ul> <li> <p>Dirty Page Table and list of active transactions  </p> </li> <li> <p>For each active transaction, Last LSN, the LSN of the last log record written by the transaction  </p> <p>\u8981\u8bb0\u6700\u8fd1\u7684\u4e8b\u52a1\u9879\uff08\u4ece\u54ea\u91cc\u5f00\u59cb\u6062\u590d\uff09</p> <p><code>\u505acheck point\u65f6\uff0c\u9700\u8981\u8bb0\u5f55\u4ee5\u4e0b\u5185\u5bb9\uff1a1. \u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868 2. \u810f\u9875\u8868 3. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5f53\u524d\u6d3b\u52a8\u7684\u4e8b\u52a1\uff0c\u9700\u8981\u8bb0\u5f55\u4fee\u6539\u8be5\u4e8b\u52a1\u6700\u8fd1\u7684\u4e00\u4e2a\u65e5\u5fd7\u9879Last LSN</code></p> </li> </ul> </li> <li> <p>Fixed position on disk notes LSN of last completed checkpoint log record</p> </li> </ul> </li> <li> <p>Dirty pages are not written out at checkpoint time  </p> <p>Instead, they are flushed out continuously, in the background  </p> <p>\u810f\u9875\u4e0d\u4f1a\u5728 check \u7684\u65f6\u5019\u5199\u51fa\u53bb\u3002</p> </li> <li> <p>Checkpoint is thus very low overhead can be done frequently</p> </li> </ul>"},{"location":"DB/15.%20Recovery%20System/#1552-aries-recovery-algorithm","title":"15.5.2 ARIES Recovery Algorithm","text":"<ul> <li> <p>Analysis pass  </p> <ul> <li>Which transactions to undo (undo-list)  </li> <li>Which pages were dirty (disk version not up to date) at time of crash \u5f97\u5230 dirty page table. </li> <li>RedoLSN: LSN from which redo should start \u771f\u6b63\u7684 redo \u8981\u4ece\u54ea\u91cc\u5f00\u59cb(RecLSN \u7684\u6700\u5c0f\u503c\u5c31\u662f redo \u7684\u8d77\u70b9)</li> </ul> <p><code>1. \u5f97\u5230undo list\uff0c\u54ea\u4e9b\u4e8b\u52a1\u9700\u8981\u64a4\u9500undo</code></p> <p><code>2. \u5f97\u5230dirty page table\u3002\u4e5f\u5c31\u662f\u5f53crash\u53d1\u751f\u65f6\uff0c\u53d1\u751fupdate\u4f46\u662f\u4e48\u6709\u5199\u5165\u5230\u6570\u636e\u5e93\u7684\u810f\u9875\u3002</code>check point\u5904\u5f97\u5230\u7684dirty page table\u8fd8\u4e0d\u662f\u6700\u65b0\uff0c\u56e0\u4e3a\u8ddd\u79bbcrash\u53d1\u751f\u8fd8\u6267\u884c\u65b0\u7684update\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4ececheck point\u5f00\u59cb\u5411\u4e0b\u66f4\u65b0</p> <p><code>3. \u5f97\u5230Redo LSN\uff0c\u5373\u771f\u6b63\u7684Redo\u64cd\u4f5c\uff0c\u5e94\u5f53\u4ece\u54ea\u91cc\u5f00\u59cb\uff08Repeating history\u7684\u8d77\u59cb\u5730\u70b9\uff09\u3002\u5728ARIES\u7b97\u6cd5\u4e2d\uff0cRedo\u53ef\u80fd\u53d1\u751f\u5728check point\u4e4b\u524d\uff0c\u4e0d\u4e00\u5b9a\u5728check point\u5f00\u59cb\u3002Redo\u7684\u8d77\u70b9\u662f\u6240\u6709Rec LSN\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u662f\u56e0\u4e3aRec LSN\u8868\u793a\u662f\u78c1\u76d8\u4e2d\u6700\u540e\u4e00\u6b21\u5bf9\u8be5\u6570\u636e\u4ea7\u751f\u66f4\u6539\u7684\u65e5\u5fd7\u7f16\u53f7\uff0cRec LSN\u4e4b\u524d\u7684\u65e5\u5fd7\u9879\uff0c\u90fd\u5df2\u7ecf\u6b63\u786e\u5730\u53cd\u5e94\u5728\u6570\u636e\u5e93\u4e2d\u3002\u6240\u4ee5\u6211\u4eec\u4eceRec LSN\u7684\u6700\u5c0f\u503c\u5f00\u59cb\u6267\u884crepeat history</code></p> </li> <li> <p>Redo pass  </p> <p>RecLSN and PageLSNs are used to avoid redoing actions already reflected on page.  </p> <p>\u7528\u6765\u4f18\u5316\uff0c\u6709\u4e9b\u65e5\u5fd7\u4e0d\u7528 redo(\u6ca1\u6709\u610f\u4e49)</p> <p>\u4ece\u6240\u6709\u810f\u9875\u8868\u4e2dRec LSN\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u65e5\u5fd7\u9879\uff08Redo LSN\uff09\u5f00\u59cb\uff0crepeat history\u3002</p> </li> <li> <p>Undo pass  </p> <p>\u548c\u524d\u9762\u7684\u539f\u7406\u76f8\u540c\uff0c\u5229\u7528Undo List\uff0c\u76f4\u5230Undo \u5230Undo List\u4e2d\u6240\u6709\u4e8b\u52a1\u5230\u8fbe\u5f00\u59cb\uff08begin\uff09\u7684\u5730\u65b9\u3002</p> </li> </ul> <p>Example</p> <pre><code>crash \u4e4b\u540e\uff0c\u5f97\u5230\u4e0a\u9875\u7684 Dirty Page Table \u548c Active TXN Table \u4ee5\u53ca\u78c1\u76d8\u91cc\u7684\u65e5\u5fd7\u3002\n</code></pre> <p>Example</p> <p>check point\u4e2d\u8bb0\u5f55\u4e86\u4ec0\u4e48\uff1f</p> <ol> <li>\u6d3b\u52a8\u4e8b\u52a1\u8868\uff1aT145\uff0c\u5e76\u4e14\u6700\u540e\u5bf9\u4e8b\u52a1T145\u8fdb\u884c\u4fee\u6539\u7684\u662fLast LSN\u662f7567</li> <li> <p>\u810f\u9875\u8868\uff1a</p> <ul> <li>\u6700\u65b0\u7684\u5bf9\u6570\u636e\u98754894\u8fdb\u884c\u4fee\u6539\u7684\u65e5\u5fd7\u9879\u65f67567\uff0c\u6b63\u786e\u53cd\u5e94\u5230\u78c1\u76d8\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5bf94894\u9875\u8fdb\u884c\u4fee\u6539\u7684\u65e5\u5fd7\u9879\u65f67564</li> <li>\u6700\u65b0\u5bf9\u9875\u53f77200\u7684\u9875\u4ea7\u751f\u66f4\u6539\u7684\u662f\u65e5\u5fd7\u98797565\uff0c\u800c\u6b63\u786e\u53cd\u6620\u5230\u78c1\u76d8\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5bf97200\u9875\u4ea7\u751f\u66f4\u6539\u7684\u65e5\u5fd7\u9879\u662f7565\uff1b</li> </ul> </li> <li> <p>Analysis\uff1a\u4ece\u6700\u8fd1\u7684check point\u5f00\u59cb\uff0c\u5206\u6790\u5230\u53d1\u751fcrash\u7684\u5730\u65b9\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u9700\u8981\u66f4\u65b0\u810f\u9875\u8868\uff0c\u5e76\u5f97\u5230Undo List\uff0c\u4ee5\u53caRedo LSN</p> <p><code>\u8fd9\u662f\u56e0\u4e3acheck point\u5904\u7684\u810f\u9875\u8868\u4e0d\u662f\u6700\u65b0\u7684\u53d1\u751f\u5728crash\u5904\u7684\u810f\u9875\u8868\uff0c\u9700\u8981\u5148\u7ee7\u7eed\u6267\u884c</code></p> <p>\u4f8b\u5982\uff0c\u9996\u5148\u78b0\u5230T146 begin, \u56e0\u6b64\u5728\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\u8bb0\u5f55\u4e00\u9879T146\uff1b\u7136\u540e\u78b0\u5230T146\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u7136\u540e\u5728\u810f\u9875\u8868\u4e2d\u8bb0\u5f55\u4e00\u9879T146\u3002 2390 7570 \uff1f</p> </li> <li> <p>Redo \u9636\u6bb5</p> <p><code>Redo\u7684\u8d77\u70b9\uff0c\u662f\u66f4\u65b0\u8fc7\u540e\u7684\u810f\u9875\u8868\u5f20\uff0cRec LSN\u7684\u6700\u5c0f\u503c</code></p> </li> <li> <p>Undo \u9636\u6bb5</p> <p>Undo\u7684\u7ed3\u675f\u70b9\uff0c\u5728Undo List\u4e2d\u5f00\u59cb\u6700\u65e9\u7684\u4e8b\u52a1\u7684\u5f00\u59cb\u70b9\uff08\u6b64\u5904undo\u7684\u4e8b\u52a1\u662fT145\uff0c\u5230begin\u4f4d\u7f6e\uff09\u3002\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u4e8b\u52a1\u7684undo\uff0c\u7531\u4e8e\u5404\u4e8b\u52a1\u7684\u65e5\u5fd7\u9879\u5b58\u5728undonextLSN\uff0c\u6240\u4ee5undo\u7684\u65f6\u5019\u4e0d\u662f\u4e00\u6761\u4e00\u6761\u7684undo\uff0c\u800c\u662f\u8df3\u8dc3\u6027\u7684\u3002</p> </li> </ol> <p>\u603b\u7ed3\u6765\u8bf4\uff1a\u5728\u751f\u6210Check Point\u7684\u65f6\u5019\uff0cCheck Point\u4e2d\u4f1a\u8bb0\u5f55\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868\uff0c\u548c\u810f\u9875\u8868</p> <p>\u5728\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\uff0c\u8bb0\u5f55\u4e86\u6d3b\u52a8\u4e8b\u52a1\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u5bf9\u8be5\u4e8b\u52a1\u7684\u66f4\u6539\uff0c\u5904\u4e8e\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\u5f53\u4e2d\u3002\u5728\u810f\u9875\u8868\u4e2d\uff0c\u8bb0\u5f55\u4e86\u9875\u53f7\uff0c\u4ee5\u53caPage LSN\uff08\u8868\u793a\u8fd9\u4e2a\u9875\u6700\u540e\u88ab\u66f4\u6539\uff0c\u5904\u4e8e\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\uff09\u3001Rec LSN\uff08\u8868\u793a\u8fd9\u4e2a\u9875\u6700\u540e\u88ab\u5b58\u50a8\uff0c\u5904\u4e8e\u54ea\u4e00\u4e2a\u65e5\u5fd7\u9879\uff09\u3002</p> <p>\u5728\u6570\u636e\u6062\u590d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7b2c\u4e00\u9636\u6bb5\u662f\u5206\u6790\u9636\u6bb5\uff0c\u4ece\u4e0a\u4e00\u4e2a\u6709\u6548\u7684\u68c0\u67e5\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u5206\u6790\u5230crush\u53d1\u751f\u7684\u5730\u65b9\u3002\u5728\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u66f4\u65b0\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868\uff0c\u4ee5\u53ca\u810f\u9875\u8868\u3002</p> <ul> <li>\u5047\u5982\u9047\u5230\u4e00\u4e2a\u4e8b\u52a1\u5f00\u59cb\u4e86\uff0c\u90a3\u4e48\u5c31\u5728\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\u589e\u6dfb\u4e00\u9879\uff0c\u9047\u5230\u4e00\u4e2a\u4e8b\u52a1commit\u6216\u8005abort\u4e86\uff0c\u5c31\u5728\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\u51cf\u5c11\u4e00\u9879\uff1b</li> <li>\u5047\u5982\u9047\u5230\u67d0\u4e2a\u65e5\u5fd7\u9879\u5bf9\u67d0\u4e00\u9875\u4ea7\u751f\u4e86\u66f4\u6539\uff0c\u5c31\u8981\u66f4\u65b0\u810f\u9875\u8868\u4e2d\u7684Page LSN\uff0c</li> <li>\u5047\u5982\u9047\u5230\u67d0\u4e2a\u65e5\u5fd7\u9879\u5bf9\u810f\u9875\u8868\u4e2d\u6ca1\u6709\u7684\u9875\u53f7\u7684\u9875\u4ea7\u751f\u4e86\u66f4\u6539\uff0c\u5c31\u8981\u5728\u810f\u9875\u8868\u4e2d\u6dfb\u52a0\u4e00\u9879\uff0cPage LSN\u548cRec LSN\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65e5\u5fd7\u9879\u3002</li> </ul> <p>\u6700\u540e\uff0c\u5f53\u5206\u6790\u5230crash\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u65b0\u540e\u7684\u6d3b\u52a8\u4e8b\u52a1\u8868\uff0c\u4f5c\u4e3aUndo List\uff0c\u5e76\u4e14\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u65b0\u540e\u7684\u810f\u9875\u8868\u3002</p> <p>\u7b2c\u4e8c\u9636\u6bb5\u662fRedo\u9636\u6bb5\uff0cRedo\u9636\u6bb5\u7684\u8d77\u70b9\u662f\u66f4\u65b0\u540e\u7684\u810f\u9875\u8868\u4e2d\uff0cRec LSN\u7684\u6700\u5c0f\u503c\u7684\u65e5\u5fd7\u9879\u3002\u4e00\u76f4Redo\u5230crush\u7684\u5730\u65b9\u3002</p> <p>\u7b2c\u4e09\u9636\u6bb5\u662fUndo\u9636\u6bb5\uff0cUndo\u9636\u6bb5\u7684\u8d77\u70b9\u662f\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\uff0c\u8bb0\u5f55\u7684Last LSN\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4eceLast LSN\u5f00\u59cb\uff0c\u5bf9\u6d3b\u52a8\u4e8b\u52a1\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u5411\u524d\u8fdb\u884c\u4e32\u5728\u4e00\u8d77\u7684\u6307\u9488\u904d\u5386\uff0c\u76f4\u5230Undo\u5230\u5404\u4e2a\u4e8b\u52a1\u90fd\u7ecf\u8fc7\u4e86&lt; start&gt;\u3002</p>"},{"location":"DB/2.%20Relational%20Model/","title":"2. Relational Model","text":"<p> \u7ea6 2519 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p>"},{"location":"DB/2.%20Relational%20Model/#21-structure-of-relational-databases","title":"2.1 Structure of Relational Databases","text":"<p>example of a relation</p> <p></p>"},{"location":"DB/2.%20Relational%20Model/#211-concepts","title":"2.1.1 Concepts","text":"<p>Formally, given set\\(D_1, D_2, \\ldots, D_n\\)a relation\\(r\\)is a subset of\\(D_1\\times D_2\\times \\ldots D_n\\).  Thus a relation is <code>a set of n-tuple</code>\\((a_1,a_2,\\ldots,a_n)\\)where each\\(a_i\\in D_i\\).  </p> <p>\u7ed9\u5b9a\u96c6\u5408\\(D_1, D_2, \\ldots, D_n\\)\u7684\u5173\u7cfb\\(r\\)\u662f\\(D_1\\times D_2\\times \\ldots D_n\\)\u7684\u5b50\u96c6</p> <p>\\(A_1,A_2,\\ldots,A_n\\)are attributes.</p> <p>\\(R=(A_1,A_2,\\ldots,A_n)\\)is a relation schema. </p> <p>e.g. instructor = (ID, name, dept_name, salary). </p> <p>A relation instance\\(r\\)defined over schema R is denoted by\\(r(R)\\). </p> <p>\u5728\u67b6\u6784 R \u4e0a\u5b9a\u4e49\u7684\u5173\u7cfb\u5b9e\u4f8b\\(R\\)\u7528\\(r(R)\\)\u8868\u793a</p> <p>\u56e0\u4e3a\u5173\u7cfb\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u6240\u4ee5\u5173\u7cfb\u90fd\u662f\u65e0\u5e8f\u7684\u3002</p>"},{"location":"DB/2.%20Relational%20Model/#212-attributes","title":"2.1.2 Attributes","text":"<ul> <li> <p>The set of <code>allowed values</code> for each attribute is called the <code>domain (\u57df)</code>of the attribute</p> </li> <li> <p>Attribute <code>values</code> are (normally) required to be <code>atomic (\u539f\u5b50\u7684)</code>; that is, indivisible</p> </li> </ul> <p>\u5c5e\u6027\u503c\u8981\u6c42\u662f\u539f\u5b50\u7684\uff0c\u4e0d\u53ef\u5206\u5272\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u662f\u6570\u7ec4\u3001\u94fe\u8868\u2026\u2026</p> <ul> <li>The special value null (\u7a7a\u503c) is a member of every domain</li> </ul> <p>\u7279\u6b8a\u503c null \uff08\u7a7a\u503c\uff09 \u662f\u6bcf\u4e2a\u57df\u7684\u6210\u5458</p> <p>\u5143\u7ec4\u7684\u987a\u5e8f\u662f\u6ca1\u6709\u5173\u8054\u7684\uff0c\u4e5f\u5c31\u662f\u5143\u7ec4\u7684\u5b58\u653e\u662f\u4efb\u610f\u7684</p>"},{"location":"DB/2.%20Relational%20Model/#22-database-schema","title":"2.2 Database Schema","text":"<ul> <li>Database schema -- is the logical structure of the database.</li> <li>Database instance -- is a snapshot of the data in the database at a given instant in time. </li> </ul> <p>Example</p> <p></p> <p>schema \u662f\u62bd\u8c61\u7684\u5b9a\u4e49, instructor = (ID, name, dept_name, salary). instance \u662f\u5177\u4f53\u7684\u5b9e\u4f8b\u3002\u4e0a\u8ff0table</p>"},{"location":"DB/2.%20Relational%20Model/#23-keys","title":"2.3 Keys","text":"<p>Let\\(K\\subsetneqq R\\) </p> <p>\\(K\\)is a superkey (\u8d85\u952e) of\\(R\\)if values for K are sufficient to identify (\u552f\u4e00\u786e\u5b9a) a unique tuple of each possible relation\\(r(R)\\) e.g.*\\(\\{ID\\}\\)or\\(\\{ID, name\\}\\)</p> <p><code>superkey\u786e\u5b9a\uff0c\u5bf9\u5e94\u7684\u5143\u7ec4\u552f\u4e00\u786e\u5b9a</code></p> <ul> <li> <p>Superkey\\(K\\)is a candidate key (\u5019\u9009\u952e) if\\(K\\)is minimal.     \u5373\\(K\\)\u4e2d\u6ca1\u6709\u5197\u4f59\u5c5e\u6027  </p> <p>e.g. \\(\\{ID\\}\\)</p> </li> <li> <p>One of the <code>candidate keys</code> is selected to be the primary key (\u4e3b\u952e).</p> <p>primary key \u7684\u503c\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u4e14\u4e0d\u80fd\u91cd\u590d</p> </li> <li> <p>Foreign key (\u5916\u952e) Relation\\(r_1\\)may include among its attributes the primary key of another relation\\(r_2\\). This attribute is called a foreign key from\\(r_1\\), referencing\\(r_2\\).  </p> <p>\u5916\u952e\u9650\u5236\u5c31\u662f\u5173\u7cfb\\(r_1\\)\u5f15\u7528\u7684\u4e3b\u952e\u5fc5\u987b\u5728\u5173\u7cfb\\(r_2\\)\u4e2d\u51fa\u73b0\u3002\uff08\u5728\u4efb\u4f55\u6570\u636e\u5e93\u5b9e\u4f8b\u4e0a\uff0c\\(r1\\)\u4e2d\u6bcf\u4e2a\u5143\u7ec4\u7684 A \u503c\u4e5f\u5fc5\u987b\u662f\\(r2\\)\u4e2d\u67d0\u4e2a\u5143\u7ec4\u7684 B \u503c\u3002\uff09     </p> <p>\u5de6\u4fa7\u8868\u7684\u8001\u5e08 ID \u5fc5\u987b\u51fa\u73b0\u5728\u53f3\u4fa7\u8868\u4e2d\u3002</p> Why we need foreign key constraint? <p>\u6570\u636e\u5e93\u662f\u652f\u6301\u7531\u5b8c\u6574\u7ea6\u675f\u6761\u4ef6\u5b9a\u4e49\u51fa\u6765\u7684\uff0c\u5e76\u7ef4\u62a4\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u3002\u5219\u5f53\u6211\u4eec\u5b9a\u4e49\u5916\u952e\u540e\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u9ec4\u8272\u6761\u76ee\u662f\u4e0d\u4f1a\u51fa\u73b0\u7684\u3002</p> </li> <li> <p>Referential integrity (\u53c2\u7167\u5b8c\u6574\u6027)  </p> <p>\u7c7b\u4f3c\u4e8e\u5916\u952e\u9650\u5236\uff0c\u4f46\u4e0d\u5c40\u9650\u4e8e\u4e3b\u952e\u3002  \u4e0b\u56fe\u4e2d\u7684time-slot_id\u5e76\u4e0d\u662fReferenced relation\u7684\u4e3b\u952e</p> <p></p> <p>\u8fd9\u91cc\\(time_slot_id\\)\u5e76\u4e0d\u662f\u5173\u7cfb\\(r_2\\)\u7684\u4e3b\u952e\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u662f\u5916\u952e\u9650\u5236\u3002</p> </li> </ul> <p>\u200b     </p> <p>course_id \u5f15\u7528 course\u4e2dcourse_id(primary key)</p> <ul> <li>course \u6307\u8bfe\u7a0b\u4fe1\u606f\uff0c\u65e0\u8bba\u662f\u5426\u5f00\u8bfe\uff0c\u90fd\u4f1a\u6709\u5176\u5b9a\u4e49\u3002</li> <li>section \u8868\u793a\u6559\u5b66\u73ed\uff0c\u771f\u6b63\u5f00\u8bfe\u65f6\u5c31\u6709\u76f8\u5e94\u7684\u5b9e\u4f8b\u3002\uff08\u7c7b\u6bd4\u4e8e\u9ad8\u94c1\u7684\u5217\u8f66\u53f7\uff0c\u548c\u6bcf\u5929\u5bf9\u5e94\u7684\u73ed\u6b21\uff09</li> <li>teachers \u5177\u4f53\u6559\u54ea\u4e2a\u6559\u5b66\u73ed\u7684\u8001\u5e08</li> <li>takes \u8868\u793a\u5b66\u751f\u6ce8\u518c\u8bfe\u7a0b</li> <li>time_slot \u8868\u793a\u4e00\u95e8\u8bfe\u7684\u5177\u4f53\u4e0a\u8bfe\u65f6\u95f4\u6bb5\uff0c\u5982\u6570\u636e\u5e93\u5728\u5468\u4e00 3, 4, 5 \u8282; \u5468\u4e00 7, 8 \u8282\u3002</li> <li>\u4e0a\u56fe\u4e2d\u7ea2\u7ebf\u8868\u793a\u5f15\u7528\u5b8c\u6574\u6027\u7684\u7ea6\u675f\uff08\u53ef\u4ee5\u4e0d\u662f\u4e3b\u952e\uff09\uff1b\u9ed1\u7ebf\u8868\u793a\u5916\u952e\u7ea6\u675f\u3002</li> </ul>"},{"location":"DB/2.%20Relational%20Model/#24-relational-algebrarelational-query-language","title":"2.4 Relational Algebra\u2014\u2014relational query language","text":"<p>Six basic operators</p> <ul> <li>select:\\(\\sigma\\) </li> <li>project:\\(\\Pi\\)</li> <li>union:\\(\\cup\\)</li> <li>set difference:\\(-\\)</li> <li>Cartesian product(\u7b1b\u5361\u5c14\u79ef):\\(\\times\\)</li> <li>rename:\\(\\rho\\)</li> </ul>"},{"location":"DB/2.%20Relational%20Model/#241-select","title":"2.4.1 Select","text":"<p>\\(\\sigma_p(r)=\\{t|t\\in r\\ and\\ p(t)\\}\\) , where\\(p\\)is called selection predicate.  </p> <p>\\(p(t)\\)\u79f0\u4e3a\u9009\u62e9\u8c13\u8bcd\u3002</p> <p> </p>"},{"location":"DB/2.%20Relational%20Model/#242-project","title":"2.4.2 Project","text":"<p>The project operation is a unary operation that returns its argument relation, with certain attributes left out.    \u9879\u76ee\u64cd\u4f5c\u662f\u4e00\u4e2a\u4e00\u5143\u64cd\u4f5c\uff0c\u5b83\u8fd4\u56de\u5176\u53c2\u6570\u5173\u7cfb\uff0c\u7701\u7565\u4e86\u67d0\u4e9b\u5c5e\u6027</p> <p>\\(\\prod_{A_1,A_2,\\ldots, A_k}(r)\\)where\\(A_i\\)are attribute names and\\(r\\)is a relation name.   </p> <p>The result is defined as the relation of k columns obtained by erasing the columns that are not listed. <code>\u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u91cd</code>\u3002  </p> <p> </p>"},{"location":"DB/2.%20Relational%20Model/#243-union","title":"2.4.3 Union","text":"<p>The union operation allows us to combine two relations.  </p> <p>\\(r\\cup s = \\{t| t\\in r \\ or \\ t\\in s\\}\\) </p> <p>\\(r\\)and\\(s\\)must have the same arity (\u5143\u6570) (same number of attributes \u76f8\u540c\u6570\u91cf\u7684\u5c5e\u6027\u503c)  The attribute domains must be compatible .\u5c5e\u6027\u57df\u5fc5\u987b\u517c\u5bb9 * \u5f53\u5c5e\u6027\u6709\u5173\u8054\u7c7b\u578b\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165\\(i\\), \u4e24\u4e2a\u8f93\u5165\u5173\u7cfb\u7684\u7b2c\\(i\\)\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002 </p> <p>\u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u91cd</p> <p>\\(\\prod _{course_{id}} (\\sigma_{semester = \"Fall\" \\wedge year = 2023}(Section))\\)</p>"},{"location":"DB/2.%20Relational%20Model/#245-set-difference","title":"2.4.5 Set Difference","text":"<p>The set-difference operation allows us to find tuples that are in one relation but are not in another.   </p> <p>\\(r-s=\\{t|t\\in r\\ and\\ t\\notin s\\}\\) \u6211\u6709\u4f60\u6ca1\u6709</p> <p>\\(r \\cap s = r - (r - s)\\)</p> <p>Set differences must be taken between compatible relations.  </p>"},{"location":"DB/2.%20Relational%20Model/#246-cartesian-product-\u7b1b\u5361\u5c14\u79ef","title":"2.4.6 Cartesian-Product \u7b1b\u5361\u5c14\u79ef","text":"<p>The Cartesian-product operation (denoted by\\(\\times\\))  allows us to combine information from any two relations.    </p> <p>\\(r\\times s  =\\{t\\ q|t\\in r\\ and\\ q\\in s\\}\\) </p> <p></p>"},{"location":"DB/2.%20Relational%20Model/#246-renamen","title":"2.4.6 Rename=n","text":"<p>Allows us to refer to a relation by more than one name. \\(\\rho_X(E)\\)</p> <p></p> <p>\u8fd4\u56de\u540d\u79f0\u4e3a X \u7684\u8868\u8fbe\u5f0f E \u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u5c5e\u6027\u91cd\u547d\u540d\u4e3a\\(A_1\u3001A_2\u3001...\u3001A_n\\)\u3002</p> <p><code>Find the names of all instructors in the Physics department, along with the course_id of all courses they have taught.</code></p> <p>\u67e5\u627e\u7269\u7406\u7cfb\u6240\u6709\u6559\u5e08\u7684\u59d3\u540d\uff0c\u4ee5\u53ca\u4ed6\u4eec\u6559\u6388\u7684\u6240\u6709\u8bfe\u7a0b\u7684course_id\u3002</p> <p></p> <pre><code> \u8fd9\u4e24\u6761\u8bed\u53e5\u542b\u4e49\u4e00\u6837\uff0c\u4f46\u7b2c\u4e8c\u6761\u6211\u4eec\u5148\u8fdb\u884c\u4e86\u4e00\u6b21 select, \u6761\u76ee\u5c11\u4e86\u66f4\u9ad8\u6548\u3002\n</code></pre> <p>Find the largest salary in the university.  </p> <ul> <li> <p>find instructor salaries that are less than some other instructor salary (i.e. not maximum)   using a copy of instructor under a new name\\(d\\).   </p> <p>\\(\\prod_{instructor.salary}(\\sigma_{instructor.salary&lt;d.salary}(instructor \\times \\rho_d(instructor)))\\) </p> <p><code>\u5148\u5217\u51fa\u6240\u6709\u5b58\u5728\u5c0f\u4e8e\u5173\u7cfb\u7684\u5de5\u8d44\uff08\u6700\u9ad8\u5de5\u8d44\u4e0d\u5b58\u5728\u5c0f\u4e8e\uff09\uff0c\u8fdb\u884c\u53bb\u91cd\u540e\u552f\u4e00</code></p> </li> <li> <p>find the largest salary  </p> <p>\\(\\prod_{instructor}-\\prod_{instructor.salary}(\\sigma_{instructor.salary&lt;d.salary}(instructor\\times \\rho_d(instructor)))\\) </p> <p><code>\u518d\u5229\u7528set difference\uff0c\u627e\u5230\u6700\u9ad8\u5de5\u8d44</code></p> </li> </ul> <p>\u6211\u4eec\u7b2c\u4e00\u6b65\u5c06\u4e24\u4e2a\u5173\u7cfb\u62fc\u8d77\u6765\u4e4b\u540e\uff0c\u9650\u5b9a instructor \u7684\u5de5\u8d44\u5c0f\u4e8e d, \u968f\u540e\u6295\u5f71\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u3002\uff08\u56e0\u4e3a\u4efb\u4f55\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u90fd\u4f1a\u5728\u7b1b\u5361\u5c14\u79ef select \u540e\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u6837\u6295\u5f71\u4e4b\u540e\u4ecd\u4f1a\u5b58\u5728\u3002\u4f46\u6700\u5927\u503c\u5c31\u4e0d\u4f1a\u6709\u5143\u7ec4\u5b58\u5728\uff09\uff0c\u6700\u540e\u7528\u5168\u96c6\u51cf\u6389\u5373\u53ef\u3002</p> <p> </p> <p>\\(E_1 \\cup E_2\\)</p> <p>\\(E_1 - E_2\\)</p> <p>\\(E_1 \\times E2\\)</p> <p>\\(\\sigma_p(E1)\\): P is a predicate on attributes in E1</p> <p>\\(\\prod _S(E1)\\): S is a list consisting of some of attributes in E1</p> <p>\\(\\rho _X(E_1)\\): X is the new name for the result of E1</p>"},{"location":"DB/2.%20Relational%20Model/#247-additional-operations","title":"2.4.7 Additional Operations","text":"<ul> <li>Set intersection:\\(r \\cap s\\) <code>r \\cap s</code></li> <li>Natural join: \\(r\\bowtie s\\) <code>r \\bowtie s</code></li> <li>Assignment:\\(\\leftarrow\\)<code>leftarrow</code></li> <li>Outer join :\\(r \\rtimes       s\\), \\(r  \\ltimes    s\\),\\(r\\)\u27d7\\(s\\) <code>\\rtimes \\ltimes</code></li> <li>Division Operator:\\(r \\div s\\)\\(r \u2797 s\\)</li> </ul>"},{"location":"DB/2.%20Relational%20Model/#2471-set-intersection","title":"2.4.7.1 Set-Intersection","text":"<p>The set-intersection operation allows us to find tuples that are in both the input relations. \\(r\\cap s=\\{t| t\\in r\\ and\\ t\\in s\\}\\) </p> <p>*\\(r, s\\)have the same arity  * attributes of\\(r\\)and s are compatible</p> Set-Intersection Operation Example <p> </p>"},{"location":"DB/2.%20Relational%20Model/#2472-natural-join-operation","title":"2.4.7.2 Natural-Join Operation","text":"<p>Let r and s be relations on schemas R and S respectively.  Then, \\(r\\bowtie     s\\)is a relation on schema\\(R \\cup S\\)obtained as follows:</p> <ul> <li>Consider each pair of tuples\\(t_r\\)from\\(r\\)and\\(t_s\\)from\\(s\\).  </li> <li>If\\(t_r\\)and\\(t_s\\)have the same value on each of the attributes in\\(R \\cap S\\), add a tuple\\(t\\)to the result, where   \\(t\\)has the same value as\\(t_r\\)on\\(r\\) \\(t\\)has the same value as\\(t_s\\)on\\(s\\)</li> </ul> <p>\u5373\u5171\u540c\u5c5e\u6027\u8981\u6709\u76f8\u540c\u7684\u503c\uff0c\u624d\u80fd\u5728\u62fc\u63a5\u540e\u7684\u7ed3\u679c\u4e2d\u4fdd\u7559\u3002  </p> <p>\u5bf9\u4e58\u6cd5\u7684\u6269\u5c55\uff0c\u76f8\u5f53\u4e8e\u5148\\(\\times\\)\u518d select, \u6700\u540e project. </p> \\[ assiciative: (instructor \\bowtie teaches)\\bowtie course = instructor \\bowtie(teaches \\bowtie course) \\] \\[ communitative: instructor \\bowtie course = course \\bowtie instructor \\] <p></p> \\[ \\begin{aligned} R &amp;= (A, B, C, D)\\\\ S &amp;= (E, B, D)\\\\ result \\ schema &amp;= (A,B,C,D,E)\\\\ r \\bowtie s &amp;= \\prod_{r_A,r_B,r_C,r_D,s_E}(\\sigma_{r.B = s.B \\wedge r.D = s.D}(r \\times s))\\\\ \u4f18\u5148\u4fdd\u8bc1R\u548cS\u5171\u6709\u7684\u5c5e\u6027&amp;\uff0c\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u4e4b\u540e\u518d\u63d2\u5165s.E \\end{aligned} \\] <ul> <li>Theta Join \\(r\\bowtie_\\theta s=\\sigma_\\theta (r\\times s)\\) \u6761\u4ef6\u8fde\u63a5</li> </ul>"},{"location":"DB/2.%20Relational%20Model/#2473-outer-join","title":"2.4.7.3 Outer Join","text":"<p>Computes the join and then adds tuples form one relation that does not match tuples in the other relation to the result of the join.   </p> <p>Uses null values:  </p> <ul> <li>null signifies that the value is unknown or does not exist  <code>null \u8868\u793a\u8be5\u503c\u672a\u77e5\u6216\u4e0d\u5b58\u5728</code></li> <li> <p>All comparisons involving null are (roughly speaking) false by definition</p> </li> <li></li> </ul> <p></p> <p>\u666e\u901a\u7684join\u5c31\u662fnatural join\uff0c\u9009\u62e9\u5171\u6709\u5c5e\u6027\u7684\u5171\u6709tuple\u8054\u7ed3</p> <p>left outer join\uff0c\u5de6\u8fb9\u7684table\u4e3a\u5168\u96c6\uff0c\u975e\u5171\u6709tuple\uff0cvalue\u672a\u77e5\u8865NULL</p> <p></p> <p>right outer join\uff0c\u53f3\u8fb9\u4e3a\u5168\u96c6\uff0c\u975e\u5171\u6709tuple\uff0cvalue\u672a\u77e5\u8865NULL</p> <p>Full outer join\uff0c\u4e24\u4e2atable\u5148\u8fdb\u884c\\(\\cup\\),\u672a\u77e5\u7684value\u8865NULL</p> <p>Outer join can be expressed using basic operations.  </p> <ul> <li> <p>\\(r\\rtimes s=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie s)\\times \\{null,\\ldots,null\\})\\)<code>\u53f3\u8fb9\u8865NULL</code></p> </li> <li> <p>\\(r\\ltimes s=(r\\bowtie s)\\cup \\{null,\\ldots,null\\}\\times (s-\\cap_R(r\\bowtie s))\\)<code>\u5de6\u8fb9\u8865NULL</code></p> </li> <li> <p>\\(r\\)\u27d7\\(s\\)\\(=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie  s))\\times \\{(null, \\ldots)\\}\\cup\\{(null,\\ldots,null)\\}\\times (s-\\cap_s(r\\bowtie s))\\)</p> </li> </ul> <p>\u76f8\u5f53\u4e8e\\(r\u27d7s=r \\ltimes s \\cup r \\rtimes s\\)</p>"},{"location":"DB/2.%20Relational%20Model/#2474-semijoin-\u534a\u8fde\u63a5","title":"2.4.7.4 Semijoin \u534a\u8fde\u63a5","text":"<p>\\(r\\ltimes_\\theta s\\)  Is a subset of r, in which every tuple\\(r_i\\)matches at least one tuple\\(s_i\\)in s under the condition\\(\\theta\\).</p> <p>\u4fdd\u7559\\(r\\)\u4e2d\u80fd\u4e0e\\(s\\)\u76f8\u8fde\u7684\u5143\u7ec4\u3002</p> <p> $$ r \\ltimes_{\\theta} s = \\prod_R(r \\bowtie _{\\theta} s) $$</p> <p> </p>"},{"location":"DB/2.%20Relational%20Model/#2475-division","title":"2.4.7.5 Division","text":"<p>Given relations\\(r(R)\\)and\\(s(S)\\), such that\\(S \\subset R\\),\\(r\\div s\\)is the largest relation\\(t(R-S)\\)such that\\(t\\times s \\subsetneqq  r\\) </p> <p>We can write\\(r\\div s\\)as  </p> \\[ \\begin{align*}     temp1 &amp; \\leftarrow \\Pi_{R-S}(r)\\\\     temp2 &amp; \\leftarrow \\Pi_{R-S}((temp1 \\times s)- \\Pi_{R-S,S}(r))\\\\     result &amp; = temp1 - temp2 \\end{align*} \\] <p> </p>"},{"location":"DB/2.%20Relational%20Model/#248-extended-relational-algebra-operation","title":"2.4.8 Extended Relational-Algebra-Operation","text":""},{"location":"DB/2.%20Relational%20Model/#2481-generalized-projection","title":"2.4.8.1 Generalized Projection","text":"<p>\u5e7f\u4e49\u6295\u5f71: \u5141\u8bb8\u5728\u6295\u5f71\u5217\u8868\u4f7f\u7528\u7b97\u672f\u51fd\u6570\u6765\u6269\u5c55\u6295\u5f71\u64cd\u4f5c $$ \\prod_{F_1, F_2,\\cdots,F_n}(E) $$ </p>"},{"location":"DB/2.%20Relational%20Model/#2482-aggregate-functions-and-operations","title":"2.4.8.2 Aggregate Functions and Operations","text":"<ul> <li> <p>Aggregation function\uff08\u805a\u5408\u51fd\u6570\uff09takes a collection of values and returns a single value as a result.  </p> <ul> <li>avg: average value</li> <li>min: minimum value</li> <li>max: maximum value</li> <li>sum: sum of values</li> <li>count: number of values</li> </ul> </li> <li> <p>Aggregate operation in relational algebra\\(G_1,G_2,\\ldots,G_n \\mathcal{G}_{F_1(A_1),\\ldots F_n(A_n)}(E)\\) </p> <p></p> <p>-\\(G_1,G_2,\\cdots,G_n\\)\u662f\u76ee\u6807table\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4e3a\u7a7a\uff0c -\\(F_i\\)\u662f\u805a\u5408\u51fd\u6570\uff0c\\(A_i\\)\u662f\u5c5e\u6027\u540d</p> <p></p> </li> </ul> <p>\u5206\u7ec4\u7ed3\u679c\u6ca1\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u7528 rename \u6216\u8005 as \u8fdb\u884c\u6539\u540d\u3002 e.g. <code>dept_name G_ {avg(salary) as avg_sal} (instructor)</code></p>"},{"location":"DB/2.%20Relational%20Model/#249-multiset-relational-algebra","title":"2.4.9 Multiset Relational Algebra","text":"<ul> <li>\u5728\u7eaf\u5173\u7cfb\u4ee3\u6570\u4e2d\uff0c\u4f1a\u5220\u9664all duplicates\uff08project \u6295\u5f71\uff09</li> <li>\u591a\u91cd\u96c6\u5173\u7cfb\u4ee3\u6570\u4f1a\u4fdd\u7559\u91cd\u590d\u9879<ul> <li>\u5bf9\u4e8eselect\uff1a \u5982\u679c\u5143\u7ec4\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u5143\u7ec4\u7684\u91cd\u590d\u6b21\u6570\u4e8e\u8f93\u5165\u7684\u91cd\u590d\u6b21\u6570\u76f8\u540c\uff08\u4e5f\u5c31\u662f\u5168\u90e8\u8f93\u51fa\uff09</li> <li>\u5bf9\u4e8eproject\uff1a\u5373\u4f7f\u662f\u91cd\u590d\u9879\uff0c\u4ecd\u7136\u6ee1\u8db3\u5143\u7ec4\u91cd\u590d\u6570\u548c\u8f93\u5165\u91cd\u590d\u6570\u76f8\u7b49</li> <li>\u5bf9\u4e8e\u7b1b\u5361\u5c14\u79ef\uff1a<code>If there are m copies of t1 in r, and n copies of t2 in s, there are m x n copies of t1.t2 in r x s</code></li> <li>\u5bf9\u4e8e\u96c6\u5408\u64cd\u4f5c<ul> <li>union\uff1a m + n copies</li> <li>intersection\uff1a min{m\uff0cn}copies</li> <li>difference\uff1a min{0\uff0cm-n} copies</li> </ul> </li> </ul> </li> </ul> <p>\u4f46\u5b9e\u9645\u6570\u636e\u5e93\u4e2d\u5e76\u4e0d\u662f\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u91cd\u96c6\uff0c\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u5b58\u5728\u3002  </p> <p>\u56e0\u4e3a\u4e00\u4e9b\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u4f1a\u5e26\u6765\u91cd\u590d\u5143\u7d20\uff0c\u8981\u4fdd\u6301\u96c6\u5408\u7279\u6027\u5f00\u9500\u5f88\u5927\uff0c\u56e0\u6b64\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u53bb\u91cd \u3002 </p>"},{"location":"DB/2.%20Relational%20Model/#25-sql-and-relational-algebra","title":"2.5 SQL and Relational Algebra","text":"<ul> <li> <p><code>select A1, A2, ... An from r1, r2, ... rm where P</code> is equivalent to\\(\\Pi_{A_1,\\ldots, A_n}(\\sigma_P(r_1\\times r_2\\ldots r_m))\\)</p> </li> <li> <p><code>select A1, A2, sum(A3) from r1, r2, ... rm where P group by A1, A2</code> is equivalent to\\(A_1, A_2 \\mathcal{G} sum(A_3)(\\sigma_P(r_1\\times r_2\\times\\ldots r_m))\\) </p> </li> </ul> <p>\u8fd9\u91cc\u6309\\(A_1,A_2\\)\u5206\u7ec4\uff0c\u90a3\u4e48\u7ed3\u679c\u7684\u8868\u4e2d\u4f1a\u6709\\(A_1,A_2,sum(A_3)\\)\u4e09\u5217\uff08\u5206\u7ec4\u4f9d\u636e+\u5206\u7ec4\u540e\u7684\u805a\u5408\u7ed3\u679c\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e09\u5217\uff0c\u6240\u4ee5\u5206\u7ec4\u5373\u53ef\u3002\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981\\(A_1, sumA3\\)\u90a3\u4e48\u6700\u540e\u8fd8\u9700\u8981\u6295\u5f71\u3002</p>"},{"location":"DB/3.%20SQL/","title":"3. SQL","text":""},{"location":"DB/3.%20SQL/#\u4e09-introduction-to-sql","title":"\u4e09. Introduction to SQL","text":"<p> \u7ea6 10289 \u4e2a\u5b57  496 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 58 \u5206\u949f</p>"},{"location":"DB/3.%20SQL/#31-data-definition","title":"3.1 Data Definition","text":""},{"location":"DB/3.%20SQL/#311-domain-types-in-sql","title":"3.1.1 Domain Types in SQL","text":"<ul> <li> <p><code>char(n).</code> Fixed length character string, with user-specified length n.   </p> <p>\u5b9a\u957f\u5b57\u7b26\u4e32. C \u8bed\u8a00\u91cc\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6709 <code>\\0</code>, \u4f46\u6570\u636e\u5e93\u91cc\u6ca1\u6709\uff0c\u957f\u5ea6\u7531\u5b9a\u4e49\u800c\u5f97\u3002  </p> </li> <li> <p><code>varchar(n).</code> Variable length character strings, with user-specified maximum length n.      \u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u8f83\u53ef\u80fd\u6709\u95ee\u9898\uff08\u6bd4\u5982\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\u7684\u5b57\u7b26\u4e32\uff09</p> <p>\u8bbe\u5b9a\u4e00\u4e2a\u6700\u957f\u7684\u957f\u5ea6\uff0c\u5c0f\u4e8e\u5219\u6309\u771f\u5b9e\u957f\u5ea6\u5b58\u50a8</p> </li> <li> <p><code>int.</code> Integer (a finite subset of the integers that is machine-dependent).</p> </li> <li> <p><code>smallint.</code> Small integer (a machine-dependent subset of the integer domain type).</p> </li> <li> <p><code>numeric(p,d).</code> Fixed point number, with user-specified precision of p digits, with d digits to the right of decimal point.     </p> <p>p \u8868\u793a\u6709\u6548\u6570\u5b57\u4f4d\u6570, d \u8868\u793a\u5c0f\u6570\u70b9\u540e\u591a\u5c11\u4f4d\u3002 e.g. <code>numeric(3,1)</code> allows 44.5 to be store exactly,  but neither 444.5 or 0.32</p> </li> <li> <p><code>real, double precision.</code>  Floating point and double-precision floating point numbers, with machine-dependent precision.</p> </li> <li> <p><code>float(n).</code> Floating point number, with user-specified precision of at least n digits.</p> </li> </ul>"},{"location":"DB/3.%20SQL/#312-built-in-data-types-in-sql","title":"3.1.2 Built-in Data Types in SQL","text":"<p>\u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u7c7b\u578b</p> <ul> <li>date: Dates, containing a (4 digit) year, month and date e.g. date \u20182005-7-27\u2019 \u65e5\u671f\uff08\u5e74\u6708\u65e5\uff09</li> <li>time: Time of day, in hours, minutes and seconds. e.g. time \u201809:00:30\u2019         time \u201809:00:30.75\u2019 \u65f6\u95f4\uff08\u65f6\u5206\u79d2\uff09</li> <li>timestamp: date plus time of day e.g. timestamp  \u20182005-7-27 09:00:30.75\u2019 \u65e5\u671f+\u65f6\u95f4</li> <li>interval: period of time   e.g. interval  \u20181\u2019 day  <ul> <li>Subtracting a date/time/timestamp value from another gives an interval value.  </li> <li>Interval values can be added to date/time/timestamp values</li> <li>built-in date, time functions: <code>current_date(), current_time(), year(x), month(x), day(x), hour(x), minute(x), second(x)</code></li> </ul> </li> </ul> <p></p>"},{"location":"DB/3.%20SQL/#313-create-table-construct","title":"3.1.3 Create Table Construct","text":"<p>An SQL relation is defined using the create table command: <pre><code>create table r (A1 D1, A2 D2, ..., An Dn,           (integrity-constraint_1),           \n..,         \n(integrity-constraint_k))\n\ncreate table instructor(\n    ID          char(5),\n    name        varchar(20),not null,\n    dept_name   varchar(20),\n    salary      numeric(8,2),\n    primary key(ID),\n    foreign key(dept_name)reference department\n);\n</code></pre></p> <ul> <li>\\(r\\) is the name of the relation</li> <li>each \\(Ai\\) is an attribute name in the schema of relation \\(r\\)</li> <li>\\(Di\\) is the data type of values in the domain of attribute \\(Ai\\) </li> </ul> <p></p> <p>Integrity Constraints in Create Table \u5b8c\u6574\u6027\u7ea6\u675f</p> <ul> <li> <p><code>not null \u8981\u6c42\u63d2\u5165\u7684\u6570\u636e\u975e\u7a7a</code></p> </li> <li> <p>primary key \\((A_1,\\ldots,A_n)\\) </p> <p>\u4e0d\u80fd\u4e3a\u7a7a; \u8868\u5185\u4e0d\u80fd\u6709\u76f8\u540c\u7684 keys. \u5426\u5219\u8fd9\u6837\u7684\u6570\u636e\u662f\u63d2\u5165\u4e0d\u8fdb\u53bb\u7684\u3002</p> </li> <li> <p>foreign key \\((A_m,\\ldots,A_n)\\) references r  </p> <p>\u9690\u542b\uff1a\u5f15\u7528\u5bf9\u5e94\u8868\u7684\u4e3b\u952e\u3002    </p> <p>\u5982\u679c\u4e0d\u7b26\u5408\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u63d2\u5165\u53ef\u80fd\u4f1a\u5931\u8d25\u3002    </p> </li> </ul> <p>dept_name \u6307\u5411department\u8868\u4e2d\u7684Primary key\u3002\u5728instructor\u8868\u4e2d\u6240\u6709\u7684dept_name\u7684\u503c\uff0c\u90fd\u8981\u5b58\u5728\u4e0edepartment\u8fd9\u4e2a\u8868\u7684dept_name\u5217\u4e2d</p> <p></p> <p>\u7f3a\u7701\u503cdefault\u3002\u5982\u679c\u63d2\u5165\u5b66\u751f\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u7ed9tot_cred\u4e00\u4e2a\u7ed9\u5b9a\u7684\u503c\uff0c\u90a3\u4e48\u8be5\u503c\u4e3adefault\u7ed9\u5b9a\u7684\u503c\u3002</p> <p></p> <p><code>sec_id</code> can be dropped from primary key above, to ensure a student cannot be registered for two sections of the same course in the same semester</p> <p>sec_id \u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u4e3b\u952e\u4e2d\u5220\u9664\uff0c\u4ee5\u786e\u4fdd\u5b66\u751f\u4e0d\u80fd\u5728\u540c\u4e00\u5b66\u671f\u4e0a\u540c\u4e00\u95e8\u8bfe\u7a0b\u7684\u4e24\u4e2a\u73ed\u7ea7</p> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u6761\u76ee\u88ab\u5220\u9664\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u3002\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a  </p> <ul> <li> <p>restrict: \u5982\u679c\u6709\u6761\u76ee\u662f\u88ab\u5f15\u7528\u7684\uff0c\u90a3\u4e48\u4e0d\u5141\u8bb8\u5220\u9664\u3002</p> </li> <li> <p>cascade: \u5f15\u7528\u7684\u6761\u76ee\u88ab\u5220\u4e86\u4e4b\u540e\uff0c\u5f15\u7528\u8005\u4e5f\u4e00\u5e76\u5220\u9664</p> </li> <li> <p>set null: \u5f15\u7528\u8005\u7684\u6307\u9488\u8bbe\u4e3a <code>null</code>. </p> <p>\u5982\u679c\u5373\u5c06\u8981\u88ab\u7f6e\u4e3anull\u7684\u5143\u7d20\uff0c\u5728\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u4e0b\u5df2\u7ecf\u88ab\u7ea6\u675f\u4e3a\u201cnot null\u201c\uff0c\u8fd9\u6837\u505a\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> </li> <li> <p>set default \uff1a \u5f15\u7528\u8005\u7684\u6307\u9488\u8bbe\u4e3a\u9ed8\u8ba4\u503c</p> </li> </ul> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u66f4\u65b0\uff0c\u4e5f\u6709\u7c7b\u4f3c\u4e0a\u9762\u7684\u56db\u79cd\u65b9\u6cd5\u3002  \u5728 <code>create table</code> \u4e2d\u5b9a\u4e49 </p> <ul> <li> <p><code>on delete cascade  |set null |restrict |set default</code></p> <p>\u88ab\u5f15\u7528\u7684\u8868\u53d1\u751f\u5220\u9664</p> <p>cascade\u53ef\u80fd\u4f1a\u9020\u6210\u8fde\u9501\u53cd\u5e94\uff0c\u591a\u6b21foreign key \u5f15\u7528</p> </li> <li> <p><code>on update cascade  |set null |restrict |set default</code></p> <p>\u88ab\u5f15\u7528\u7684\u8868\u53d1\u751f\u66f4\u6539</p> </li> </ul> <p>\u5b9e\u73b0\u65b9\u5f0f\uff1a\u5728create table\u4e2d\u5b8c\u6210\u5b8c\u6574\u6027\u7ea6\u675f\u5b9a\u4e49</p> <p></p>"},{"location":"DB/3.%20SQL/#314-drop-and-alter-table-constructs","title":"3.1.4 Drop and Alter Table Constructs","text":"<p>\u5220\u9664\u548c\u66f4\u6539\u8868\u7684\u7ed3\u6784</p> <ul> <li> <p>drop table student   Deletes the table and its contents   </p> <p>\u628a\u5185\u5bb9\u548c\u8868\u5168\u5220\u4e86\uff0c\u4e4b\u540e\u4e0d\u80fd\u518d\u5f80\u8868\u91cc\u63d2\u5165\u3002\u8868\u90fd\u6ca1\u4e86</p> </li> <li> <p>delete from student  </p> <p>Deletes all contents of table, but retains table</p> <p>\u5220\u9664\u8868\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4f46\u4fdd\u7559\u8868</p> </li> <li> <p>alter table   </p> </li> </ul> <p>\u53ef\u4ee5\u7528\u4e8e\u66f4\u6539\u8868\u4e2d\u7684\u5217\uff08\u6dfb\u52a0\u6216\u8005\u5220\u9664\uff09</p> <ul> <li> <p><code>alter table r add A D</code></p> <ul> <li> <p>where A is the name of the attribute to be added to relation r  and D is the domain of A.</p> <p>A \u662f\u5c5e\u6027\uff0c D\u662fA\u7684\u57df</p> <p>e.g. <code>alter table student add resume varchar(256);</code></p> </li> <li> <p>All tuples in the relation are assigned null as the value for the new attribute.  </p> <p>\u5bf9\u4e8e\u65b0\u6dfb\u52a0\u7684\u5217\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u8bbe\u4e3aNULL</p> </li> <li> <p>\u8fd8\u53ef\u4ee5\u589e\u52a0\u5916\u952e\u7ea6\u675f\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5220\u6389</p> </li> </ul> </li> <li> <p><code>alter table r drop A</code> </p> <ul> <li> <p>where A is the name of an attribute of relation r</p> </li> <li> <p>Dropping of attributes not supported by many databases </p> <p>\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8868\uff0c\u7136\u540e\u628a\u9664\u4e86\u8981\u5220\u7684\u5217\u4ee5\u5916\u7684\u5217\u642c\u79fb\u8fc7\u53bb\u3002  </p> </li> </ul> </li> </ul> <p>\"\u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e09\u5c42\u62bd\u8c61\"  </p> <ul> <li>\u7528\u6237\u5c42\uff1a\u7531 DML \u5b9a\u4e49\u64cd\u4f5c, \u5982 <code>select</code> \u8bed\u53e5\u3002</li> <li>\u903b\u8f91\u5c42\uff1a\u7531 <code>create table</code> \u51b3\u5b9a\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u8868\u7684\u5143\u7d20\uff0c\u4ee5\u53ca\u5404\u79cd\u952e\uff0c\u6784\u6210\u4e86\u6a21\u5f0f\u56fe\u3002</li> </ul>"},{"location":"DB/3.%20SQL/#32-basic-query-structure","title":"3.2 Basic Query Structure","text":""},{"location":"DB/3.%20SQL/#321-the-select-clause","title":"3.2.1 The <code>select</code> Clause","text":"<p>The <code>select</code> clause list the attributes desired in the result of a query.  </p> <p><code>SQL names are case insensitive \u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002\uff08\u5c5e\u6027\u540d\u5b57\u3001\u8868\u7684\u540d\u5b57\u7b49\uff09</code></p> <ul> <li> <p>To force the elimination of duplicates, insert the keyword <code>distinct</code> after select.</p> <p>e.g. <code>select distinct dept_name from instructor</code> </p> <p>\u52a0 distinct\u80fd\u591f\u53bb\u91cd</p> <p>\u53ef\u4ee5\u52a0 all \u8868\u793a\u4e0d\u53bb\u91cd\uff0c\u52a0\u4e0d\u52a0\u65e0\u6240\u8c13</p> </li> <li> <p>An asterisk in the select clause denotes \u201call attributes\u201d e.g. <code>select * from instructor</code></p> </li> <li> <p>The select clause can contain arithmetic expressions involving the operation, +, \u2013, \\(\\div\\), and /, and operating on constants or attributes of tuples.  </p> <p>\u53ef\u4ee5\u6709\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 e.g. <code>select ID, name, salary/12 from instructor</code></p> </li> </ul>"},{"location":"DB/3.%20SQL/#322-the-where-clause","title":"3.2.2 The <code>where</code> Clause","text":"<p>The <code>where</code> clause specifies conditions that the result must satisfy. </p> <p>\u8be5 <code>where</code> \u5b50\u53e5\u6307\u5b9a\u7ed3\u679c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u3002  </p> <p>Corresponds to the selection predicate of the relational algebra.  </p> <ul> <li> <p>SQL includes a <code>between</code> comparison operator</p> </li> <li> <p>Tuple comparison  </p> <p>\u5143\u7ec4\u76f8\u7b49\u7b49\u4ef7\u4e8e\u5404\u4e2a\u5143\u7d20\u90fd\u76f8\u7b49\u3002</p> </li> </ul> <pre><code>select name \nfrom instructor \nwhere salary between 90000 and 100000\n\nselect name, course_id \nfrom instructor, teaches \nwhere (instructor.ID, dept_name)=(teaches.ID, \u2019Biology\u2019)\n</code></pre>"},{"location":"DB/3.%20SQL/#323-the-from-clause","title":"3.2.3 The <code>from</code> clause","text":"<p>The <code>from</code> clause lists the relations involved in the query.  </p> <p>Corresponds to the Cartesian product operation of the relational algebra.  </p> <p>from \u591a\u4e2a table \u8868\u793a \u7b1b\u5361\u5c14\u79ef</p>"},{"location":"DB/3.%20SQL/#324-natural-join","title":"3.2.4 Natural Join","text":"<p>e.g. <code>select * from instructor natural join teaches;</code></p> <pre><code>select name, course_id \nfrom instructor, teaches \nwhere instructor.ID = teaches.ID;\n\nselect name, course_id \nfrom instructor natural join teaches;\n</code></pre> <p>\u4e0a\u9762\u4e24\u6761\u8bed\u53e5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u81ea\u7136\u8054\u63a5\u5c06\u6240\u6709\u516c\u5171\u5c5e\u6027\u7684\u5143\u7ec4\u4e0e\u76f8\u540c\u503c\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u4e14\u4ec5\u4fdd\u7559\u6bcf\u4e2a\u516c\u5171\u5217\u7684\u4e00\u4e2a\u526f\u672c</p> <p>natural join \u53ef\u4ee5\u4f7f\u7528 using \u89c4\u5b9a\u5339\u914d\u7684\u662f\u54ea\u4e2a\u516c\u5171\u5c5e\u6027</p> <p><code>course(course_id,title, dept_name,credits\uff09</code>, </p> <p><code>teaches(ID, course_id,sec_id,semester, year)</code>, </p> <p><code>instructor(ID, name, dept_name,salary\uff09</code> </p> <p>\u8fd9\u91cc\u7684 department \u542b\u4e49\u5404\u6709\u4e0d\u540c\uff0c\u4e0d\u80fd\u76f4\u63a5\u81ea\u7136\u8fde\u63a5\u3002 </p> <p>instructor dept_name \u8868\u793a\u8001\u5e08\u6240\u5728\u7684\u7cfb</p> <p>course dept_name \u8868\u793a\u5f00\u8bfe\u7684\u7cfb</p> <p>\u53ef\u4ee5\u5199\u6210 `` \u5373\u89c4\u5b9a\u8fde\u63a5\u7684\u5c5e\u6027\uff0c\u5bf9\u5e94\u4e8e \\(\\sigma_\\theta\\) </p> <pre><code>select title, name\nfrom (instructor natural join teaches) join course using(course_id);\n\nselect title, name\nfrom instructor, teaches, course\nwhere instructor.id  teaches.id \nadn teaches.course_id = course.course_id;\n</code></pre> <p>Find students who takes courses across his/her department.  </p> <p>\u5bfb\u627e\u8de8\u7cfb\u9009\u8bfe</p> <p>student(id, name, dept_name, tot_cred)</p> <p>takes(id, course_id, sec_id, semester, year, grade)</p> <p>course(course_id, title, dept_name, credits)</p> <pre><code>select distinct student.id\nfrom (student natural join takes) \n    join course using (course_id\uff09 \nwhere student.dept_name &lt;&gt; course.dept_name\n</code></pre> <p>\u8bf7\u6ce8\u610f\u6b64\u5904\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f7f\u7528join\uff0c\u9644\u5e26\u6761\u4ef6\u4f7f\u7528course_id,\u8fd9\u662f\u56e0\u4e3a\u7b2c\u4e00\u5904natural join\u4e4b\u540e\u5f97\u5230\u7684\u8868\uff0c\u4e0ecourse\u8868\u7684\u5171\u6709\u5c5e\u6027\u6709course_id, dept_name\u3002\u800c\u6211\u4eec\u8981\u627e\u7684\u662fdept_name\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528natural join</p> <p></p>"},{"location":"DB/3.%20SQL/#325-the-rename-operation","title":"3.2.5 The Rename Operation","text":"<p>The SQL allows renaming relations and attributes using the <code>as</code> clause.  </p> <p><code>old-name as new-name</code></p> <pre><code>select ID, salary/12 as monthly_salary\nfrom instructor\n\nselect distinct T. name \nfrom instructor as T, instructor as S \nwhere T.salary &gt; S.salary and S.dept_name = \u2018Comp. Sci.\u2019`\n</code></pre> <ul> <li> <p>Keyword <code>as</code> is optional and may be omitted.  </p> <p>as\u53ef\u4ee5\u7701\u7565</p> </li> </ul>"},{"location":"DB/3.%20SQL/#326-string-operations","title":"3.2.6 String Operations","text":"<p>SQL includes a string-matching operator for comparisons on character strings.  The operator <code>like</code> uses patterns that are described using two special characters. </p> <p>\u6ce8\u610f\u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\u3002</p> <ul> <li> <p>percent (%).  The % character matches any substring.  </p> <p>e.g. <code>select name from instructor where name like '%dar%';</code></p> <p>\u627e\u540d\u5b57\u91cc\u9762\u542b\u6709 <code>dar</code> \u7684\u5b57\u7b26\u4e32\u3002 </p> </li> <li> <p>underscore (_).  The _ character matches any character.  </p> <p>\u5339\u914d\u5b57\u7b26\u4e32 <code>'100 %'</code> \u4f46\u662f <code>%</code> \u7b26\u53f7\u88ab\u6211\u4eec\u4f5c\u4e3a\u4e86\u901a\u914d\u7b26\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u8f6c\u4e49\u7b26 <code>\\</code>. <code>\\%</code> \u5373\u5c06 <code>%</code> \u4f5c\u4e3a\u6b63\u5e38\u5b57\u7b26\u5339\u914d\u3002  </p> <p><code>\\</code> \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57fa\u672c\u7b26\u53f7\uff0c\u6211\u4eec\u9700\u8981\u5728\u540e\u9762\u5199\u51fa <code>escape</code> \u8868\u793a\u5176\u5728\u8fd9\u91cc\u4f5c\u4e3a\u8f6c\u4e49\u7b26\u3002\u7c7b\u4f3c\u5730\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u8f6c\u4e49\u7b26\u5b9a\u4e49\u4e3a <code>#</code>. </p> </li> </ul> <pre><code>like \u2018100 \\%'  escape  '\\'\nlike \u2018100 #%'  escape  \u2018#' \n</code></pre> <p>SQL supports a variety of string operations such as</p> <ul> <li>concatenation (using <code>||</code>)</li> <li>converting from upper to lower case (and vice versa)</li> <li>finding string length, extracting substrings, etc.  </li> </ul> <p></p>"},{"location":"DB/3.%20SQL/#327-ordering-the-display-of-tuples","title":"3.2.7 Ordering the Display of Tuples","text":"<p>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u80fd\u89c4\u5b9a\u663e\u793a\u51fa\u6765\u7684\u987a\u5e8f\u3002</p> <ul> <li> <p>We may specify desc for descending order or asc for ascending order, for each attribute; ascending order is the default.  </p> <p>desc\u2014\u2014descending \u964d\u5e8f\uff0c asc\u2014\u2014ascendin \u5347\u5e8f\u3002\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u5347\u5e8f</p> <p>e.g. <code>order by name desc</code>  \u53ef\u4ee5\u6392\u5e8f\u7684\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3002</p> </li> <li> <p>Can sort on multiple attributes  </p> <p>e.g. <code>order by  dept_name, name</code> \u5148\u6309\u7b2c\u4e00\u4e2a\u6392\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\u518d\u6309\u7b2c\u4e8c\u4e2a\u6392\u3002</p> </li> </ul>"},{"location":"DB/3.%20SQL/#328-the-limit-clause","title":"3.2.8 The limit Clause","text":"<p>The <code>limit</code> clause can be used to constrain the number of rows returned by the select statement.   </p> <p>\u9650\u5236 select \u8bed\u53e5\u8fd4\u56de\u7684\u884c\u6570\u3002</p> <p>limit clause takes one or two numeric arguments, which must both be nonnegative integer constants: </p> <p>limit \u5b50\u53e5\u91c7\u7528\u4e00\u4e2a\u6216\u4e24\u4e2a\u6570\u503c\u53c2\u6570\uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u90fd\u5fc5\u987b\u662f\u975e\u8d1f\u6574\u6570\u5e38\u91cf\uff1a</p> <ul> <li> <p><code>limit offset, row_count</code></p> <p>\u8868\u793a\u4ece\u4e0b\u6807\u4e3aoffset\u7684\u5730\u65b9\u5f00\u59cb\uff0c\u4fdd\u7559row_count\u4e2a</p> </li> <li> <p><code>limit row_count == limit 0, row_count</code></p> </li> </ul> <pre><code>select  name \nfrom instructor \norder by salary desc \nlimit 3\uff1b   //  limit 0,3\n</code></pre>"},{"location":"DB/3.%20SQL/#329-set-operations","title":"3.2.9 Set Operations","text":"<p><code>union, intersect, except</code> \u662f\u4e25\u683c\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u4f1a\u5bf9\u7ed3\u679c\u53bb\u91cd.</p> <ul> <li>\u5982\u679c\u4e0d\u60f3\u53bb\u9664\u91cd\u590d\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528<code>union all</code>, <code>intersect all</code> and <code>except all</code>. \u4fdd\u6301\u591a\u91cd\u96c6\u3002 </li> </ul>"},{"location":"DB/3.%20SQL/#3210-null-values","title":"3.2.10 Null Values","text":"<p>null signifies an unknown value or that a value does not exist.</p> <ul> <li> <p>The result of any arithmetic expression involving null is null.  </p> <p>\u4efb\u4f55\u6d89\u53ca null \u7684\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u90fd\u662f null\u3002</p> <p>e.g. <code>5 + null</code> returns null</p> </li> <li> <p>The predicate <code>is null</code>can be used to check for null values.  </p> <p>\u8c13\u8bcd is null \u53ef\u7528\u4e8e\u68c0\u67e5 null \u503c\u3002</p> <p>e.g. Find all instructors whose salary is null.   </p> <pre><code>select name \nfrom instructor \nwhere salary is null\n</code></pre> </li> <li> <p>Comparisons with null values return the special truth value: unknown.  </p> </li> </ul> <ul> <li>Result of select predicate is treated as false if it evaluates to unknown</li> </ul>"},{"location":"DB/3.%20SQL/#3211-aggregate-functions","title":"3.2.11 Aggregate Functions","text":"<p>\u805a\u5408\u51fd\u6570\uff1a\u5e38\u89c1\u7684\u5305\u62ec\uff1aavg\uff0cmin\uff0cmax\uff0csum\uff0ccount</p> <pre><code># Find the average salary of instructors in the Computer Science department\nselect avg(salary)\nfrom instructor\nwher dept_name = \"Comp.Sci\"\n\n# Find the total number of instructors who teach a course in the Spring 2010 semester\nselect count (distinct ID)\nfrom teaches\nwhere semester = \u2019Spring\u2019 and year = 2010\n\n# Find the number of tuples in the course relation\nselect count (*)\nfrom course;\n</code></pre> <p>\u5728select\u6311\u9009\u51fa\u6765\u7684\u5c5e\u6027\u4e2d\uff0c\u9664\u4e86\u805a\u5408\u51fd\u6570\u8ba1\u7b97\u5f97\u5230\u7684\u5c5e\u6027\u4ee5\u5916\uff0c\u5176\u4f59\u7684\u5c5e\u6027\u5fc5\u987b\u5728\u5206\u7ec4\u5c5e\u6027group by\u540e\u9762\u51fa\u73b0</p> <pre><code>\uf06c/* erroneous query */\nselect dept_name, ID, avg (salary)\nfrom instructor\ngroup by dept_name;\n\n# \u6b64\u5904\u7684ID\u4e0d\u5408\u89c4\n</code></pre>"},{"location":"DB/3.%20SQL/#32111-having-clause","title":"3.2.11.1 Having Clause","text":"<p>\u5bf9\u5206\u7ec4\u540e\u7684\u7ec4\u8fdb\u884c\u7b5b\u9009\u3002  </p> <pre><code>select dept_name, count (*) as cnt\nfrom instructor\nwhere  salary &gt;=100000\ngroup by dept_name\nhaving  count (*) &gt; 10\norder by cnt;\n\n# \u5148\u5bf9\u6bcf\u4e2a\u7cfb\u4e2d\u5de5\u8d44\u5927\u4e8e100000\u7684\u9009\u51fa\u6765\uff0c\u518d\u8ba1\u7b97\u6570\u91cf\uff0c\u518d\u6309\u7167\u6570\u91cf\u5c06cnt &gt; 10 \u7559\u4e0b\u6765\uff0c \u6700\u540e\u6309\u7167cnt \u6392\u5e8f\n\nselect dept_name\nfrom student\ngroup by dept_name\nhaving count(distinct name) = count(distinct id)\n# \u627e\u51fa\u6ca1\u6709\u91cd\u540d\u5b66\u751f\u7684\u7cfb\n\nselect dept_name\nfrom student\ngroup by dept_name\nhaving 1-count(distinct name)/count(distinct id) &lt; 0.001\n# \u627e\u51fa\u91cd\u540d\u7387\u5c0f\u4e8e0.001 \u7684\u7cfb\u5f97\u540d\u5b57\n</code></pre> <p>\u5173\u4e8ehaving \u548c where\u7684\u533a\u522b</p> <p>predicates in the <code>having</code> clause are applied after the formation of groups whereas predicates in the <code>where</code> clause are applied before forming groups.  </p> <p>having\u662f\u5728\u5206\u7ec4\u4e4b\u540e\uff0c\u5bf9\u5206\u597d\u7684\u7ec4\u8fdb\u884c\u7b5b\u9009</p> <p>where\u662f\u5728\u5206\u7ec4\u4e4b\u524d\uff0c\u5bf9\u8868\u4e2d\u7684\u884c\u8fdb\u884c\u7b5b\u9009\uff0c\u7b5b\u6389\u7684\u884c\u4e0d\u53c2\u4e0e\u5206\u7ec4</p>"},{"location":"DB/3.%20SQL/#32112-null-values-and-aggregates","title":"3.2.11.2 Null Values and Aggregates","text":"<p><code>select sum (salary) from instructor</code> </p> <ul> <li> <p>Above statement ignores null amounts</p> </li> <li> <p>Result is null if there is no non-null amount</p> <p>\u5982\u679c\u6ca1\u6709\u975e null \u91d1\u989d\uff0c\u5219\u7ed3\u679c\u4e3a null</p> </li> <li> <p>All aggregate operations except <code>count(*)</code> ignore tuples with null values on the aggregated attributes</p> </li> </ul> <p>\u5982\u679c\u4f7f\u7528count(*),\u8f93\u51fa\u7684\u662f\u975e\u7a7a\u503c\u7684\u4e2a\u6570</p>"},{"location":"DB/3.%20SQL/#3212-nested-subqueries","title":"3.2.12 Nested Subqueries","text":"<p>A subquery is a select-from-where expression that is nested within another query.</p>"},{"location":"DB/3.%20SQL/#set-membership","title":"Set Membership","text":"<p><code>in, not in</code></p> <p>in \u662f \u96c6\u5408\u6210\u5458\u7684\u5224\u65ad</p> <pre><code># Find courses offered in Fall 2009 and in Spring 2010\nselect distinct course_id\nfrom section\nwhere semester = \u2019Fall\u2019 and year= 2009 and\n    course_id in (select course_id\n            from section\n            where semester = \u2019Spring\u2019 and year= 2010);\n</code></pre> <pre><code># Find courses offered in Fall 2009 but not in Spring 2010\nselect distinct course_id\nfrom section\nwhere semester = \u2019Fall\u2019 and year= 2009 and\n    course_id not in (select course_id\n        from section\n        where semester = \u2019Spring\u2019 and year= 2010);\n</code></pre> <p>in\u6216not in\u8bed\u53e5\u4e5f\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5143\u7ec4\u662f\u5426\u5728\u7ed9\u5b9a\u8868\u7684\u884c\u5f53\u4e2d\uff1a</p> <pre><code># Find the total number of (distinct) students who have taken course sections taught by the instructor with ID 10101\nselect count (distinct ID)\nfrom takes\nwhere (course_id, sec_id, semester, year) in\n            (select course_id, sec_id, semester, year\n            from teaches\n            where teaches.ID= \u201810101\u2019);\n</code></pre>"},{"location":"DB/3.%20SQL/#set-comparison","title":"Set Comparison","text":"<ul> <li><code>some</code> \u67d0\u4e9b\u6210\u5458   </li> <li><code>all</code> \u6240\u6709\u6210\u5458</li> </ul> <p>\u200b    \u5de5\u8d44\u5927\u4e8e\u751f\u7269\u7cfb\u4e2d\u7684\u67d0\u4e9b\u8001\u5e08\u7684\u8001\u5e08.  </p> <pre><code>    select name\n    from instructor\n    where salary &gt; some (select salary\n                         from instructor\n                         where dept_name = \u2019Biology\u2019);\n\n    select name\n    from instructor\n    where salary &gt; all (select salary\n                        from instructor\n                        where dept_name = \u2019Biology\u2019);\n</code></pre>"},{"location":"DB/3.%20SQL/#scalar-subquery","title":"Scalar Subquery","text":"<p>Scalar (\u6807\u91cf) subquery is one which is used where a single value is expected.  </p> <p>\u200b    \u6b64\u5904\u7531\u4e8edepartment.dept_name \u5b9a\u4e0b\u6765\u4e86\uff0c\u6240\u4ee5budget\u4e5f\u552f\u4e00\u786e\u5b9a\uff0c\u4fdd\u8bc1\u4e86\u5d4c\u5957\u67e5\u8be2\u7684\u5b50\u67e5\u8be2\u4e2d\u4ec5\u4ec5\u8fd4\u56de\u4e00\u4e2a\u6570\u503c\u3002</p> <p>\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u503c\u53ea\u6709\u4e00\u4e2a\uff0c\u9700\u8981\u4f7f\u7528some\u6216\u8005all</p> <pre><code>select name\nfrom instructor\nwhere  salary * 10 &gt; \n    (select budget  \n    from department \n    where department.dept_name = instructor.dept_name)\n\n```\n\n\u8fd9\u91cc `dept_name` \u662f\u8fd9\u4e2a\u8868\u7684\u4e3b\u952e\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u4e0d\u7528 `some, all` \u7684\u3002\n</code></pre> <p><code>Runtime error if subquery returns more than one result tuple.</code></p>"},{"location":"DB/3.%20SQL/#test-for-empty-relations","title":"Test for Empty Relations","text":"<p>The exists construct returns the value true if the argument subquery is nonempty.</p> <ul> <li><code>exists r</code> \\(\\Leftrightarrow r \\neq \\emptyset\\)</li> <li><code>not exists r</code> \\(\\Leftrightarrow r = \\emptyset\\)</li> </ul> <pre><code>select course_id\nfrom section as S\nwhere semester = \u2019Fall\u2019 and year= 2009 and \n   exists (select *                            \n    from section as T                      \n    where semester = \u2019Spring\u2019 and year= 2010 \n            and S.course_id= T.course_id);\n</code></pre> <p>\u53ea\u8981\u4e0d\u7a7a\uff0c\u5b58\u5728\u5c31\u662fTrue</p> <pre><code># Find all students who have taken all courses offered in the Biology department.  \n# SQL \u8bed\u53e5\u5f80\u5f80\u9700\u8981\u9006\u5411\u8003\u8651\uff0c\u5373\u627e\u5230\u8fd9\u6837\u7684\u5b66\u751f\uff0c\u4e0d\u5b58\u5728\u4ed6\u6ca1\u9009\u8fc7\u7684\u751f\u7269\u7cfb\u7684\u8bfe\u3002  \nselect distinct S.ID, S.name\nfrom student as S\nwhere not exists ( (select course_id\n                    from course\n                    where dept_name = \u2019Biology\u2019)\n                    except\n                  (select T.course_id\n                   from takes as T\n                   where S.ID = T.ID));\n</code></pre> <p>\u4e0d\u5b58\u5728\u5b66\u751f\u6ca1\u9009\u8fc7\u7684\u751f\u7269\u8bfe\u3002</p> <p>\u4e5f\u5c31\u662f\u8ba9\u751f\u7269\u7cfb\u6240\u6709\u7684\u8bfe\u7a0bid \u51cf\u53bb \u8fd9\u4f4d\u540c\u5b66\u4e0a\u8fc7\u7684\u6240\u6709\u8bfe\u7684id\uff0c\u53ea\u8981\u6700\u540e\u7684\u96c6\u5408\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8868\u660e\u8fd9\u4e2a\u5b66\u751f\u4e0a\u8fc7\u751f\u7269\u7cfb\u4e2d\u6240\u6709\u7684\u8bfe\u7a0b\u3002</p> <p>exist \u548c in/not in \u7684\u533a\u522b</p> <p>exist \u6d4b\u8bd5\u7684\u662f\uff0c\u540e\u9762\u7684\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\uff0c\u53ea\u8981\u4e0d\u4e3a\u7a7a\u5c31\u8fd4\u56detrue</p> <p>in/not in\uff0c \u524d\u7f6e\u4f1a\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u9700\u8981\u68c0\u6d4b\u524d\u7f6e\u7684\u5c5e\u6027\u662f\u5426\u5728\u540e\u9762\u7684\u96c6\u5408\u4e2d</p>"},{"location":"DB/3.%20SQL/#test-for-absence-of-duplicate-tuples","title":"Test for Absence of Duplicate Tuples","text":"<p>The <code>unique</code> construct tests whether a subquery has any duplicate tuples in its result.  </p> <p>\u9a8c\u8bc1\u662f\u5426\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u800c\u975e\u591a\u91cd\u96c6\u3002  </p> <ul> <li> <p>Evaluates to \u201ctrue\u201d on an empty set.   </p> <p>\u53ef\u4ee5\u5c06 unique \u7406\u89e3\u4e3a at most once. </p> <p>\u53ea\u8981unique\u540e\u9762\u8ddf\u7684\u62ec\u53f7\u4e2d\u7684\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u503c\u5c31\u662fTrue\u3002</p> <p><code>\u5982\u679c\u8fd4\u56de\u503c\u4e3a\u7a7a\uff0cunique\u4ecd\u7136\u4e3aTrue</code></p> <p>\u4f8b\u5982\u4e0b\u65b9\uff0c\u5047\u8bbe\u9009\u62e9\u51fa\u7684\u8bfe\u7a0b\u57282009\u5e74\u6ca1\u6709\u5f00\u8fc7\uff0c\u90a3\u4e48unique\u540e\u9762\u8ddf\u7740\u7684\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u4e3anull\uff0c\u4e5f\u540c\u6837\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u56e0\u6b64\u7ed3\u679c\u4e5f\u662fTrue</p> <pre><code># Find all courses that were offered at most once in 2009\nselect T.course_id\nfrom course as T\nwhere unique (select R.course_id\n      from section as R\n      where T.course_id= R.course_id\n        and R.year = 2009) ;\n</code></pre> </li> </ul> <p>\u5982\u679c\u60f3\u8981\u67e5\u8be2\u57282009\u5e74\u6070\u597d\u5f00\u8fc7\u4e00\u6b21\u7684\u8bfe\u7a0b\uff0c\u9700\u8981\u540c\u65f6\u4f7f\u7528unique\u548cexist</p> <pre><code>select T.course_id\nfrom course as T\nwhere exist(select R.course_id\n           from section as R\n           where R.course_id = T.course_id\n           and R.year = 2009)\nand unique(select R.course_id\n          from section as R\n          where R.course_id = T.course_id\n          and R.year = 2009)\n\n-- exist \u548c in \u53ef\u4ee5\u7b49\u4ef7\u66ff\u6362\nselect T.course_id\nfrom course as T\nwhere course_id in (select R.course_id\n           from section as R\n           where R.course_id = T.course_id\n           and R.year = 2009)\nand unique(select R.course_id\n          from section as R\n          where R.course_id = T.course_id\n          and R.year = 2009)    \n</code></pre> <p>\u5982\u679c\u4e0d\u52a0 exist, \u53ef\u80fd\u6709\u6ca1\u5f00\u8fc7\u7684\u8bfe\u4e5f\u88ab\u7b97\u8fdb\u53bb\u3002\u6211\u4eec\u8fd9\u91cc\u6c42\u5f97\u662f\u6070\u597d\u53ea\u5f00\u8fc7\u4e00\u6b21\u7684\u3002</p> <p></p> <p>\u4e5f\u53ef\u4ee5\u7528 <code>group by count(*) &lt;= 1</code> \u5b9e\u73b0\u3002</p>"},{"location":"DB/3.%20SQL/#3213-with-clause","title":"3.2.13 With Clause","text":"<p>The <code>with</code> clause provides a way of defining a temporary view whose definition is available only to the query in which the with clause occurs.  </p> <p><code>with</code> \u5b50\u53e5\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9a\u4e49\u4e34\u65f6\u89c6\u56fe\u7684\u65b9\u6cd5\uff0c\u8be5\u4e34\u65f6\u89c6\u56fe\u7684\u5b9a\u4e49\u4ec5\u9002\u7528\u4e8e\u51fa\u73b0 with \u5b50\u53e5\u7684\u67e5\u8be2\u3002</p> <pre><code># Find all departments with the maximum budget.\n    with max_budget (value) as \n        (select max(budget)\n         from department)\n# max_budget \u662f \u4e34\u65f6\u8868\u7684\u540d\u5b57\uff0c value\u662f\u8868\u4e2d\u7684\u5c5e\u6027\n    select dept_name\n    from department, max_budget\n    where department.budget = max_budget.value;\n\n    select dept_name\n    from department\n    where budget = (select max(budget)\n                   from department)\n</code></pre> <pre><code># \u67e5\u627e\u603b\u5de5\u8d44\u5927\u4e8e\u6240\u6709\u90e8\u95e8\u603b\u5de5\u8d44\u5e73\u5747\u503c\u7684\u6240\u6709\u90e8\u95e8\nwith dept_total (dept_name, value) as\n  (select dept_name, sum(salary)\n  from instructor\n  group by dept_name),\n\n  dept_total_avg(value) as\n  (select avg(value)\n  from dept_total)\nselect dept_name\nfrom dept_total, dept_total_avg\nwhere dept_total.value &gt;= dept_total_avg.value;\n</code></pre>"},{"location":"DB/3.%20SQL/#3214-modification-of-the-database","title":"3.2.14 Modification of the Database","text":""},{"location":"DB/3.%20SQL/#deletion","title":"Deletion","text":"<pre><code>delete from instructor\nwhere salary &lt; (select avg(salary) from instructor)\n\n// First, compute avg salary and find all tuples to delete\n// Next, delete all tuples found above (without recomputing avg or          retesting the tuples)\n</code></pre>"},{"location":"DB/3.%20SQL/#insertion","title":"Insertion","text":"<pre><code>\u7b2c\u4e8c\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u7528\u4e25\u683c\u6309\u7167\u5b9a\u4e49\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ea\u8981\u548c\u81ea\u5df1\u5199\u7684\u5bf9\u5e94\u5373\u53ef\u3002\n</code></pre> <p>\u9664\u4e86\u57fa\u672c\u5199\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 <code>insert</code> \u540e\u8ddf\u67e5\u8be2\u8bed\u53e5\uff0c\u628a\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u5230\u8868\u91cc\u53bb\u3002</p> <p></p> <pre><code>insert into table\n    select * from tabel\n// \u5982\u679c\u6ca1\u6709primary key\uff0c\u5219\u6240\u6709\u5143\u7d20\u91cd\u590d\u4e00\u6b21\n// \u5426\u5219\uff0c\u51fa\u73b0\u9519\u8bef\uff0c\u91cd\u590d\n</code></pre>"},{"location":"DB/3.%20SQL/#updates","title":"Updates","text":"<p><code>update ... set ...</code> </p> <p>\u6b64\u5904\u5f3a\u8c03\u987a\u5e8f\uff0c\u5982\u679c\u5bf9\u5de5\u8d44\u5c0f\u4e8e100000\u7684\uff0c\u5148\u8fdb\u884c\u00d71.05\u7684\u64cd\u4f5c\uff0c\u5c06\u4f1a\u5bfc\u81f4\u8fd0\u7b97\u540e\u7684\u5de5\u8d44\u5927\u4e8e100000\uff0c\u518d\u00d71.03\uff0c\u9020\u6210\u91cd\u590d\u8ba1\u7b97</p> <p><code>order is important,\u5426\u5219\u4f1a\u591a\u6b21\u8fd0\u7b97</code> <code>\u8fdb\u9636\uff1a \u4f7f\u7528 case \u8bed\u53e5</code></p> <p></p> <pre><code>// \u8ba1\u7b97\u603b\u5b66\u5206\u4e14\u8981\u6c42\u8be5\u95e8\u8bfe\u7684\u6210\u7ee9\u4e0d\u662fF\nupdate student S \nset tot_cred = ( select sum(credits)\n                from takes natural join course\n                where S.ID= takes.ID and \n                takes.grade &lt;&gt; \u2019F\u2019 and\n                takes.grade is not null);\n</code></pre>"},{"location":"DB/3.%20SQL/#\u56db-intermediate-sql","title":"\u56db. Intermediate SQL","text":"<p>\u4e2d\u7ea7SQL\u8bed\u8a00</p>"},{"location":"DB/3.%20SQL/#41-joined-relations","title":"4.1 Joined Relations","text":"<ul> <li> <p>Join operations take two relations and return as a result another relation.</p> <p>\u8fde\u63a5\u64cd\u4f5c\u91c7\u7528\u4e24\u4e2a\u5173\u7cfb\uff0c\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u5173\u7cfb\u3002</p> </li> <li> <p>Join operations are typically used as subquery expressions in the from clause</p> <p>\u8fde\u63a5\u64cd\u4f5c\u901a\u5e38\u7528\u4f5c from \u5b50\u53e5\u4e2d\u7684\u5b50\u67e5\u8be2\u8868\u8fbe\u5f0f</p> </li> <li> <p>Join condition \u2013 defines which tuples in the two relations match, and what attributes are present in the result of the join.</p> <p>\u8fde\u63a5\u6761\u4ef6 \u2013 \u5b9a\u4e49\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u54ea\u4e9b\u5143\u7ec4\u5339\u914d\uff0c\u4ee5\u53ca\u8fde\u63a5\u7ed3\u679c\u4e2d\u5b58\u5728\u54ea\u4e9b\u5c5e\u6027\u3002</p> </li> <li> <p>Join type \u2013 defines how tuples in each relation that do not match any tuple in the other relation (based on the join condition) are treated.  </p> </li> </ul> <p></p> <ul> <li>using \u662f\u4e00\u4e2a\u7b49\u503c\u8fde\u63a5\uff0c\u7c7b\u4f3c\u4e8e\u81ea\u7136\u8fde\u63a5\uff0c\u8fd9\u4e9b\u5c5e\u6027\u76f8\u540c\u624d\u80fd\u8fde\u63a5</li> </ul> <pre><code>table a natural join table b\n\u81ea\u7136\u8fde\u63a5\uff0c\u6240\u6709\u7684\u5171\u6709\u5c5e\u6027\n\ntable a join table b on \u67d0\u4e2a\u6761\u4ef6\n\u6761\u4ef6\u8fde\u63a5\uff0c\u4ec5\u4fdd\u7559\u6ee1\u8db3\u6761\u4ef6\u7684tuple\n\ntable a join table b using some attribute\n\u7b49\u503c\u8fde\u63a5\uff0c\u4ec5\u4ec5\u63d0\u5230\u7684\u5171\u6709\u5c5e\u6027\n</code></pre> <p>natural join \u5305\u62ec natural left outer join\uff0c natural right outer join\uff0c natural full outer join</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u53ea\u5bf9on\u540e\u9762\u7684\u6761\u4ef6\u8bf4\u660e\u7684\u5c5e\u6027\u505a\u6761\u4ef6\u8fde\u63a5\uff0c\u5176\u4ed6\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684tuple\u5168\u90e8\u820d\u5f03</p>"},{"location":"DB/3.%20SQL/#42-sql-data-types-and-schemas","title":"4.2 SQL Data Types and Schemas","text":""},{"location":"DB/3.%20SQL/#421-user-defined-types","title":"4.2.1 User-Defined Types","text":"<p>\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b</p> <p><code>create type</code> construct in SQL creates user-defined type.  </p> <p><code>create type Dollars as numeric (12,2) final</code> </p> <p>\u5b9a\u4e49\u4e86 <code>Dollars</code> \u8fd9\u4e2a\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u5143\u7c7b\u578b\u4f7f\u7528\u3002  </p> <pre><code>create table department\n    (dept_name varchar (20),\n    building varchar (15),\n    budget Dollars);\n</code></pre> <p>\u8fd9\u6837\u53ef\u4ee5\u652f\u6301\u5f3a\u7c7b\u578b\u68c0\u67e5\uff0c\u53ef\u4ee5\u9632\u6b62\u5982 200 \u7f8e\u5143 + 300 RMB \u5f97\u5230 500 \u5143\u7684\u9519\u8bef\u3002</p>"},{"location":"DB/3.%20SQL/#422-domains","title":"4.2.2 Domains","text":"<p><code>create domain</code> construct in SQL-92 creates user-defined domain types.  </p> <p>\u81ea\u5b9a\u4e49\u503c\u57df</p> <p>Domains can have <code>constraints(\u7ea6\u675f)</code>, such as <code>not null</code>, specified on them.</p> <p>\u200b    <code>create domain person_name char(20) not null</code> </p> <pre><code>create domain degree_level varchar(10)\n    constraint degree_level_test\n    check (value in (\u2019Bachelors\u2019, \u2019Masters\u2019, \u2019Doctorate\u2019));\n</code></pre> <p>\u8fd9\u91cc\u7684 constraint \u53ef\u4ee5\u5bf9 domain \u7684\u53d6\u503c\u8fdb\u884c\u9650\u5236\u3002</p> <p>\u4e0d\u540c type \u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u5b9a\u4e49\u76f8\u540c\uff0c\u4e5f\u4e0d\u80fd\u8fdb\u884c\u8fd0\u7b97\u3002\u4e0d\u540c domain \u7684\u53d8\u91cf\uff08\u57fa\u7840\u7c7b\u578b\u76f8\u540c\uff09\u53ef\u4ee5\u8fd0\u7b97\u3002</p>"},{"location":"DB/3.%20SQL/#423-large-object-types","title":"4.2.3 Large-Object Types","text":"<p>\u5927\u5bf9\u8c61\u7c7b\u578b</p> <p>Large objects (photos, videos, CAD files, etc.) are stored as a large object:  </p> <ul> <li> <p>blob: <code>binary large object</code>-- object is a large collection of uninterpreted binary data (whose interpretation is left to an application outside of the database system)  </p> <p>\u4e8c\u8fdb\u5236\u5927\u578b\u5bf9\u8c61 -- \u5bf9\u8c61\u662f\u5927\u91cf\u672a\u89e3\u91ca\u7684\u4e8c\u8fdb\u5236\u6570\u636e</p> <p>\u5b58\u50a8\u5927\u5bf9\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5b58\u653e\u6307\u9488\u3002</p> <p>Example \"BLOB in MySQL\"</p> <ul> <li>TinyBlob \uff1a  0 ~ 255 bytes.</li> <li>Blob\uff1a 0 ~ 64K bytes.</li> <li>MediumBlob \uff1a 0 ~ 16M bytes.</li> <li>LargeBlob : 0 ~ 4G  bytes.</li> </ul> </li> <li> <p>clob: character large object -- object is a large collection of character data </p> <p>\u5b57\u7b26\u5927\u5bf9\u8c61 -- \u5bf9\u8c61\u662f\u5b57\u7b26\u6570\u636e\u7684\u5927\u578b\u96c6\u5408</p> </li> </ul> <p>\u5bf9\u4e8e\u5927\u5bf9\u8c61\u7c7b\u578b\u3002\u5f53\u67e5\u8be2\u64cd\u4f5c\u8fd4\u56de\u4e00\u4e2a\u5927\u5bf9\u8c61\u7c7b\u578b\u7684\u7ed3\u679c\u65f6\uff0c\u5c06\u4f1a\u8fd4\u56de\u5927\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u800c\u4e0d\u662f\u5927\u5bf9\u8c61\u672c\u8eab</p>"},{"location":"DB/3.%20SQL/#43-integrity-constraints","title":"4.3 Integrity Constraints","text":"<ul> <li> <p><code>not null</code></p> </li> <li> <p><code>primary key</code></p> </li> <li> <p><code>unique</code> </p> <p><code>unique(A1, A2, ..., Am)</code> The unique specification states that the attributes <code>A1, A2, ..., Am</code> form a super key \uff08\u4e0d\u4e00\u5b9a\u662f candidate key)  </p> <p>unique \u540e\u9762\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u5c5e\u6027\u7ec4\u5408\uff0c\u8868\u660e\u8fd9\u4e9b\u5c5e\u6027\u7684\u7ec4\u5408\u80fd\u591f\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4\u3002\u6784\u6210\u4e00\u4e2asuper key\uff0c\u4e0d\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u4e3b\u952e\u3002</p> <p>\u56de\u5fc6\u4e00\u4e0b\u4ec0\u4e48\u662fsuper key\uff0c \u4ec0\u4e48\u662f candidate key\uff1f</p> <p>super key \uff1a super key \u80fd\u591f\u552f\u4e00\u786e\u5b9atuple\uff0c\u4f46\u662f\u5177\u6709\u5197\u4f59\u6027</p> <p>candidate key :  candidate key \u662f\u6700\u5c0f\u7684super ky</p> <p>primary key \uff1a candidate key \u4e2d\u7684\u4e00\u79cd</p> <p>\u6bd4\u5982\u5b66\u751f\u4e2a\u4eba\u4fe1\u606f\uff0c\u6211\u4eec\u77e5\u9053 ID \u662f\u4e3b\u952e\uff0c\u4f46\u5b9e\u9645\u4e0a\u90ae\u7bb1\u3001\u7535\u8bdd\u53f7\u7801\u7b49\u4e5f\u4e0d\u80fd\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u901a\u8fc7\u8bed\u53e5\u544a\u8bc9\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u4f1a\u4e3a\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u3002    </p> <p>Candidate keys are permitted to be null (in contrast to primary keys).  </p> <p>\u5019\u9009\u952e\u5141\u8bb8\u4e3a null\uff08\u4e0e\u4e3b\u952e\u76f8\u53cd\uff09\u3002</p> </li> <li> <p><code>check (P)</code>, where P is a predicate  </p> <p>\u68c0\u9a8c\u6761\u4ef6\uff0c\u5143\u7ec4\u7684\u503c\u9700\u8981\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6</p> <p></p> </li> <li> <p><code>foreign key</code> </p> <p>\"Integrity Constraint Violation During Transactions\"    </p> <p></p> <p>\u5728\u4e00\u4e2a\u4eba\u7684\u7236\u6bcd\u8fd8\u6ca1\u63d2\u5165\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u63d2\u5165\u8fd9\u4e2a\u4eba\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002  </p> <p>\u53ef\u4ee5\u89c4\u5b9a\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u7ed3\u675f\u65f6\u518d\u68c0\u67e5\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u4e2d\u95f4\u72b6\u6001\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u3002</p> </li> <li> <p><code>assertion\uff08\u5c1a\u672a\u5b9e\u73b0\uff09</code> </p> <p><code>create assertion &lt;assertion-name&gt; check &lt;predicate&gt;;</code> </p> <p>\u200b      </p> <p>\u4e0d\u5b58\u5728\u4e00\u4e2a\u5b66\u751f\u7684\u603b\u5b66\u5206\u4e0d\u7b49\u4e8e\u4ed6\u7684\u5b66\u5206\u603b\u548c\uff0c\u53cc\u91cd\u5426\u5b9a</p> <p>\u9a8c\u8bc1\u4e00\u4e2a\u5b66\u751f\u83b7\u5f97\u7684\u603b\u5b66\u5206\uff0c\u8981\u7b49\u4e8e\u83b7\u5f97\u7684\u6bcf\u95e8\u8bfe\u7684\u5b66\u5206\u7684\u603b\u548c\u3002</p> <p>\u4f46\u4f7f\u7528 <code>assert</code> \u540e\uff0c\u6bcf\u4e2a\u5143\u7ec4\u7684\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\u90fd\u8981\u8fdb\u884c\u68c0\u67e5\uff0c\u5f00\u9500\u8fc7\u5927\uff0c\u6570\u636e\u5e93\u4e00\u822c\u4e0d\u652f\u6301\u3002</p> </li> </ul> <p>\u6ce8\u610f\uff1a\u4ee5\u4e0a\u6761\u4ef6\u4e00\u822c\u53ea\u80fd\u7528\u4e8ecreate table\u9636\u6bb5\uff0c\u5355\u72ec\u4f7f\u7528</p>"},{"location":"DB/3.%20SQL/#44-views","title":"4.4 Views","text":"<p>A view provides a mechanism to hide certain data from the view of certain users.   </p> <p>\u89c6\u56fe\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u4ece\u67d0\u4e9b\u7528\u6237\u7684\u89c6\u56fe\u4e2d\u9690\u85cf\u67d0\u4e9b\u6570\u636e\u3002</p>"},{"location":"DB/3.%20SQL/#441-view-definition","title":"4.4.1 View Definition","text":"<p>A view is defined using the create view statement which has the form <code>create view v as &lt; query expression &gt;</code> </p> <pre><code>-- a view of instructor without their salary(\u5b66\u9662)\ncreate view faculty as\n    select ID, name, dept_name\n    from instructor;\n\n-- Find the name of all instructor in the Biology department\nselect name\nfrom faculty\nwhere dept_name = 'Biology'\n\n-- create a view of department salary total\ncreate view department_total_salary(dept_name, total_salery) as\n    select dept_name, sum(salary)\n    from instructor\n    group by dept_name\n</code></pre> <p>create view (attribute_name) as <p>select \u2026..</p> <p>\u5728\u521b\u5efaview\u4e4b\u540e\uff0c\u5982\u679cview\u540d\u5b57\u540e\u9762\u6ca1\u6709\u6dfb\u52a0\u5c5e\u6027\u7684\u540d\u5b57\uff0c\u5c31\u6309\u7167select\u8bed\u53e5\u7684\u5c5e\u6027\u540d\u6765</p> <p>view \u53ef\u4ee5\u9690\u6389\u4e00\u4e9b\u7ec6\u8282\uff0c\u6216\u8005\u52a0\u4e0a\u4e00\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\u53ef\u4ee5\u628a view \u5f53\u4f5c\u8868\u8fdb\u884c\u67e5\u8be2\u3002</p> <ul> <li>\u9690\u85cf\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\uff0c\u7b80\u5316\u7528\u6237\u89c6\u91ce</li> <li>\u65b9\u4fbf\u67e5\u8be2\u4e66\u5199</li> <li>\u6709\u5229\u4e8e\u6743\u9650\u63a7\u5236\uff08\u5982\u7528\u6237\u53ef\u4ee5\u770b\u5230\u5de5\u8d44\u603b\u548c\uff0c\u4f46\u4e0d\u80fd\u770b\u5230\u6bcf\u4e2a\u4eba\u7684\u5de5\u8d44\uff09</li> <li>\u6709\u72ec\u7acb\u6027\uff0c\u4f7f\u5f97\u6570\u636e\u5e93\u5e94\u7528\u5177\u6709\u8f83\u5f3a\u7684\u9002\u5e94\u6027\u3002</li> </ul> <p><code>\u53ef\u4ee5\u57fa\u4e8e\u89c6\u56fe\u518d\u5b9a\u4e49\u89c6\u56fe\u3002</code></p> <p>Example \"Views Defined Using Other Views\"</p> <pre><code>```sql\ncreate view physics_fall_2009 as\n    select course.course_id, sec_id, building, room_number\n    from course,section\n    where course.course_id = section.course_id\n    and course.dept_name = 'Physics'\n    and section.semester = 'Fall'\n    and section.year = '2009'\n\ncreate view physics_fall_2009_watson as\n    select course_id, room_number\n    from physics_fall_2009\n    where building = \"Waston\"\n```\n</code></pre> <p>\u57fa\u4e8e\u89c6\u56fe\u518d\u5b9a\u4e49\u89c6\u56fe\u7684\u6267\u884c\u65b9\u5f0f</p> <pre><code>select course_id, room_number\nfrom physics_fall_2009\nwhere building = 'Waston'\n-&gt;\nselect course_id, room_number\nfrom(select course.course_id, building, room_number\n    from course, section\n    where course.course_id = section.course_id\n     and course.dept_name = \u2019Physics\u2019\n     and section.semester = \u2019Fall\u2019\n     and section.year = \u20192009\u2019)\nwhere building= \u2019Watson\u2019;\n-&gt;\nselect course_id, room_number\nfrom course, section\nwhere course.course_id = section.course_id\n        and course.dept_name = \u2019Physics\u2019\n        and section.semester = \u2019Fall\u2019\n        and section.year = \u20192009\u2019\n        and building= \u2019Watson\u2019;\n</code></pre>"},{"location":"DB/3.%20SQL/#442-update-of-a-view","title":"4.4.2 Update of a View","text":"<p><code>\u5bf9\u4e00\u4e2a view \u8fdb\u884c\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7\u8fd9\u4e2a\u7a97\u53e3\u5bf9\u539f\u8868\u7ee7\u7eed\u4fee\u6539\u3002</code></p> <pre><code>-- add a new tuple to faculty view \ncreate view faculty as\n    select ID, name, dept_name\n    from instructor\n\ninsert into faculty values(......)\n</code></pre> <p>\u5411view\u4e2d\u63d2\u5165\u4e00\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5b9e\u9645\u7684\u8868\u4e2d\u63d2\u5165\u4e00\u884c\uff0c\u7f3a\u5931\u7684\u5c5e\u6027\u586b\u5199null\u3002\u4f46\u5982\u679c\u5b9e\u9645\u7684\u8868\u4e2d\u5bf9\u5e94\u5c5e\u6027\u6709\u5b8c\u6574\u6027\u7ea6\u675fnot null\uff0c\u5219\u65e0\u6cd5\u63d2\u5165\u8fd9\u4e00\u884c\u3002</p> <p><code>\u5982\u679c\u89c6\u56fe\u4e2d\u6709\u7edf\u8ba1\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u662f\u4e0d\u53ef\u4fee\u6539\u7684,\u805a\u5408\u51fd\u6570\u90e8\u5206\u6d89\u53ca\u5230\u8ba1\u7b97\uff0c\u4e0d\u80fd\u76f4\u63a5\u63d2\u5165\u6570\u636e\u3002\u540c\u7406\u4e0d\u80fd\u4f7f\u7528distinct\uff0cgroup by\uff0c having clause</code> </p> <p>\u6d89\u53ca\u5230\u5355\u4e2a\u8868\uff0c\u53ea\u662f\u9009\u51fa\u4e86\u90e8\u5206\u5c5e\u6027\uff08\u53bb\u6389\u975e\u4e3b\u5c5e\u6027\uff09\u7684\u884c\u5217\u89c6\u56fe\u662f\u53ef\u66f4\u65b0\u7684\u3002</p>"},{"location":"DB/3.%20SQL/#443-materialized-views","title":"4.4.3 *Materialized Views","text":"<p>\u7269\u5316\u89c6\u56fe</p> <p>Materializing a view: create a physical table containing all the tuples in the result of the query defining the view.  </p> <p>\u7269\u5316\u89c6\u56fe\uff1a\u521b\u5efa\u4e00\u4e2a\u7269\u7406\u8868\uff0c\u5176\u4e2d\u5305\u542b\u5b9a\u4e49\u89c6\u56fe\u7684\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684\u6240\u6709\u5143\u7ec4\u3002</p> <p>\u672c\u6765\u7684\u89c6\u56fe\u662f\u4e00\u4e2a\u865a\u7684\u8868\uff0c\u4e3a\u4e86\u67e5\u8be2\u6267\u884c\u6548\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u628a view \u5b9a\u4e49\u4e3a Materializing view, \u5373\u751f\u6210\u4e00\u5f20\u4e34\u65f6\u8868\u4e0e\u5176\u5bf9\u5e94\u3002  </p> <p>If relations used in the query are updated, the materialized view result becomes out of date.  </p> <p>\u5982\u679c\u66f4\u65b0\u4e86\u67e5\u8be2\u4e2d\u4f7f\u7528\u7684\u5173\u7cfb\uff0c\u5219\u5b9e\u4f8b\u5316\u89c6\u56fe\u7ed3\u679c\u5c06\u8fc7\u671f\u3002</p> <p><code>\u8fd9\u662f\u56e0\u4e3a\u6b64\u65f6\u7269\u5316\u89c6\u56fe\u4e0e\u539f\u8868\u4e4b\u95f4\u662f\u4e24\u4e2a\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u8054\u7cfb</code></p> <ul> <li> <p>Need to maintain the view, by updating the view whenever the underlying relations are updated.  </p> <p>\u9700\u8981\u7ef4\u62a4\u89c6\u56fe\uff0c\u6bcf\u5f53\u57fa\u7840\u5173\u7cfb\u66f4\u65b0\u65f6\uff0c\u90fd\u4f1a\u66f4\u65b0\u89c6\u56fe\u3002</p> </li> </ul> <p></p>"},{"location":"DB/3.%20SQL/#444-view-and-logical-data-indepencence","title":"4.4.4 View and Logical Data Indepencence","text":"<p>If relation \\(S(a, b, c)\\) is split into two sub relations \\(S1(a,b)\\) and \\(S2(a,c)\\)</p> <p>How to realize the logical data independence(\u903b\u8f91\u72ec\u7acb\u6027)?   </p> <ol> <li>create table \\(S1\\)...;create table \\(S2\\)...;</li> <li>insert into \\(S1\\) select a, b from S;insert into \\(S2\\) select a, c from S;</li> <li>drop table S;</li> <li>create view S(a, b, c) as select a, b, c from \\(S1\\) natural join \\(S2\\);`   </li> </ol> <p><code>select * from S where...</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>select * from S1 natural join S2 where ...</code> \uff08\u7cfb\u7edf\u4f1a\u5e2e\u6211\u8fd9\u6837\u505a\uff0c\u7a0b\u5e8f\u4e0d\u7528\u6539\uff0c\u53ea\u662f\u6267\u884c\u6539\u53d8\u4e86\uff09</p> <p><code>insert into S values (1,2,3)</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>insert into S1 values (1,2)</code> \u548c <code>insert into S2 values (1,3)</code> </p> <p>delete \u540c\u7406</p>"},{"location":"DB/3.%20SQL/#45-indexes","title":"4.5 Indexes","text":"<p>Indices are data structures used to speed up access to records with specified values for index attributes.  </p> <p>Index \u76f8\u5f53\u4e8e\u5728\u6570\u636e\u4e0a\u5efa\u7acb\u4e86 B+ \u6811\u7d22\u5f15\u3002\uff08\u7269\u7406\u5c42\u9762\uff09</p> <pre><code>create table student    \n(   \nID varchar (5),\nname varchar (20) not null,\ndept_name varchar (20),\ntot_cred numeric (3,0) default 0,\nprimary key (ID)\n)\ncreate index studentID_index on student(ID)\n\nselect * \nfrom student \nwhere ID = \u201812345\n-- can be executed by using the index to find the required record, without looking at all records of student\n</code></pre> <p>\u5728\u6570\u636e\u5e93\u5185\u4e0d\u540c\u7684\u7269\u7406\u5b9e\u73b0\u6709\u4e0d\u540c\u7684\u67e5\u627e\u65b9\u6cd5\u3002  </p> <p>\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u7d22\u5f15\uff0c\u53ea\u80fd\u987a\u5e8f\u67e5\u627e\u3002</p> <p>\u5982\u679c\u6709\u7d22\u5f15\uff0c\u7cfb\u7edf\u5185\u4f1a\u5229\u7528\u7d22\u5f15\u67e5\u627e\u3002</p>"},{"location":"DB/3.%20SQL/#46-transactions\u4e8b\u52a1","title":"4.6 Transactions(\u4e8b\u52a1)","text":"<p>\u539f\u5b50\u4e8b\u52a1\uff1a\u8981\u4e48\u5b8c\u5168\u88ab\u6267\u884c\uff0c\u8981\u4e48\u5411\u4ece\u672a\u53d1\u751f\u8fc7\u4e00\u6837\u56de\u9000\u3002</p> <p>\u5e76\u53d1\u4e8b\u52a1\u5177\u6709\u76f8\u5173\u6027\u3002\u4f8b\u5982\u94f6\u884c\u8f6c\u8d26\uff0c\u4e00\u4e2a\u8d26\u6237\u7684\u94b1\u51cf\u5c11\uff0c\u5fc5\u7136\u4f34\u968f\u53e6\u5916\u4e00\u4e2a\u8d26\u6237\u94b1\u589e\u52a0\u3002\u5982\u679c\u53e6\u4e00\u4e2a\u8d26\u6237\u7684\u94b1\u8fd8\u6ca1\u6709\u589e\u52a0\u7684\u65f6\u5019\uff0c\u5c31\u88ab\u6253\u65ad\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u8d26\u6237\u7684\u94b1\u5fc5\u987b\u52a0\u56de\u6765\uff0c\u5c31\u50cf\u6ca1\u6709\u53d1\u751f\u8f6c\u8d26\u64cd\u4f5c\u8fc7\u4e00\u6837\u3002</p> <ul> <li> <p>Transactions begin implicitly  \u4e8b\u52a1\u9690\u5f0f\u5f00\u59cb</p> <p>Ended by commit work or rollback work </p> </li> <li> <p>By default on most databases: each SQL statement commits automatically  </p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u5927\u591a\u6570\u6570\u636e\u5e93\u4e0a\uff1a\u6bcf\u4e2a SQL \u8bed\u53e5\u90fd\u4f1a\u81ea\u52a8\u63d0\u4ea4</p> <ul> <li>Can turn off auto commit for a session \u5173\u95ed\u81ea\u52a8\u63d0\u4ea4</li> </ul> <p>e.g. in MySQL, <code>SET AUTOCOMMIT=0;</code> </p> <pre><code>SET AUTOCOMMIT = 0\n\nUPDATE account \nSET balance=balance-100 \nWHERE ano=\u20181001\u2019;\nUPDATE account \nSET balance=balance+100 \nWHERE ano=\u20181002\u2019;\nCOMMIT;\n\nUPDATE account SET balance=balance -200 WHERE ano=\u20181003\u2019;\nUPDATE account SET balance=balance+200 WHERE ano=\u20181004\u2019; \nCOMMIT;\n\nUPDATE account SET balance=balance+balance*2.5%;\nCOMMIT;\n</code></pre> <p>commit\u6216\u8005rollback\u6807\u5fd7\u7740\u4e8b\u52a1\u7684\u7ed3\u675f</p> <p>\u5982\u679c\u6ca1\u6709commit\uff0c\u90a3\u4e48\u63a8\u51fa\u6570\u636e\u5e93\u91cd\u65b0\u8fdb\u5165\uff0c\u6570\u636e\u4f1a\u6062\u590d\u5230\u6ca1\u6709\u6539\u53d8\u7684\u72b6\u6001</p> </li> </ul> <p>\u706b\u8f66\u7968\u7684\u9884\u5b9a\u548c\u652f\u4ed8\u94b1\uff0c\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u4e8b\u52a1\uff0c\u6700\u540e\u5229\u7528\u7b2c\u4e09\u4e2a\u4e8b\u52a1\u9000\u7968\u6765\u5f25\u8865\u9884\u5b9a\u4e8b\u52a1</p>"},{"location":"DB/3.%20SQL/#461-acid-properties","title":"4.6.1 ACID Properties","text":"<p>A  transaction  is a unit of program execution that accesses and possibly updates various data items. To preserve the integrity of data the database system must ensure: (\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u72ec\u7acb\u6027\u3001\u6301\u7eed\u6027)</p> <ul> <li> <p>Atomicity. Either all operations of the transaction are properly reflected in the database or none are.</p> <p>\u8981\u4e48\u540c\u65f6\u8fdb\u884c\uff0c\u8981\u4e48\u540c\u65f6\u4e0d\u8fdb\u884c</p> </li> <li> <p>Consistency. Execution of a transaction in isolation preserves the consistency of the database.  </p> <p>\u6570\u636e\u5e93\u6267\u884c\u4e8b\u52a1\u524d\u540e\u90fd\u662f\u4e00\u81f4\u7684\u3002</p> </li> <li> <p>Isolation. Although multiple transactions may execute concurrently, each transaction must be unaware of other concurrently executing transactions.  Intermediate transaction results must be hidden from other concurrently executed transactions.    </p> <p>\u5f88\u591a\u4e8b\u60c5\u5171\u540c\u6267\u884c\uff0c\u4ed6\u4eec\u4e0d\u80fd\u4e92\u76f8\u5f71\u54cd\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u5fc5\u987b\u4e0d\u77e5\u9053\u5176\u4ed6\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\u3002\u3002</p> <ul> <li>That is, for every pair of transactions \\(T_i\\) and \\(T_j\\), it appears to \\(T_i\\) that either \\(T_j\\), finished execution before \\(T_i\\) started, or \\(T_j\\) started execution after \\(T_i\\) finished.</li> </ul> </li> <li> <p>Durability\uff08\u6301\u4e45\u6027\uff09. After a transaction completes successfully, the changes it has made to the database persist, even if there are system failures.   </p> <p>\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u8fd9\u4e2a\u4fee\u6539\u5c31\u8981\u6301\u7eed\u5730\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u53bb\uff0c\u4e0d\u80fd\u4e22\u5931\u3002\u5982\u78c1\u76d8\u51fa\u95ee\u9898\u4e86\uff0c\u65ad\u7535\u4e86\u7b49\u4f1a\u5f15\u53d1\u8fd9\u4e2a\u95ee\u9898\u3002  </p> <p>\u901a\u5e38\u4f7f\u7528\u65e5\u5fd7\u3002</p> </li> </ul>"},{"location":"DB/3.%20SQL/#47-authorization\u6388\u6743","title":"4.7 Authorization\uff08\u6388\u6743\uff09","text":"<ul> <li> <p>Forms of authorization on parts of the database </p> <p>\u5bf9\u6570\u636e\u5e93\u5404\u90e8\u5206\u7684\u6388\u6743\u5f62\u5f0f</p> <ul> <li> <p>Select - allows reading, but not modification of data.</p> <p>\u9009\u62e9 - \u5141\u8bb8\u8bfb\u53d6\u6570\u636e\uff0c\u4f46\u4e0d\u5141\u8bb8\u4fee\u6539\u6570\u636e\u3002</p> </li> <li> <p>Insert - allows insertion of new data, but not modification of existing data.</p> <p>\u63d2\u5165 - \u5141\u8bb8\u63d2\u5165\u65b0\u6570\u636e\uff0c\u4f46\u4e0d\u5141\u8bb8\u4fee\u6539\u73b0\u6709\u6570\u636e\u3002</p> </li> <li> <p>Update - allows modification, but not deletion of data.</p> <p>\u66f4\u65b0 - \u5141\u8bb8\u4fee\u6539\uff0c\u4f46\u4e0d\u5141\u8bb8\u5220\u9664\u6570\u636e\u3002</p> </li> <li> <p>Delete - allows deletion of data.</p> <p>\u5220\u9664 - \u5141\u8bb8\u5220\u9664\u6570\u636e\u3002</p> </li> </ul> </li> <li> <p>Forms of authorization to modify the database schema \u4fee\u6539\u6570\u636e\u5e93schema\u7684\u5f62\u5f0f</p> <ul> <li> <p>Index - allows creation and deletion of indices.</p> <p>\u7d22\u5f15 - \u5141\u8bb8\u521b\u5efa\u548c\u5220\u9664\u7d22\u5f15</p> </li> <li> <p>Resources\uff08create\uff09 - allows creation of new relations.</p> <p>\u5141\u8bb8\u521b\u5efa\u65b0\u5173\u7cfb</p> </li> <li> <p>Drop - allows deletion of relations.</p> <p>\u5141\u8bb8\u5220\u9664\u5173\u7cfb\u3002</p> </li> <li> <p>Alteration - allows addition or deletion of attributes in a relation.</p> <p>\u5141\u8bb8\u5728\u5173\u7cfb\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u5c5e\u6027</p> </li> <li> <p>create view</p> </li> </ul> </li> </ul>"},{"location":"DB/3.%20SQL/#471-authorization-specification-in-sql","title":"4.7.1 Authorization Specification in SQL","text":"<p>\u6388\u6743\u89c4\u8303\uff1a</p> <p><code>grant &lt;privilege list&gt;</code></p> <p><code>on &lt;relation name or view name&gt;</code></p> <p><code>to &lt;user list&gt;</code> </p> <p>\u628a\u67d0\u4e2a\u8868\u6216\u8005\u89c6\u56fe\u4e0a\u7684\u6743\u9650\u6388\u6743\u7ed9\u7528\u6237  </p> <p><code>&lt;user list&gt;</code> is:  </p> <ul> <li> <p>a user-id</p> </li> <li> <p><code>public</code>, which allows all valid users the privilege granted</p> <p>\u5141\u8bb8\u6240\u6709\u6709\u6548\u7528\u6237\u83b7\u5f97\u6388\u4e88\u7684\u6743\u9650</p> </li> <li> <p>A role (more on this later)</p> <p> </p> <p>\u7cbe\u7ec6\u5316\u63a7\u5236\u5230\u67d0\u4e00\u5217\uff08update \uff08budget\uff09\uff09</p> <p>update \u53ef\u4ee5\u7ec6\u5316\u5230\u5177\u4f53\u53ef\u4ee5\u5bf9\u54ea\u5217\u8fdb\u884c\u4fee\u6539\u3002  </p> </li> </ul>"},{"location":"DB/3.%20SQL/#472-revoking-authorization-in-sql","title":"4.7.2 Revoking Authorization in SQL","text":"<p>\u56de\u6536\u6743\u9650</p> <p>The revoke statement is used to revoke authorization.  </p> <p><code>revoke &lt;privilege list&gt;</code></p> <p><code>on &lt;relation name or view name&gt;</code></p> <p><code>from &lt;user list&gt;</code> </p> <pre><code>revoke select on branch from U1,U2,U3\n</code></pre> <p>grant to\u2014\u2014revoke from</p>"},{"location":"DB/3.%20SQL/#473-roles","title":"4.7.3 Roles","text":"<p>\u89d2\u8272role\uff1a\u89d2\u8272\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u7ec4\u6743\u9650\u7684\u96c6\u5408</p> <p>\u53ef\u4ee5\u5229\u7528<code>create role &lt;role_name&gt;</code>\u6765\u521b\u9020\u4e00\u4e2a\u89d2\u8272</p> <p>\u53ef\u4ee5\u5c06\u6743\u529b\u6388\u4e88\u7ed9\u67d0\u4e2a\u89d2\u8272<code>grant select on takes to instructor</code></p> <p>\u53ef\u4ee5\u5c06\u89d2\u8272\u6388\u4e88\u7ed9\u67d0\u4e2a\u7528\u6237<code>grant role_name to user</code></p> <p>\u5f53\u7136\u89d2\u8272\u8fd8\u80fd\u6388\u4e88\u7ed9\u5176\u4ed6\u89d2\u8272\uff0c\u88ab\u6388\u4e88\u7684\u89d2\u8272\u5c06\u7ee7\u627f\u6388\u4e88\u89d2\u8272\u7684\u4e00\u5207\u6743\u529b</p> <p></p> <pre><code>create role instructor;\ngrant select on takes to instructor;  -- \u6388\u4e88\u6743\u9650\u7ed9\u89d2\u8272\ngrant instructor to Amit;   -- \u5c06\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u7528\u6237\n\n-- \u89d2\u8272\u6388\u4e88\u89d2\u8272\ncreate role teaching_assistant\ngrant teaching_assistant to instructor\n-- instructor \u5c06\u7ee7\u627f teaching_assistant \u6240\u6709\u7684\u7fa4\u91cc\n\n-- \u53ef\u4ee5\u6784\u9020\u89d2\u8272\u94fe\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u5c06\u89c6\u56fe\u4e0a\u7684\u6743\u529b\u6388\u4e88\u7ed9\u67d0\u4e2a\u7528\u6237</p> <pre><code>```sql\ncreate view geo_instructor as\n(select *\nfrom instructor\nwhere dept_name = \u2019Geology\u2019);\ngrant select on geo_instructor  to  geo_staff\n```\n</code></pre>"},{"location":"DB/3.%20SQL/#474-other-authorization-features","title":"4.7.4 Other Authorization Features","text":"<p>\u5f15\u7528\u7684\u6743\u9650\u6bd4\u8f83\u7279\u6b8a</p> <p><code>references privilege to create foreign key</code></p> <p><code>grant reference (dept_name) on department to Mariano;</code> </p> <p>\u5982\u679c\u4e0d\u4f5c\u4e3a\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u95f4\u63a5\u7684\u5916\u952e\u7ea6\u675f\u548c cascade \u5220\u6389\u88ab\u5f15\u7528\u7684\u6570\u636e\u3002\uff08\u5220\u6389\u996e\u7528\u8005\uff0c\u5219\u88ab\u5f15\u7528\u8005\u4e5f\u8981\u88ab\u5220\u9664\uff09\u56e0\u6b64\u8fd9\u4e5f\u662f\u4e2a\u6743\u9650</p> <p>transfer of privileges \u6743\u9650\u7684\u4f20\u9012 * <code>grant select on department to Amit with grant option;</code> </p> <pre><code>\u52a0\u4e0a `with grant option` \u540e\uff0c**\u7528\u6237\u53ef\u4ee5\u628a\u83b7\u5f97\u7684\u6743\u9650\u4f20\u9012\u4e0b\u53bb\u3002**\n</code></pre> <ul> <li> <p><code>revoke select on department from Amit, Satoshi cascade;</code> </p> <p><code>cascade</code> \u628a\u8be5\u7528\u6237\u53ca\u5176\u6388\u4e88\u7684\u6743\u9650\u5168\u90e8\u6536\u56de\uff0c\u7ea7\u8054\u53cd\u5e94\u3002 </p> </li> <li> <p><code>revoke select on department from Amit, Satoshi restrict;</code> </p> <p><code>restrict</code> \u53ea\u6536\u56de\u8be5\u7528\u6237\u7684\u6743\u9650\uff0c\u4e0d\u4ea7\u751f\u7ea7\u8054\u53cd\u5e94 </p> </li> <li> <p><code>revoke grant option for select on department from Amit;</code> </p> <p>\u6536\u56deAmit\u4f20\u9012\u76f8\u5e94\u6743\u9650\u7684\u6743\u529b\uff0c\u4f46\u6ca1\u6709\u6536\u56deAmit\u5728\u8868\u4e0a\u67e5\u8be2\u7684\u6743\u529b\u3002</p> </li> </ul> <p></p> \\[ \\pi_{name}(\\sigma_{department= 'CS' \\and building = '\u767d\u6c99\u4e00\u5e62' \\and room = 213} (student)) \\] \\[ a = \\pi_{building, room}(\\sigma_{name = '\u738b\u5c0f\u5f3a'}(student))\\\\ \\pi_{name} (\\sigma_{student.building = a.buliding \\and student.room = a.room \\and student.name != '\u738b\u5c0f\u5f3a'}(student \\bowtie a)) \\] \\[ \\pi_{s1.sid, s2.sid}(\\sigma_{s1.sid &lt;&gt; s2.sid \\and s1.department &lt;&gt; s2.department \\and s1.buliding = s2.building \\and s1.room = s2.room}(\\rho_{s1}(student) \\times \\rho_{s2}(student))) \\] \\[ \\rho_{d1(building, room, occupied)(building, room, G_{count(id)}}(student)\\\\ \\pi_{dorm.building,dorm.room}(\\sigma_{dorm.capacity = d1.occupied}(dorm \\bowtie d1))) \\]"},{"location":"DB/3.%20SQL/#\u4e94-advanced-sql","title":"\u4e94. Advanced SQL","text":""},{"location":"DB/3.%20SQL/#51-accessing-sql-from-a-programming-language","title":"5.1 Accessing SQL from a Programming Language","text":"<ul> <li> <p>\u5e76\u975e\u6240\u6709\u67e5\u8be2\u90fd\u53ef\u4ee5\u7528 SQL \u8868\u793a\uff0c\u56e0\u4e3a SQL \u4e0d\u63d0\u4f9b\u901a\u7528\u8bed\u8a00\u7684\u5168\u90e8\u8868\u8fbe\u80fd\u529b\u3002</p> </li> <li> <p>\u7528\u6237\u4ea4\u4e92\u662f\u56fe\u5f62\u754c\u9762\uff0c\u8bed\u97f3\u3001\u56fe\u50cf\uff0c\u6570\u636e\u5e93\u4e0d\u5177\u5907\u8fd9\u65b9\u9762\u7684\u529f\u80fd\u3002</p> <p>\u4ece\u9ad8\u7ea7\u8bed\u8a00\uff08\u5982 C\uff09\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u662f\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\uff1a</p> </li> <li> <p>API(Application Program Interface) -- A general-purpose program can connect to and communicate with a database server using a collection of functions.  </p> </li> </ul> <p>API:\u7528\u4e8e\u7a0b\u5e8f\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u4ea4\u4e92</p> <p>\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528\u6570\u636e\u5e93\u7684\u8fc7\u7a0b\uff1a</p> <p>\u2460 \u8fde\u63a5\u6570\u636e\u5e93\u670d\u52a1\u5668\u3002</p> <p>\u2461 \u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u9001SQL\u547d\u4ee4\u3002</p> <p>\u2462 \u5c06\u7ed3\u679c\u7684\u5143\u7ec4\u4e00\u4e2a\u4e00\u4e2a\u63d0\u53d6\u5230\u7a0b\u5e8f\u53d8\u91cf\u4e2d\u3002</p> <ul> <li> <p>Embedded SQL -- provides a means by which a program can interact with a database server.   </p> <p>\u5d4c\u5165\u5f0f SQL -- \u63d0\u4f9b\u7a0b\u5e8f\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u65b9\u6cd5\u3002</p> <ul> <li>The SQL statements are translated at compile time into function calls.   </li> </ul> <p>SQL \u8bed\u53e5\u5728\u7f16\u8bd1\u65f6\u8f6c\u6362\u4e3a\u51fd\u6570\u8c03\u7528\u3002</p> <ul> <li>At runtime,  these function calls connect to the database  using an API that provides dynamic SQL facilities.  </li> </ul> <p>\u5728\u8fd0\u884c\u65f6\uff0c\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u4f7f\u7528\u63d0\u4f9b\u52a8\u6001 SQL \u5de5\u5177\u7684 API \u8fde\u63a5\u5230\u6570\u636e\u5e93\u3002</p> </li> </ul> <p></p>"},{"location":"DB/3.%20SQL/#511-jdbc-and-odbc","title":"5.1.1 JDBC and ODBC","text":"<p>API (application-program interface) for a program to interact with a database server  </p> <p>API\uff08\u5e94\u7528\u7a0b\u5e8f-\u7a0b\u5e8f\u63a5\u53e3\uff09\uff0c\u7528\u4e8e\u7a0b\u5e8f\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u4ea4\u4e92</p> <p>Application makes calls to</p> <ul> <li> <p>Connect with the database server </p> <p>\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u8fde\u63a5</p> </li> <li> <p>Send SQL commands to the database server </p> <p>\u5c06 SQL \u547d\u4ee4\u53d1\u9001\u5230\u6570\u636e\u5e93\u670d\u52a1\u5668</p> </li> <li> <p>Fetch tuples of result one-by-one into program variables </p> <p>\u5c06\u7ed3\u679c\u7684\u5143\u7ec4\u9010\u4e2a\u63d0\u53d6\u5230\u7a0b\u5e8f\u53d8\u91cf\u4e2d</p> </li> </ul> <p>SQL \u4e0e C \u8bed\u8a00\u5b58\u5728\u9e3f\u6c9f\uff08\u5982 select \u5f97\u5230\u7684\u662f\u96c6\u5408\uff0c\u4f46\u662f C \u8bed\u8a00\u6ca1\u6709\u8fd9\u79cd\u7c7b\u578b\uff09\u4f1a\u8fd4\u56de\u6307\u9488/\u8fed\u4ee3\u5668</p> <ul> <li> <p>ODBC <code>(Open Database Connectivity) works with C, C++, C#</code></p> <p>ODBC\uff08\u5f00\u653e\u5f0f\u6570\u636e\u5e93\u8fde\u63a5\uff09\u9002\u7528\u4e8e C\u3001C++\u3001C#</p> </li> <li> <p>JDBC <code>(Java Database Connectivity) works with Java</code></p> <p>\u901a\u8fc7\u7c7b\u5b9a\u4e49\uff0c\u5c06\u6570\u636e\u5e93\u64cd\u4f5c\u5c01\u88c5\u5230 Java \u5185</p> </li> <li> <p>Embedded SQL in C C\u8bed\u8a00\u4e2d\u7684\u5d4c\u5165\u5f0fSQL</p> </li> <li> <p>SQLJ - embedded SQL in Java  Java\u8bed\u8a00\u4e2d\u7684\u5d4c\u5165\u5f0fSQL</p> </li> <li> <p>JPA(Java Persistence API)  - OR mapping of Java  </p> </li> </ul>"},{"location":"DB/3.%20SQL/#5111-jdbc","title":"5.1.1.1 JDBC","text":"<p>JDBC is a Java API for communicating with database systems supporting SQL.  </p> <p>JDBC \u662f\u4e00\u4e2a Java API\uff0c\u7528\u4e8e\u4e0e\u652f\u6301 SQL \u7684\u6570\u636e\u5e93\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u3002</p> <pre><code>public static void JDBCexample(String dbid, String userid, String passwd) \n{ \n    try { \n        Connection conn = DriverManager.getConnection(\"jdbc:oracle:thin:@db.yale.edu:2000:univdb\", userid, passwd); \n        Statement stmt = conn.createStatement(); \n              ... Do Actual Work ...\n        stmt.close();   \n        conn.close();   \n     }      \n     catch (SQLException sqle) {        \n          System.out.println(\"SQLException : \" + sqle);     \n     }      \n}\n</code></pre> <ul> <li> <p>Open a connection</p> <p>\u4e0a\u8ff0\u7a0b\u5e8f\u4e2d\uff0cConnection\u662f\u4e00\u4e2a\u7c7b\uff0cconn\u662f\u4e00\u4e2a\u7c7b\u4e2d\u7684\u5bf9\u8c61\uff0c\u83b7\u5f97\u4e00\u4e2aJava\u7a0b\u5e8f\u4e0e\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</p> </li> <li> <p>Create a \u201cstatement\u201d object</p> <p>statement \u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0cstmt\u662f\u4e00\u4e2a\u7c7b\u4e2d\u7684\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u771f\u6b63\u8981\u505a\u7684\u4e8b\u60c5\u5728Do Actual Work\u5904</p> </li> <li> <p>Execute queries using the Statement object to send queries and fetch results</p> <p>\u505a\u5b8c\u540e\uff0c\u8981\u5148\u5c06\u5bf9\u8c61stmt\u5173\u95ed\u6389\uff0c\u518d\u5c06\u5bf9\u8c61conn\u5173\u95ed\u6389\u3002</p> </li> <li> <p>Exception mechanism to handle errors</p> <p>try\u2026\u2026catch\u8bed\u53e5\u662f\u4e00\u79cd\u5f02\u5e38\u5904\u7406\u7684\u673a\u5236\uff0c\u5728try\u90e8\u5206\u4e2d\u6240\u6709\u7684\u51fd\u6570\u4e0e\u65b9\u6cd5\u7684\u9519\u8bef\uff0c\u90fd\u4f1a\u629b\u51fa\u5230catch\u4e2d\u88ab\u6355\u83b7\u3002</p> </li> </ul> <p>Update to database  \u66f4\u65b0\u6570\u636e\u5e93</p> <pre><code>Update to database \ntry \n{\n    stmt.executeUpdate(\n        \"insert into instructor values(\u201977987\u2019, \u2019Kim\u2019, \u2019Physics\u2019, 98000)\");\n} \ncatch (SQLException sqle)\n{\n    System.out.println(\"Could not insert tuple. \" + sqle);\n}\n</code></pre> <p>Execute query and fetch and print results  \u6267\u884c\u67e5\u8be2\u4ee5\u53ca\u83b7\u53d6\u548c\u6253\u5370\u7ed3\u679c</p> <pre><code>    ResultSet rset = stmt.executeQuery(\n            \"select dept_name, avg (salary)\n            from instructor\n            group by dept_name\");\n    while (rset.next()) {\n        System.out.println(rset.getString(\"dept_name\") + \" \" + rset.getFloat(2));\n    }\n</code></pre> <p><code>ResultSet</code> \u662f\u4e00\u4e2a\u7c7b\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u5bf9\u8c61 <code>rset</code>\uff0c\u7528\u6765\u83b7\u5f97select\u7684\u7ed3\u679c\u3002</p> <p>\\(while(rset.next())\\)\u5faa\u73af\u4e2d\uff0c\u6307\u9488\u6700\u5f00\u59cb\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7ec4\u7684\u4e0a\u4e00\u4e2a\uff0c\\(rset.next()\\)\u8ba9\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7ec4\u3002</p> <p><code>rset.getstring\uff08\u201cdept_name\u201d\uff09</code>\u8868\u793a\u62ff\u5230\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5217\u540d\u4e3adept_name\u7684\u4e00\u4e2a\u5143\u7d20\uff1b</p> <p><code>System.out.printin</code> \u662f\u7528\u6765\u6253\u5370\u7684\u51fd\u6570</p> <p>Getting result fields \u83b7\u53d6\u7ed3\u679c\u5b57\u6bb5</p> <p><code>rset.getString(\u201cdept_name\u201d)</code></p> <p><code>rset.getString(1)</code></p> <p>\u4e24\u8005\u7b49\u4ef7\u5982\u679cdept_name\u662f\u7ed3\u679c\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf</p> <p>Dealing with Null values \u5904\u7406 Null \u503c</p> <pre><code>int a = rset.getInt(\u201ca\u201d);  \n    if (rset.wasNull()) Systems.out.println(\u201cGot null value\u201d);\n</code></pre> <p>\u5982\u679c\u8fd4\u56de\u503c\u662f\u7a7a\u7684\uff08<code>rset.wasNull</code>\uff09\uff0c\u90a3\u4e48\u5c31\u6253\u5370\u51fa\u4e00\u884c\uff1aGot Null value\u3002</p> <p>Prepared Statement  \u9884\u7f16\u8bd1\u58f0\u660e</p> <pre><code>PreparedStatement pStmt = conn.prepareStatement(\n            \"insert into instructor values(?,?,?,?)\");\n    pStmt.setString(1, \"88877\");      \n    pStmt.setString(2, \"Perry\");\n    pStmt.setString(3, \"Finance\");   \n    pStmt.setInt(4, 125000);\n    pStmt.executeUpdate();    \n    pStmt.setString(1, \"88878\");\n    pStmt.executeUpdate();\n</code></pre> <p>\u8fd9\u91cc\u95ee\u53f7\u662f\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u6267\u884c\u65f6\u9700\u8981\u63d0\u4f9b\u56db\u4e2a\u53c2\u6570\u3002 </p> <p><code>setString, setInt</code> \u5c31\u662f\u628a\u7b2c\u51e0\u4e2a\u5360\u4f4d\u7b26\u8bbe\u7f6e\u4e3a\u53c2\u6570\uff0c\u5e76 <code>executeUpdate</code> \u8fdb\u884c\u63d2\u5165\u3002</p> <p>\u9884\u7f16\u8bd1\u7684\u65f6\u5019\u5f00\u59cb\u7559\u51fa\u5360\u4f4d\u7b26\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5229\u7528setString\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e0a\u586b\u5165\u503c\u3002</p> <p><code>pStmt.setString(1,\u201c88877\u201d)</code>\u8868\u793a\uff0c\u7ed9\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u653e\u4e0a88877\u3002</p> <p><code>pStmt.executeUpdate\uff08\uff09</code>\u8868\u793a\u8fd0\u884c\uff0c\u63d2\u5165\u56db\u4e2a\u53c2\u6570\u3002</p> <p>Always use prepared statements when taking an input from the user and adding it to a query. NEVER create a query by concatenating strings which you get as inputs.  </p> <p>\u5728\u4ece\u7528\u6237\u90a3\u91cc\u83b7\u53d6\u8f93\u5165\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u67e5\u8be2\u65f6\uff0c\u59cb\u7ec8\u4f7f\u7528\u9884\u51c6\u5907\u8bed\u53e5\u3002\u5207\u52ff\u901a\u8fc7\u8fde\u63a5\u4f5c\u4e3a\u8f93\u5165\u83b7\u53d6\u7684\u5b57\u7b26\u4e32\u6765\u521b\u5efa\u67e5\u8be2\u3002  </p> <p>SQL Injection(SQL \u6ce8\u5165\u653b\u51fb)</p> <p>\u901a\u8fc7\u7528\u6237\u7684\u8f93\u5165\u6765\u6784\u9020\u4e00\u6761\u5b8c\u6574\u7684SQL\u8bed\u53e5\uff0c\u53ef\u80fd\u4f1a\u5bf9\u6570\u636e\u5e93\u9020\u6210\u653b\u51fb</p> <ol> <li> <p>Suppose query is constructed using    select * from instructor where name = <code>\u2018  \u201d + name + \u201c  \u2019</code>      \u8868\u793a\u8981\u6c42name = <code>\u2018  \u201d + name + \u201c  \u2019</code></p> </li> <li> <p>Suppose the user, instead of entering a name, enters:</p> <p>X\u2019 or \u2019Y\u2019 = \u2019Y</p> </li> <li> <p>then the resulting string of the statement becomes:</p> <p><code>select * from instructor where name = \u2019\" + \"X\u2019 or \u2019Y\u2019 = \u2019Y\" + \u201c\u2019</code> \u3001 which is: <code>select * from instructor where name = \u2019X\u2019 or \u2019Y\u2019 = \u2019Y\u2019</code></p> <p>\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5bf9Y\u9009\u62e9\u51fa\u9519</p> </li> <li> <p>User could have even used    X\u2019; update instructor set salary = salary + 10000; </p> <p>\u4ece\u800c\u4f7f\u5b57\u7b26\u4e32\u53d8\u4e3a\uff1a</p> <p>select * from instructor where name = \u2019X\u2019;</p> <p>update instructor set salary = salary + 10000;</p> <p>\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\uff0c\u989d\u5916\u6267\u884c\u6307\u4ee4</p> </li> </ol> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>Always use prepared statements, with user inputs as parameters</p> <p>\u59cb\u7ec8\u4f7f\u7528\u9884\u5904\u7406\u8bed\u53e5\uff0c\u5e76\u5c06\u7528\u6237\u8f93\u5165\u4f5c\u4e3a\u53c2\u6570</p> <p>Metadata Features </p> <ul> <li>finding all the relations in the database and \u67e5\u627e\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u5173\u7cfb\uff0c\u5e76</li> <li>finding the names and types of columns of a query result or a relation in the database. \u67e5\u627e\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u7ed3\u679c\u6216\u5173\u7cfb\u7684\u5217\u7684\u540d\u79f0\u548c\u7c7b\u578b\u3002</li> </ul> <ul> <li> <p>ResultSet metadata </p> <p>after executing query to get a ResultSet rs:</p> <p>\u5728\u8fd0\u884c\u4e00\u6761\u8bed\u53e5\uff0c\u5f97\u5230\u4e86\u4e00\u4e2aResultSet\u7c7b\u4e2d\u7684\u5bf9\u8c61rs\uff0c</p> <p>\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528<code>rs.getMetaData\uff08\uff09</code>\u51fd\u6570\uff0c\u6765\u83b7\u53d6\u5143\u6570\u636e\u3002</p> <pre><code>ResultSetMetaData rsmd = rs.getMetaData();\n    for(int i = 1; i &lt;= rsmd.getColumnCount(); i++) {\n        System.out.println(rsmd.getColumnName(i));\n        System.out.println(rsmd.getColumnTypeName(i));\n    }\n</code></pre> <p>\u5229\u7528\u4e0a\u8ff0\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fd4\u56de\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u7684\u7c7b\u578b\uff08\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u5217\uff0c\u7528getColumnCount\uff08\uff09\uff09</p> <p>getColumnCount()\u8868\u793a\u83b7\u53d6\u7ed3\u679c\u96c6\u5408\u4e2d\u5217\u7684\u6570\u76ee\uff1b</p> <p>getColumnName(i)\u8868\u793a\u83b7\u53d6\u7b2ci\u5217\u7684\u5217\u540d\uff1b</p> <p>getColumnTypeName(i)\u8868\u793a\u83b7\u53d6\u7b2ci\u5217\u7684\u5217\u7c7b\u578b\u3002</p> <p></p> <p>\u8fd9\u4e2a\u7684\u524d\u63d0\u662f\uff0c\u5df2\u77e5\u5c5e\u6027\u548c\u7c7b\u578b\uff0c\u5f97\u5230\u5bf9\u5e94\u7684\u6570\u636e</p> </li> <li> <p>Database metadata</p> <pre><code>DatabaseMetaData dbmd = conn.getMetaData();\nResultSet rs = dbmd.getColumns(null, \"univdb\", \"department\", \"%\");\n// Arguments to getColumns: Catalog, Schema-pattern, Table-pattern,\n// and Column-Pattern\n// Returns: One row for each column; row has a number of attributes\n// such as COLUMN_NAME, TYPE_NAME\nwhile( rs.next()) {\n    System.out.println(rs.getString(\"COLUMN_NAME\"),\n                       rs.getString(\"TYPE_NAME\");\n</code></pre> <p><code>dbmd.getColumns</code>\u4e2d\uff0c\u5148\u662f\u76ee\u5f55\u7684\u540d\u5b57\uff08<code>null</code>\uff09\uff0c\u518d\u662fSchema\u7684\u540d\u5b57\u201c<code>univdb</code>\u201d\uff0c\u518d\u662f\u8868\u7684\u540d\u5b57\u201c<code>department</code>\u201d\uff0c\u201c%\u201d\u8868\u793a\u8fd4\u56de\u8fd9\u4e2a\u8868\u7684\u5168\u90e8\u5217\u3002\u6700\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u7c7bResultSet\u7684\u5bf9\u8c61rs\u4e2d\u3002</p> <p>\u5982\u679c\u8981\u904d\u5386\u7ed3\u679c\u8868\u4e2d\u6240\u6709\u7684\u884c\u5143\u7ec4\uff0c\u4ecd\u7136\u53ef\u4ee5\u7528<code>ResultSet</code>\u7c7b\u4e2drs\u5bf9\u8c61\u7684next\uff08\uff09\u51fd\u6570\u904d\u5386\uff1a</p> </li> </ul> <p>\u524d\u9762\u6211\u4eec\u83b7\u5f97\u7684\u662fResultSet\u7684\u5143\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u83b7\u5f97\u7684\u662f\u6570\u636e\u5e93detabase\u7684\u5143\u6570\u636e</p> <p>\u5bf9\u4e8eResultSet\u7684\u5143\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>ResultSetMetadata rsmd = rs.getMetadata</code>\u83b7\u53d6\u3002\u6211\u4eec\u5c06\u5f97\u5230\uff0cResultSet\u6240\u6709\u7684\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u7684\u7c7b\u578b</p> <p>\u5bf9\u4e8eDatabase\u7684\u5143\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>ResultSet rs = dbmd.getColumns(\u76ee\u5f55\u540d\uff0c \u89c6\u56fe\u540d\uff0c \u8868\u540d\uff0c %)\u83b7\u53d6\u8868\u7684\u5168\u90e8\u5217\u4fdd\u5b58\u5728rs\u4e2d</code>\uff0c</p> <p>Transaction Control in JDBC </p> <p>JDBC \u4e2d\u7684\u4e8b\u52a1\u63a7\u5236</p> <ul> <li>Can turn off automatic commit on a connection <code>conn.setAutoCommit(false);</code></li> <li>Transactions must then be committed or rolled back explicitly <code>conn.commit();</code> or <code>conn.rollback();</code></li> <li><code>conn.setAutoCommit(true)</code> turns on automatic commit.</li> </ul> <p>\u6240\u6709\u7684\u6570\u636e\u5e93\u529f\u80fd\u90fd\u662f\u901a\u8fc7 Java \u5c01\u88c5\u597d\u7684\u7c7b\u6765\u5b9e\u73b0\u7684\u3002</p>"},{"location":"DB/3.%20SQL/#5112-sqlj","title":"5.1.1.2 SQLJ","text":"<p>SQLJ : embedded SQL in Java</p> <p><pre><code>    #sql iterator deptInfoIter ( String dept name, int avgSal);\n    // \u5b9a\u4e49\u4e00\u4e2a\u7c7b\n    deptInfoIter iter = null;\n    // \u7c7b\u7684\u5b9e\u4f8b\n    #sql iter = { select dept_name, avg(salary) as avgSal \n                    from instructor \n                    group by dept name };\n    while (iter.next()) {\n          String deptName = iter.dept_name();\n          int avgSal = iter.avgSal();\n          System.out.println(deptName + \" \" + avgSal);\n    }\n    iter.close();\n</code></pre> \u5728\u6267\u884cSQL\u76f8\u5173\u8bed\u53e5\u65f6\uff0c\u8981\u5e26\u4e0a<code>#sql</code>\uff0c\u6700\u540e\u4f1a\u88ab\u7f16\u8bd1\u5668\u8f6c\u5316\u4e3a Java \u7684\u7c7b\u3002</p>"},{"location":"DB/3.%20SQL/#5113-odbc","title":"5.1.1.3 ODBC","text":"<p>Open DataBase Connectivity</p> <p></p> <p>Each database system supporting ODBC provides a \"driver\" library that must be linked with the client program.</p> <p>\u6bcf\u4e2a\u652f\u6301 ODBC \u7684\u6570\u636e\u5e93\u7cfb\u7edf\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5fc5\u987b\u4e0e\u5ba2\u6237\u7aef\u7a0b\u5e8f\u94fe\u63a5\u7684\u201c\u9a71\u52a8\u7a0b\u5e8f\u201d\u5e93 <pre><code>  int ODBCexample()\n    {\n        RETCODE error;\n        HENV    env;     /* environment */ \n        HDBC    conn;  /* database connection */ \n        SQLAllocEnv(&amp;env);\n        SQLAllocConnect(env, &amp;conn);\n        // NTS null terminate string\n        SQLConnect(conn, \u201cdb.yale.edu\", SQL_NTS, \"avi\", SQL_NTS, \"avipasswd\", SQL_NTS); \n        \u2026. Do actual work \u2026  \n        SQLDisconnect(conn); \n        SQLFreeConnect(conn); \n        SQLFreeEnv(env); \n    }\n</code></pre></p> <p>\u9996\u5148\uff0c\u8c03\u7528<code>SQLAllocEnv\uff08&amp;env\uff09</code>,\u83b7\u5f97\u4e00\u4e2a\u73af\u5883\u3002\u7136\u540e\uff0c\u8c03\u7528<code>SQLAllocConnect\uff08env\uff0c&amp;conn\uff09</code>;\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u751f\u6210\u4e00\u4e2a\u8fde\u63a5\u3002</p> <p>\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u53ef\u80fd\u670d\u52a1\u4e8e\u591a\u4e2a\u7528\u6237\uff0c\u800c\u4e14\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u80fd\u4e0d\u540c\uff0c\u5982\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u6807\u5fd7\u53ef\u80fd\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u7528 <code>SQL_NTS</code> \u6807\u8bc6\u3002</p> <p>SEL_NTS \u8868\u793a null terminate string\uff0c\u7528null\u6765\u7ec8\u6b62\u5b57\u7b26\u4e32</p> <p>\u5f53\u5b9e\u9645\u7684\u5de5\u4f5c\u505a\u5b8c\u4ee5\u540e\uff0c\u8981\u5c06conn\u5173\u95ed\u6389\u3001\u56de\u6536\u6389,\u8981\u5c06env\u56de\u6536\u6389\u3002</p> <ul> <li> <p>Program sends SQL commands to database by using <code>SQLExecDirect</code></p> <p>\u7a0b\u5e8f\u5411\u6570\u636e\u5e93\u53d1\u9001SQL\u6307\u4ee4</p> </li> <li> <p>Result tuples are fetched using <code>SQLFetch()</code></p> <p>\u7ed3\u679c\u5143\u7ec4\u7684\u83b7\u53d6\u65b9\u5f0f</p> </li> <li> <p><code>SQLBindCol()</code> binds C language variables to attributes of the query result </p> <p>\u5c06 C \u8bed\u8a00\u53d8\u91cf\u7ed1\u5b9a\u5230\u67e5\u8be2\u7ed3\u679c\u7684\u5c5e\u6027</p> <ul> <li> <p>When a tuple is fetched, its attribute values are automatically stored in corresponding C variables.  </p> <p>\u5f53\u63d0\u53d6\u5143\u7ec4\u65f6\uff0c\u5176\u5c5e\u6027\u503c\u4f1a\u81ea\u52a8\u5b58\u50a8\u5728\u76f8\u5e94\u7684 C \u53d8\u91cf\u4e2d\u3002</p> </li> <li> <p>Arguments to SQLBindCol() </p> <p>SQLBindCol\uff08\uff09 \u7684\u53c2\u6570</p> </li> <li> <p>ODBC stmt variable, attribute position in query result</p> <p>ODBC stmt \u53d8\u91cf</p> </li> <li> <p>The type conversion from SQL to C.  </p> <p>\u4ece SQL \u5230 C \u7684\u7c7b\u578b\u8f6c\u6362</p> </li> <li> <p>The address of the variable. </p> <p>\u53d8\u91cf\u7684\u5730\u5740</p> </li> <li> <p>For variable-length types like character arrays,   </p> <ul> <li> <p>The maximum length of the variable   \u53d8\u91cf\u7684\u6700\u5927\u957f\u5ea6</p> </li> <li> <p>Location to store actual length when a tuple is fetched. </p> <p>\u83b7\u53d6\u5143\u7ec4\u65f6\u5b58\u50a8\u5b9e\u9645\u957f\u5ea6\u7684\u4f4d\u7f6e</p> </li> </ul> </li> </ul> </li> </ul> <p>Note: A negative value returned for the length field indicates null value</p> <p>\u5f53\u4f20\u5165\u5230C\u53d8\u91cf\u7684\u503c\u4e3a\u7a7a\u65f6\uff0c\u5b58\u50a8\u5b9e\u9645\u957f\u5ea6\u7684\u4f4d\u7f6e\u7f6e\u4e3a-1</p> <p>\u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\uff0c\u5219 <code>lenOut</code> \u4e3a -1. </p> <pre><code>char deptname[80];\nfloat salary;\nint lenOut1, lenOut2;\nHSTMT stmt;\nchar * sqlquery = \"select dept_name, sum (salary) \n                    from instructor \n                    group by dept_name\";\n// stmt statement\nSQLAllocStmt(conn, &amp;stmt);\nerror = SQLExecDirect(stmt, sqlquery, SQL_NTS);\nif (error == SQL SUCCESS) {\n    // bindcol \u7ed1\u5b9a\u5217\n    // 1 \u8868\u793a\u7b2c\u4e00\u5217\uff0c 80\u8868\u793a\u5b57\u7b26\u6570\u7ec4\u957f\u5ea6\uff0c &amp;lenout1\u8868\u793a\u5b9e\u9645\u957f\u5ea6\n    SQLBindCol(stmt, 1, SQL_C_CHAR, deptname , 80, &amp;lenOut1);\n    SQLBindCol(stmt, 2, SQL_C_FLOAT, &amp;salary, 0 , &amp;lenOut2);\n    while (SQLFetch(stmt) == SQL_SUCCESS) {\n        printf (\" %s %g\\n\", deptname, salary);\n    }\n}\nSQLFreeStmt(stmt, SQL_DROP);\n</code></pre> <p><code>SQLAllocStmt(conn, &amp;stmt)</code>\u8868\u793a\u5728conn\u8fd9\u4e2a\u8fde\u63a5\u4e2d\uff0c\u5206\u914d\u4e00\u4e2a\u4ee3\u8868\u8bed\u53e5\u7684\u5bf9\u8c61</p> <p><code>SQLExecDirect</code>\u7528\u6765\u6267\u884csqlquery\u5b57\u7b26\u4e32\u8868\u8fbe\u7684\u8bed\u53e5\uff0c\u5176\u4e2d\u7684\u53c2\u6570SQL_NTS\u8868\u660e\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4ee5\u2018\\0\u2019\u7ed3\u5c3e\u7ed3\u675f\u7684\u3002<code>SQLExecDirect</code>\u7684\u8fd4\u56de\u503c\u4fdd\u5b58\u5728\u53d8\u91cferror\u4e2d</p> <p>\u5982\u679cerror\u4e3a<code>SQL SUCCESS</code>\uff0c\u8868\u793a\u4e0a\u8ff0\u8bed\u53e5\u5df2\u7ecf\u6267\u884c\u6210\u529f\u4e86\uff0c\u8fd4\u56de\u7684\u4e24\u5217dept_name\u4e0esum(salary)\u5df2\u7ecf\u5b58\u5728\u4e86</p> <p>\u7136\u540e\uff0c<code>SQLBindCol</code>\u51fd\u6570\u5c06C\u8bed\u8a00\u7684\u53d8\u91cf\u7ed1\u5b9a\u5230\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u3002</p> <ul> <li> <p>SQLBindCol(stmt, 1, SQL_C_CHAR, deptname, 80, &amp;lenOut1);</p> <p>\u628a\u8bed\u53e5stmt\u7684\u7b2c\u4e00\u5217\uff0c\u4f20\u5230\u53d8\u91cfdeptname\uff0c\u53d8\u91cfdeptname\u7684\u6700\u5927\u957f\u5ea6\u662f80\uff0c\u5b9e\u9645\u957f\u5ea6\u586b\u5199\u5230 lenOut1\u4e2d</p> </li> <li> <p>SQLBindCol(stmt, 2, SQL_C_FLOAT, &amp;salary, 0 , &amp;lenOut2);</p> <p>\u628a\u8bed\u53e5stmt\u4e2d\u7684\u7b2c\u4e8c\u5217\uff0c\u4f20\u5230\u53d8\u91cfsalary\u4e2d\uff0c\u5c06\u53d8\u91cfsalary\u7684\u957f\u5ea6\u4f20\u5230lenOut2\u4e2d\u3002</p> <p>\u5982\u679c\u53d8\u91cfsalary\u4e3a\u7a7a\uff0c\u90a3\u4e48lenOut2\u4e2d\u7f6e\u4e3a-1\uff0c\u5426\u5219\u7f6e\u4e3a\u5b83\u5b9e\u9645\u7684\u957f\u5ea6\u3002</p> </li> </ul> <p>\u7136\u540e\uff0c\u5229\u7528<code>SQLFetch</code>\u51fd\u6570\uff0c\u5c06\u8fd4\u56de\u7ed3\u679cstmt\u5229\u7528\u5faa\u73af\uff0c\u5c06\u4e00\u884c\u4e00\u884c\u7684\u5143\u7ec4\u4f9d\u6b21\u6293\u53d6\uff0c\u5982\u679c\u6293\u53d6\u6210\u529f\uff0c\u90a3\u4e48\u5c31\u6253\u5370\u51fa\u8fd9\u4e00\u884c\u7684deptname\u3001salary\u7684\u503c\u3002</p> <p>ODBC Prepared Statements</p> <p>\u9884\u7f16\u8bd1\u7684\u65f6\u5019\u53ef\u4ee5\u7559\u51fa\u5360\u4f4d\u7b26</p> <ul> <li> <p>SQL statement prepared: compiled at the database</p> <ul> <li> <p>To prepare a statement  \u51c6\u5907\u58f0\u660e</p> <p><code>SQLPrepare(stmt, &lt;SQL String&gt;);</code> </p> </li> <li> <p>To bind parameters  \u7ed1\u5b9a\u53c2\u6570</p> <p><code>SQLBindParameter(stmt, &lt;parameter#&gt;,  ... type information and value omitted for simplicity..)</code></p> </li> <li> <p>To execute the statement \u6267\u884c\u8bed\u53e5</p> <p><code>retcode = SQLExecute(stmt);</code></p> </li> </ul> </li> <li> <p>Can have placeholders\uff08\u5360\u4f4d\u7b26\uff09: e.g. <code>insert into account values(?,?,?)</code></p> </li> <li> <p>Repeatedly executed with actual values for the placeholders</p> </li> </ul> <p></p> <p>More ODBC Features </p> <ul> <li> <p>Metadata features  </p> <ul> <li> <p>finding all the relations in the database and</p> <p>\u67e5\u627e\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u5173\u7cfb \uff08Database Metadata\uff09</p> </li> <li> <p>finding the names and types of columns of a query result or a relation in the database.</p> <p>\u67e5\u627e\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u7ed3\u679c\u6216\u5173\u7cfb\u7684\u5217\u7684\u540d\u79f0\u548c\u7c7b\u578b (ResultSet Metadata)</p> </li> </ul> </li> <li> <p>By default, each SQL statement is treated as a separate transaction that is committed automatically.</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a SQL \u8bed\u53e5\u90fd\u88ab\u89c6\u4e3a\u81ea\u52a8\u63d0\u4ea4\u7684\u5355\u72ec\u4e8b\u52a1\u3002</p> <ul> <li> <p>Can turn off automatic commit on a connection <code>SQLSetConnectOption(conn, SQL_AUTOCOMMIT, 0)</code></p> <p>\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u7684\u81ea\u52a8\u63d0\u4ea4 SQLSetConnectOption\uff08conn, SQL_AUTOCOMMIT, 0)</p> </li> <li> <p>Transactions must then be committed or rolled back explicitly by <code>SQLTransact(conn, SQL_COMMIT)</code> or <code>SQLTransact(conn, SQL_ROLLBACK)</code></p> <p>\u4e8b\u52a1\u5fc5\u987b\u7531 <code>SQLTransact(conn, SQL_COMMIT)</code> \u6216 <code>SQLTransact(conn, SQL_ROLLBACK)</code> \u663e\u5f0f\u63d0\u4ea4\u6216\u56de\u6eda</p> </li> </ul> </li> </ul>"},{"location":"DB/3.%20SQL/#5114-embedded-sql","title":"5.1.1.4 Embedded SQL","text":"<p>A language to which SQL queries are embedded is referred to as a host language, and the SQL structures permitted in the host language comprise embedded SQL.  </p> <p>\u5982\u628a SQL \u5d4c\u5165\u5230 C \u8bed\u8a00\uff0c\u90a3\u4e48 C \u8bed\u8a00\u662f host.  </p> <p>\u5728\u7f16\u8bd1\u524d\uff0c\u6709\u4e00\u4e2a\u9884\u7f16\u8bd1\u5668\uff0c\u5c06 SQL \u8bed\u53e5\u7ffb\u8bd1\u3002</p> <p>EXEC SQL statement is used in the host language to identify embedded SQL request to the preprocessor (in Java, <code># SQL { ... };</code>)</p> <p>Issues with Embedded SQL</p> <ul> <li>Mark the start point and end point of Embedded SQL <code>EXEC  SQL  &lt;statement&gt;\uff1b  //C</code></li> </ul> <p>Before executing any SQL statements, the program must first connect to the database. This is done using: <code>EXEC-SQL connect to server user user-name using password;</code></p> <p>\u5728\u6267\u884c\u4efb\u4f55SQL\u6307\u4ee4\u4e4b\u524d\uff0c\u9700\u8981\u5148\u8fde\u63a5\u6570\u636e\u5e93</p> <p>Variables of the host language can be used within embedded SQL statements. They are preceded by a colon (:) to distinguish from SQL variables (e.g., :credit_amount )</p> <p>host\u8bed\u8a00\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u5d4c\u5165\u5f0f SQL \u8bed\u53e5\u4e2d\u4f7f\u7528\u3002 \u5b83\u4eec\u524d\u9762\u6709\u4e00\u4e2a\u5192\u53f7 (:) \u4ee5\u533a\u522b\u4e8e SQL \u53d8\u91cf\uff08\u4f8b\u5982 :credit_amount \uff09</p> <p>\u8981\u4f7f\u7528host\u8bed\u8a00\u7684\u53d8\u91cf\uff0c\u9700\u8981\u5148\u8fdb\u884c\u7533\u660eDECLARE</p> <pre><code>EXEC-SQL BEGIN DECLARE SECTION\n    int  credit-amount ;\nEXEC-SQL END DECLARE SECTION;\n</code></pre> <p>insert\u3001delete\u3001update\u3001select(single record)</p> <pre><code>main( )\n{  \n    EXEC SQL INCLUDE SQLCA; //\u58f0\u660e\u6bb5\u5f00\u59cb\n    EXEC SQL BEGIN DECLARE SECTION;\n    char account_no [11];    //host variables(\u5bbf\u4e3b\u53d8\u91cf)\u58f0\u660e\n    char branch_name [16];\n    int  balance;  \n    EXEC SQL END DECLARE SECTION;//\u58f0\u660e\u6bb5\u7ed3\u675f\n    EXEC SQL CONNECT  TO  bank_db  USER Adam Using Eve;  \n    // EXEC SQL CONNECT TO\u8bed\u53e5\u8fde\u63a5\u4e0a\u4e86\u6570\u636e\u5e93\n    scanf (\u201c%s  %s  %d\u201d, account_no, branch_name, balance);\n    // EXEC SQL \u8bed\u53e5\u540e\u9762\u76f4\u63a5\u63a5\u4e0aSQL\u8bed\u53e5\u5373\u53ef\n\n    // \u63d2\u5165\n    EXEC SQL insert into account \n        values (:account_no, :branch_name, :balance);\n    If (SQLCA.sqlcode ! = 0)    printf ( \u201cError!\\n\u201d);\n    else       printf (\u201cSuccess!\\n\u201d);\n\n    // \u5220\u9664\n    EXEC SQL delete from account \n        where account_number = :account_no;\n    If (SQLCA.sqlcode ! = 0)    printf ( \u201cError!\\n\u201d);\n    else       printf (\u201cSuccess!\\n\u201d);\n\n    // \u66f4\u65b0\n    EXEC SQL update account\n        set balance = balance + :balance\n        where account_number = :account_no;\n    If (SQLCA.sqlcode ! = 0)    printf ( \u201cError!\\n\u201d);\n    else       printf (\u201cSuccess!\\n\u201d);\n}\n</code></pre> <p><code>SQLCA.sqlcode</code>\u8868\u8fbe\u7684\u662f\u8fd0\u884c\u4e0a\u8ff0\u8bed\u53e5\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff0c\u5982\u679c\u4e0d\u4e3a0\u5219\u53d1\u751f\u9519\u8bef</p>"},{"location":"DB/3.%20SQL/#52-procedural-constructs-in-sql","title":"5.2 Procedural Constructs in SQL","text":"<p>SQL provides a module language   </p> <p>Permits definition of procedures in SQL, with if-then-else statements, for and while loops, etc.</p> <p>\u5141\u8bb8\u5728 SQL \u4e2d\u5b9a\u4e49\u8fc7\u7a0b\uff0c\u5305\u62ec if-then-else \u8bed\u53e5\u3001for \u548c while \u5faa\u73af\u7b49</p> <p>Stored Procedures  </p> <ul> <li> <p>Can store procedures in the database</p> <p>\u5c06\u8fc7\u7a0b\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d</p> </li> <li> <p>then execute them using the call statement</p> <p>\u4f7f\u7528 call \u8bed\u53e5\u6267\u884c\u5b83\u4eec</p> </li> <li> <p>permit external applications to operate on the database without knowing about internal details</p> <p>\u5141\u8bb8\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u5728\u4e0d\u4e86\u89e3\u5185\u90e8\u8be6\u7ec6\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c</p> </li> </ul>"},{"location":"DB/3.%20SQL/#521-sql-functions","title":"5.2.1 SQL Functions","text":"<p>dept_count\u7684\u4f5c\u7528\u662f\uff1a\u4e0a\u4f20\u4e00\u4e2a\u7cfb\u7684\u540d\u5b57\uff0c\u8fd4\u56de\u8be5\u7cfb\u7684\u8001\u5e08\u7684\u6570\u91cf</p> <p></p> <p>SQL \u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a table. </p>"},{"location":"DB/3.%20SQL/#522-sql-procedures","title":"5.2.2 SQL Procedures","text":"<p>\u6709\u8f93\u5165\u53c2\u6570(<code>in</code>)\u548c\u8f93\u51fa\u53c2\u6570(<code>out</code>)</p> <p></p> <p>\u8f93\u5165\u7684\u662f dept_name, \u8f93\u51fa\u7684\u662fd_count</p> <p>\u8c03\u7528\u8fc7\u7a0b\u4f7f\u7528call</p>"},{"location":"DB/3.%20SQL/#523-procedural-constructs","title":"5.2.3 Procedural Constructs","text":"<p>Compound statement: <code>begin ... end</code>, </p> <ul> <li> <p>May contain multiple SQL statements between <code>begin</code> and <code>end</code>.</p> <p>begin  end\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u4e2aSQL\u8bed\u53e5</p> </li> <li> <p>Local variables can be declared within a compound statements</p> <p>\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u5728\u590d\u5408\u8bed\u53e5\u4e2d\u58f0\u660e</p> </li> <li> <p><code>While</code> and <code>repeat</code> statements <pre><code>declare n integer default 0;\nwhile n &lt; 10 do\n    set n = n + 1\nend while                           \nrepeat\n    set n = n  \u2013 1\nuntil n = 0\nend repeat\n</code></pre></p> <p>while \u548c repeat\u80fd\u591f\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff0c\u4e00\u4e2a\u6761\u4ef6\u5728\u524d\uff0c\u4e00\u4e2a\u6761\u4ef6\u5728\u540e</p> </li> <li> <p><code>For</code> loop     Permits iteration over all results of a query</p> <p>\u5141\u8bb8\u904d\u5386\u67e5\u8be2\u7684\u6240\u6709\u7ed3\u679c</p> <p><pre><code>declare n  integer default 0;\nfor r as\n    select budget from department \n    where dept_name = \u2018Music\u2019 \n    do \n        set n = n - r.budget \nend for\n</code></pre> r \u8868\u793a\u8fd4\u56de\u7684\u6bcf\u4e00\u884c\uff0c\u5bf9\u8fd4\u56de\u7ed3\u679c\u7684\u6bcf\u4e00\u884c\u6267\u884c\u6307\u4ee4</p> </li> <li> <p><code>\u6761\u4ef6\u5224\u65ad\u8bed\u53e5</code></p> </li> </ul> <pre><code>if boolean expression\n  then statement or compound statement\nelseif boolean expression\n  then statement or compound statement\nelse statement or compound statement\nend if\n</code></pre> <p></p>"},{"location":"DB/3.%20SQL/#524-external-language-functionsprocedures","title":"5.2.4 External Language Functions/Procedures","text":"<p>SQL \u53ef\u4ee5\u8bbf\u95ee\u7531 C \u8bed\u8a00\u5b9a\u4e49\u7684\u51fd\u6570\uff08\u8fc7\u7a0b\uff09     <pre><code>create procedure dept_count_proc(in dept_name varchar(20),  count integer)\nlanguage C \nexternal name \u2019 /usr/avi/bin/dept_count_proc\u2019 \n\n\ncreate function dept_count(dept_name varchar(20))\nreturns integer\nlanguage C\nexternal name \u2018/usr/avi/bin/dept_count\u2019\n</code></pre></p> <p>\u7f3a\u70b9\uff1a</p> <p>\u5b9e\u73b0\u529f\u80fd\u7684\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5230\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5e76\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u6267\u884c\u3002</p> <ul> <li>\u6570\u636e\u5e93\u7ed3\u6784\u610f\u5916\u635f\u574f\u7684\u98ce\u9669</li> <li>\u5b89\u5168\u98ce\u9669\uff0c\u5141\u8bb8\u7528\u6237\u8bbf\u95ee\u672a\u7ecf\u6388\u6743\u7684\u6570\u636e</li> </ul>"},{"location":"DB/3.%20SQL/#53-triggers","title":"5.3 Triggers","text":"<p>A <code>trigger</code> is a statement that is executed automatically by the system as a side effect of a modification to the database.  </p> <p>A <code>trigger</code> \u662f\u7cfb\u7edf\u81ea\u52a8\u6267\u884c\u7684\u8bed\u53e5\uff0c\u4f5c\u4e3a\u4fee\u6539\u6570\u636e\u5e93\u7684\u526f\u4f5c\u7528\u3002</p> <p>Trigger -  ECA rule</p> <ul> <li>E: Event \uff08 insert, delete \uff0cupdate\uff09</li> <li>C: Condition  </li> <li>A: Action</li> </ul> <p>To design a trigger mechanism, we must:  \u8bbe\u8ba1\u89e6\u53d1\u673a\u5236</p> <ul> <li> <p>Specify the conditions under which the trigger is to be executed.</p> <p>\u6307\u5b9a\u6267\u884c\u89e6\u53d1\u5668\u7684\u6761\u4ef6</p> </li> <li> <p>Specify the actions to be taken when the trigger executes.</p> <p>\u6307\u5b9a\u89e6\u53d1\u5668\u6267\u884c\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</p> </li> </ul> <p>\u200b     </p> <p>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u89e6\u53d1\u5668\uff0c\u89e6\u53d1\u53d1\u751f\u5728\u6211\u4eec\u5bf9account\u8868\u7684balance\u5c5e\u6027\u505a\u66f4\u65b0\u540e\u3002</p> <p>\u5982\u679c\u5b58\u6b3e\u91d1\u989d\u8d85\u8fc7200000\u5143\uff0c\u6216\u8005\u53d6\u6b3e\u91d1\u989d\u8d85\u8fc750000\u5143\uff0c\u90a3\u4e48\u5c31\u8981\u5728account_log\u8868\u4e2d\u63d2\u5165\u4e00\u884c\u6570\u636e\uff0c\u8bb0\u5f55\u4e0b\u8fd9\u6b21\u5b58\u6b3e/\u53d6\u6b3e\u64cd\u4f5c\u3002</p> <p>for each row\u8868\u793a\u9488\u5bf9\u6bcf\u4e00\u884c\u53d1\u751f\u7684\u53d8\u5316</p> <p>for each statement \u8868\u793a\u9488\u5bf9\u6bcf\u4e00\u6761\u6307\u4ee4</p> <p>\u200b    </p> <p>\u5c5e\u6027time_slot_id\u4e0d\u662f\u8868time_slot\u7684\u4e3b\u952e</p> <p>\u6211\u4eec\u4e0d\u80fd\u5229\u7528\u5c5e\u6027time_slot_id\u521b\u9020\u4e00\u4e2a\u4ece\u8bfe\u7a0bsection\u8868\u6307\u5411time_slot\u7684\u8868\u7684\u5916\u952e</p> <p>\u8bfe\u7a0b\u8868\u4e2d\u7684time_slot_id\u53c8\u5fc5\u987b\u5b58\u5728\u4e8e\u8868time_slot\u4e2d\uff0c\u8fd9\u5c5e\u4e8e\u53c2\u7167\u5b8c\u6574\u6027\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u89e6\u53d1\u5668\uff0c\u5728\u8fdb\u884c\u4e0d\u7b26\u5408\u53c2\u7167\u5b8c\u6574\u6027\u7684\u64cd\u4f5c\u53d1\u751f\u540e\u8fdb\u884c\u56de\u9000\uff0c\u4ece\u800c\u7ef4\u62a4\u8fd9\u4e00\u70b9\u3002</p> <p></p> <p>\u5982\u679c\u65e7\u7684\u8fd9\u4e00\u884c\u7684time_slot_id\u4e0d\u80fd\u5728\u8868timeslot\u4e2d\u627e\u5230\uff0c\u8bf4\u660e\u88ab\u5220\u9664\u7684\u4e00\u4e2atime_slot_id\u662f\u6700\u540e\u7684\u4e00\u4e2a\u3002\u5982\u679c\u6b64\u65f6\u5e76\u4e14\u65e7\u7684\u8fd9\u4e00\u884c\u7684time_slot_id\u540c\u65f6\u5728\u8bfe\u7a0b\u8868section\u4e2d\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f15\u53d1\u53c2\u7167\u5b8c\u6574\u6027\u7684\u95ee\u9898\u3002</p> <p>\u56e0\u6b64\uff0c\u89e6\u53d1\u5668\u5728\u5bf9\u8868timeslot\u505a\u5220\u9664\u64cd\u4f5c\u540e\u89e6\u53d1\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e0a\u8ff0\u7684\u60c5\u51b5\uff0c\u5c31\u4f1a\u56de\u9000\uff0c\u4e0d\u8ba9\u8fd9\u4e2a\u5220\u9664\u64cd\u4f5c\u53d1\u751f\u3002 </p> <p>\u7b49\u4ef7\u4e8e on delete restrict\uff0c\u7531\u4e8e\u4e0d\u662f\u4e3b\u952e\uff08\u5916\u952e\uff09\uff0c\u4e0d\u80fd\u7528on delete cascade / restrict/ default</p> <ul> <li> <p>Triggering event can be insert, delete or update</p> </li> <li> <p>Triggers on update can be restricted to specific attributes e.g. after(before) update of  takes on grade</p> </li> <li> <p>Values of attributes before and after an update can be referenced</p> <p>\u53ef\u4ee5\u5f15\u7528\u66f4\u65b0\u524d\u540e\u7684\u5c5e\u6027\u503c</p> <ul> <li> <p>referencing old row as:  for deletes and updates</p> <p>\u5c06\u65e7\u884c\u5f15\u7528\u4e3a\uff1a\u7528\u4e8e\u5220\u9664\u548c\u66f4\u65b0</p> </li> <li> <p>referencing new row as: for inserts and updates</p> <p>\u5c06\u65b0\u884c\u5f15\u7528\u4e3a\uff1a\u7528\u4e8e\u63d2\u5165\u548c\u66f4\u65b0</p> </li> </ul> </li> </ul> <p>\u200b    </p> <p>\u5982\u679c\u672c\u6765\u6302\u79d1\uff0c\u6216\u8005\u6ca1\u6709\u6210\u7ee9\uff0c\u66f4\u65b0\u540e\u4e0d\u518d\u6302\u79d1\u800c\u4e14\u6709\u6210\u7ee9\uff0c\u5c31\u628a\u5b66\u5206\u52a0\u4e0a\u53bb\u3002</p> <p>\u8981\u614e\u7528\u89e6\u53d1\u5668\uff0c\u7528\u5728\u5200\u5203\u4e0a\uff0c\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fde\u9501\u53cd\u5e94\u3002</p> <p>Instead of executing a separate action for each affected row, a single action can be executed for all rows affected by a transaction</p> <ul> <li> <p>Use <code>for each statement</code>  instead of <code>for each row</code></p> <p>\u5047\u8bbe\u662ffor each row\uff0c\u90a3\u4e48\u66f4\u65b0\u8868account\u7684\u6bcf\u4e00\u884c\u7684balance\u503c\u65f6\uff0c\u90fd\u4f1a\u89e6\u53d1\u4e00\u6b21\u89e6\u53d1\u5668\uff0c\u505a\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <p>\u5047\u8bbe\u65f6for each statement\uff0c\u90a3\u4e48\u5c3d\u7ba1\u4e00\u6b21update\u8bed\u53e5\u80fd\u591f\u66f4\u65b0\u591a\u884c\u7684balance\u503c\uff0c\u4f46\u662f\u6267\u884c\u8fd9\u4e00\u4e2a\u8bed\u53e5\uff0c\u89e6\u53d1\u5668\u53ea\u4f1a\u5728\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5\u540e\u89e6\u53d1\u4e00\u6b21</p> </li> <li> <p>Use <code>referencing old table</code> or <code>referencing new table</code> to refer to temporary tables (called transition tables) containing the affected rows</p> <p>\u5982\u679c\u4f7f\u7528for each statement\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709old row\u4e0enew row\u7684\u6982\u5ff5\u4e86\uff0c\u800c\u662fold table\u4e0enew table</p> </li> <li> <p>Can be more efficient when dealing with SQL statements that update a large number of rows</p> </li> </ul> <p></p> <p>\u6bcf\u6b21\u5bf9\u8868takes\u7684\u5c5e\u6027grade\u505a\u66f4\u65b0\u540e\uff08\u4e0d\u7ba1\u66f4\u65b0\u4e86\u51e0\u6761\u6570\u636e\uff09\uff0c\u5982\u679c\u6709\u5e73\u5747\u6210\u7ee9\u5c0f\u4e8e\u516d\u5341\u5206\u7684\u6559\u5b66\u73ed\uff0c\u90a3\u4e48\u5c31\u56de\u9000\u3002\u8fd9\u4e2a\u89e6\u53d1\u5668\u5728\u6267\u884c\u5b8cupdate\u8bed\u53e5\u540e\uff0c\u89e6\u53d1\u4e00\u6b21\u3002</p> <p></p>"},{"location":"DB/6.%20Entity-Relationship%20Model/","title":"6. Entity-Relationship Model","text":"<p> \u7ea6 4272 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 21 \u5206\u949f</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#\u5b9e\u4f53\u5173\u7cfb\u6a21\u578b","title":"\u5b9e\u4f53\u5173\u7cfb\u6a21\u578b","text":"<p>Database Design Process</p> <p>Example of Entity-Relationship Model</p> <p></p> <ul> <li>\u4e00\u4e2a\u65b9\u5f62\u6846\u5c31\u662f\u4e00\u4e2a\u5b9e\u4f53\u7684\u96c6\u5408\uff0c\u4e0b\u9762\u5217\u51fa\u5176\u5c5e\u6027\u3002</li> <li> <p>\u5b9e\u4f53\u4e0e\u5b9e\u4f53\u4e4b\u95f4\u6709\u5173\u7cfb\uff0c\u4e00\u4e2a\u83f1\u5f62\u6846\u8868\u793a\u5173\u7cfbrelationship\u3002  </p> <ul> <li>\u81f3\u591a\u4e00\u4e2a(\\(\\leftarrow, \\rightarrow\\)) \u5355\u5411\u7bad\u5934\uff0c\u4e00\u4e2a\u5b66\u751f\u4e00\u5b9a\u4f1a\u6709instructor\uff0c\u4f46\u662finstructor\u4e0d\u4e00\u5b9a\u6709\u5b66\u751f<code>\u88ab\u6307\u7684\u6709\u591a\u4e2a\u6307\u7684</code></li> <li>\u4e00\u5bf9\u4e00\uff08\u53cc\u5411\u7bad\u5934\uff09</li> <li> <p>\u591a\u5bf9\u591a\uff08\u76f4\u7ebf\uff09</p> <ul> <li><code>course</code> \u8fd9\u91cc\u7684 <code>prereq</code> \u662f\u591a\u5bf9\u591a\uff0c\u8868\u793a\u4e00\u95e8\u8bfe\u53ef\u4ee5\u6709\u591a\u95e8\u9884\u4fee\u8bfe\uff0c\u4e00\u95e8\u8bfe\u4e5f\u53ef\u4ee5\u662f\u591a\u95e8\u8bfe\u7684\u9884\u4fee\u8bfe\u3002</li> <li>instructor\u53ef\u4ee5\u6559\u591a\u95e8\u8bfe\uff0c\u540c\u65f6\u4e00\u4e2a\u8bfe\u53ef\u4ee5\u6709\u591a\u4e2aintructor\u6559</li> </ul> </li> <li> <p>\u53cc\u6a2a\u7ebf\u8868\u793a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5fc5\u987b\u53c2\u4e0e\u5173\u7cfb\uff0c\u800c\u5355\u6a2a\u7ebf\u5219\u8868\u793a\u5bf9\u8c61\u53ef\u4ee5\u4e0d\u53c2\u4e0e\u5173\u7cfb\u3002</p> <ul> <li>\u5982 <code>inst_dept</code> \u4e2d\u5982\u679c <code>department</code>-<code>inst_dept</code> \u4e3a\u53cc\u6a2a\u7ebf\uff0c\u5219\u8868\u793a\u6bcf\u4e00\u4e2a\u7cfb\u90fd\u8981\u6709\u8001\u5e08\u3002  \u800c<code>instructor - inst_dept</code>\u4e4b\u95f4\u4e3a\u53cc\u6a2a\u7ebf\uff0c\u706d\u4e00\u4e2a\u8001\u5e08\u90fd\u662f\u7cfb\u3002</li> <li>instructor\u53ef\u4ee5\u6ca1\u6709\u8bfe\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u8bfesection\u90fd\u6709instructor</li> <li>\u6bcf\u4e00\u4e2acourse\u90fd\u9700\u8981\u6709course_dept\uff0c\u90fd\u9700\u8981\u6240\u5c5e\u7684\u7cfb\u3002\u540c\u65f6\u4e00\u4e2a\u7cfb\u53c8\u53ef\u4ee5\u6709\u591a\u4e2acourse</li> <li>\u6bcf\u4e00\u4e2asection\u90fd\u6709\u5bf9\u5e94\u7684sec_course\uff0c\u4f46\u662f\u4e00\u4e2acourse\u80fd\u6709\u591a\u4e2asection\uff0c\u4e5f\u5c31\u662f\u80fd\u6709\u591a\u4e2a\u73ed\u7ea7</li> <li>\u6bcf\u4e00\u4e2asection\u90fd\u6709\u4e0a\u8bfe\u7684\u65f6\u95f4\uff0csec_time_slot,\u4f46\u662f\u4e00\u4e2asec_time_slot\u80fd\u6709\u591a\u4e2asection\u4e0a\u8bfe</li> <li>\u6bcf\u4e00\u4e2asection\u90fd\u6709\u4e0a\u8bfe\u7684\u73ed\u7ea7\uff0c\u4f46\u662f\u4e00\u4e2asec_class\u80fd\u6709\u591a\u4e2asection</li> </ul> </li> </ul> </li> <li> <p>\u8fd9\u91cc instructor \u5b9e\u4f53\u91cc\u4e0d\u9700\u8981 <code>dept_name</code> \u5c5e\u6027\uff0c\u56e0\u4e3a\u5728 department \u5b9e\u4f53\u91cc\u6709\u4e86\uff0c\u5426\u5219\u4f1a\u5197\u4f59\u3002section\u8868\u4e2d\u539f\u672c\u6709course_id, building, room_number, time_slot_id,\u4f46\u662f\u90fd\u6ca1\u6709\u5728section\u5b9e\u4f53\u4e2d\u5c55\u793a\u51fa\u6765\uff0c\u539f\u56e0\u662fcourse_id \u5df2\u7ecf\u51fa\u73b0\u5728course entity\u4e2d\uff0c\u5176\u4ed6\u540c\u7406\uff0c<code>\u591a\u6b21\u51fa\u73b0\u4f1a\u5197\u4f59\uff0c\u4e00\u822c\u4fdd\u7559\u4ee5primary key\u5f62\u5f0f\u5b58\u5728\u7684</code></p> </li> <li> <p><code>section</code> \u4e0d\u8db3\u4ee5\u552f\u4e00\u786e\u5b9a\u5143\u7ec4\uff0c\u79f0\u4e3a\u5f31\u5b9e\u4f53\uff0c\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff08\u5982 OOP\u3001DB \u90fd\u53ef\u4ee5\u6709\u540c\u6837\u5e74\u4efd\u5b66\u671f\u7684 1 \u73ed\uff09\u3002\u56e0\u4e3a\u8bfe\u7a0b\u53f7 <code>course_id</code> \u653e\u5728 <code>section</code> \u4f1a\u6709\u5197\u4f59\uff0c\u56e0\u6b64\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5bfc\u81f4\u5f62\u6210\u4e86\u4e00\u4e2a\u5f31\u5b9e\u4f53\u3002<code>sec_course</code> \u8868\u793a\u8054\u7cfb\u7684\u662f\u5f31\u5b9e\u4f53\uff08\u53cc\u6846\uff09\uff0c<code>section</code> \u4e0d\u80fd\u79bb\u5f00 <code>course</code> \u5b58\u5728\u3002 \u53ea\u6709\u5c06\u5f31\u5b9e\u4f53\u8fde\u63a5\u7684\u5b9e\u4f53\u7684primary key \u548c \u81ea\u5df1\u7684key\uff08\u5e26\u4e0b\u5212\u865a\u7ebf\uff09\u7684\u7ec4\u5408\u5728\u4e00\u8d77\u624d\u80fd\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4</p> </li> <li> <p>\u6bcf\u4e2a\u5b9e\u4f53\u76f4\u63a5\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u5f0f\u3002\u5173\u7cfb\u8f6c\u6362\u4e3a\u5143\u7ec4\uff0c\u5143\u7d20\u4e3a\u4e24\u4e2a\u8868\u7684 primary key. \u5bf9\u4e8e\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff08\u5982 <code>instructor</code> \u548c <code>department\uff09\u8f6c\u6362\u540e</code> primary key \u4ecd\u4e3a ID \u548c dept_name.  </p> </li> <li> <p>relationship \u4e0a\u4e5f\u53ef\u4ee5\u5e26\u5c5e\u6027\uff0c\u5982 <code>takes</code> \u4e0a\u7684 <code>grade</code>. </p> </li> <li> <p>\u5173\u7cfb\u53cc\u65b9\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u5b9e\u4f53\u96c6\u5408\uff0c<code>course</code> \u8fd9\u91cc\u7684 <code>prereq</code> \u662f\u591a\u5bf9\u591a\uff0c\u8868\u793a\u4e00\u95e8\u8bfe\u53ef\u4ee5\u6709\u591a\u95e8\u9884\u4fee\u8bfe\uff0c\u4e00\u95e8\u8bfe\u4e5f\u53ef\u4ee5\u662f\u591a\u95e8\u8bfe\u7684\u9884\u4fee\u8bfe\u3002</p> </li> <li> <p><code>{}</code> \u91cc\u9762\u662f\u591a\u4e2a\u503c\uff0c\u8868\u793a\u590d\u5408\u5c5e\u6027\u3002\u8fd9\u91cc\u8868\u793a <code>time_slot_id</code> \u5b9e\u9645\u4e0a\u53ef\u4ee5\u7531\u8fd9\u4e09\u4e2a\u5c5e\u6027\u590d\u5408\u800c\u6210\u3002</p> </li> </ul> <p></p> <p>ER\u56fe\u4e2d\u7684\u5b9e\u4f53\u662ftable\uff08\u77e9\u5f62\u6846\uff09</p> <p>\u83f1\u5f62\u6846\u8868\u793arelationship\uff0c\u662fentity\u4e4b\u95f4\u7684\u8054\u7cfb</p> <p></p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#61-database-modeling","title":"6.1 Database Modeling","text":"<p>A database can be modeled as:</p> <ul> <li>a collection of entities \u5b9e\u4f53\u7684\u96c6\u5408</li> <li>relationship among entities. \u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb</li> </ul>"},{"location":"DB/6.%20Entity-Relationship%20Model/#611-entities","title":"6.1.1 Entities","text":"<p>An entity is an object that exists and is distinguishable from other objects.   </p> <p>\u5b9e\u4f53\u662f\u5b58\u5728\u4e14\u53ef\u4e0e\u5176\u4ed6\u5bf9\u8c61\u533a\u5206\u5f00\u6765\u7684\u5bf9\u8c61\u3002</p> <p>e.g. specific person, company, event, plant</p> <ul> <li> <p>Entities have attributes </p> <p>\u5b9e\u4f53\u5177\u6709\u5c5e\u6027</p> <p>e.g. people have names and addresses    </p> </li> <li> <p>An entity set is a set of entities of the same type that share the same properties.  </p> <p>\u5b9e\u4f53\u96c6\u662f\u4e00\u7ec4\u5171\u4eab\u76f8\u540c\u5c5e\u6027\u7684\u76f8\u540c\u7c7b\u578b\u7684\u5b9e\u4f53\u3002</p> <p>e.g. set of all persons, companies, trees, holidays</p> </li> </ul> <p>Entity sets can be represented graphically as follows:</p> <ul> <li>Rectangles represent entity sets.</li> <li>Attributes listed inside entity rectangle</li> <li>Underline indicates primary key attributes</li> </ul> <p>\u77e9\u5f62\u8868\u793a\u5b9e\u4f53\u96c6\u3002\u5b9e\u4f53\u77e9\u5f62\u5185\u5217\u51fa\u7684\u5c5e\u6027\u3002\u4e0b\u5212\u7ebf\u8868\u793a\u4e3b\u952e\u5c5e\u6027</p> <p> </p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#612-relationship-sets","title":"6.1.2 Relationship Sets","text":"<p>A relationship is an association among several entities. </p> <p>A relationship set is a mathematical relation among n entities, each taken from entity  \\(\\{(e_1, e_2, ... e_n) | e_1 \\in E_1, e_2 \\in  E_2, ..., e_n \\in  E_n\\}\\) where \\((e_1, e_2, ..., e_n)\\) is a relationship.  </p> <p>\u672c\u8d28\u4e5f\u662f\u4e00\u4e2a\u96c6\u5408\u3002\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u4e2d\u5747\u4e3a\u662f\u4e8c\u5143\u8054\u7cfb\uff0c\u5373\u662f\u4e24\u4e2a\u5b9e\u4f53\u96c6\u5408\u7684\u5173\u7cfb\uff0c\u4f46\u662f\u5173\u7cfb\u53ef\u4ee5\u662f\u591a\u5143\u7684\uff0c\u5373\u591a\u4e2a\u5b9e\u4f53\u3002\u5982\u8001\u5e08\uff0c\u540c\u5b66\uff0cSRTP \u9879\u76ee\u53ef\u4ee5\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u5173\u7cfb\u3002</p> <p> </p> <p>\u6b64\u5904student\u4e0einstructor\u4e4b\u95f4\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5173\u7cfb,\u4e00\u4e2a\u8001\u5e08\u6307\u5bfc\u591a\u540d\u5b66\u751f\uff0c\u4e00\u4e2a\u5b66\u751f\u7531\u591a\u4f4d\u8001\u5e08\u57f9\u517b</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#6121-relationship-sets-with-attributes","title":"6.1.2.1 Relationship Sets with Attributes","text":"<p>An attribute can also be property of a relationship set.</p> <p>e.g. The advisor relationship set between entity sets instructor and student may have the attribute date which tracks when the student started being associated with the advisor.</p> <p>\u4f8b\u5982\uff0c\u5b9e\u4f53\u96c6\u6559\u5e08\u548c\u5b66\u751f\u4e4b\u95f4\u7684\u987e\u95ee\u5173\u7cfb\u96c6\u53ef\u80fd\u5177\u6709\u5c5e\u6027\u65e5\u671f\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5b66\u751f\u4f55\u65f6\u5f00\u59cb\u4e0e\u987e\u95ee\u5173\u8054\u3002</p> <p>advisor\u4e2d\u5b58\u5728\u5c5e\u6027\uff0cstudent\u7684ID\uff0cinstructor\u7684ID\uff0c\u4ee5\u53ca\u7ed3\u5bf9\u7684\u65f6\u95f4</p> <p> </p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#6122-roles","title":"6.1.2.2 Roles","text":"<p>Entity sets of a relationship need not be distinct.  \u5173\u7cfb\u7684\u5b9e\u4f53\u96c6\u53ef\u4ee5\u76f8\u540c\u4e5f\u53ef\u4ee5\u4e0d\u540c\u3002</p> <p>Each occurrence of an entity set plays a \u201crole\u201d in the relationship</p> <p>The labels <code>course_id</code> and <code>prereq_id</code> are called roles.</p> <p>\u5b9e\u4f53\u96c6\u7684\u6bcf\u6b21\u51fa\u73b0\u90fd\u626e\u6f14\u7740\u201c\u89d2\u8272\u201d\u5173\u7cfb\u4e2d\u7684\u201c\u89d2\u8272\u201d\uff0c\u6807\u7b7e <code>course_id</code> \u548c <code>prereq_id</code> \u79f0\u4e3a\u89d2\u8272</p> <p>  \u4e0d\u7528\u53cc\u6a2a\u7ebf\u2014\u2014\u4e00\u95e8course\u6ca1\u6709\u9884\u4fee\u8bfe\u7a0b\u3002\u6a2a\u7ebf\u2014\u2014\u591a\u5bf9\u591a</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#6123-degree\u5ea6-of-a-relationship-set","title":"6.1.2.3 Degree(\u5ea6) of a Relationship Set","text":"<p>binary relationship\uff08\u4e8c\u5143\u8054\u7cfb\uff09</p> <ul> <li>involve two entity sets (or degree two). \u6d89\u53ca\u4e24\u4e2a\u5b9e\u4f53\u96c6</li> <li>most relationship sets in a database system are binary.</li> </ul> <p><code>\u5c3d\u91cf\u4e0d\u7528\u591a\u5143\u8054\u7cfb\uff0c\u56e0\u4e3a\u4e8c\u5143\u8054\u7cfb\u6bd4\u8f83\u6e05\u6670</code>\u3002\u800c\u4e14\u4efb\u4f55\u7684\u591a\u5143\u8054\u7cfb\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e2d\u4ecb\u5b9e\u4f53\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\u3002</p> <p> </p> <p>\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\uff1a\u628a\u591a\u5143\u8054\u7cfb\u5b9e\u4f53\u5316\u3002\u5982 <code>proj_guide</code> \u91cc\u6709\u8001\u5e08\u3001\u5b66\u751f\u3001\u5de5\u7a0b\u7684 id. \u968f\u540e\u8fd9\u4e2a\u5b9e\u4f53\u53c8\u548c\u53e6\u5916\u4e09\u4e2a\u5b9e\u4f53\u5404\u6709\u4e00\u4e2a\u4e8c\u5143\u8054\u7cfb\u3002</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#613-attributes","title":"6.1.3 Attributes","text":"<p>An entity is represented by a set of attributes, that is descriptive properties possessed by all members of an entity set.</p> <p>\u5b9e\u4f53\u7531\u4e00\u7ec4\u5c5e\u6027\u8868\u793a\uff0c\u8fd9\u4e9b\u5c5e\u6027\u662f\u5b9e\u4f53\u96c6\u7684\u6240\u6709\u6210\u5458\u6240\u62e5\u6709\u7684\u63cf\u8ff0\u6027\u5c5e\u6027</p> <p>Attribute types  \u5c5e\u6027\u7c7b\u578b: </p> <ul> <li> <p>Simple\uff08\u7b80\u5355\uff09 and composite\uff08\u590d\u5408\uff09 attributes.  </p> </li> <li> <p>Single-valued\uff08\u5355\u503c\uff09 and multivalued\uff08\u591a\u503c\uff09 attributes  </p> <p>e.g. multivalued attribute: <code>phone_numbers</code> </p> </li> <li> <p>Derived\uff08\u6d3e\u751f\uff09 attributes</p> <ul> <li> <p>Can be computed from other attributes  \u901a\u8fc7\u5176\u4ed6\u5c5e\u6027\u8ba1\u7b97\u51fa\u6765</p> <p>e.g. <code>age</code>, given <code>date_of_birth</code></p> </li> </ul> <p> <p>Representing Complex Attributes in ER Diagram</p> <ol> <li>\u590d\u5408\u5c5e\u6027\u7531\u591a\u4e2a\u5c5e\u6027\u7ec4\u6210\uff0c\u76f8\u5f53\u4e8eC\u8bed\u8a00\u4e2d\u7684sturct</li> <li>\u591a\u503c\u5c5e\u6027\uff0c\u7528\u201c{ }\u201d\u5305\u542b</li> <li>Derived attribute</li> </ol>"},{"location":"DB/6.%20Entity-Relationship%20Model/#614-mapping-cardinality-constraints","title":"6.1.4 Mapping Cardinality Constraints","text":"<p>\u6620\u5c04\u57fa\u6570\u7ea6\u675f</p> <p>Express the number of entities to which another entity can be associated via a relationship set.</p> <p>\u53ef\u901a\u8fc7\u5173\u7cfb\u96c6\u5c06\u53e6\u4e00\u4e2a\u5b9e\u4f53\u5173\u8054\u5230\u7684\u5b9e\u4f53</p> <ul> <li>One to one</li> <li>One to many</li> <li>Many to one</li> <li>Many to many </li> </ul> <p>We express cardinality constraints by drawing either a directed line (\\(\\rightarrow\\)), signifying \u201cone,\u201d or an undirected line (\\(\u2014\\)), signifying \u201cmany,\u201d between the relationship set and the entity set.</p> <p>\u6211\u4eec\u901a\u8fc7\u5728\u5173\u7cfb\u96c6\u548c\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7ed8\u5236\u4e00\u6761\u8868\u793a\u201c\u4e00\u201d\u7684\u6709\u5411\u7ebf \uff08 \u2192 \uff09 \u6216\u8868\u793a\u201c\u8bb8\u591a\u201d\u7684\u65e0\u5411\u7ebf \uff08 \u2014 \uff09 \u6765\u8868\u793a\u57fa\u6570\u7ea6\u675f\u3002</p> <ol> <li>\u4e00\u5bf9\u4e00</li> </ol> <p></p> <p>\u4e00\u4e2a\u5b66\u751f\u6700\u591a\u548c\u4e00\u4e2a\u8001\u5e08\u5173\u8054\uff0c\u4e00\u4e2a\u8001\u5e08\u6700\u591a\u548c\u4e00\u4e2a\u5b66\u751f\u5173\u8054</p> <ol> <li> <p>\u4e00\u5bf9\u591a</p> <p></p> <p>\u4e00\u4e2a\u5b66\u751f\u6700\u591a\u6709\u4e00\u4e2a\u8001\u5e08\u6307\u5bfc\uff0c\u4e00\u4e2a\u8001\u5e08\u53ef\u4ee5\u6307\u5bfc\u591a\u540d\u5b66\u751f</p> </li> <li> <p>\u591a\u5bf9\u591a</p> <p></p> <p>\u6559\u5e08\u53ef\u4ee5\u4e0e\u591a\u4e2a\uff08\u53ef\u80fd\u662f 0 \u4e2a\uff09\u5b66\u751f\u76f8\u5173\u8054 \uff0c \u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u4e0e\u591a\u4e2a\uff08\u53ef\u80fd\u662f 0 \u4e2a\uff09\u6559\u5e08\u76f8\u5173\u8054</p> </li> </ol>"},{"location":"DB/6.%20Entity-Relationship%20Model/#615-total-and-partial-participation","title":"6.1.5 Total and Partial Participation","text":"<ul> <li> <p>Total participation (indicated by double line): every entity in the entity set participates in at least one relationship in the relationship set    </p> <p>\u6240\u6709\u5143\u7d20\u90fd\u8981\u53c2\u4e0e\u5173\u7cfb</p> </li> <li> <p>Partial participation: some entities may not participate in any relationship in the relationship set</p> <p>\u90e8\u5206\u53c2\u4e0e\uff1a\u67d0\u4e9b\u5b9e\u4f53\u53ef\u80fd\u4e0d\u53c2\u4e0e\u5173\u7cfb\u96c6\u4e2d\u7684\u4efb\u4f55\u5173\u7cfb</p> </li> </ul> <p></p> <p>\u53cc\u6a2a\u7ebf\u548c\u5355\u6a2a\u7ebf\u7684\u533a\u522b</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#616-notation-for-expressing-more-complex-constraints","title":"6.1.6 Notation for Expressing More Complex Constraints","text":"<p>\u7528\u4e8e\u8868\u8fbe\u66f4\u590d\u6742\u7ea6\u675f\u7684\u8868\u793a\u6cd5</p> <p>A line may have an associated minimum and maximum cardinality, shown in the form l..h, where l is the minimum and h the maximum cardinality</p> <p>\u4e00\u6761\u7ebf\u53ef\u80fd\u5177\u6709\u5173\u8054\u7684\u6700\u5c0f\u57fa\u6570\u548c\u6700\u5927\u57fa\u6570\uff0c\u5982 l. \u5f62\u5f0f\u6240\u793a\u3002h\uff0c\u5176\u4e2d l \u662f\u6700\u5c0f\u57fa\u6570\uff0ch \u662f\u6700\u5927\u57fa\u6570</p> <ul> <li>A minimum value of 1 indicates total participation.</li> <li>A maximum value of 1 indicates that the entity participates  in at most one relationship</li> <li>A maximum value of * indicates no limit.</li> </ul> <p><code>\u6700\u5c0f\u503c\u4e3a1\uff0c\u610f\u5473\u7740\u5fc5\u987b\u6709\u53c2\u4e0e\uff0c\u8bf4\u660e\u662ftotal participation\uff0c\u6700\u5927\u503c\u662f1\uff0c\u610f\u5473\u7740\u5b9e\u4f53\u6700\u591a\u53c2\u4e0e\u4e00\u4e2a\u5173\u7cfb\u3002\u6700\u5927\u503c\u4e3a*\u8868\u793a\u6ca1\u6709\u9650\u5236</code></p> <p> </p> <p>\u2022Instructor can advise 0 or more students. A student must have 1 advisor (instructor); cannot have multiple advisors(instructors).</p> <p>\u591a\u5143\u5173\u7cfb\u91cc\uff0c\u6211\u4eec\u53ea\u5141\u8bb8\u6700\u591a\u6709\u4e00\u4e2a\u7bad\u5934\u3002</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#617-primary-key-for-entity-sets","title":"6.1.7 Primary Key for Entity Sets","text":"<p>A key for an entity is a set of attributes that suffice to distinguish entities from each other</p> <p>\u5b9e\u4f53\u7684\u952e\u662f\u4e00\u7ec4\u8db3\u4ee5\u5c06\u5b9e\u4f53\u5f7c\u6b64\u533a\u5206\u5f00\u6765\u7684\u5c5e\u6027.\u5b9e\u4f53\u96c6\u4e2d\u4e0d\u5141\u8bb8\u4e24\u4e2a\u5b9e\u4f53\u5728\u6240\u6709\u5c5e\u6027\u4e2d\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u503c\u3002</p> <ul> <li> <p>Let R be a relationship set involving entity sets E1, E2, .. En</p> </li> <li> <p>The primary key for R is consists of the union of the primary keys of entity sets E1, E2, ..En</p> </li> </ul> <p>\u5173\u7cfb\u96c6R\u7684\u4e3b\u952e\u662f\u7531\u5b9e\u4f53\u96c6E1\uff0cE2\uff0c\u2026. En\u7684\u4e3b\u952e\u7ec4\u6210\u7684</p> <ul> <li>If the relationship set R has attributes a1, a2, .., am associated with it, then the primary key of R also includes the attributes a1, a2, .., am</li> </ul> <p>\u5173\u7cfb\u96c6\u7684\u4e3b\u952e\u53d6\u51b3\u4e8e\u5173\u7cfb\u96c6\u7684\u6620\u5c04\u57fa\u6570\uff08mapping cardinality\uff09</p> <ol> <li>\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u5c31\u662f\u4e24\u4e2a\u5b9e\u4f53\u96c6\u7684\u4e3b\u952e\u7684\u7ec4\u5408</li> <li>\u4e00\u5bf9\u591a\u5173\u7cfb\u3002\u4e3b\u952e\u9009\u62e9many\u4fa7\u7684\u4e3b\u952e</li> <li>\u591a\u5bf9\u4e00\u5173\u7cfb\u3002<code>The primary key of the \u201cMany\u201d side is a minimal superkey and is used as the primary key</code></li> <li>\u4e00\u5bf9\u4e00\u5173\u7cfb\u3002\u4efb\u4f55\u4e00\u4e2a\u53c2\u4e0e\u5b9e\u4f53\u96c6\u7684\u4e3b\u952e\u5f62\u6210\u4e00\u4e2a\u6700\u5c0f\u7684\u8d85\u7ea7\u952e\uff0c\u5e76\u4e14\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u4e00\u4e2a\u4f5c\u4e3a\u4e3b\u952e\u3002</li> </ol> <p></p> <p>\u591a\u5143\u8054\u7cfb\u7684 primary key \u662f\u4e24\u7aef key \u7684\u7ec4\u5408\u3002\u5982\u679c\u662f\u4e00\u5bf9\u4e00\u7684\u8054\u7cfb\uff0c\u90a3\u4e48\u5355\u4e2a\u5b9e\u4f53\u7684 key \u4e5f\u53ef\u4ee5\u4f5c\u4e3a primary key. \u4e00\u5bf9\u591a\u7684\u8054\u7cfb\uff08\u5982\u5bfc\u5e08\u548c\u5b66\u751f\u5c31\u662f\u4e00\u5bf9\u591a\uff0c\u90a3\u4e48\u4e3b\u952e\u5e94\u8be5\u4e3a\u5b66\u751f\uff09</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#618-weak-entity-sets","title":"6.1.8 Weak Entity Sets","text":"<p>\u5f31\u5b9e\u4f53\u96c6</p> <p>An entity set that does not have a primary key is referred to as a weak entity set.</p> <p>\u6ca1\u6709\u4e3b\u952e\u7684\u5b9e\u4f53\u96c6\u79f0\u4e3a\u5f31\u5b9e\u4f53\u96c6</p> <p>The existence of a weak entity set depends on the existence of a identifying entity set\uff08\u6807\u8bc6\u6027\u5b9e\u4f53\u96c6\uff09</p> <ul> <li> <p>It must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set</p> </li> <li> <p>Identifying relationship\uff08\u6807\u8bc6\u6027\u8054\u7cfb\uff09 depicted using a double diamond</p> </li> </ul> <p>\u4f7f\u7528\u53cc\u83f1\u5f62\u63cf\u7ed8\u7684\u8bc6\u522b\u5173\u7cfb\uff08\u6807\u8bc6\u6027\u8054\u7cfb\uff09</p> <p>The discriminator(\u5206\u8fa8\u7b26\uff0cor partial key) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set  when the identifying entity  they depend is known.</p> <p><code>partial key \u548c identifying entity set\u7684primary key \u7ed3\u5408\u5728\u4e00\u8d77\u624d\u80fd\u552f\u4e00\u8bc6\u522b\u5143\u7ec4</code></p> <p>\u6211\u4eec\u7528\u865a\u7ebf\u5728\u5f31\u5b9e\u4f53\u96c6\u7684partial key\u4e0b\u5212\u7ebf\u3002\uff08\u865a\u7ebf\uff09 \u6211\u4eec\u5c06\u5f31\u5b9e\u4f53\u7684\u8bc6\u522b\u5173\u7cfb\u653e\u5728\u53cc\u83f1\u5f62\u4e2d\u3002\uff08\u53cc\u6846\uff09</p> <p></p> <p>\u5f3a\u5b9e\u4f53\u96c6\u7684\u4e3b\u952e\u4e0d\u663e\u5f0f\u5b58\u50a8\u5728\u5f31\u5b9e\u4f53\u96c6\u4e2d\uff0c\u56e0\u4e3a\u5b83\u662f\u9690\u5f0f\u7684\u3002</p> <p>\u5982\u679c\u663e\u5f0f\u5b58\u50a8course_id\uff0c\u5219 section \u53ef\u4ee5\u6210\u4e3a\u4e00\u4e2a\u5f3a\u5b9e\u4f53\uff0c\u4f46 section \u548c course \u4e4b\u95f4\u7684\u4f1a\u56e0\u4e3acourse_id\u800c\u5197\u4f59</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#619-redundant-attributes-\u5197\u4f59\u5c5e\u6027","title":"6.1.9 Redundant Attributes \u5197\u4f59\u5c5e\u6027","text":"<p>\u65e2\u6709\u5173\u7cfb student_dept \u53c8\u6709 \u5c5e\u6027dept_name,\u4e24\u8005\u91cd\u590d</p> <p><code>foreign key \u4f1a\u56e0\u4e3a \u5197\u4f59\u800c\u53bb\u6389</code></p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#62-reduction-to-relational-schemas","title":"6.2 Reduction to Relational Schemas","text":"<p>\u4e00\u4e2a ER \u56fe\u53ef\u4ee5\u8f6c\u6362\u6210\u591a\u79cd\u6a21\u5f0f\uff08\u56fe\u6570\u636e\u5e93\u3001\u9762\u5411\u5bf9\u8c61\u3001\u5173\u7cfb\u6a21\u5f0f\u7b49\uff09</p> <ul> <li> <p>A strong entity set reduces to a schema with the same attributes <code>course(course_id, title, credits)</code></p> <p>\u666e\u901a\u7684entity\u76f4\u63a5\u8f6c\u5316\u4e3a\u5173\u7cfb\u6a21\u5f0f\u5373\u53ef\u3002\u5f3a\u5b9e\u4f53\u96c6\u7b80\u5316\u4e3a\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u67b6\u6784</p> </li> <li> <p>A weak entity set becomes a table that includes a column for the primary key of the identifying strong entity set.    </p> <p>Primary key of the table is the union of the discriminator of the weak entity set and  the primary key of the identifying strong entity set.   </p> <p>\u8868\u7684\u4e3b\u952e\u662f\u5f31\u5b9e\u4f53\u96c6\u7684discriminator\uff08partial key\uff09\u548c\u6807\u8bc6\u5f3a\u5b9e\u4f53\u96c6\u7684\u4e3b\u952e\u7684\u5e76\u96c6</p> <p><code>section(course_id, sec_id, semester, year)</code></p> </li> <li> <p>A many-to-many relationship set is represented as a schema with attributes for the primary keys of the two participating entity sets, and any descriptive attributes of the relationship set.    \u5373\u4e24\u4e2a\u96c6\u5408\u7684\u4e3b\u952e\u62fc\u8d77\u6765\uff0c\u52a0\u4e0a\u5173\u7cfb\u7684\u9644\u5e26\u5c5e\u6027\u3002 </p> <p> <code>advisor = (s_id, i_id)</code></p> </li> <li> <p>Many-to-one and one-to-many relationship sets that are total on the many-side can be represented by adding an extra attribute to the \u201cmany\u201d side, containing the primary key of the \u201cone\u201d side.  </p> <p>\u591a\u5bf9\u4e00\u53ef\u4ee5\u4e0d\u8f6c\u6362\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\uff0c\u76f4\u63a5\u5728\u201c\u591a\u201c\u90a3\u4e2a\u8868\u4e0a\u6dfb\u52a0\u201d\u4e00\u201c\u7684\u4e3b\u952e\u5373\u53ef\u3002</p> <p> </p> <p><code>inst_dept</code> \u672c\u8d28\u5c31\u662f\u5c06 <code>instructor</code> \u548c <code>department</code> \u5408\u5e76\uff0c\u5728 <code>instrutor</code> \u7684\u5c5e\u6027\u4e0a\u6dfb\u52a0 <code>dept_name</code>.   </p> <p></p> <p>primary key (\u542b\u4e49)\u76f8\u540c\u7684\u8868\u53ef\u4ee5\u5408\u5e76\uff0c instructor \u548c inst_dept\u53ef\u4ee5\u5408\u5e76</p> <p>\u5404\u6709\u5229\u5f0a\uff0c\u7b2c\u4e00\u79cd\u5199\u6cd5\u8868\u53ef\u80fd\u4f1a\u592a\u591a\uff0c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u5408\u5728\u4e00\u8d77\u8868\u53ef\u80fd\u592a\u5927\uff0c\u4e0d\u5229\u4e8e\u7ba1\u7406\u3002</p> </li> <li> <p>\u4e00\u5bf9\u4e00\u5173\u7cfb\uff0c\u4efb\u9009\u4e00\u65b9\u7684primary key \u4f5c\u4e3a\u4e3b\u952e</p> </li> </ul>"},{"location":"DB/6.%20Entity-Relationship%20Model/#621-composite-and-multivalued-attributes","title":"6.2.1 Composite and Multivalued Attributes","text":"<p>Composite attributes are flattened out by creating a separate attribute for each component attribute. </p> <p>\u5c31\u50cf\u5728 C \u8bed\u8a00\u91cc\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u3002\u4f46\u662f\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5fc5\u987b\u662f\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u5fc5\u987b\u628a\u8fd9\u4e9b\u590d\u5408\u5c5e\u6027\u94fa\u5e73\u3002</p> <p>e.g. <pre><code>instructor(ID, \n        first_name, middle_initial, last_name,      \n        street_number, street_name, apt_number, \n        city, state, zip_code, date_of_birth, age)\n</code></pre></p> <p>A multivalued attribute M of an entity E is represented by a separate schema EM. </p> <p>\u5b9e\u4f53 E \u7684\u591a\u503c\u5c5e\u6027 M \u7531\u5355\u72ec\u7684schema EM \u8868\u793a\u3002</p> <p>Schema EM has attributes corresponding to the primary key of E and an attribute corresponding to multivalued attribute M.  </p> <p>schema EM \u5177\u6709\u4e0e E \u7684\u4e3b\u952e\u76f8\u5bf9\u5e94\u7684\u5c5e\u6027\u548c\u4e0e\u591a\u503c\u5c5e\u6027 M \u76f8\u5bf9\u5e94\u7684\u5c5e\u6027\u3002</p> <p> <code>\u4f8b\u5982\u6b64\u5904\uff0c\u5efa\u7acb\u65b0\u7684schema inst_phone, \u5176\u4e2d\u7684\u5c5e\u6027\u662f instructor\u7684\u4e3b\u952e ID\uff0c\u548c\u591a\u503c\u5c5e\u6027phone_number\u3002\u591a\u503c\u5c5e\u6027\u7684\u6bcf\u4e2a\u503c\u90fd\u6620\u5c04\u5230\u67b6\u6784 EM \u4e0a\u5173\u7cfb\u7684\u5355\u72ec\u5143\u7ec4</code></p> <p>  \u7279\u6b8a\u60c5\u51b5\uff1a\u5b9e\u4f53time_slot\u9664\u4e86\u4e3b\u952e\u5c5e\u6027\u5916\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u5e76\u4e14\u8be5\u5c5e\u6027\u662f\u591a\u503c\u7684</p> <p>\u4f1a\u521b\u5efa\u4e24\u4e2aschema\uff0c \u5206\u522b\u662f </p> <ul> <li>time_slot(time_slot_id)</li> <li>time_slot_detail(time_slot_id, day, start_time, end_time)</li> </ul> <p>\u7f3a\u70b9\uff1a\u4f18\u5316\u53bb\u6389time_slot\u8fd9\u4e2a\u8868\u540e\uff0c\u5c31\u65e0\u6cd5\u4f7f\u7528\u5916\u952etime_slot_id</p> <p>\u5229\u7528\u4e00\u5bf9\u591a\u7684\u6027\u8d28\uff0c\u628amany\u7684\u4e3b\u952e\u62ff\u8fc7\u6765\uff0c\u6700\u7ec8\u7684section(course_id, sec_id, semester, year, building, room_number, time_slot_id)</p> <ol> <li> <p>\u5728\u628aER\u56fe\u8f6c\u5316\u4e3a\u5173\u7cfb\u6a21\u5f0f\u65f6\uff0centity\u7684\u54ea\u79cd\u5c5e\u6027\u5fc5\u987b\u5355\u72ec\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\uff1f</p> <ul> <li>\u7ec4\u5408\u5c5e\u6027\uff1a\u5e73\u94fa\u5373\u53ef</li> <li>\u591a\u503c\u5c5e\u6027\uff1a\u5fc5\u987b\u8f6c\u5316</li> <li>\u5bfc\u51fa\u5c5e\u6027\uff08derived attribute\uff09\uff1a\u672a\u77e5</li> </ul> </li> <li> <p>\u5728\u628aER\u56fe\u8f6c\u5316\u4e3a\u5173\u7cfb\u6a21\u5f0f\u65f6\uff0c\u54ea\u79cdrelationship set\u5fc5\u987b\u5355\u72ec\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f</p> <ul> <li>\u4e00\u5bf9\u4e00\uff1a\u7279\u6b8a\u7248\u7684\u4e00\u5bf9\u591a</li> <li>\u4e00\u5bf9\u591a/\u591a\u5bf9\u4e00\uff1a\u628a\u4e3b\u952e\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2aentity\u5373\u53ef\uff0c\u975e\u5f3a\u5236</li> <li>\u591a\u5bf9\u591a\uff1a\u5f3a\u5236\uff0c\u4e24\u4e2aentity\u7684\u4e3b\u952e\u7684\u7ec4\u5408</li> </ul> </li> </ol>"},{"location":"DB/6.%20Entity-Relationship%20Model/#63-design-issues","title":"6.3 Design Issues","text":""},{"location":"DB/6.%20Entity-Relationship%20Model/#631-common-mistakes-in-e-r-diagrams","title":"6.3.1 Common Mistakes in E-R Diagrams","text":"<ul> <li> <p>\u4fe1\u606f\u5197\u4f59  </p> <p>student \u7684 <code>dept_name</code> \u5e94\u8be5\u53bb\u6389</p> <p></p> <p>\u4e0d\u7136\u8f6c\u5316\u4e3a\u5173\u7cfb\u6a21\u578b\u4e4b\u540e\uff0cdept_name\u4f1a\u51fa\u73b0\u4e24\u6b21</p> </li> <li> <p>\u5173\u7cfb\u5c5e\u6027\u4f7f\u7528\u4e0d\u5f53  </p> <p>\u8fd9\u91cc\u4e00\u95e8\u8bfe\u53ef\u80fd\u6709\u5f88\u591a\u6b21\u4f5c\u4e1a\uff0c\u4e0d\u80fd\u53ea\u7528\u4e00\u4e2a\u5b9e\u4f53\u3002</p> <p></p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p></p> <p>\u628aassignment\u65b0\u62c9\u51fa\u6765\uff0csection\u6709\u4f5c\u4e1aassignment\uff0c\u4f5c\u4e1a\u5bf9\u6bcf\u4e2a\u5b66\u751f\u6765\u8bf4\u6709\u6210\u7ee9mark_in</p> </li> </ul>"},{"location":"DB/6.%20Entity-Relationship%20Model/#632-use-of-entity-sets-vs-attributes","title":"6.3.2 Use of entity sets vs. attributes","text":"<p><code>phone_number\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u6269\u5145\u4f5c\u4e3a\u4e00\u4e2a\u5b9e\u4f53entity</code></p> <ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u660e\u786e\u653e\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u9644\u5c5e\u66f4\u591a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u7531\u591a\u4eba\u5171\u4eab\u3002\uff08\u5982\u529e\u516c\u5ba4\u7684\u516c\u5171\u7535\u8bdd\uff09<ul> <li>\u597d\u5904\uff1a\u4fe1\u606f\u66f4\u591a\uff0c\u53ef\u4ee5\u5171\u4eab\uff1b \u574f\u5904\uff1a\u8868\u53d8\u591a\u4e86</li> </ul> </li> </ul>"},{"location":"DB/6.%20Entity-Relationship%20Model/#633-use-of-entity-sets-vs-relationship-sets","title":"6.3.3 Use of entity sets vs. relationship sets","text":"<p>\u6b64\u5904\u4e00\u4e2aregistration\u5bf9\u5e94\u4e00\u4e2a\u5b66\u751f\uff0c\u5bf9\u5e94\u4e00\u4e2asection\uff0c\u91c7\u7528\u53cc\u6a2a\u7ebf\u3002\u4f46\u662f\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u6709\u591a\u4e2aregistration\uff08\u9009\u591a\u95e8\u8bfe\uff09\uff0c\u4e00\u4e2asection\u53ef\u4ee5\u6709\u591a\u4e2aregistration\uff08\u88ab\u591a\u4e2a\u5b66\u751f\u9009\uff09</p> <p></p> <p><code>\u539f\u672cstudent entity\u4e0esection\u4e4b\u95f4\u662f\u901a\u8fc7relationship set\u8054\u7cfb\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u65b0\u6dfb\u52a0\u4e00\u4e2aentity\u8fdb\u884c\u8054\u7cfb</code></p> <p>\u5b9e\u4f53\u53ef\u4ee5\u4fbf\u4e8e\u4e0e\u5176\u4ed6\u5b9e\u4f53\u5efa\u7acb\u8054\u7cfb\u3002</p> <p>\u5982\u7535\u5546\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u5ba2\u6237\u548c\u5546\u54c1\u7528 <code>buy</code> \u8054\u7cfb\u8d77\u6765\uff0c\u4f46\u540e\u7eed\u8fd8\u4f1a\u6709\u4ed8\u6b3e\u3001\u7269\u6d41\u7b49\u60c5\u51b5\uff0c\u6211\u4eec\u6700\u597d\u628a <code>buy</code> \u5b9e\u4f53\u5316\u4e3a\u8ba2\u5355\u3002</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#634-placement-of-relationship-attributes","title":"6.3.4 Placement of relationship attributes","text":"<p><code>relationship\u7684\u5c5e\u6027\u662f\u653e\u5728relationship set\u4e2d\u8fd8\u662f\u653e\u5728\u5b9e\u4f53\u4e2d\uff1f</code></p> <ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u6b21\u8bbf\u95ee\u7684\u8bbf\u95ee\u65e5\u671f\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u53ea\u80fd\u8bb0\u5f55\u7528\u6237\u6700\u8fd1\u4e00\u6b21\u8bbf\u95ee\u65e5\u671f\uff0c\u4e0d\u5b8c\u6574\u3002</li> </ul>"},{"location":"DB/6.%20Entity-Relationship%20Model/#635-binary-vs-non-binary-relationships","title":"6.3.5 Binary Vs. Non-Binary Relationships","text":"<p>Example \"Converting Non-Binary Relationships \"</p> <p>  \u591a\u5143\u8054\u7cfb\u5230\u4e8c\u5143\u8054\u7cfb\u7684\u8f6c\u5316</p> <p>\u65b0\u5efa\u4e00\u4e2a\u5b9e\u4f53E\uff0c\u5efa\u7acb\u65b0\u5b9e\u4f53\u4e0e\u65e7\u5b9e\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb</p>"},{"location":"DB/6.%20Entity-Relationship%20Model/#64-extended-er-features","title":"6.4 Extended ER Features","text":"<p>\u6269\u5c55</p> <ul> <li> <p>Specialization\uff08\u7279\u5316\uff09 </p> <ul> <li>Top-down design process; we designate subgroupings within an entity set that are distinctive from other entities in the set.</li> </ul> <p>\u81ea\u4e0a\u800c\u4e0b\u7684\u8bbe\u8ba1\u6d41\u7a0b;\u6211\u4eec\u6307\u5b9a\u5b9e\u4f53\u96c6\u4e2d\u7684\u5b50\u5206\u7ec4\uff0c\u8fd9\u4e9b\u5b50\u5206\u7ec4\u4e0e\u96c6\u5408\u4e2d\u7684\u5176\u4ed6\u5b9e\u4f53\u4e0d\u540c\u3002</p> <ul> <li>Attribute inheritance \u2013 a lower-level entity set inherits all the attributes and relationship participation of the higher-level entity set to which it is linked.</li> </ul> <p>\u5c5e\u6027\u7ee7\u627f \u2013 \u8f83\u4f4e\u7ea7\u522b\u7684\u5b9e\u4f53\u96c6\u7ee7\u627f\u4e0e\u5176\u94fe\u63a5\u7684\u9ad8\u7ea7\u5b9e\u4f53\u96c6\u7684\u6240\u6709\u5c5e\u6027\u548c\u5173\u7cfb\u53c2\u4e0e</p> </li> <li> <p>Generalization\uff08\u6982\u5316\uff09 </p> </li> </ul> <p>A bottom-up design process \u2013 combine a number of entity sets that share the same features into a higher-level entity set.</p> <p>\u81ea\u4e0b\u800c\u4e0a\u7684\u8bbe\u8ba1\u8fc7\u7a0b \u2013 \u5c06\u5171\u4eab\u76f8\u540c\u7279\u5f81\u7684\u591a\u4e2a\u5b9e\u4f53\u96c6\u7ec4\u5408\u5230\u66f4\u9ad8\u7ea7\u522b\u7684\u5b9e\u4f53\u96c6\u4e2d\u3002</p> <p></p> <p>\u4e24\u79cd\u7bad\u5934\u6a21\u5f0f total / partial</p> <p>**disjoint \u4e0d\u76f8\u4ea4 / overlapping \u91cd\u53e0  **</p> <p></p> <p>\u4ece\u4e0a\u5230\u4e0b\uff0cspecialization\uff0c\u5c5e\u6027\u7684\u7ee7\u627f\uff0c\u7ee7\u627fhigher-level entity\u7684\u4e3b\u952e</p> <p>\u7f3a\u70b9\uff1a\u83b7\u53d6\u4fe1\u606f\u65f6\uff0c\u5458\u5de5\u9700\u8981\u8bbf\u95ee\u4e24\u4e2a\u5173\u7cfb\uff0c\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u4f4e\u7ea7\u67b6\uff0c\u5c31\u6bd4\u5982\u9700\u8981\u83b7\u53d6student\u7684name</p> <p></p> <p>\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u96c6\u5f62\u6210\u4e00\u4e2a\u67b6\u6784\uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u672c\u5730\u548c\u7ee7\u627f\u5c5e\u6027</p> <p>\u7f3a\u70b9\uff1a\u5bf9\u4e8e\u65e2\u662f\u5b66\u751f\u53c8\u662f\u5458\u5de5\u7684\u4eba\u6765\u8bf4\uff0c\u59d3\u540d\u3001\u8857\u9053\u548c\u57ce\u5e02\u53ef\u80fd\u4f1a\u88ab\u5197\u4f59\u5b58\u50a8\uff08overlapping\u60c5\u51b5\uff09</p> <p></p> <p>\u4e00\u4e2a\u8868\u5305\u542b\u6240\u6709\u7684\u5c5e\u6027</p> <p>\u7f3a\u70b9\uff1a\u8868\u592a\u957f\uff0cnull\u503c\u592a\u591a</p>"},{"location":"DB/7.%20Relational%20Database%20Design/","title":"7. Relational Database Design","text":"<p> \u7ea6 3755 \u4e2a\u5b57  6 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#71-features-of-good-relational-design","title":"7.1 Features of good Relational Design","text":"<p>What about combining instructor and department?</p> <p></p> <p>Pitfalls of the bad\u201d relations \u201c\u574f\u201d\u5173\u7cfb\u7684\u9677\u9631</p> <ul> <li> <p>Information repetition (\u4fe1\u606f\u91cd\u590d)</p> </li> <li> <p>Insertion anomalies (\u63d2\u5165\u5f02\u5e38) </p> <p><code>\u8be5\u8868\u7684primary key\u662fID\uff0c\u65e0\u6cd5\u63d2\u5165\u5355\u72ec\u7684\u4e00\u4e2adepartment\uff08\u6ca1\u6709\u8001\u5e08\uff09</code></p> </li> <li> <p>Update difficulty (\u66f4\u65b0\u56f0\u96be) </p> <p>\u5982\u679c\u4fee\u6539\u67d0\u4e2a\u7cfb\u7684\u4fe1\u606f\uff0c\u9700\u8981\u5168\u5c40\u4fee\u6539</p> </li> </ul> <p>\u6570\u636e\u4e4b\u95f4\u5b58\u5728\u7740\u9690\u542b\u7684\u51fd\u6570\u7ea6\u675f\u5173\u7cfb\uff0c\u77e5\u9053\u4e86 id \u5c31\u53ef\u4ee5\u51b3\u5b9a\u5176\u4ed6\u5143\u7d20\u3002 </p> <p>id \\(\\rightarrow\\) name, salary, dept_name; </p> <p>dept_name \\(\\rightarrow\\) building, budget  </p> <p>\u4ea7\u751f\u5197\u4f59\u7684\u539f\u56e0\u662f dept_name \u51b3\u5b9a\u4e86\u90e8\u5206\u5c5e\u6027\uff0c\u4f46\u5b83\u5374\u4e0d\u662f\u8fd9\u4e2a\u8868\u7684 primary key. </p> <p>\u4e0a\u9762\u7684\u5173\u7cfb\u4e0d\u662fBCNF\uff0c\u56e0\u4e3adept_name\u4e0d\u662fkey\uff0c\u53ea\u6709key\u80fd\u591f\u51b3\u5b9a\u5176\u4ed6\u7684\u5c5e\u6027</p> <p>\u597d\u7684\u5173\u7cfb\uff1a\u53ea\u6709 candidate key \u80fd\u51b3\u5b9a\u5176\u4ed6\u5c5e\u6027\u3002  </p> <p><code>\u65e0\u635f\uff08\u6ca1\u6709\u4fe1\u606f\u635f\u5931\uff09\u8fde\u63a5\uff08LossLess-join\uff09</code></p> <ul> <li>\u62c6\u8868\u540e\u8981\u6709\u516c\u5171\u7684\u5c5e\u6027\uff0c\u5426\u5219\u65e0\u6cd5\u62fc\u63a5\u56de\u53bb</li> <li>\u516c\u5171\u5c5e\u6027\u5fc5\u987b\u662f\u5206\u62c6\u51fa\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684primary key, \u3002</li> </ul> <p>Example \"lossy decomposition\" \u6709\u635f\u5206\u89e3\u4f8b\u5b50</p> <p><code>employee(ID, name, street, city, salary)</code></p> <p>\\(\\rightarrow\\) <code>employee1 (ID, name)</code> </p> <p><code>employee2 (name, street, city, salary)</code></p> <p>\u56e0\u4e3a\u6b64\u5904\u516c\u5171\u5c5e\u6027name\u4e0d\u662fprimary key</p> <p>\u89c2\u5bdf\u4e0a\u56fe\u53ef\u4ee5\u53d1\u73b0\uff0cname\u4e0d\u662fprimary key\uff0c\u5047\u8bbe\u5b58\u5728\u91cd\u540d\u7684\u73b0\u8c61\uff0c\u90a3\u4e48\u518d\u91cd\u65b0\u5408\u5e76\u4e4b\u540e\u65e0\u6cd5\u5f97\u5230\u539f\u6765\u7684\u8868</p> <p>Example \"Example of Lossless-Join Decomposition \" </p> <p>\u65e0\u635f\u8fde\u63a5\u4f8b\u5b50</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#711-lossless-join-decomposition","title":"7.1.1 Lossless-join Decomposition","text":"<p>Let \\(R\\) be a relation schema and let \\(R_1\\) and \\(R_2\\) form a decomposition of \\(R\\). That is \\(R = R_1  \\cup R_2\\). </p> <p>We say that the decomposition is a lossless decomposition if there is no loss of information by replacing  R with the two relation schemas \\(R = R_1  \\cup R_2\\).  Formally,   \\(r = \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\).  </p> <p>\u6211\u4eec\u8bf4\uff0c\u5982\u679c\u7528\u4e24\u4e2a\u5173\u7cfb\u6a21\u5f0f\u66ff\u6362 R \u6ca1\u6709\u4fe1\u606f\u4e22\u5931\uff0c\u5219\u5206\u89e3\u662f\u65e0\u635f\u5206\u89e3  \\(R = R_1  \\cup R_2\\) \u3002\u6b63\u5f0f\u5730\uff0c\\(r = \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\) .</p> <p><code>\u5982\u679cR1\u548cR2\u7684\u81ea\u7136\u8fde\u63a5\u6070\u597d\u662f\u5173\u7cfbR\uff0c\u90a3\u4e48\u5173\u7cfbR\u7684\u5206\u89e3\u662f\u65e0\u635f\u7684</code></p> <p>And,  conversely a decomposition is lossy if \\(r\\subset \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\) </p> <p>Note: more tuples implies more uncertainty (less information).</p> <p>\u5982\u679cR\u662fR1\u548cR2\u81ea\u7136\u8fde\u63a5\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u5173\u7cfbR\u7684\u5206\u89e3\u662f\u6709\u635f\u7684\u3002\u6ce8\u610f\uff1a\u66f4\u591a\u7684\u5143\u7ec4\u610f\u5473\u7740\u66f4\u591a\u7684\u4e0d\u786e\u5b9a\u6027\uff08\u66f4\u5c11\u7684\u4fe1\u606f\uff09\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5206\u89e3\u662f\u4e0d\u662f\u65e0\u635f\u7684\u5462\uff1f</p> <p><code>A decomposition of R into R1 and R2 is lossless join if at least one of the following dependencies holds: (\u5145\u5206\u6761\u4ef6)</code></p> <ul> <li> <p>\\(R_1\\cap R_2\\rightarrow R_1\\)</p> </li> <li> <p>\\(R_1\\cap R_2 \\rightarrow R_2\\) </p> </li> </ul> <p>R1\u548cR2\u7684\u516c\u5171\u5c5e\u6027\u80fd\u591f\u51b3\u5b9aR1\u6216\u8005R2\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u5176\u4e2d\u4e00\u4e2a\u7684primary key </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#712-devise-a-theory-for-the-following","title":"7.1.2 Devise a Theory for the Following","text":"<ul> <li> <p>Decide whether a particular relation R is in \u201cgood\u201d form.  </p> </li> <li> <p>In the case that a relation R is not in \u201cgood\u201d form, decompose it into a set of relations \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that </p> <ul> <li>each relation is in good form </li> <li>the decomposition is a lossless-join decomposition   </li> </ul> <p>\u5982\u679c\u5173\u7cfb R \u4e0d\u662f\u201c\u597d\u201d\u5f62\u5f0f\uff0c\u5219\u5c06\u5176\u5206\u89e3\u4e3a\u4e00\u7ec4\u5173\u7cfb \\(\\{R_1, R_2, \\ldots, R_n\\}\\) \uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5173\u7cfb\u90fd\u5904\u4e8e\u826f\u597d\u7684\u72b6\u6001\uff0c\u5206\u89e3\u662f\u65e0\u635f\u8fde\u63a5\u5206\u89e3\uff08lossless-join decomposition\uff09</p> </li> <li> <p>Our theory is based on:</p> <ul> <li>functional dependencies \u51fd\u6570\u4f9d\u8d56</li> <li>multivalued dependencies \u591a\u503c\u4f9d\u8d56</li> </ul> </li> <li> <p>Normal  Forms(NF): \\(1NF \\rightarrow 2NF \\rightarrow 3NF \\rightarrow BCNF \\rightarrow 4NF\\) </p> </li> </ul> <p>\u6709\u4e9b\u51fd\u6570\u4f9d\u8d56\uff0c\u4e0d\u80fd\u5728 BCNF \u4e2d\u5f97\u5230\u4f53\u73b0\uff0c\u9700\u8981\u628a\u51e0\u4e2a\u8868\u62fc\u5728\u4e00\u8d77\u624d\u80fd\u4f53\u73b0\uff0c\u53eb\u4f9d\u8d56\u4fdd\u6301\u3002\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4ece BCNF \u56de\u5230 3NF.  </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#72-functional-dependencies","title":"7.2 Functional Dependencies","text":"<p>Functional Dependencies  are constraints on the set of legal relations. (\u6765\u81ea\u4e8e\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a)  </p> <p>Require that the value for a certain set of attributes determines uniquely the value for another set of attributes.   e.g. dept_name \\(\\rightarrow\\) building  </p> <p><code>\u8981\u6c42\u67d0\u4e00\u7ec4\u5c5e\u6027\u7684\u503c\u552f\u4e00\u5730\u786e\u5b9a\u53e6\u4e00\u7ec4\u5c5e\u6027\u7684\u503c\u3002\u4f8b\u5982dept_name \u2192 building</code></p> <p>A functional dependency is a generalization of the notion of a key.</p> <p>\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u662f\u952e\u6982\u5ff5\u7684\u6982\u62ec</p> <p>Let \\(R\\) be a relation schema \\(\\alpha\\subseteq R\\) and \\(\\beta\\subseteq R\\) (\\(\\alpha, \\beta\\) \u662f\u5c5e\u6027\u7684\u96c6\u5408)</p> <p>The functional dependency \\(\\alpha\\rightarrow \\beta\\) holds on \\(R\\) if and only if for any legal relations \\(r(R)\\), whenever any two tuples \\(t_1\\) and \\(t_2\\) of \\(r\\) agree on the attributes \\(\\alpha\\), they also agree on the attributes \\(\\beta\\).  That is</p> <p>\u672c\u8d28\u4e0a\u662f\\(\\alpha\\)\u51b3\u5b9a\\(\\beta\\) $$ t_1[\\alpha] = t2 [\\alpha]   \\Rightarrow   t_1[\\beta ]  = t_2 [\\beta ] $$</p> <p>\u901a\u8fc7\u6570\u636e\u5e93\u5b9e\u4f8b\u53ef\u4ee5\u8bc1\u4f2a\u51fd\u6570\u4f9d\u8d56\uff0c\u4f46\u4e0d\u80fd\u8bc1\u5b9e\u3002\uff08\u4f9d\u8d56\u662f\u6765\u81ea\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a\uff0c\u5148\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u518d\u6709\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff09</p> <p>  \u4e0a\u8ff0\u4f8b\u5b50\u4e2dA\uff1a1\uff0cB\uff1a4\uff0cA\uff1a1\uff0cB\uff1a5\uff0c\u8bf4\u660e\\(A \\rightarrow B\\)\u4e0d\u6210\u7acb\uff0c\u4f46\u662f\u80fd\u8bf4\u660e\\(B \\rightarrow A\\) \u53ef\u80fd\u6210\u7acb</p> <p>\\(A\\rightarrow B\\) \u53ef\u4ee5\u8bc1\u4f2a\uff0c\u4f46\u4e5f\u4e0d\u80fd\u56e0\u6b64\u5c31\u8bf4 \\(B\\rightarrow A\\)</p> <p>\u5229\u7528\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u5b9a\u4e49superkey\u548ccandidate key</p> <ul> <li>K is a superkey for relation schema \\(R\\) if and only if \\(K\\rightarrow R\\)</li> <li>K is a candidate key for \\(R\\) if and only if <ul> <li>\\(K\\rightarrow R\\), and</li> <li>for no \\(\\alpha\\subset K\\), \\(\\alpha\\rightarrow R\\)</li> </ul> </li> </ul> <p>superkey \u548c candidate key\u7684\u533a\u522b\u5728\u4e8esuperkey\u5b58\u5728\u5197\u4f59</p> <p><code>\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff1a\u5168\u96c6\u53ef\u4ee5\u51b3\u5b9a\u5b50\u96c6\u3002</code></p> <p>A functional dependency is trivial if it is satisfied by all relations.  </p> <ul> <li> <p>ID\uff0cname \\(\\rightarrow\\) ID</p> </li> <li> <p>name \\(\\rightarrow\\) name  </p> </li> </ul> <p>In general, \\(\\alpha\\rightarrow \\beta\\) is trivial\uff08\u5e73\u51e1\u7684\uff09 if \\(\\beta\\subseteq \\alpha\\) </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#721-closure\u95ed\u5305","title":"7.2.1 Closure(\u95ed\u5305)","text":""},{"location":"DB/7.%20Relational%20Database%20Design/#7211-closure-of-a-set-of-functional-dependencies","title":"7.2.1.1 Closure of a Set of Functional Dependencies","text":"<p>Given a set \\(F\\) of functional dependencies, there are certain other functional dependencies that are logically implied by \\(F\\).  </p> <p>The set of all functional dependencies logically implied by \\(F\\) is the closure of \\(F\\). We denote the closure of \\(F\\) by \\(F^+\\).  </p> <p>\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u7684\u95ed\u5305F+\uff0c\u8868\u793a\u6240\u6709\u80fd\u591f\u4ece\u51fd\u6570\u4f9d\u8d56\u96c6\u5408F\u63a8\u5bfc\u51fa\u6765\u7684\uff08\u5305\u62ecF\u81ea\u8eab\uff09\u96c6\u5408\u3002F+\u4e2d\uff0c\u4e5f\u5305\u542b\u4e00\u4e9b\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56</p> <p>e.g. \\(F=\\{A\\rightarrow B,B\\rightarrow C\\}\\) then </p> <p>\\(F^+=\\{A\\rightarrow B, B\\rightarrow C, A\\rightarrow C, AB\\rightarrow B, AB\\rightarrow C,\\ldots\\}\\)</p> <p>We can find \\(F^+\\), the closure of \\(F\\), by repeatedly applying Armstrong\u2019s Axioms:</p> <ul> <li>if \\(\\beta\\subseteq \\alpha\\) then \\(\\alpha \\rightarrow \\beta\\) (reflexivity, \u81ea\u53cd\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) then \\(\\gamma \\alpha \\rightarrow \\gamma \\beta\\) (augmentation, \u589e\u8865\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) and \\(\\beta \\rightarrow \\gamma\\) then \\(\\alpha\\rightarrow \\gamma\\) (transitivity, \u4f20\u9012\u5f8b)</li> </ul> <p>These rules are </p> <ul> <li>Sound\uff08\u6b63\u786e\u6709\u6548\u7684\uff09 generate only functional dependencies that actually hold</li> <li>Complete\uff08\u5b8c\u5907\u7684\uff09 generate all functional dependencies that hold</li> </ul> <p> </p> <p>Additional rules: \u9644\u52a0\u89c4\u5219</p> <ul> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds,  then \\(\\alpha\\rightarrow \\beta\\gamma\\) holds (union, \u5408\u5e76)</li> <li>If \\(\\alpha\\rightarrow \\beta\\gamma\\) holds, then \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds (decomposition, \u5206\u89e3)</li> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\gamma \\beta\\rightarrow \\delta\\) holds, then \\(\\alpha \\gamma\\rightarrow \\delta\\) holds (pseudotransitivity\uff0c\u4f2a\u4f20\u9012)</li> </ul> <p> </p> <p>\u51fd\u6570\u4f9d\u8d56\uff0c\u53f3\u8fb9\u7684\u516c\u5171\u5c5e\u6027\u53ef\u4ee5\u53bb\u6389\uff0c\u4f7f\u5f97\u51fd\u6570\u53cc\u65b9\u6ca1\u6709\u4ea4\u96c6\u3002</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#7212-closure-of-attribute-sets","title":"7.2.1.2 Closure of Attribute Sets","text":"<p>Given a set of attributes \\(a\\), define the closure of a under \\(F\\) (denoted by \\(a+\\)) as the set of attributes that are functionally determined by \\(a\\) under \\(F\\) </p> <p><code>\u4e00\u4e2a\u5c5e\u6027\u96c6\u5408\u901a\u8fc7\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\uff0c\u80fd\u591f\u51b3\u5b9a\u7684\u6240\u6709\u5c5e\u6027\u7684\u96c6\u5408\uff0c\u79f0\u4e4b\u4e3a\u5c5e\u6027\u96c6\u5408\u7684\u95ed\u5305</code></p> <p></p> <p>A-&gt;B, B-&gt;C, B-&gt;D, \u53ef\u4ee5\u5f97\u5230 \\(A^+ = ABCD\\)</p> <p> </p> <pre><code>graph LR\nA--&gt;B\nA--&gt;CG\nB--&gt;H\nCG--&gt;H\nCG--&gt;I</code></pre> <p>\u4e00\u822c\u63a8\u8350\u4f7f\u7528\u753b\u56fe\u6cd5\uff1a\u786e\u5b9a\u80fd\u8fde\u5230\u54ea\u4e2a\u70b9\u5373\u53ef</p> <p>\\(A^+ = ABCH, G^+ = G\\),\u6240\u4ee5AG\u662f\u4e00\u4e2acandidate key\uff0c\u540c\u65f6\u4e5f\u662fsuperkey</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#7213-uses-of-attribute-closure","title":"7.2.1.3 Uses of Attribute Closure","text":"<ul> <li> <p>Testing for superkey:   To test if \\(\\alpha\\) is a superkey, we compute \\(\\alpha+\\), and check if \\(\\alpha+\\) contains all attributes of \\(R\\).</p> <p>\u6d4b\u8bd5\u8d85\u952e\uff1a\u4e3a\u4e86\u6d4b\u8bd5\u662f\u5426 \\(\\alpha\\) \u662f\u8d85\u952e\uff0c\u6211\u4eec\u8ba1\u7b97 \\(\\alpha+\\) \uff0c\u5e76\u68c0\u67e5\u662f\u5426 \\(\\alpha+\\) \u5305\u542b \u7684\u6240\u6709 R \u5c5e\u6027\u3002</p> </li> <li> <p>Testing functional dependencies</p> <ul> <li> <p>To check if a functional dependency \\(\\alpha\\rightarrow \\beta\\) holds (or, in other words, is in \\(F+\\)), just check if \\(\\beta\\subseteq\\alpha+\\). </p> <p>\u8981\u68c0\u67e5\u529f\u80fd\u4f9d\u8d56\u9879 \\(\\alpha\\rightarrow \\beta\\) \u662f\u5426\u6210\u7acb\uff08\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728 \\(F+\\) \u4e2d \uff09\uff0c\u53ea\u9700\u68c0\u67e5 \\(\\beta\\subseteq\\alpha+\\)</p> </li> <li> <p>That is, we compute \\(\\alpha+\\) by using attribute closure, and then check if it contains \\(\\beta\\). </p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528\u5c5e\u6027\u95ed\u5305 \\(\\alpha+\\) \u8fdb\u884c\u8ba1\u7b97\uff0c\u7136\u540e\u68c0\u67e5\u5b83\u662f\u5426\u5305\u542b \\(\\beta\\) </p> </li> <li> <p>Is a simple and cheap test, and very useful</p> </li> </ul> </li> <li> <p>Computing closure of F   For each \\(\\gamma\\subseteq R\\), we find the closure \\(\\gamma+\\), and for each \\(S \\subseteq \\gamma+\\), we output a functional dependency \\(\\gamma\\rightarrow  S\\).  </p> </li> </ul> <p> </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#73-canonical-cover\u6b63\u5219\u8986\u76d6","title":"7.3 Canonical Cover\uff08\u6b63\u5219\u8986\u76d6\uff09","text":"<p>a canonical cover of F is a \u201cminimal\u201d set of functional dependencies equivalent to F, having no redundant dependencies or redundant parts of dependencies.  </p> <p><code>\u6b63\u5219\u8986\u76d6\u4e5f\u5c31\u662f\u5316\u7b80\uff0c\u4e0d\u5b58\u5728\u5197\u4f59\u7684\u51fd\u6570\u4f9d\u8d56,\u5e76\u4e14\u4efb\u4f55\u4e00\u6761\u51fd\u6570\u4f9d\u8d56\u4e0d\u5b58\u5728\u591a\u4f59\u7684\u5c5e\u6027</code></p> <p>\u51cf\u5c11\u4e00\u6761\u51fd\u6570\u4f9d\u8d56</p> <p> </p> <p>-- Extraneous Attributes(\u65e0\u5173\u5c5e\u6027)</p> <p>Consider a set \\(F\\) of functional dependencies and the functional dependency \\(\\alpha\\rightarrow \\beta\\) in \\(F\\).  </p> <ul> <li>Attribute A is extraneous in \\(\\alpha\\) if \\(A\\in \\alpha\\) and \\(F\\) logically implies \\((F \u2013 \\{\\alpha\\rightarrow \\beta\\})\\cup {(\\alpha  \u2013 A) \\rightarrow \\beta}\\).</li> <li>Attribute A is extraneous in \\(\\beta\\) if \\(A\\in \\beta\\) and the set of functional dependencies   \\((F-\\{\\alpha \\rightarrow \\beta\\}) \\cup \\{\\alpha \\rightarrow (\\beta - A) \\}\\)logically implies F. -</li> </ul> <p>A canonical cover for \\(F\\) is a set of dependencies Fc such that </p> <ul> <li> <p>\\(F\\) logically implies all dependencies in \\(F_c\\)</p> <p>\\(F\\)\u903b\u8f91\u8574\u542b\\(F_c\\)\u4e2d\u6240\u6709\u7684\u51fd\u6570\u5c5e\u6027</p> </li> <li> <p>\\(F_c\\) logically implies all dependencies in \\(F\\)</p> <p>\\(F_c\\)\u903b\u8f91\u8574\u542bF\u4e2d\u6240\u6709\u7684\u51fd\u6570\u5c5e\u6027</p> </li> <li> <p>No functional dependency in \\(F_c\\) contains an extraneous attribute</p> <p>\\(F_c\\) \u7684\u4efb\u4f55\u51fd\u6570\u4f9d\u8d56\u9879\u90fd\u4e0d\u5305\u542b\u65e0\u5173\u5c5e\u6027</p> </li> <li> <p>Each left side of functional dependency in \\(F_c\\) is unique.</p> <p><code>\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb\u7684\u6bcf\u4e2a $F_c$ \u5de6\u4fa7\u90fd\u662f\u552f\u4e00\u7684\u3002</code></p> <p>\u5bf9\u4e8e\\(A \\rightarrow B, A \\rightarrow C \\Leftrightarrow A \\rightarrow BC\\)</p> </li> </ul> <p>Example \"Computing a Canonical Cover\"</p> <p> </p> <p>\u5229\u7528\u753b\u56fe\u6cd5\u89e3\u51b3\u5bfb\u627ecanonical cover</p> <p></p>"},{"location":"DB/7.%20Relational%20Database%20Design/#74-boyce-codd-normal-form","title":"7.4 Boyce-Codd Normal Form","text":"<p>A relation schema \\(R\\) is in BCNF with respect to a set \\(F\\) of functional  dependencies if for all functional dependencies in \\(F^+\\) of the form where \\(\\alpha \\subseteq R\\) and \\(\\beta \\subseteq R\\), at least one of the following holds  </p> <ul> <li>\\(\\alpha \\rightarrow \\beta\\) is trivial</li> <li>\\(\\alpha\\) is a superkey for \\(R\\).  </li> </ul> <p>\u4efb\u4f55\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u8fb9\u90fd\u662f\u4e00\u4e2a key.\u90a3\u4e48\u5b83\u5c31\u662fBCNF </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#741-decomposing-a-schema-into-bcnf","title":"7.4.1 Decomposing a Schema into BCNF","text":"<p>\u5bf9\u4e8e\u4e0d\u662f key \u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u628a\u5b83\u5206\u89e3\u51fa\u6765\u4f5c\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\u3002  </p> <p>Suppose we have a schema \\(R\\) and a non-trivial dependency \\(\\alpha\\rightarrow \\beta\\) causes a violation of BCNF. We decompose \\(R\\) into:</p> <p>\\((\\alpha \\cup \\beta)\\) and \\((R-(\\beta-\\alpha))\\) </p> <p>\\(\\alpha\\) \u4f5c\u4e3a\u4e24\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684\u516c\u5171\u5c5e\u6027\uff0c\u4e5f\u662f\u4e00\u4e2a\u5173\u7cfb\u7684 key, \u8fd9\u6837\u624d\u662f\u65e0\u635f\u5206\u89e3\u3002</p> <p></p> <p></p> <p> <p></p> <p>\\(F = \\{A-&gt;B, B-&gt;CD\\}\\) \u4e0a\u8ff0\u5e76\u4e0d\u662fBCNF\uff0c\u56e0\u4e3a\u5b58\u5728\u4e00\u6761\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\\(B \\rightarrow CD\\),\u5176\u4e2dB\u4e0d\u662fcandidate key</p> <p><code>\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u6210\u4e24\u4e2a\u5173\u7cfbR1\uff0cR2\uff0c\u5206\u522b\u5f97\u5230\u4e24\u4e2a\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u6bcf\u4e00\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u8fb9\u90fd\u662f\u5bf9\u5e94\u5173\u7cfb\u7684candidate key</code></p> <p>\u540c\u65f6\u662f\u65e0\u635f\u8fde\u63a5\u5206\u89e3\uff0c\u56e0\u4e3a\u5171\u6709\u5c5e\u6027B\u51b3\u5b9aCD</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#742-dependency-preservation","title":"7.4.2 Dependency Preservation","text":"<p>\u4f9d\u8d56\u4fdd\u6301\uff1a\u539f\u6765\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u51fd\u6570\u4f9d\u8d56\u4e2d\u5f97\u5230\u5355\u72ec\u68c0\u9a8c\u3002</p> <p>Constraints, including functional dependencies, are costly to check in practice unless they pertain to only one relation.  </p> <p>If it is sufficient to test only those dependencies on each individual relation of a decomposition in order to ensure that all functional dependencies hold, then that decomposition is dependency preserving (\u4fdd\u6301\u4f9d\u8d56).</p> <ul> <li>\uff08\u5982\u679c\u901a\u8fc7\u68c0\u9a8c\u5355\u4e00\u5173\u7cfb\u4e0a\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u80fd\u786e\u4fdd\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u5206\u89e3\u662f\u4f9d\u8d56\u4fdd\u6301\u7684\uff09</li> <li>\uff08\u6216\u8005\uff0c<code>\u539f\u6765\u5173\u7cfbR\u4e0a\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u5355\u4e00\u5173\u7cfb\u4e0a\u5f97\u5230\u68c0\u9a8c\u6216\u8005\u63a8\u5bfc\u5f97\u5230</code>\uff09</li> </ul> <p><code>\u591a\u4e2a\u5173\u7cfb\u8054\u5408\u63a8\u5bfc\u5f97\u5230\u51fd\u6570\u4f9d\u8d56\uff0c\u4e5f\u7b97\u662f\u4f9d\u8d56\u4fdd\u6301</code></p> <p>Let \\(F_i\\) be the set of all functional dependencies in \\(F^+\\) that include only attributes in \\(R_i\\). (\\(F_i\\):  the restriction of \\(F\\) on \\(R_i\\))</p> <ul> <li>A decomposition is dependency preserving, if \\((F_1\\cup F_2 \\cup \\ldots \\cup F_n )^+ = F^+\\)</li> <li>If it is not, then checking updates for violation of functional dependencies may require computing joins, which is expensive.</li> </ul> <p> </p> <p>\u539f\u6765\u5173\u7cfbR\u4e0a\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u4e0d\u80fd\u5728\u5206\u89e3\u540e\u7684\u5355\u4e00\u5173\u7cfb\u4e0a\u5f97\u5230\u68c0\u9a8c\u6216\u8005\u63a8\u5bfc\u5f97\u5230\u3002</p> <p>\u540c\u65f6\u5c06\u4e24\u4e2a\u5173\u7cfb\u8054\u5408\u4f9d\u7136\u65e0\u6cd5\u63a8\u51fa B-&gt;C,\u6240\u4ee5\u4e0d\u6ee1\u8db3\u4f9d\u8d56\u4fdd\u6301\u6027</p> <ol> <li>\u65b9\u6cd5\u4e00\uff1a\u5148\u5206\u89e3E-&gt;D</li> </ol> <p></p> <p> </p> <p>B-&gt;D \u65e0\u6cd5\u4ece\u4e0a\u9762\u7684\u51fd\u6570\u4f9d\u8d56\u4e2d\u63a8\u5bfc\u51fa\u6765</p> <p>\u65b9\u6cd5\u4e8c\uff1a\u5148\u5206\u89e3B-&gt;CD</p> <p></p> <p>\u4e0a\u8ff0\u7684\u5206\u89e3\u65b9\u6cd5\uff1a\u80fd\u591f\u4fdd\u8bc1BCNF\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1dependency perservation</p> <p></p> <p>\u6b64\u5904(J,K,L),\u5148\u5229\u7528\\(L\\rightarrow K\\),\u5212\u5206\u51fa\u5173\u7cfbR(L,K),\u6b64\u65f6\u539f\u5148\u7684\u53ea\u5269(J,L),\u663e\u7136\u4ece\uff08J\uff0cL\uff09\u65e0\u6cd5\u63a8\u5bfc\u51fa\\(JK \\rightarrow L\\),\u6240\u4ee5\u4f9d\u8d56\u4e0d\u4fdd\u6301</p> <p>Because it is not always possible to achieve both BCNF and dependency preservation, we consider a weaker normal form, known as third normal form.</p> <p>\u7531\u4e8e\u5f88\u96be\u540c\u65f6\u8fbe\u5230BCNF\u5e76\u4e14\u4f9d\u8d56\u4fdd\u6301\uff0c\u6240\u4ee5\u6211\u5f15\u5165\u4e00\u4e2a\u5f31\u4e00\u70b9\u7684\u8303\u5f0f\uff0cThird normal form</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#743-third-normal-form","title":"7.4.3 Third Normal Form","text":"<p><code>\u4efb\u4f55\u4e00\u4e2a\u975e\u5e73\u51e1\u51fd\u6570\u4f9d\u8d56\uff0c\u5982\u679c\u5de6\u8fb9\u4e0d\u662f\u4e00\u4e2a super key, \u90a3\u4e48\u53f3\u8fb9\u5fc5\u987b\u5305\u542b\u5728\u4e00\u4e2a candidate key \u91cc\u9762</code>\u3002</p> <p>A relation schema \\(R\\) is in third normal form (3NF) if for all: $\\alpha\\rightarrow \\beta $ in \\(F^+\\) at least one of the following holds:</p> <ul> <li> <p>\\(\\alpha\\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\in \\alpha\\))</p> </li> <li> <p>\\(\\alpha\\) is a superkey for R</p> </li> <li> <p>Each attribute A in \\(\\beta-\\alpha\\) is contained in a candidate key for \\(R\\).  </p> </li> </ul> <p>candidate key\u6709\u5f88\u591a\u4e2a\uff0c\u5305\u542b\u5728\u67d0\u4e00\u4e2acandidate key\u5373\u53ef\u3002  </p> <p></p> <p>L-&gt; K, \u7531\u4e8eL\u4e0d\u662fkey\uff0c\u6240\u4ee5\u4e0d\u662fBCNF</p> <p>\u4f46\u662fK \u662f JK\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5L-&gt;K\u662f Third Normal Form</p> <pre><code> &lt;center&gt;\n      &lt;div align=center&gt; &lt;img src=\"https://zn-typora-image.oss-cn-hangzhou.aliyuncs.com/typora_image/202404081324133.png\" width = 80%/&gt; &lt;/div&gt;\n &lt;/center&gt;\n</code></pre> <p>\u4e09\u8303\u5f0f\u7684\u5206\u89e3</p> <p></p> <p>BCNF \u548c 3NF \u7684\u533a\u522b</p> <ol> <li>\u5c06relation \u5206\u89e3\u4e3a 3NF\uff0c\u80fd\u591f\u4fdd\u6301\u4f9d\u8d56\uff0c\u5e76\u4e14\u662f\u65e0\u635f\u8fde\u63a5\u5206\u89e3</li> <li>\u5c06relation \u5206\u89e3\u4e3aBCNF\uff0c\u6709\u65f6\u65e0\u6cd5\u540c\u65f6\u4fdd\u8bc1\u65e0\u635f\u8fde\u63a5\u5206\u89e3\u548c\u4f9d\u8d56\u4fdd\u6301</li> </ol>"},{"location":"DB/7.%20Relational%20Database%20Design/#744-goals-of-normalization","title":"7.4.4 Goals of Normalization","text":"<p>In the case that a relation scheme R is not in \u201cgood\u201d form, decompose it into a set of relation scheme  \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that </p> <ul> <li>each relation scheme is in good form (i.e., BCNF or 3NF)</li> <li>the decomposition is a lossless-join decomposition</li> <li>Preferably, the decomposition should be dependency preserving</li> </ul> <p><code>\u8981\u4e48BCNF\uff0c\u8981\u4e483NF\uff0c\u65e0\u635f\u8fde\u63a5\u5206\u89e3\uff0c\u4f9d\u8d56\u4fdd\u6301</code></p> <p>Example \"E-R Modeling and Normal Forms\"     </p> <ol> <li> <p>\u5148\u6307\u51fa\u975e\u5e73\u51e1\u7684\u51fd\u6570\u5173\u7cfbin S</p> <p>many to many\uff0c\u5c06\u4e3b\u952e\u5408\u5e76\u5f97\u5230\u65b0\u7684\u4e3b\u952e\uff0c\u5171\u540c\u51b3\u5b9aG</p> </li> <li> <p>S\u4e2d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u7c7b\u6bd4\u4e4b\u524d\u7684department\u548cinstructor</p> <p>\u5b58\u5728</p> <ul> <li> <p>Information repetition (\u4fe1\u606f\u91cd\u590d)</p> </li> <li> <p>Insertion anomalies (\u63d2\u5165\u5f02\u5e38) </p> <p><code>\u8be5\u8868\u7684primary key\u662fID\uff0c\u65e0\u6cd5\u63d2\u5165\u5355\u72ec\u7684\u4e00\u4e2adepartment</code></p> </li> <li> <p>Update difficulty (\u66f4\u65b0\u56f0\u96be) </p> </li> </ul> </li> <li> <p>R2\uff0cR3\u7684\u516c\u5171\u5c5e\u6027D\u51b3\u5b9aR2\uff0cR1\u548c(\\(R2 \\bowtie R3\\))\u7684\u516c\u5171\u5c5e\u6027A\u51b3\u5b9aR1</p> </li> </ol> <p>\u8fd9\u91cc\u7684\u65e0\u635f\u5206\u89e3\uff0c\u5148\u6307\u5b9a\u4e00\u4e2a\u8def\u5f84\uff0c\u8003\u8651\u6bcf\u4e24\u4e2a\u5173\u7cfb\u76f4\u63a5\u662f\u5426\u65e0\u635f\uff08\u516c\u5171\u5c5e\u6027\u662f\u5426\u4e3a\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 key\uff09\u3002</p>"},{"location":"DB/7.%20Relational%20Database%20Design/#75-multivalued-dependencies","title":"7.5 Multivalued Dependencies","text":"<p>There are database schemas in BCNF that do not seem to be sufficiently normalized.  </p> <p></p> <p></p> <p>\u7b2c\u4e00\u5f20table\u5305\u542b\u7740\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u6240\u4ee5\u4e5f\u662fBCNF\u3002\u4f46\u662f\u5b58\u5728\u7740\u4fe1\u606f\u5197\u4f59\uff0c\u63d2\u5165\u5f02\u5e38\uff0c\u66f4\u65b0\u56f0\u96be\u7684\u95ee\u9898</p> <p>\u7b2c\u4e8c\u5f20table\u867d\u7136\u662f\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u662fBCNF\uff0c\u4f46\u662f\u95ee\u9898\u6d88\u5931</p> <p>\u5b58\u5728\u4e24\u79cd\u4e0d\u76f8\u5173\u7684\u591a\u503c\u4f9d\u8d56\u3002\u8001\u5e08 id \u53ef\u4ee5\u591a\u503c\u51b3\u5b9a child_name, \u53c8\u53ef\u4ee5\u591a\u503c\u51b3\u5b9a phone, \u4f46\u8fd9\u4e24\u4e2a\u5c5e\u6027\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u653e\u5728\u4e00\u4e2a\u8868\u91cc\u5c31\u4f1a\u7ec4\u5408\u3002  </p> <p>\u7b2c\u4e8c\u5f20\u56fe\u7684\u4e3a Fourth Normal Form (4NF).</p> <p><code>\u56db\u8303\u5f0f\uff1a\u4e0d\u5b58\u5728\u975e\u5e73\u51e1\u7684\u591a\u503c\u4f9d\u8d56\u3002</code></p> <p>Let R be a relation schema and let \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\). The multivalued dependency \\(\\alpha\\rightarrow\\rightarrow\\beta\\) holds on \\(R\\) if in any legal relation \\(r(R)\\), for all pairs for tuples \\(t_1\\) and \\(t_2\\) in \\(r\\) such that \\(t_1[\\alpha] = t_2 [\\alpha]\\), there exist tuples \\(t_3\\) and \\(t_4\\) in \\(r\\) such that: </p> \\[ t_3[\\alpha] = t_4[\\alpha] = t_1[\\alpha]=t_2[\\alpha]\\\\ t_3[\\beta]=t_1[\\beta]\\\\ t_3[R-\\beta]=t_2[R-\\beta]\\\\ t_4[\\beta]=t_2[\\beta]\\\\ t_4[R-\\beta]=t_1[R-\\beta] \\] <p></p> <p></p> <p>A relation schema \\(R\\) is in 4NF with respect to a set \\(D\\) of functional and multivalued dependencies if for all multivalued dependencies in \\(D^+\\) of the form \\(\\alpha\\rightarrow \\rightarrow \\beta\\), where \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\), at least one of the following hold:</p> <ul> <li>\\(\\alpha\\rightarrow \\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\subset \\alpha\\) or \\(\\alpha \\cup \\beta= R\\))   \u5373\u9664\u4e86 \\(\\alpha,\\beta\\) \u4e3a\u6ca1\u6709\u5176\u4ed6\u5c5e\u6027\u3002</li> <li>\\(\\alpha\\) is a superkey for schema \\(R\\)</li> </ul> <p>\u4efb\u4f55\u4e00\u4e2a\u591a\u503c\u4f9d\u8d56\uff0c\u8981\u4e48\u5de6\u8fb9\u5c31\u662f\u4e2a key, \u8981\u4e48\u8fd9\u4e2a\u4f9d\u8d56\u662f\u5e73\u51e1\u7684\u3002</p> <p></p> E-R Modeling and Normal Forms <p> <p></p> <p>\u6700\u540e\u7684\u5206\u89e3\u6ee1\u8db3\u4e4b\u524dER\u56fe\u7684\u5206\u89e3\uff0c\u591a\u503c\u9700\u8981\u5355\u72ec\u521b\u5efa\u4e00\u4e2a\u5173\u7cfb</p> <p>\u4e0d\u662f BCNF, \u56e0\u6b64\u4e5f\u4e0d\u662f 4NF. </p>"},{"location":"DB/7.%20Relational%20Database%20Design/#76-overall-database-design-process","title":"7.6 Overall Database Design Process","text":"<p>Denormalization for Performance</p> <p>Some aspects of database design are not caught by normalization.  </p> <p>\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5f15\u5165\u5197\u4f59\uff0c\u6765\u4fdd\u6301\u6027\u80fd\u3002</p> <p></p> <p>\u5728course\u548cprereq\u4e2d\u90fd\u5305\u542bcourse_id, course_name,\u67e5\u8be2\u7684\u65f6\u5019\u80fd\u591f\u65b9\u4fbf\u5f88\u591a\uff08\u867d\u7136\u6709\u4fe1\u606f\u5197\u4f59\uff09</p> <p> </p>"},{"location":"DB/8.%20Physical%20Storage%20Systems/","title":"8. Physical Storage Systems","text":"<p> \u7ea6 2384 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <ul> <li>Classification of Physical Storage Media</li> <li>Storage Hierarchy </li> <li>Magnetic Disks<ul> <li>Disk Interface Standards</li> <li>Performance Measures of Disks</li> <li>Optimization of Disk-Block Access</li> </ul> </li> <li>Flash Storage &amp; SSD</li> <li>Storage Class Memory(NVM)</li> </ul>"},{"location":"DB/8.%20Physical%20Storage%20Systems/#81-storage-hierarchy","title":"8.1 Storage Hierarchy","text":"<ul> <li> <p>volatile storage(\u6613\u5931\u5b58\u50a8)  </p> <p>loses contents when power is switched off.  (<code>\u65ad\u7535\u65f6\u4e22\u5931\u5185\u5bb9</code>)</p> <p>\u5982\uff1a\u5185\u5b58\u3001CPU\u4e2d\u7684\u9ad8\u901f\u7f13\u5b58</p> </li> <li> <p>non-volatile storage\uff08\u975e\u6613\u5931\u5b58\u50a8\uff09  </p> <p>Contents persist even when power is switched off(<code>\u5373\u4f7f\u7535\u6e90\u5173\u95ed\uff0c\u5185\u5bb9\u4ecd\u7136\u5b58\u5728</code>).  </p> <p>\u5982\uff1a\u78c1\u76d8\u3001\u786c\u76d8\u3001\u95ea\u5b58\u3001\u56fa\u6001\u786c\u76d8\u3001\u5149\u76d8</p> </li> </ul> <p>\u4e3b\u8981\u4ece speed, cost, reliability \u8861\u91cf</p> <p></p> <p>cache -&gt; main memory -&gt; flash memory(\u95ea\u5b58) -&gt; magnetic disk\uff08\u78c1\u76d8\uff09 -&gt; optical disk\uff08\u5149\u76d8\uff09 -&gt; magnetic tapes\uff08\u78c1\u5e26\uff09</p> <p>\u4ece\u9ad8\u5c42\u5f80\u4f4e\u5c42\u8d70\uff0c\u5b58\u50a8\u8bbe\u5907\u53d8\u5f97\u66f4\u6162\uff0c\u66f4\u4fbf\u5b9c\u548c\u66f4\u5927\u3002</p> <ul> <li> <p>primary storage: Fastest media but volatile (cache, main memory).</p> <p>\u4e3b\u5b58\u50a8\uff1a\u901f\u5ea6\u6700\u5feb\u4f46\u6613\u5931\u6027\u7684\u4ecb\u8d28\uff08\u7f13\u5b58\u3001\u4e3b\u5185\u5b58\uff09</p> </li> <li> <p>secondary storage: next level in hierarchy, non-volatile, moderately fast access time </p> <p>\u4e8c\u7ea7\u5b58\u50a8\uff1a\u5c42\u6b21\u7ed3\u6784\u7684\u4e0b\u4e00\u7ea7\uff0c\u975e\u6613\u5931\u6027\uff0c\u8bbf\u95ee\u65f6\u95f4\u9002\u4e2d \uff08\u95ea\u5b58\uff0c\u78c1\u76d8\uff09</p> <p>also called on-line storage \u8fde\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\uff0c\u968f\u65f6\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684</p> </li> <li> <p>tertiary storage: lowest level in hierarchy, non-volatile, slow access time  </p> <p>\u4e09\u7ea7\u5b58\u50a8\uff1a\u5c42\u6b21\u7ed3\u6784\u6700\u4f4e\uff0c\u975e\u6613\u5931\u6027\uff0c\u8bbf\u95ee\u65f6\u95f4\u6162\uff08\u78c1\u5e26\u3001\u5149\u76d8\uff09</p> <p>also called off-line storage \u4e09\u7ea7\u5b58\u50a8\u4e3b\u8981\u662f\u7528\u4e8e\u5907\u4efd\uff0c\u8981\u8bbf\u95ee\u6570\u636e\u8f83\u4e3a\u4e0d\u4fbf\u3002</p> </li> <li> <p>NVM (non-volatile memory) \u8bbf\u95ee\u548c\u5185\u5b58(memory)\u4e00\u6837\uff0c\u4ee5\u5b57\u8282\u5bfb\u5740\uff0c\u800c\u4e14\u6389\u7535\u80fd\u4fdd\u6301\u6570\u636e\u3002 </p> </li> </ul>"},{"location":"DB/8.%20Physical%20Storage%20Systems/#82-magnetic-disks","title":"8.2 Magnetic Disks","text":"<p>\u4e00\u4e2a\u78c1\u76d8\u6709\u4e0a\u5341\u4e07\u4e2a track(\u78c1\u9053),</p> <p>\u4e00\u4e2a\u78c1\u9053\u53c8\u6709\u4e0a\u5343\u4e2a sector(\u6247\u533a\uff0c\u662f\u8ba1\u7b97\u673a\u548c\u78c1\u76d8\u4ea4\u6362\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d). </p> <p>\u67f1\u9762\uff1a\u540c\u4e00\u4e2a\u78c1\u9053\u4e0a\uff0c\u591a\u4e2a\u78c1\u76d8\u5171\u540c\u7ec4\u6210\u4e00\u4e2a\u67f1\u9762</p> <p><code>arm assembly \u7528\u6765\u5bfb\u9053\uff0c\u8bfb\u5199\u5934\u5171\u8fdb\u9000\uff0c\u5bfb\u627e\u6570\u636e\u5728\u54ea\u4e2a\u78c1\u9053\u4e0a\u3002\u7b49\u5bf9\u5e94\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\uff0c\u624d\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u3002</code></p> <p><code>\u540c\u6837\u78c1\u9053\u7ec4\u6210\u7684\u67f1\u9762\u3002\u5bf9\u4e8e\u5927\u6587\u4ef6\uff0c\u6700\u597d\u5b58\u5728\u540c\u4e00\u4e2a\u67f1\u9762\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e76\u884c\u8bfb\u5199\u3002</code></p> <p>\u4f8b\u9898\uff1a\u5047\u5982\u4e00\u5171\u6709\u4e94\u7247\u78c1\u76d8\uff0c\u67095G\u7684\u6570\u636e\u9700\u8981\u5b58\u50a8\uff0c\u5982\u4f55\u5b58\u50a8\u6700\u4f18\uff1f</p> <p>\u663e\u7136\u5bf9\u4e8e\u5927\u6570\u636e\uff0c\u5e94\u5f53\u5c06\u6570\u636e\u5b58\u5728\u540c\u4e00\u4e2a\u67f1\u9762\u4e0a\uff0carm assembly\u5728\u5b9a\u4f4d\u65f6\uff0c\u4f1a\u5b9a\u4f4d\u5230\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u6b64\u65f6\u4e00\u6b21\u5b9a\u4f4d\u5c31\u80fd\u627e\u5230\u6240\u6709\u9700\u8981\u7684\u6570\u636e</p> <ul> <li> <p>Read-write head</p> </li> <li> <p>Surface of platter divided into circular tracks\uff08\u78c1\u9053\uff09</p> <p>\u76d8\u7247\u8868\u9762\u5206\u4e3a\u5706\u5f62\u8f68\u9053\uff08\u78c1\u9053\uff09</p> </li> <li> <p>Each track is divided into sectors\uff08\u6247\u533a\uff09</p> <p>\u6bcf\u4e2a\u8f68\u9053\u90fd\u5206\u4e3a\u6247\u533a\uff08\u6247\u533a\uff09</p> </li> <li> <p>To read/write a sector</p> <ul> <li> <p>disk arm swings to position head on right track</p> <p>\u5706\u76d8\u81c2\u6446\u52a8\u4ee5\u5c06\u5934\u90e8\u5b9a\u4f4d\u5728\u6b63\u786e\u7684\u8f68\u9053\u4e0a</p> </li> <li> <p>platter spins continually; data is read/written as sector passes under head</p> <p>\u76d8\u7247\u4e0d\u65ad\u65cb\u8f6c;\u5f53\u6247\u533a\u5728 head \u4e0b\u4f20\u9012\u65f6\uff0c\u6570\u636e\u88ab\u8bfb\u53d6/\u5199\u5165</p> </li> </ul> </li> <li> <p>Cylinder\uff08\u67f1\u9762\uff09 i consists of ith track of all the platters </p> </li> <li> <p>Disk controller(\u78c1\u76d8\u63a7\u5236\u5668)\u2013 interfaces between the computer system and the disk drive hardware.</p> <p>Disk controller\uff08\u78c1\u76d8\u63a7\u5236\u5668\uff09\u2013 \u8ba1\u7b97\u673a\u7cfb\u7edf\u548c\u78c1\u76d8\u9a71\u52a8\u5668\u786c\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3</p> <p>\u5199\u5165\u7684\u65f6\u5019\u9700\u8981\u6821\u9a8c\uff0c\u6545\u5199\u5165\u7684\u901f\u5ea6\u8f83\u6162</p> </li> </ul>"},{"location":"DB/8.%20Physical%20Storage%20Systems/#821-performance-measures-of-disks","title":"8.2.1 Performance Measures of Disks","text":"<ul> <li> <p>Access time(\u8bbf\u95ee\u65f6\u95f4) \u2013 the time it takes from when a read or write request is issued to when data transfer begins.  \uff08<code>\u4ece\u53d1\u51fa\u8bfb\u53d6\u6216\u5199\u5165\u8bf7\u6c42\u5230\u6570\u636e\u4f20\u8f93\u5f00\u59cb\u6240\u9700\u7684\u65f6\u95f4</code>\uff09 Consists of: </p> <ul> <li>Seek time\uff08\u5bfb\u9053\u65f6\u95f4\uff09\u2013 time it takes to reposition the arm over the correct track. \uff08<code>\u5c06arm\u91cd\u65b0\u5b9a\u4f4d\u5728\u6b63\u786e\u8f68\u9053\u4e0a\u6240\u9700\u7684\u65f6\u95f4</code>\uff09<ul> <li>Average seek time is 1/2 the worst case seek time.  </li> </ul> </li> <li>Rotational latency\uff08\u65cb\u8f6c\u5ef6\u8fdf\uff09 \u2013 time it takes for the sector to be accessed to appear under the head. \uff08<code>\u8bbf\u95ee\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\u4e0b\u65b9\u6240\u9700\u7684\u65f6\u95f4</code>\uff09<ul> <li>Average latency is 1/2 of the worst case latency.  </li> </ul> </li> </ul> </li> <li> <p>Data-transfer rate\uff08\u6570\u636e\u4f20\u8f93\u7387\uff09 \u2013 the rate at which data can be retrieved from or stored to the disk.</p> <p>\u5b9a\u4f4d\u5230\u6b63\u786e\u7684\u78c1\u9053\u4e0e\u6247\u533a\u540e\uff0c\u624d\u5f00\u59cb\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c\u5bf9\u5e94\u6709\u6570\u636e\u4f20\u8f93\u7387\u3002</p> </li> </ul> <p><code>\u5185\u5b58\u4f20\u8f93\u662f\u4ee5\u5757\u4e3a\u5355\u4f4d\u7684\u3002\u5373\u4f7f\u662f\u60f3\u8981\u8bbf\u95ee\u4e00\u4e2a byte, \u4e5f\u9700\u8981\u628a\u8fd9\u4e2a byte \u6240\u5728\u7684 4k \u5185\u5b58\u8bfb\u8fdb\u6765\u3002</code></p> <ul> <li> <p>Disk block is a logical unit for storage allocation and retrieval  \uff084K\u6216\u800516K\uff09</p> <ul> <li>Smaller blocks: more transfers from disk</li> <li>Larger blocks:  more space wasted due to partially filled blocks</li> </ul> <p>\u78c1\u76d8\u4ee5\u6570\u636e\u5757\u4e3a\u5355\u4f4d\u8fdb\u884c\u5b58\u50a8\u548c\u4f20\u8f93</p> </li> <li> <p>Sequential access pattern(\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f) </p> </li> </ul> <p>Successive requests are for successive disk blocks(\u8fde\u7eed\u7684\u78c1\u76d8\u5757)</p> <p>Disk seek required only for first block \u4ec5\u7b2c\u4e00\u4e2a\u5757\u9700\u8981\u78c1\u76d8\u67e5\u627e</p> <p>\u8fde\u7eed\u7684\u8bfb\u5199\u8bf7\u6c42\u53ea\u9700\u8981\u7b2c\u4e00\u6b21\u8bbf\u95ee\u78c1\u76d8  </p> <ul> <li> <p>Random access pattern\uff08\u968f\u673a\u8bbf\u95ee\u6a21\u5f0f\uff09 </p> <p>\u901f\u5ea6\u6162\uff0c\u5e0c\u671b\u5c3d\u91cf\u591a\u4e00\u4e9b\u987a\u5e8f\u8bbf\u95ee\u3002  </p> <p><code>\u6539\u8fdb\u65b9\u6cd5\uff1a\u53ef\u4ee5\u7528\u4e00\u4e2a\u65e5\u5fd7\u628a\u8981\u4fee\u6539\u7684\u6570\u636e\u8bb0\u5f55\u4e0b\u6765\uff0c\u540e\u9762\u518d\u8fdb\u884c\u4fee\u6539\uff0c\u5c3d\u91cf\u7528\u987a\u5e8f\u8bbf\u95ee\u66ff\u6362\u968f\u673a\u8bbf\u95ee\u3002</code></p> <p>\u8fde\u7eed\u8bf7\u6c42\u9002\u7528\u4e8e\u78c1\u76d8\u4e0a\u4efb\u4f55\u4f4d\u7f6e\u7684\u5757</p> <p>Each access requires a seek \u6bcf\u6b21\u8bbf\u95ee\u90fd\u9700\u8981\u4e00\u4e2aseek Transfer rates are low since a lot of time is wasted in seeks \u4f20\u8f93\u7387\u5f88\u4f4e\uff0c\u56e0\u4e3a\u5927\u91cf\u65f6\u95f4\u6d6a\u8d39\u5728\u5bfb\u627e\u4e0a</p> </li> <li> <p>I/O operations per second (IOPS \uff0c\u6bcf\u79d2I/O\u64cd\u4f5c\u6570) </p> <p>Number of <code>random block reads</code> that a disk can support per second.  </p> <p>\u53ef\u4ee5\u652f\u6301\u968f\u673a\u8bfb\u5199\u7684\u6b21\u6570\uff0c\u5224\u65ad\u8bfb\u5199\u6027\u80fd\u4e3b\u8981\u7684\u6307\u6807</p> </li> <li> <p>Mean time to failure (MTTF\uff0c\u5e73\u5747\u6545\u969c\u65f6\u95f4) </p> <p>the average time the disk is expected to run continuously without any failure.</p> <p>\u78c1\u76d8\u9884\u8ba1\u8fde\u7eed\u8fd0\u884c\u4e14\u4e0d\u53d1\u751f\u6545\u969c\u7684\u5e73\u5747\u65f6\u95f4\u3002</p> </li> </ul>"},{"location":"DB/8.%20Physical%20Storage%20Systems/#822-optimization-of-disk-block-access","title":"8.2.2 Optimization of Disk-Block Access","text":"<ul> <li> <p>Buffering: in-memory buffer to cache disk blocks  \uff08<code>\u5185\u5b58\u4e2d\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u7f13\u5b58\u78c1\u76d8\u5757</code>\uff09</p> <p>\u5047\u8bbe\u6211\u4eec\u53ea\u8bfb\u78c1\u76d8\u4e2d\u7684\u4e00\u4e2aByte\uff0c\u4e5f\u8981\u628a\u78c1\u76d8\u4e2d\u7684\u4e00\u4e2a\u5757\uff08\u5f88\u591a\u8fde\u7eed\u7684\u6247\u533a\uff09\u8bfb\u5230\u5185\u5b58\u4e2d\u53bb\u3002\u5c06\u4e00\u4e2a\u5757\u8bfb\u5165\u5230\u5185\u5b58\u4e2d\uff08\u8017\u65f6\u8f83\u957f\uff09\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5757\u4e22\u5f03\uff0c\u662f\u5f88\u53ef\u60dc\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6570\u636e\u5757\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\u3002\u5e0c\u671b\u540e\u9762\u7684\u6570\u636e\u8bbf\u95ee\u4e5f\u5728\u8fd9\u4e2a\u5757\u4e2d\u8bfb\u53d6\uff0c\u4ece\u800c\u52a0\u5feb\u8bfb\u53d6\u6570\u636e\u7684\u901f\u5ea6\u3002\u76f8\u5173\u7684\u6570\u636e\u53ef\u4ee5\u653e\u5728\u4e00\u8d77\uff0c\u4e0b\u6b21\u5c31\u5728\u7f13\u51b2\u533a\u91cc\u627e</p> </li> <li> <p>Read-ahead(Prefetch): Read extra blocks from a track in anticipation that they will be requested soon   </p> <p>\u9884\u53d6\uff0c\u8bfb\u53d6\u67d0\u6570\u636e\u5757\u65f6\u9884\u6d4b\u90bb\u8fd1\u51e0\u4e2a\u6570\u636e\u5757\u4e5f\u4f1a\u88ab\u8bbf\u95ee\uff0c\u4e8e\u662f\u5c31\u4e00\u8d77\u53d6\u5230\u5185\u5b58\u4e2d\u3002\u8981\u6709\u4f9d\u636e\u5730\u9884\u53d6\uff0c\u4e0d\u7136\u65e0\u7528\u7684\u6570\u636e\u4f1a\u5360\u7528\u7f13\u5b58\u3002  </p> </li> <li> <p>Disk-arm-scheduling algorithms re-order block requests so that disk arm movement is minimized   </p> <p>\u78c1\u76d8\u81c2\u8c03\u5ea6\u7b97\u6cd5\u5bf9\u5757\u8bf7\u6c42\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u4ee5\u4fbf\u5c06\u78c1\u76d8\u81c2\u79fb\u52a8\u964d\u81f3\u6700\u4f4e</p> <p>elevator algorithm  (\u7535\u68af\u7b97\u6cd5)</p> <p></p> <p><code>\u6309\u7167\u7535\u68af\u7b97\u6cd5\uff0c\u6765\u79fb\u52a8\u8bfb\u5199\u5934\uff0c\u4f7f\u4e4b\u4f4d\u4e8e\u4e0d\u540c\u7684\u78c1\u9053\u4e0a\u3002\u91cd\u65b0\u5c06\u8bfb\u5199\u5934\u6536\u5230\u7684\u8bf7\u6c42\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u6700\u5c0f\u5316\u8bfb\u5199\u5934\u7684\u79fb\u52a8</code></p> </li> <li> <p>File organization</p> <ul> <li> <p>Allocate blocks of a file in as contiguous a manner as possible  </p> <p>\u9884\u5148\u5206\u914d\u5f97\u5230\u7684\u5185\u5b58\u662f\u8fde\u7eed\u7684  </p> </li> <li> <p>Files may get fragmented\uff08\u788e\u7247\u5316\uff09 </p> <ul> <li> <p>Sequential access to a fragmented file results in increased disk arm movement  </p> <p>\u8fde\u8bfb\u8bbf\u95ee\u788e\u7247\u5316\u7684\u6587\u4ef6\u7ed3\u6784\uff0c\u4f1a\u5bfc\u81f4\u78c1\u76d8\u81c2\u79fb\u52a8\u589e\u52a0</p> </li> <li> <p>Some systems have utilities to defragment the file system, in order to speed up file access</p> <p>\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u788e\u7247\u6574\u7406\uff08<code>\u5c06\u5206\u6563\u5728\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u788e\u7247\u91cd\u65b0\u5199\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5757\u4e2d</code>\uff09\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4ee5\u52a0\u5feb\u6587\u4ef6\u8bbf\u95ee\u901f\u5ea6</p> </li> </ul> </li> </ul> </li> <li> <p>Nonvolatile write buffers\uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09 </p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8981\u5411\u78c1\u76d8\u4e2d\u5199\u5165\u6570\u636e\uff0c\u9700\u8981\u7b49\u5f85\u5411\u78c1\u76d8\u4e2d\u5199\u5165\u5b8c\u6210\u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002</p> <p>speed up disk writes by writing blocks to a non-volatile RAM buffer immediately  </p> <p>\u73b0\u5728\u6211\u4eec\u628a\u8981\u5199\u7684\u6570\u636e\u5148\u5199\u5230\u4e00\u4e2a\u5feb\u901f\u7684\u975e\u6613\u5931\u7684\u7f13\u5b58\u91cc\uff0c\u5982 <code>NVM, Non-volatile RAM\uff1abattery backed up RAM</code>\u5c31\u53ef\u4ee5\u7acb\u5373\u6267\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff0cNVM \u518d\u62e9\u673a\u5c06\u6570\u636e\u5199\u56de\u5230\u78c1\u76d8\u3002. </p> </li> <li> <p>Log disk\uff08\u65e5\u5fd7\u78c1\u76d8\uff09 </p> <p>a disk devoted to writing a sequential log of block updates  </p> <p>\u628a\u5bf9\u78c1\u76d8\u5757\u7684\u4fee\u6539\uff0c\u4ee5\u65e5\u5fd7\u7684\u5f62\u5f0f\uff0c\u8bb0\u5728\u4e00\u4e2a\u4e13\u95e8\u7684\u65e5\u5fd7\u78c1\u76d8\u4e2d\uff0c\u8fd9\u4e2a\u78c1\u76d8\u53ea\u652f\u6301\u987a\u5e8f\u8bbf\u95ee</p> <p>\u5199\u5165\u7684\u65f6\u5019\u5b58\u5728\u4f18\u5316\uff0c\u5982\u4f7f\u7528\u7535\u68af\u7b97\u6cd5\uff08\u78c1\u76d8\u81c2\u7684\u8c03\u7528\uff09</p> </li> </ul>"},{"location":"DB/8.%20Physical%20Storage%20Systems/#83-flash-storage","title":"8.3 Flash Storage","text":"<p>\u95ea\u5b58\uff08\u56fa\u6001\u786c\u76d8\uff09</p> <ul> <li> <p>NAND flash</p> <ul> <li> <p>requires page-at-a-time read (page: 512 bytes to 4 KB)  </p> <p>\u987a\u5e8f\u8bfb\u5199\u548c\u968f\u673a\u8bfb\u5199\u5dee\u4e0d\u591a\uff0c\u6bcf\u6b21\u6309\u7167\u9875\u8fdb\u884c\u8bfb\u64cd\u4f5c  </p> </li> <li> <p>Page can only be written once  </p> <p>\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u91cd\u65b0\u5199\u5165\u4e4b\u524d\uff0c\u9700\u8981\u5148\u64e6\u9664\u6570\u636e\u3002  </p> </li> </ul> </li> <li> <p>SSD(Solid State Disks) </p> <p>Use standard block-oriented disk interfaces, but store data on multiple flash storage devices internally</p> <p>\u4f7f\u7528\u6807\u51c6\u7684\u9762\u5411\u5757\u7684\u78c1\u76d8\u63a5\u53e3\uff0c\u4f46\u5c06\u6570\u636e\u5b58\u50a8\u5728\u5185\u90e8\u7684\u591a\u4e2a\u95ea\u5b58\u8bbe\u5907\u4e0a</p> <p>millisecond \u6beb\u79d2 microsecond \u5fae\u79d2</p> </li> </ul> <p>\u529f\u8017\u65b9\u9762\uff1a\u78c1\u76d8\u7684\u529f\u8017\u9ad8\u4e8e\u56fa\u6001\u786c\u76d8\uff08\u673a\u68b0\u8fd0\u52a8\u66f4\u8017\u80fd\uff09</p> <p>\u78c1\u76d8\u7684\u4fee\u6539\u662fin place\uff08\u5f53\u524d\u4f4d\u7f6e\u76f4\u63a5\u4fee\u6539\uff09</p> <p>\u56fa\u6001\u786c\u76d8\u7684\u4fee\u6539\u662f\u5148\u64e6\u9664\uff0c\u518d\u91cd\u65b0\u5199\uff08erase -&gt; rewrite\uff09\u53ef\u80fd\u6709\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u6211\u4eec\u53cd\u590d\u8bfb\u5199\u3001\u64e6\u53bb\u67d0\u51e0\u4e2a\u5757\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5b83\u4eec\u574f\u7684\u5f88\u5feb\u3002</p> <p>\u6240\u4ee5SSD\u8981\u7814\u7a76\u78e8\u635f\u5747\u8861</p> <p>\u6211\u4eec\u8bbf\u95ee\u4e0a\u5c42\u7684\u65f6\u5019\u5b58\u5728\u4e00\u4e2a\u903b\u8f91\u9875\u53f7\uff0c\u6620\u5c04\u5230\u7269\u7406\u9875\u53f7\u7684\u6620\u5c04\u65b9\u5f0f\u662f\u53ef\u4ee5\u53d8\u5316\u7684\u3002\u5047\u5982\u6211\u4eec\u8bbf\u95ee\u4e00\u4e2a\u903b\u8f91\u9875\u53f7\u662f\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8\u7269\u7406\u9875\u53f7\u6620\u5c04\u65b9\u5f0f\u8fbe\u5230\u78e8\u635f\u5747\u8861</p> <ul> <li> <p>Remapping of logical page addresses to physical page addresses avoids waiting for erase \u903b\u8f91\u9875\u5230\u7269\u7406\u9875\u7684\u6620\u5c04</p> </li> <li> <p>Flash translation table tracks mapping</p> <ul> <li> <p>also stored in a label field of flash page</p> </li> <li> <p>remapping carried out by flash translation layer </p> </li> </ul> <p> </p> </li> <li> <p>wear leveling(\u78e8\u635f\u5747\u8861) </p> <p>evenly distributed erase operators across physical blocks</p> <p>\u5747\u5300\u5206\u5e03\u5728\u7269\u7406\u5757\u4e0a\u7684\u64e6\u9664</p> </li> </ul> <p>SSD\uff1a\u56fa\u6001\u786c\u76d8        HHD\uff1a\u6df7\u5408\u786c\u76d8        HDD\uff1a\u4f20\u7edf\u786c\u76d8</p> <p>NVM \u7684Read/Write Latency \u8bfb\u5199\u5ef6\u8fdf\u6bd4\u5185\u5b58\uff08DRAM\uff09\u957f\uff0c\u5747\u80fd\u591f\u5b57\u8282\u5bfb\u5740\u3002SSD\u548cHDD\u5747\u91c7\u7528block\u5bfb\u5740</p> <p><code>Persistence \u5373\u6389\u7535\u662f\u5426\u80fd\u4fdd\u6301\u539f\u6570\u636e\u3002Endurance\u8010\u4e45\u5ea6\uff0c\u8868\u793a\u53ef\u4ee5\u4f7f\u7528\u7684\u65f6\u95f4</code></p> <p>SSD\u4e0d\u8010\u4e45\uff0c\u64e6\u9664\u6b21\u6570\u6709\u9650\uff0cNVM\u4e5f\u4e0d\u8010\u4e45</p> <p>NVM\u7684\u4f5c\u7528\uff1a</p> <ol> <li>\u7f13\u51b2\uff1aNonvolatile write buffers\uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09\u628a\u8981\u5199\u7684\u6570\u636e\u5148\u5199\u5230\u4e00\u4e2a\u5feb\u901f\u7684\u975e\u6613\u5931\u7684\u7f13\u5b58\u91cc</li> <li>\u7528\u4f5c Log Disk</li> </ol>"},{"location":"DB/9.%20Data%20Storage%20Structures/","title":"9. Data Storage Structures","text":"<p> \u7ea6 2853 \u4e2a\u5b57  6 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Abstract</p> <ul> <li>File Organization<ul> <li>Fixed-Length Records</li> <li>Variable-Length Records</li> </ul> </li> <li>Organization of Records in Files<ul> <li>Heap File Organization</li> <li>Sequential File Organization</li> <li>Multitable Clustering File Organization</li> <li>Table Partition</li> </ul> </li> <li>Data-Dictionary Storage</li> <li>Storage Access &amp; Buffer manager<ul> <li>LRU strategy</li> <li>Clock algorithm</li> </ul> </li> <li>Columnar Representation</li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#91-file-organization","title":"9.1 File Organization","text":"<ul> <li>The database is stored as a collection of files.  </li> <li>Each file is a sequence of records.  </li> <li>A record is a sequence of fields.  </li> </ul> <p>\u6570\u636e\u5e93\u5b58\u50a8\u4e3a\u6587\u4ef6\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u8bb0\u5f55\u5e8f\u5217\u3002</p> <p>One approach:</p> <ul> <li>assume record size is fixed</li> <li>each file has records of one particular type only </li> <li>different files are used for different relations</li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#911-fixed-length-records","title":"9.1.1 Fixed-Length Records","text":"<p>\u5b9a\u957f\u8bb0\u5f55\uff1a</p> <p>Store <code>record i</code> starting from byte \\(n \\times (i \u2013 1)\\), where n is the size of each record.  </p> <p>Record access is simple but <code>records may cross blocks</code></p> <p>Modification: do not allow records to cross block boundaries </p> <p>\u7b2c i \u6761\u8bb0\u5f55\u662f\u4ece\u7b2c\\(n \\times (i - 1)\\)\u4e2a\u5b57\u8282\u5f00\u59cb\u7684\uff0c\u5176\u4e2d n \u662f\u6bcf\u4e00\u6761\u8bb0\u5f55\u7684\u5b9a\u957f</p> <p>\u5982\u679c\u4e00\u4e2a\u5757\u67094096\u4e2a\u5b57\u8282\uff0c\u4e00\u4e2a\u8bb0\u5f55\u9700\u8981100\u4e2a\u5b57\u8282\u6765\u5b58\u653e\uff0c\u90a3\u4e48\u6700\u591a\u53ea\u80fd\u653e\u4e0b40\u6761\u8bb0\u5f55\uff0c\u800c\u820d\u53bb\u6700\u540e\u768496\u4e2a\u5b57\u8282\u3002\u5426\u5219\u4f1a\u9020\u6210\u4e00\u6761\u8bb0\u5f55\u5b58\u5728\u4e8e\u4e24\u4e2a\u5757\u4e2d\u7684\u9ebb\u70e6\u60c5\u51b5\u3002</p> <p>Deletion of record i:  alternatives: \u5220\u9664\u8bb0\u5f55i\uff1a</p> <ul> <li> <p>move records \\(i + 1,\\ldots , n\\) to \\(i, \\ldots. , n \u2013 1\\) <code>\u4f9d\u6b21\u4e0a\u79fb</code></p> </li> <li> <p>move record n  to i <code>\u5c06\u7b2cn\u6761\u8bb0\u5f55\u79fb\u52a8\u5230\u7b2ci\u6761\u8bb0\u5f55\u4f4d\u7f6e\uff08\u5220\u9664\u4f4d\u7f6e\uff09</code></p> </li> <li> <p>do not move records, but link all free records on a free list  </p> <p><code>\u8981\u5220\u9664\u7684\u6761\u6253\u4e0a\u6807\u8bb0\uff0c\u5728\u4e00\u5757\u7684\u5934\u90e8\u7559\u4e0b\u4e00\u70b9\u7a7a\u95f4\uff0c\u7528\u4e8e\u653e\u7f6e\u7a7a\u94fe\u8868\u6307\u9488\uff0c\u5c06\u6240\u6709\u88ab\u5220\u9664\u7684\u4f4d\u7f6e\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u7a7a\u8bb0\u5f55\u7684\u94fe\u8868\u3002</code></p> <p>\u4ee5\u540e\u5982\u679c\u8981\u5f80\u8fd9\u4e2a\u5757\u91cc\u63d2\u5165\uff0c\u76f4\u63a5\u901a\u8fc7\u6307\u9488\u627e\u5230\u7a7a\u8bb0\u5f55\u63d2\u5165\u5373\u53ef\uff0c\u968f\u540e\u66f4\u65b0\u6307\u9488\u3002 </p> <p> </p> </li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#912-variable-length-records","title":"9.1.2 Variable-Length Records","text":"<p>\u53ef\u53d8\u957f\u5ea6\u8bb0\u5f55</p> <p>Variable-length records arise in database systems in several ways:</p> <ul> <li> <p>Storage of multiple record types in a file.  \u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b58\u50a8\u591a\u79cd\u8bb0\u5f55\u7c7b\u578b\u3002</p> </li> <li> <p>Record types that allow variable lengths for one or more fields such as strings (<code>varchar</code>)</p> <p>\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bb5\u4f7f\u7528\u53ef\u53d8\u957f\u5ea6\u7684\u8bb0\u5f55\u7c7b\u578b\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32 ( <code>varchar</code> )</p> </li> <li> <p>Record types that allow repeating fields (used in some older data models).</p> </li> </ul> <p>Variable length attributes represented by fixed size (offset, length), with actual data stored after all fixed length attributes </p> <p><code>\u53d8\u957f\u5c5e\u6027\u7528\u56fa\u5b9a\u5927\u5c0f\uff08\u504f\u79fb\u91cf\u3001\u957f\u5ea6\uff09\u524d\u7f00\u8868\u793a\u7684\uff0c\u5b9e\u9645\u6570\u636e\u5b58\u50a8\u5728\u6240\u6709\u5b9a\u957f\u5c5e\u6027\u4e4b\u540e</code></p> <p>Null values represented by null-value bitmap\uff08\u7a7a\u4f4d\u56fe\uff09stored in 1 byte</p> <p><code>\u7a7a\u4f4d\u56fe\uff1a\u8868\u793a\u8fd9\u4e9b\u5c5e\u6027\u662f\u5426\u4e3anull\uff08\u7a7a\uff09\u3002\u5982\u7a7a\u4f4d\u56fe\u4e3a0000\uff0c\u8868\u793a\u56db\u4e2a\u5c5e\u6027\u90fd\u4e0d\u662f\u7a7a\u3002</code></p> <p>Example</p> <p>\u5b9a\u957f\u7684 (offset, length) +(\u5b9a\u957f\u5c5e\u6027\uff09\u4fdd\u5b58\u5728\u524d\u9762\uff0c\u4e0d\u5b9a\u957f\u7684\u4fdd\u5b58\u5728\u540e\u9762.</p> <p></p> <p>\u6700\u5f00\u59cb\u653e\u7f6e\u4e0d\u5b9a\u957f\u7684offset\u548clength\uff0c\u518d\u653e\u7f6e\u5b9a\u957f\uff0c\u6700\u540e\u653e\u7f6e\u4e0d\u5b9a\u957f</p> <p>\u8868\u793a\u4e2d\uff0c\u524d\u9762\u7528\u4e24\u4e2a\u6574\u6570\u5206\u522b\u8868\u793a\u4f4d\u7f6e\u4e0e\u957f\u5ea6(<code>\u5b9a\u957f</code>)\uff0c\u201c65000\u201d\u662f<code>\u5b9a\u957f</code>\u5b57\u7b26\u4e32\uff08Bytes 12\u5230Bytes 20\uff09.\uff0c0000\u662f\u7a7a\u4f4d\u56fe\uff08\u9700\u8981 1 byte\uff09\uff0c\u8868\u8fbe\u5c5e\u6027\u662f\u5426\u4e3a\u7a7a\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b9a\u957f\u7684\u3002\u540e\u9762\u7684\u4e0d\u5b9a\u957f\u5c5e\u6027\u6309\u7167\u5b9e\u9645\u7684\u957f\u5ea6\uff0c\u4f9d\u6b21\u5b58\u653e</p> <p>\u4f4d\u7f6e 20 \u653e\u7684 0000\uff0c\u5bf9\u5e94\u7684\u662f\u7a7a\u4f4d\u56fenull-value bitmap, \u8868\u793a\u524d\u9762\u56db\u4e2a\u5c5e\u6027\u5747\u662f\u975e\u7a7a\u7684, 1 \u8868\u793a\u7a7a\u3002\uff08\u653e\u5728\u524d\u9762\u4e5f\u53ef\u4ee5\uff0c\u53ea\u8981\u5728\u4e00\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u80fd\u627e\u5230\u5373\u53ef\uff09 </p> <p>\u524d\u63d0\uff1a\u6bcf\u4e00\u4e2a\u8bb0\u5f55\u90fd\u662f\u88ab\u653e\u5728\u4e00\u8d77\u7684\u3002\uff08\u6709\u6309\u884c\u5b58\u50a8\u7684\u65b9\u5f0f\uff09</p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#9121-slotted-page-structure","title":"9.1.2.1 Slotted Page Structure","text":"<p>Slotted page\uff08\u5206\u69fd\u9875\uff09 header contains:</p> <ul> <li> <p>number of record entries</p> </li> <li> <p>end of free space in the block  </p> <p>\u4e00\u4e2a\u6307\u9488\u6307\u5411 free space \u672b\u5c3e\uff0c\u7528\u6765\u5206\u914d\u5185\u5b58\uff08\u65b0\u7684record\u4f4d\u7f6e\uff09</p> </li> <li> <p>location and size of each record</p> </li> </ul> <p>\u4e24\u5934\u538b\u7f29\uff0c\u65b0\u63d2\u5165\u7684\u5199\u5728Free Space\u7684\u5f00\u5934\u548c\u672b\u5c3e</p> <p>\u5f53\u5220\u9664\u7684\u65f6\u5019\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u540e\u9762\u7684\u8bb0\u5f55\u632a\u8fc7\u53bb\uff0c\u8ba9\u81ea\u7531\u7a7a\u95f4\u66f4\u7d27\u51d1\uff0c\u8fd9\u6837\u9700\u8981\u4fee\u6539 entries, free space \u7684\u6307\u9488, \u504f\u79fb\u91cf\u4e5f\u8981\u8c03\u6574\u3002\u4e5f\u53ef\u4ee5\u6682\u65f6\u4e0d\u8c03\u6574\uff0c\u7b49\u540e\u9762\u5982\u679c\u9700\u8981\u5206\u914d\u5185\u5b58\u4f46\u4e0d\u591f\u7528\u65f6\uff0c\u518d\u4e00\u6b21\u6027\u91cd\u6574\u4e4b\u524d\u7684\u7a7a\u95f4\u3002</p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#913-organization-of-records-in-files","title":"9.1.3 Organization of Records in Files","text":"<p>\u63d2\u5165\u5230\u54ea\u4e2a\u6587\u4ef6\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1f</p> <ul> <li> <p>Heap \u2013 record can be placed anywhere in the file where there is space  </p> <p>\u6709\u4f4d\u7f6e\u6211\u5c31\u63d2\u8fdb\u53bb</p> </li> <li> <p>Sequential \u2013 store records in sequential order, based on the value of the search key of each record  </p> <p>\u6839\u636e\u6bcf\u6761\u8bb0\u5f55\u7684\u641c\u7d22\u952e\u503c\u6309\u987a\u5e8f\u5b58\u50a8\u8bb0\u5f55</p> </li> <li> <p>In a multitable clustering file organization records of several different relations can be stored in the same file</p> <p><code>Motivation: store related records on the same block to minimize I/O</code></p> <p><code>\u5c06\u76f8\u5173\u8bb0\u5f55\u5b58\u50a8\u5728\u540c\u4e00\u5757\u4e0a\u4ee5\u6700\u5c0f\u5316I/O</code></p> </li> <li> <p>B+tree file organization - Ordered storage even with inserts/deletes  </p> </li> <li> <p>Hashing \u2013 a hash function computed on search key; the result specifies in which block of the file the record should be placed</p> </li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#9131-heap-file-organization","title":"9.1.3.1 Heap File Organization","text":"<p>Array with 1 entry per block.  Each entry is a few bits to a byte, and records fraction of block that is free.\u5bf9\u4e8e\u6587\u4ef6\u4e2d\u6bcf\u4e00\u4e2a\u5757\uff0c\uff08\u4f8b\u5982\u75283\u4e2a\u6216\u80054\u4e2abit\uff09\u6765\u8868\u793a\u8fd9\u4e2a\u5757\u4e2d\u7684\u7a7a\u95f2\u7a0b\u5ea6\u3002</p> <p>Free-space map </p> <p>\u7ef4\u62a4\u4e00\u4e2a\u7a7a\u95f2\u5757\u7684\u5730\u56fe\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5757\u7684\u7a7a\u95f2\u7a0b\u5ea6\u3002</p> <p>Example</p> <p>3 bits per block, value divided by 8 indicates </p> <p></p> <p>\u5982 4 \u8868\u793a 4/8 \u7a7a\u95f2\u3002  </p> <p>\u987a\u5e8f\u8bbf\u95ee\u6bd4\u8f83\u4f4e\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u7b2c\u4e8c\u5c42(second level)\u6765\u8868\u793a\u5176\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u5757\u3002</p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#9132-sequential-file-organization","title":"9.1.3.2 Sequential File Organization","text":"<p>Suitable for applications that require sequential processing of the entire file   </p> <p>The records in the file are ordered by a search-key   </p> <ul> <li> <p>Deletion \u2013 use pointer chains</p> </li> <li> <p>Insertion \u2013 locate the position where the record is to be inserted   </p> <p>\u9010\u4e2a\u8fc1\u79fb\u6548\u7387\u4f4e\uff0c\u6211\u4eec\u628a\u63d2\u5165\u7684\u653e\u5728\u672b\u5c3e\uff0c\u901a\u8fc7\u6307\u9488\u7ef4\u62a4\u79e9\u5e8f\u3002</p> <p></p> </li> </ul> <p>Need to reorganize the file from time to time to restore sequential order. </p> <p>\u4e3a\u4e86\u7ef4\u6301\u7269\u7406\u610f\u4e49\u4e0a\u7684\u987a\u5e8f\u7ed3\u6784\uff08\u4e0d\u4f9d\u8d56\u6307\u9488\uff09\uff0c\u9700\u8981\u4e0d\u65f6\u5730\u91cd\u65b0\u7ec4\u7ec7\u6587\u4ef6\u4ee5\u6062\u590d\u987a\u5e8f\u3002</p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#9133-multitable-clustering-file-organization","title":"9.1.3.3 Multitable Clustering File Organization","text":"<p>Store several relations in one file using a multitable clustering file organization.  </p> <p>\u5c06\u4e0d\u540c\u5173\u7cfb\u7684\u8868\u653e\u5728\u4e00\u8d77</p> <p>Example</p> <p>\u5bf9\u4e8e\u8001\u5e08\u548c\u90e8\u5206\u7ecf\u5e38\u4e00\u8d77\u8bbf\u95ee\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u4fe1\u606f\u653e\u5728\u4e00\u8d77\u3002\uff08\u5982\u679c\u4e24\u4e2a\u8868\u7ecf\u5e38\u8fde\u63a5\uff0c\u8fd9\u6837\u6bd4\u8f83\u9ad8\u6548\uff09  </p> <p>\u4f46\u8fd9\u6837\u5bf9\u4e8e\u5355\u72ec\u67e5\u627e\u67d0\u4e2a\u4fe1\u606f\u5c31\u4e0d\u592a\u65b9\u4fbf\u3002</p> <p></p> <p></p> <ul> <li>\u7528\u4e8e\u6d89\u53ca\u5355\u4e2a\u90e8\u95e8\u53ca\u5176\u6559\u5e08\u7684\u67e5\u8be2</li> <li>\u4e0d\u5229\u4e8e\u4ec5\u6d89\u53ca\u90e8\u95e8\u7684\u67e5\u8be2,\u5bfc\u81f4\u53ef\u53d8\u5927\u5c0f\u7684\u8bb0\u5f55</li> <li>\u53ef\u4ee5\u6dfb\u52a0\u6307\u9488\u94fe\u4ee5\u94fe\u63a5\u7279\u5b9a\u5173\u7cfb\u7684\u8bb0\u5f55</li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#9134-table-partitioning","title":"9.1.3.4 Table Partitioning","text":"<p>Table partitioning: Records in a relation can be partitioned into smaller relations that are stored separately  </p> <p>\u4e00\u4e2a\u8868\u592a\u5927\uff0c\u5bf9\u4e8e\u5e76\u884c\u8bbf\u95ee\u53ef\u80fd\u5f15\u53d1\u51b2\u7a81\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u8868\u5206\u5f00\uff0c\u5982\u5bf9\u4e8e\u6240\u6709\u8001\u5e08\u7684\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7684\u8001\u5e08\u5206\u51fa\u6765\uff0c\u6570\u5b66\u7cfb\u7684\u8001\u5e08\u5206\u51fa\u6765\u3002\uff08\u6c34\u5e73\u5206\u5272\uff09\u4e5f\u53ef\u4ee5\u6309\u5217\u5b58\u50a8\u3002  </p> <p>\u6c34\u5e73partition \u548c \u5782\u76f4 partition</p> <p>eg\uff1a\u6c34\u5e73\u6574\u884c\u8bb0\u5f55\u5206\u79bb\uff0c\u5982\u5c06\u5168\u4f53\u5b66\u751f\u6309\u4e13\u4e1a\u5206\u7c7b</p> <p>\u5782\u76f4\u5206\u9694\uff0c\u6309\u5217\u5c5e\u6027\u5206\u79bb\uff0c\u6240\u6709\u7684\u5b66\u53f7\u4e00\u5f20\u8868\uff0c\u6240\u6709\u7684\u7535\u8bdd\u4e00\u5f20\u8868</p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#92-data-dictionary-storage","title":"9.2 Data Dictionary Storage","text":"<p>The Data dictionary (also called system catalog) stores metadata; that is, data about data, such as  </p> <p>\u6570\u636e\u5b57\u5178\uff08\u4e5f\u79f0\u4e3a\u7cfb\u7edf\u76ee\u5f55\uff09\u5b58\u50a8\u5143\u6570\u636e </p> <p>\u5b9a\u4e49\u7684\u6570\u636e\u4e5f\u662f\u6570\u636e (metadata) \u6211\u4eec\u4e5f\u9700\u8981\u628a\u5b83\u4eec\u5b58\u50a8\u4e0b\u6765\u3002</p> <ul> <li>Information about relations<ul> <li>names of relations</li> <li>names, types and lengths of attributes of each relation</li> <li>names and definitions of views</li> <li>integrity constraints</li> </ul> </li> <li>User and accounting information, including passwords</li> <li>Statistical and descriptive data</li> <li>Physical file organization information</li> <li>Information about indices </li> </ul> <p></p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#93-storage-access--buffer-manager","title":"9.3 Storage Access &amp; Buffer manager","text":"<p>Blocks are units of both storage allocation and data transfer.  </p> <p>Buffer \u2013 portion of main memory available to store copies of disk blocks.  </p> <p>\u7f13\u51b2\u533a\u2014\u2014\u4e3b\u5185\u5b58\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u7528\u4e8e\u5b58\u50a8\u78c1\u76d8\u5757\u7684\u526f\u672c</p> <p>Buffer manager \u2013 subsystem responsible for allocating buffer space in main memory.</p> <p>\u7f13\u51b2\u533a\u7ba1\u7406\u5668\u2014\u2014\u8d1f\u8d23\u5728\u4e3b\u5185\u5b58\u4e2d\u5206\u914d\u7f13\u51b2\u533a\u7a7a\u95f4\u7684\u5b50\u7cfb\u7edf</p> <p></p> <p>\u5982\u6211\u4eec\u8981\u627e\u67d0\u5757\uff0c\u5148\u5728 buffer \u4e2d\u627e\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u4ece\u78c1\u76d8\u4e2d\u8bfb\u51fa\u6765\u653e\u5230 buffer \u4e2d\u3002\u5f53 buffer \u6ee1\u4e86\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u66ff\u6362\uff0c\u66ff\u6362\u54ea\u4e00\u5757\uff08<code>\u6700\u8fd1\u6700\u5c11\u539f\u5219</code>\uff09\u3002</p> <p><code>\"LRU\uff08least recent used \u6700\u8fd1\u6700\u5c11\uff09 Example\"</code></p> <p> </p> <p>\u770b\u4f5c\u5806\u6808\u7684\u6a21\u5f0f\uff0c\u6700\u8fd1\u4f7f\u7528\u7684\u653e\u5728top\uff0c\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u653e\u5728bottom</p> <p>\u5bf9\u4e8e\u4fee\u6539\u8fc7\u540e\u7684\u6570\u636e\u5f39\u51fa\u65f6\uff0c\u9700\u8981\u5148\u5199\u56de\u78c1\u76d8\uff0c\u6216\u8005\u786e\u4fdd\u4fee\u6539\u65e5\u5fd7\u5df2\u7ecf\u5199\u5165\u5230\u78c1\u76d8\uff08\u6301\u4e45\u5316\uff09</p> <p>Programs call on the buffer manager when they need a block from disk.</p> <p>\u5f53\u7a0b\u5e8f\u9700\u8981\u78c1\u76d8\u4e0a\u7684\u5757\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u8c03\u7528\u7f13\u51b2\u533a\u7ba1\u7406\u5668</p> <ul> <li> <p><code>If the block is already in the buffer</code>, buffer manager returns the address of the block in main memory</p> <p>\u5982\u679c\u8be5\u5757\u5df2\u7ecf\u5728\u7f13\u51b2\u533a\u4e2d\uff0c\u5219\u7f13\u51b2\u533a\u7ba1\u7406\u5668\u8fd4\u56de\u8be5\u5757\u5728\u4e3b\u5185\u5b58\u4e2d\u7684\u5730\u5740</p> </li> <li> <p><code>If the block is not in the buffer</code>, the buffer manager</p> <p>\u5982\u679c\u8be5\u5757\u4e0d\u5728\u7f13\u51b2\u533a\u4e2d</p> <ul> <li> <p>Allocates space in the buffer for the block  </p> <p>\u5728\u7f13\u51b2\u533a\u4e2d\u4e3a\u5757\u5206\u914d\u7a7a\u95f4</p> <p>\u5728 buffer \u91cc\u66ff\u6362\u7a7a\u95f4\uff0c\u5982\u679c\u6709\u7a7a\u4f4d\u53ef\u4ee5\u76f4\u63a5\u5206\u914d\uff0c\u5426\u5219\u9700\u8981\u66ff\u6362\u3002</p> <ul> <li> <p>Replacing (throwing out) some other block, if required, to make space for the new block.  </p> <p>\u5982\u679c\u9700\u8981\uff0c\u66ff\u6362\uff08\u6254\u6389\uff09\u5176\u4ed6\u4e00\u4e9b\u5757\uff0c\u4e3a\u65b0\u5757\u817e\u51fa\u7a7a\u95f4\u3002</p> </li> <li> <p>Replaced block written back to disk only if it was modified since the most recent time that it was written to/fetched from the disk.</p> <p>\u5148\u8ba9\u65e5\u5fd7\u6301\u4e45\u5316\uff0c\u5c06\u65e5\u5fd7\u5199\u5165\u5230\u78c1\u76d8</p> </li> </ul> </li> <li> <p>Reads the block from the disk to the buffer, and returns the address of the block in main memory to requester. </p> <p>\u5c06\u5757\u4ece\u78c1\u76d8\u8bfb\u53d6\u5230\u7f13\u51b2\u533a\uff0c\u5e76\u5c06\u5757\u5728\u4e3b\u5b58\u4e2d\u7684\u5730\u5740\u8fd4\u56de\u7ed9\u8bf7\u6c42\u8005\u3002</p> </li> </ul> </li> </ul> <p>Pinned block </p> <p>memory block that is not allowed to be written back to disk  </p> <p>\u5982\u679c\u4e0a\u9762\u7684\u7a0b\u5e8f\u6b63\u5728\u8bbf\u95ee\u7f13\u51b2\u533a\u4e2d\u7684\u67d0\u4e00\u4e2a\u5757\uff0c\u90a3\u4e48\u8981\u8fdb\u884cPin\u7684\u64cd\u4f5c\uff0c\u9489\u4f4f\u8fd9\u4e2a\u5757\uff0c\u4e0d\u8ba9\u5b83\u79bb\u5f00\u7f13\u51b2\u533a\u3002</p> <ul> <li> <p>Pin done before reading/writing data from a block</p> </li> <li> <p>Unpin done when read /write is complete</p> </li> <li> <p>Multiple concurrent pin/unpin operations possible  </p> <p>Keep a pin count, buffer block can be evicted only if pin <code>count = 0</code></p> </li> <li> <p>\u5f53\u4e0a\u5c42\u7684\u7a0b\u5e8f\u8bbf\u95ee\u5b8c\u6bd5\uff0c\u5373Pin count = 0\uff08Pin count\u8868\u793a\u4e0a\u5c42\u6709\u591a\u5c11\u4e2a\u7a0b\u5e8f\u6b63\u5728\u8bbf\u95ee\u7f13\u51b2\u533a\u7684\u8fd9\u4e2a\u5757\uff09\u65f6\uff0c\u8fdb\u884cUnpin\u7684\u64cd\u4f5c\uff0c\u89e3\u9664\u9489\u4f4f\u8fd9\u4e2a\u5757\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5757\u5c06\u53d8\u6210\u5019\u9009\u7684\u53ef\u4ee5\u88ab\u66ff\u6362\u51fa\u53bb\u7684\u5757\u3002</p> </li> </ul> <p>Shared and exclusive locks on buffer </p> <p>\u5f53\u4e00\u4e2a\u5757\u8fdb\u5165\u5230\u7f13\u51b2\u533a\u4ee5\u540e\uff0c\u4e0a\u5c42\u7684\u67d0\u4e9b\u7a0b\u5e8f\u53ef\u80fd\u5728\u8bfb\u5b83\uff0c\u6709\u4e9b\u7a0b\u5e8f\u53ef\u80fd\u5728\u4fee\u6539\u5b83\uff0c\u5219\u4f1a\u6d89\u53ca\u5171\u4eab\u533a\u57df\u7684\u51b2\u7a81\u8bbf\u95ee\u95ee\u9898\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u52a0\u9501\u3002\u8bfb\u4e0e\u8bfb\u4e4b\u95f4\u4e0d\u51b2\u7a81\uff0c\u4f46\u8bfb\u4e0e\u5199\u3001\u5199\u4e0e\u5199\u4e4b\u95f4\u90fd\u662f\u51b2\u7a81\u7684\u3002</p> <p>Readers get shared lock, updates to a block require exclusive lock</p> <p>Locking rules:</p> <ul> <li>Only one process can get exclusive lock at a time</li> <li>Shared lock cannot be concurrently with exclusive lock</li> <li>Multiple processes may be given shared lock concurrently</li> </ul>"},{"location":"DB/9.%20Data%20Storage%20Structures/#931-buffer-replacement-policies","title":"9.3.1 Buffer-Replacement Policies","text":"<ul> <li> <p>LRU strategy - replace the block least recently used.  </p> <ul> <li> <p>Idea behind LRU \u2013 use past pattern of block references as a predictor of future references  </p> <p>\u7528\u8fc7\u53bb\u7684\u8bbf\u95ee\u6a21\u5f0f\u63a8\u65ad\u8bb2\u6765\u7684\u8bbf\u95ee\u6a21\u5f0f</p> </li> </ul> <p>Warning \"LRU can be a bad strategy\"  </p> </li> <li> <p>Toss-immediate strategy \u2013 frees the space occupied by a block as soon as the final tuple of that block has been processed</p> </li> <li> <p>Most recently used (MRU) strategy \u2013  system must pin the block currently being processed.  After the final tuple of that block has been processed, the block is unpinned, and it becomes the most recently used block.</p> </li> <li> <p>Buffer managers also support forced output of blocks for the purpose of recovery </p> </li> </ul> <p>\u6700\u597d\u7684\u7b56\u7565\u662f\u57fa\u4e8e\u9884\u6d4b\u7684\uff0c\u4f46\u662f\u9884\u6d4b\u672c\u8eab\u662f\u5f88\u96be\u7684\uff0c\u9700\u8981\u5229\u7528\u4eba\u5de5\u667a\u80fd\u7684\u65b9\u6cd5\u3002  </p>"},{"location":"DB/9.%20Data%20Storage%20Structures/#932-clock-an-approximation-of-lru","title":"9.3.2 Clock: An approximation of LRU","text":"<p>Arrange block into a cycle, store one <code>reference_bit</code> per block    </p> <p>When <code>pin_count</code> reduces to 0, set <code>reference_bit =1</code> </p> <p>\u8f6e\u8f6c\u4e00\u6b21\uff0c\u5982\u679cpin_count\u8bbf\u95ee\u6b21\u6570\u4e3a0(\u8868\u793a\u5728\u4e0a\u4e00\u6b21\u5faa\u73af\u4e2d\uff0c\u6ca1\u6709\u5916\u90e8\u7a0b\u5e8f\u8bbf\u95ee\u8fd9\u4e00\u5757)\uff0c\u5c31\u5c06reference_bit\u7f6e\u4e3a1\uff0c\u8868\u793a\u53ef\u4ee5\u66ff\u6362\u51fa\u53bb\uff08\u4f46\u4e0d\u662f\u73b0\u5728\uff09.</p> <p>\u5bf9\u4e8e\u73af\u4e2d\u7684\u6bcf\u4e00\u5757\uff0c\u5982\u679c\u5b83\u7684Reference bit\u4e3a1\uff0c\u90a3\u4e48\u5c06\u5176\u7f6e\u4e3a0\uff1b</p> <p>\u73b0\u5728\uff0c\u65b0\u8fdb\u6765\u4e00\u4e2a\u5757\uff0c\u653e\u5230\u521a\u521a\u88ab\u66ff\u6362\u51fa\u53bb\u7684\u5757\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684Reference bit\u88ab\u7f6e\u4e3a1\u3002\u6216\u8005\uff0c\u5047\u5982\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u54ea\u4e00\u5757\u88ab\u8bbf\u95ee\u5230\uff0c\u5c31\u5c06\u5bf9\u5e94\u7684reference bit\u7f6e\u4e3a1\u3002</p> <p>\u6240\u4ee5\u4e00\u65e6\u5728\u67d0\u4e00\u8f6e\u9047\u5230reference bit = 0\uff08\u4e14pin_count = 0\uff09\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u66ff\u6362\u51fa\u53bb\u3002\u56e0\u4e3a\u5b83\u5386\u7ecf\u4e861\u52300,0\u52300\u7684\u8fc7\u7a0b\uff0c\u4e14\u6bcf\u4e00\u6b21pin_count\u90fd\u4e3a0\uff0c\u76f8\u5f53\u4e8e\u4e24\u8f6e\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u53ef\u4ee5\u5f39\u51fa.</p> <p><code>reference_bit</code> as the 2nd chance bit  </p> <pre><code>do for each block in cycle {\n    if (reference_bit ==1)\n        set reference_bit=0;\n    else if (reference_bit ==0)\n        choose this block for replacement;\n} until a page is chosen;\n</code></pre>"}]}